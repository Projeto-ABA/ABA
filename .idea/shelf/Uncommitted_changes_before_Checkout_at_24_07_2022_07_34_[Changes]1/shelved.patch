Index: aba/src/main/java/com/aba/model/Turma.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.model;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.GenerationType;\r\nimport javax.persistence.Id;\r\n\r\n@Entity\r\npublic class Turma {\r\n    \r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/model/Turma.java b/aba/src/main/java/com/aba/model/Turma.java
--- a/aba/src/main/java/com/aba/model/Turma.java	
+++ b/aba/src/main/java/com/aba/model/Turma.java	
@@ -1,14 +1,65 @@
 package com.aba.model;
 
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
+import lombok.*;
 
+import javax.persistence.*;
+import java.util.ArrayList;
+import java.util.List;
+import com.aba.dto.TurmaDTO;
+import com.aba.model.Aluno;
+
+@Data
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
 @Entity
 public class Turma {
     
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long id;
+
+    @ManyToMany
+    List<Instrutor> instrutores;
+
+    @ManyToMany
+    List<Aluno> alunos;
+
+    private String nome;
+
+    //pensar em como as atividades poderiam ser adicionadas por aqui!
+
+    public Turma(String nome) {
+        this.nome = nome;
+        this.instrutores = new ArrayList<>();
+        this.alunos = new ArrayList<>();
+    }
+
+    public Turma(TurmaDTO turmaDTO) {
+        this.nome = turmaDTO.getNomeTurma();
+        this.instrutores = new ArrayList<>();
+        this.alunos = new ArrayList<>();
+    }
+
+    public void adicionarAluno(Aluno aluno) {
+        this.alunos.add(aluno);
+    }
+
+    public void adicionarInstrutor(Instrutor instrutor) {
+        this.instrutores.add(instrutor);
+    }
+
+    public void removerAluno(Aluno aluno) {
+        this.alunos.remove(aluno);
+    }
+
+    public void removerInstrutor(Instrutor instrutor) {
+        this.instrutores.remove(instrutor);
+    }
+
+    public String listarAlunos() { return this.alunos.toString(); }
+    public String listarInstrutores() { return this.instrutores.toString(); }
+    public TurmaDTO getDto(){ return new TurmaDTO(this.nome); }
+
 }
Index: aba/src/main/java/com/aba/model/Aluno.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.model;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.GenerationType;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.ManyToOne;\r\n\r\nimport com.aba.dto.AlunoDTO;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\n@Data\r\n@Getter\r\n@Setter\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@Entity\r\npublic class Aluno extends Usuario {\r\n    \r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n    \r\n    private int idade;\r\n\r\n    //@ManyToOne\r\n    private String turma; //Temporariamente criado como string enquanto n existe o crud de turma\r\n\r\n    @ManyToMany    \r\n    private List<Atividade> atividades;\r\n    \r\n    //@ManyToMany\r\n    private String professor; //Temporariamente criado como string enquanto n existe o crud de professor\r\n\r\n    public Aluno(String nome, int idade, String turma, String professor) {\r\n        super(nome);\r\n        \r\n        this.idade = idade;\r\n        this.turma = turma;\r\n        this.professor = professor;\r\n        this.atividades = new ArrayList<>();\r\n    }\r\n\r\n    public Aluno(AlunoDTO alunoDTO) {\r\n        super(alunoDTO.getNome());\r\n        this.idade = alunoDTO.getIdade();\r\n        this.turma = alunoDTO.getTurma();\r\n        this.professor = alunoDTO.getProfessor();\r\n        this.atividades = new ArrayList<>();\r\n    }\r\n\r\n    public void addAtividade(Atividade atividade) {\r\n        this.atividades.add(atividade);\r\n    }\r\n\r\n    public void editar(AlunoDTO alunoDTO) {\r\n        String nome = alunoDTO.getNome();\r\n        this.idade = alunoDTO.getIdade();\r\n        this.turma = alunoDTO.getTurma();\r\n        this.professor = alunoDTO.getProfessor();\r\n\r\n        this.nome = nome != null ? nome : this.nome;\r\n    }\r\n\r\n    public AlunoDTO getDto() {\r\n        return new AlunoDTO(this.nome, this.idade, this.turma, this.professor);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/model/Aluno.java b/aba/src/main/java/com/aba/model/Aluno.java
--- a/aba/src/main/java/com/aba/model/Aluno.java	
+++ b/aba/src/main/java/com/aba/model/Aluno.java	
@@ -13,6 +13,8 @@
 
 import com.aba.dto.AlunoDTO;
 
+import com.aba.dto.InstrutorDTO;
+import com.aba.dto.TurmaDTO;
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.Getter;
@@ -22,40 +24,38 @@
 @Data
 @Getter
 @Setter
-@AllArgsConstructor
 @NoArgsConstructor
 @Entity
 public class Aluno extends Usuario {
-    
+
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long id;
-    
+
     private int idade;
 
-    //@ManyToOne
-    private String turma; //Temporariamente criado como string enquanto n existe o crud de turma
+    @ManyToOne
+    private Turma turma;
 
-    @ManyToMany    
+    @ManyToMany
     private List<Atividade> atividades;
-    
-    //@ManyToMany
-    private String professor; //Temporariamente criado como string enquanto n existe o crud de professor
+
+    @ManyToOne
+    private Instrutor instrutor;
 
-    public Aluno(String nome, int idade, String turma, String professor) {
-        super(nome);
-        
+    public Aluno(String nome, int idade, Turma turma, Instrutor instrutor) {
+        this.nome = nome;
         this.idade = idade;
         this.turma = turma;
-        this.professor = professor;
+        this.instrutor = instrutor;
         this.atividades = new ArrayList<>();
     }
 
     public Aluno(AlunoDTO alunoDTO) {
-        super(alunoDTO.getNome());
+        this.nome = alunoDTO.getNome();
         this.idade = alunoDTO.getIdade();
-        this.turma = alunoDTO.getTurma();
-        this.professor = alunoDTO.getProfessor();
+        TurmaDTO turmaDTO = alunoDTO.getTurmaDTO();
+        InstrutorDTO instrutorDTO = alunoDTO.getInstrutorDTO();
         this.atividades = new ArrayList<>();
     }
 
@@ -66,13 +66,13 @@
     public void editar(AlunoDTO alunoDTO) {
         String nome = alunoDTO.getNome();
         this.idade = alunoDTO.getIdade();
-        this.turma = alunoDTO.getTurma();
-        this.professor = alunoDTO.getProfessor();
+        TurmaDTO turmaDTO = alunoDTO.getTurmaDTO();
+        InstrutorDTO instrutorDTO = alunoDTO.getInstrutorDTO();
 
         this.nome = nome != null ? nome : this.nome;
     }
 
     public AlunoDTO getDto() {
-        return new AlunoDTO(this.nome, this.idade, this.turma, this.professor);
+        return new AlunoDTO(this.nome, this.idade, this.turma.getDto(), this.instrutor.getDto());
     }
 }
Index: aba/src/main/java/com/aba/service/TurmaServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class TurmaServiceImpl {\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/service/TurmaServiceImpl.java b/aba/src/main/java/com/aba/service/TurmaServiceImpl.java
--- a/aba/src/main/java/com/aba/service/TurmaServiceImpl.java	
+++ b/aba/src/main/java/com/aba/service/TurmaServiceImpl.java	
@@ -1,8 +1,142 @@
 package com.aba.service;
 
+import com.aba.dto.TurmaDTO;
+import com.aba.dto.TurmasDTO;
+import com.aba.model.Aluno;
+import com.aba.model.Instrutor;
+import com.aba.model.Turma;
+import com.aba.repository.TurmaRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
 
+import java.util.List;
+import java.util.Optional;
+
 @Service
 public class TurmaServiceImpl {
-    
+
+    @Autowired
+    TurmaRepository turmaRepository;
+
+    @Autowired
+    AlunoServiceImpl alunoService;
+
+    @Autowired
+    InstrutorServiceImpl instrutorService;
+
+    public ResponseEntity<?> cadastrarTurma(TurmaDTO turmaDTO) {
+        Turma turma;
+        turma = new Turma(turmaDTO);
+
+        this.turmaRepository.save(turma);
+
+        ResponseEntity.status(HttpStatus.CREATED).body(turmaDTO);
+        return ResponseEntity.status(HttpStatus.CREATED).body(turmaDTO);
+    }
+
+    public ResponseEntity<?> editarTurma(Long id, TurmaDTO turmaDTO) {
+        Turma turma;
+        turma = this.getTurmaById(id);
+        turma.setNome(turmaDTO.getNomeTurma());
+
+        this.turmaRepository.save(turma);
+        return ResponseEntity.status(HttpStatus.OK).body(turma.getDto());
+    }
+
+    public ResponseEntity<?> removerTurma(Long id) {
+        this.turmaRepository.deleteById(id);
+
+        return ResponseEntity.status(HttpStatus.OK).body("Turma removida!");
+    }
+
+    public ResponseEntity<?> listarTurmas() {
+        List<Turma> turmas = this.turmaRepository.findAll();
+        TurmasDTO listaDeTurmasDTO = new TurmasDTO(turmas);
+
+        return ResponseEntity.status(HttpStatus.OK).body(listaDeTurmasDTO.getDadosTurma()); //organizar uma melhor maneira de retornar os alunos aqui
+    }
+
+    public ResponseEntity<?> consultarTurma(Long id) {
+        Turma turma;
+        turma = this.getTurmaById(id);
+        return ResponseEntity.status(HttpStatus.OK).body(turma.getDto());
+    }
+
+    public ResponseEntity<?> adicionarAlunoEmTurma(Long idTurma, Long idAluno) {
+        Turma turma;
+        Aluno aluno;
+
+        turma = this.getTurmaById(idTurma);
+        aluno = this.alunoService.getAlunoById(idAluno);
+
+        turma.adicionarAluno(aluno);
+        this.turmaRepository.save(turma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarAlunos());
+    }
+
+    public ResponseEntity<?> adicionarInstrutorEmTurma(Long idTurma, Long idInstrutor) {
+        Turma turma;
+        Instrutor instrutor;
+
+        turma = this.getTurmaById(idTurma);
+        instrutor = this.instrutorService.getInstrutorById(idInstrutor);
+
+        turma.adicionarInstrutor(instrutor);
+        this.turmaRepository.save(turma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarInstrutores());
+    }
+
+    public ResponseEntity<?> listarAlunosDeTurma(Long idTurma){
+        Turma turma;
+        turma = this.getTurmaById(idTurma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarAlunos());
+    }
+
+    public ResponseEntity<?> listarInstrutoresDeTurma(Long idTurma){
+        Turma turma;
+        turma = this.getTurmaById(idTurma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarInstrutores());
+    }
+
+    public ResponseEntity<?> removerAlunoDeTurma(Long idTurma, Long idAluno) {
+        Turma turma;
+        Aluno aluno;
+
+        turma = this.getTurmaById(idTurma);
+        aluno = this.alunoService.getAlunoById(idAluno);
+
+        turma.removerAluno(aluno);
+        this.turmaRepository.save(turma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarAlunos());
+    }
+
+    public ResponseEntity<?> removerInstrutorDeTurma(Long idTurma, Long idInstrutor) {
+        Turma turma;
+        Instrutor instrutor;
+
+        turma = this.getTurmaById(idTurma);
+        instrutor = this.instrutorService.getInstrutorById(idInstrutor);
+
+        turma.removerInstrutor(instrutor);
+        this.turmaRepository.save(turma);
+
+        return ResponseEntity.status(HttpStatus.OK).body(turma.listarInstrutores());
+    }
+
+    public Turma getTurmaById(Long id){
+        Optional<Turma> turmaOptional = this.turmaRepository.findById(id);
+
+        if (!turmaOptional.isPresent()) {
+            return null;
+        }
+
+        return turmaOptional.get();
+    }
 }
Index: aba/src/main/java/com/aba/controller/AlunoAPIController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.controller;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.aba.dto.AlunoDTO;\r\nimport com.aba.interfaces.AlunoService;\r\n\r\nimport io.swagger.annotations.Api;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.PutMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\n\r\n\r\n@RestController\r\n@RequestMapping(\"/api/alunos\")\r\n@Api\r\npublic class AlunoAPIController {\r\n\r\n    @Autowired\r\n    AlunoService alunoService;\r\n\r\n    @PostMapping(\"\")\r\n    public ResponseEntity<?> cadastrarAluno(@RequestBody AlunoDTO alunoDTO) {\r\n        return this.alunoService.cadastrarAluno(alunoDTO);\r\n    }\r\n\r\n    @PutMapping(\"/{id}\")\r\n    public ResponseEntity<?> editarAluno(@PathVariable Long id, @RequestBody AlunoDTO alunoDTO) {\r\n        return this.alunoService.editarAluno(id, alunoDTO);\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<?> consultarAluno(@PathVariable Long id) {\r\n        return this.alunoService.consultarAluno(id);\r\n    }\r\n\r\n    @GetMapping(\"/listar\")\r\n    public ResponseEntity<?> listarAlunos() {\r\n        return this.alunoService.listarAlunos();\r\n    }\r\n       \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/controller/AlunoAPIController.java b/aba/src/main/java/com/aba/controller/AlunoAPIController.java
--- a/aba/src/main/java/com/aba/controller/AlunoAPIController.java	
+++ b/aba/src/main/java/com/aba/controller/AlunoAPIController.java	
@@ -2,18 +2,12 @@
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.ResponseEntity;
-import org.springframework.web.bind.annotation.GetMapping;
-import org.springframework.web.bind.annotation.PathVariable;
-import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.bind.annotation.*;
 
 import com.aba.dto.AlunoDTO;
 import com.aba.interfaces.AlunoService;
 
 import io.swagger.annotations.Api;
-import org.springframework.web.bind.annotation.PostMapping;
-import org.springframework.web.bind.annotation.PutMapping;
-import org.springframework.web.bind.annotation.RequestBody;
-import org.springframework.web.bind.annotation.RequestMapping;
 
 
 @RestController
@@ -39,9 +33,13 @@
         return this.alunoService.consultarAluno(id);
     }
 
+    @DeleteMapping("/{id}")
+    public ResponseEntity<?> removerAluno(@PathVariable Long id) {
+        return this.alunoService.removerAluno(id);
+    }
+
     @GetMapping("/listar")
     public ResponseEntity<?> listarAlunos() {
         return this.alunoService.listarAlunos();
     }
-       
 }
Index: aba/src/main/java/com/aba/model/Professor.java
===================================================================
diff --git a/aba/src/main/java/com/aba/model/Professor.java b/aba/src/main/java/com/aba/model/Professor.java
deleted file mode 100644
--- a/aba/src/main/java/com/aba/model/Professor.java	
+++ /dev/null	
@@ -1,14 +0,0 @@
-package com.aba.model;
-
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-
-@Entity
-public class Professor extends Usuario {
-    
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    private Long id;
-}
Index: aba/src/main/java/com/aba/dto/ProfessorDTO.java
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/ProfessorDTO.java b/aba/src/main/java/com/aba/dto/ProfessorDTO.java
deleted file mode 100644
--- a/aba/src/main/java/com/aba/dto/ProfessorDTO.java	
+++ /dev/null	
@@ -1,5 +0,0 @@
-package com.aba.dto;
-
-public class ProfessorDTO {
-    
-}
Index: aba/src/main/java/com/aba/service/ProfessorServiceImpl.java
===================================================================
diff --git a/aba/src/main/java/com/aba/service/ProfessorServiceImpl.java b/aba/src/main/java/com/aba/service/ProfessorServiceImpl.java
deleted file mode 100644
--- a/aba/src/main/java/com/aba/service/ProfessorServiceImpl.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-package com.aba.service;
-
-import org.springframework.stereotype.Service;
-
-@Service
-public class ProfessorServiceImpl {
-    
-}
Index: aba/src/main/java/com/aba/interfaces/ProfessorService.java
===================================================================
diff --git a/aba/src/main/java/com/aba/interfaces/ProfessorService.java b/aba/src/main/java/com/aba/interfaces/ProfessorService.java
deleted file mode 100644
--- a/aba/src/main/java/com/aba/interfaces/ProfessorService.java	
+++ /dev/null	
@@ -1,5 +0,0 @@
-package com.aba.interfaces;
-
-public interface ProfessorService {
-    
-}
Index: aba/src/main/java/com/aba/controller/TurmaAPIController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/controller/TurmaAPIController.java b/aba/src/main/java/com/aba/controller/TurmaAPIController.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/controller/TurmaAPIController.java	
@@ -0,0 +1,71 @@
+package com.aba.controller;
+
+import com.aba.dto.TurmaDTO;
+import com.aba.dto.TurmasDTO;
+import com.aba.service.TurmaServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+@RestController
+@RequestMapping("/api/turmas")
+public class TurmaAPIController {
+
+    @Autowired
+    TurmaServiceImpl turmaService;
+
+    @PostMapping("")
+    public ResponseEntity<?> cadastrarTurma(@RequestBody TurmaDTO turmaDTO) {
+        return this.turmaService.cadastrarTurma(turmaDTO);
+    }
+
+    @PutMapping("/{id}")
+    public ResponseEntity<?> editarTurma(@PathVariable Long id, @RequestBody TurmaDTO turmaDTO) {
+        return this.turmaService.editarTurma(id, turmaDTO);
+    }
+
+    @DeleteMapping("/{id}")
+    public ResponseEntity<?> removerTurma(@PathVariable Long id) {
+        return this.turmaService.removerTurma(id);
+    }
+
+    @GetMapping("/{id}")
+    public ResponseEntity<?> consultarTurma(@PathVariable Long id) {
+        return this.turmaService.consultarTurma(id);
+    }
+
+    @GetMapping("/listar")
+    public ResponseEntity<?> listarTurmas(){
+        return this.turmaService.listarTurmas();
+    }
+
+    @PutMapping("/adicionar-aluno/{idTurma}/{idAluno}")
+    public ResponseEntity<?> adicionarAlunoEmTurma(@PathVariable Long idTurma, @PathVariable Long idAluno) {
+       return this.turmaService.adicionarAlunoEmTurma(idTurma, idAluno);
+    }
+
+    @PutMapping("/adicionar-instrutor/{idTurma}/{idInstrutor}")
+    public ResponseEntity<?> adicionarInstrutorEmTurma(@PathVariable Long idTurma, @PathVariable Long idInstrutor) {
+        return this.turmaService.adicionarInstrutorEmTurma(idTurma, idInstrutor);
+    }
+
+    @GetMapping("/listar-alunos/{id}")
+    public ResponseEntity<?> listarAlunosDeTurma(@PathVariable Long id){
+        return this.turmaService.listarAlunosDeTurma(id);
+    }
+
+    @GetMapping("/listar-instrutores/{id}")
+    public ResponseEntity<?> listarInstrutoresDeTurma(@PathVariable Long id){
+        return this.turmaService.listarInstrutoresDeTurma(id);
+    }
+
+    @DeleteMapping("/remover-aluno/{idTurma}/{idAluno}")
+    public ResponseEntity<?> removerAlunoDeTurma(@PathVariable Long idTurma, @PathVariable Long idAluno) {
+        return this.turmaService.removerAlunoDeTurma(idTurma, idAluno);
+    }
+
+    @DeleteMapping("/remover-instrutor/{idTurma}/{idInstrutor}")
+    public ResponseEntity<?> removerInstrutorDeTurma(@PathVariable Long idTurma, @PathVariable Long idInstrutor) {
+        return this.turmaService.removerInstrutorDeTurma(idTurma, idInstrutor);
+    }
+}
Index: aba/src/main/java/com/aba/dto/TurmasDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/TurmasDTO.java b/aba/src/main/java/com/aba/dto/TurmasDTO.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/dto/TurmasDTO.java	
@@ -0,0 +1,27 @@
+package com.aba.dto;
+
+import com.aba.model.Instrutor;
+import com.aba.model.Turma;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@NoArgsConstructor
+@Getter
+@Setter
+public class TurmasDTO {
+
+    private List<TurmaDTO> dadosTurma;
+
+    public TurmasDTO (List<Turma> turmas) {
+        this.dadosTurma = new ArrayList<>();
+
+        for (Turma turma : turmas) {
+            dadosTurma.add(turma.getDto());
+        }
+    }
+
+}
Index: .idea/libraries/Maven__antlr_antlr_2_7_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__antlr_antlr_2_7_7.xml b/.idea/libraries/Maven__antlr_antlr_2_7_7.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__antlr_antlr_2_7_7.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: antlr:antlr:2.7.7">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml:classmate:1.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.13.3/jackson-annotations-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_11.xml b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_11.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_11.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-classic:1.2.11">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.11/logback-classic-1.2.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__ch_qos_logback_logback_core_1_2_11.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_11.xml b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_11.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_11.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-core:1.2.11">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.11/logback-core-1.2.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.3/jackson-datatype-jdk8-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.3/jackson-datatype-jsr310-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.13.3/jackson-core-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.13.3/jackson-databind-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_jayway_jsonpath_json_path_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_7_0.xml b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.jayway.jsonpath:json-path:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.7.0/json-path-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml b/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.activation:jakarta.activation:1.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_13_3.xml b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.3/jackson-module-parameter-names-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_h2database_h2_2_1_212.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_h2database_h2_2_1_212.xml b/.idea/libraries/Maven__com_h2database_h2_2_1_212.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_h2database_h2_2_1_212.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.h2database:h2:2.1.212">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/2.1.212/h2-2.1.212.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/2.1.212/h2-2.1.212-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/2.1.212/h2-2.1.212-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_zaxxer_HikariCP_4_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_zaxxer_HikariCP_4_0_3.xml b/.idea/libraries/Maven__com_zaxxer_HikariCP_4_0_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_zaxxer_HikariCP_4_0_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zaxxer:HikariCP:4.0.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_classgraph_classgraph_4_8_83.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_classgraph_classgraph_4_8_83.xml b/.idea/libraries/Maven__io_github_classgraph_classgraph_4_8_83.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_classgraph_classgraph_4_8_83.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.classgraph:classgraph:4.8.83">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/classgraph/classgraph/4.8.83/classgraph-4.8.83.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/classgraph/classgraph/4.8.83/classgraph-4.8.83-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/classgraph/classgraph/4.8.83/classgraph-4.8.83-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_12.xml b/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_12.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_12.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.istack:istack-commons-runtime:3.0.12">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_core_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_core_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_core_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_core_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-core:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/3.0.0/springfox-core-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/3.0.0/springfox-core-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/3.0.0/springfox-core-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_data_rest_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_data_rest_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_data_rest_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_data_rest_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-data-rest:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-data-rest/3.0.0/springfox-data-rest-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-data-rest/3.0.0/springfox-data-rest-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-data-rest/3.0.0/springfox-data-rest-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/dto/AlunoDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.dto;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Getter\r\n@Setter\r\npublic class AlunoDTO {\r\n    \r\n    String nome;\r\n\r\n    int idade;\r\n\r\n    String turma;\r\n\r\n    String professor;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/AlunoDTO.java b/aba/src/main/java/com/aba/dto/AlunoDTO.java
--- a/aba/src/main/java/com/aba/dto/AlunoDTO.java	
+++ b/aba/src/main/java/com/aba/dto/AlunoDTO.java	
@@ -1,10 +1,13 @@
 package com.aba.dto;
 
+import com.aba.model.Instrutor;
 import lombok.AllArgsConstructor;
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
 
+import java.util.List;
+
 @NoArgsConstructor
 @AllArgsConstructor
 @Getter
@@ -15,7 +18,7 @@
 
     int idade;
 
-    String turma;
+    TurmaDTO turmaDTO;
 
-    String professor;
+    InstrutorDTO instrutorDTO;
 }
Index: .idea/libraries/Maven__io_springfox_springfox_bean_validators_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_bean_validators_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_bean_validators_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_bean_validators_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-bean-validators:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/3.0.0/springfox-bean-validators-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/3.0.0/springfox-bean-validators-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/3.0.0/springfox-bean-validators-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_boot_starter_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_boot_starter_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_boot_starter_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_boot_starter_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-boot-starter:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-boot-starter/3.0.0/springfox-boot-starter-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-boot-starter/3.0.0/springfox-boot-starter-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-boot-starter/3.0.0/springfox-boot-starter-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_spi_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spi_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_spi_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spi_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spi:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/3.0.0/springfox-spi-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/3.0.0/springfox-spi-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/3.0.0/springfox-spi-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_spring_web_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spring_web_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_spring_web_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spring_web_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spring-web:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/3.0.0/springfox-spring-web-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/dto/TurmaDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.dto;\r\n\r\npublic class TurmaDTO {\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/TurmaDTO.java b/aba/src/main/java/com/aba/dto/TurmaDTO.java
--- a/aba/src/main/java/com/aba/dto/TurmaDTO.java	
+++ b/aba/src/main/java/com/aba/dto/TurmaDTO.java	
@@ -1,5 +1,17 @@
 package com.aba.dto;
 
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
 public class TurmaDTO {
-    
+
+    private String nomeTurma;
+
 }
Index: .idea/libraries/Maven__io_springfox_springfox_oas_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_oas_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_oas_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_oas_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-oas:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-oas/3.0.0/springfox-oas-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-oas/3.0.0/springfox-oas-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-oas/3.0.0/springfox-oas-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_schema_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_schema_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_schema_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_schema_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-schema:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/3.0.0/springfox-schema-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/3.0.0/springfox-schema-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/3.0.0/springfox-schema-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_swagger2_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger2_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger2_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger2_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger2:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/3.0.0/springfox-swagger2-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/3.0.0/springfox-swagger2-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/3.0.0/springfox-swagger2-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/dto/AlunosDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.dto;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport com.aba.model.Aluno;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Getter;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.Setter;\r\n\r\n@NoArgsConstructor\r\n@Getter\r\n@Setter\r\npublic class AlunosDTO {\r\n    \r\n    private List<AlunoDTO> dadosAlunos;\r\n\r\n    public AlunosDTO(List<Aluno> alunos) {\r\n        this.dadosAlunos = new ArrayList<>();\r\n\r\n        for(Aluno aluno : alunos) {\r\n            this.dadosAlunos.add(aluno.getDto());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/AlunosDTO.java b/aba/src/main/java/com/aba/dto/AlunosDTO.java
--- a/aba/src/main/java/com/aba/dto/AlunosDTO.java	
+++ b/aba/src/main/java/com/aba/dto/AlunosDTO.java	
@@ -14,7 +14,7 @@
 @Getter
 @Setter
 public class AlunosDTO {
-    
+
     private List<AlunoDTO> dadosAlunos;
 
     public AlunosDTO(List<Aluno> alunos) {
Index: .idea/libraries/Maven__io_springfox_springfox_swagger_common_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger_common_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger_common_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger_common_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger-common:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/3.0.0/springfox-swagger-common-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/3.0.0/springfox-swagger-common-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/3.0.0/springfox-swagger-common-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_spring_webflux_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spring_webflux_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_spring_webflux_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spring_webflux_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spring-webflux:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webflux/3.0.0/springfox-spring-webflux-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webflux/3.0.0/springfox-spring-webflux-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webflux/3.0.0/springfox-spring-webflux-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_spring_webmvc_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spring_webmvc_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_spring_webmvc_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spring_webmvc_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spring-webmvc:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-webmvc/3.0.0/springfox-spring-webmvc-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_swagger_core_v3_swagger_models_2_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_core_v3_swagger_models_2_1_2.xml b/.idea/libraries/Maven__io_swagger_core_v3_swagger_models_2_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_core_v3_swagger_models_2_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger.core.v3:swagger-models:2.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-models/2.1.2/swagger-models-2.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-models/2.1.2/swagger-models-2.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-models/2.1.2/swagger-models-2.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml b/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger:swagger-annotations:1.5.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_swagger_ui_3_0_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_3_0_0.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_3_0_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_3_0_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger-ui:3.0.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/3.0.0/springfox-swagger-ui-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/3.0.0/springfox-swagger-ui-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/3.0.0/springfox-swagger-ui-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/service/InstrutorServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/service/InstrutorServiceImpl.java b/aba/src/main/java/com/aba/service/InstrutorServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/service/InstrutorServiceImpl.java	
@@ -0,0 +1,73 @@
+package com.aba.service;
+
+import com.aba.dto.InstrutorDTO;
+import com.aba.dto.InstrutoresDTO;
+import com.aba.interfaces.InstrutorService;
+import com.aba.model.Instrutor;
+import com.aba.model.Usuario;
+import com.aba.repository.InstrutorRepository;
+import com.aba.repository.UsuarioRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Service;
+import java.util.List;
+import java.util.Optional;
+
+@Service
+public class InstrutorServiceImpl implements InstrutorService {
+
+    @Autowired
+    InstrutorRepository instrutorRepository;
+
+    @Autowired
+    UsuarioRepository usuarioRepository;
+
+    public ResponseEntity<?> cadastrarInstrutor(InstrutorDTO instrutorDTO) {
+        Usuario instrutor;
+        instrutor = new Instrutor(instrutorDTO);
+
+        instrutorRepository.save((Instrutor) instrutor);
+        usuarioRepository.save(instrutor);
+
+        return ResponseEntity.status(HttpStatus.CREATED).body(instrutorDTO);
+    }
+
+    public ResponseEntity<?> editarInstrutor(Long id, InstrutorDTO instrutorDTO) {
+        Instrutor instrutor;
+        instrutor = this.getInstrutorById(id);
+        instrutor.editar(instrutorDTO);
+        this.instrutorRepository.save(instrutor);
+
+        return ResponseEntity.status(HttpStatus.OK).body(instrutor.getDto());
+    }
+
+    public ResponseEntity<?> removerInstrutor(Long id){
+        this.usuarioRepository.deleteById(id);
+
+        return ResponseEntity.status(HttpStatus.OK).body("Instrutor removido(a)!");
+    }
+
+    public ResponseEntity<?> listarInstrutores(){
+        List<Instrutor> instrutores = this.instrutorRepository.findAll();
+        InstrutoresDTO listaDeInstrutores = new InstrutoresDTO(instrutores);
+
+        return ResponseEntity.status(HttpStatus.OK).body(listaDeInstrutores.getDadosInstrutores());
+    }
+
+    public ResponseEntity<?> consultarInstrutor(Long id) {
+        Instrutor instrutor;
+        instrutor = this.getInstrutorById(id);
+        return ResponseEntity.status(HttpStatus.OK).body(instrutor.getDto());
+    }
+
+    public Instrutor getInstrutorById(Long id){
+        Optional<Instrutor> instrutorOptional = this.instrutorRepository.findById(id);
+
+        if (!instrutorOptional.isPresent()) {
+            return null;
+        }
+
+        return instrutorOptional.get();
+    }
+}
Index: .idea/libraries/Maven__io_swagger_core_v3_swagger_annotations_2_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_core_v3_swagger_annotations_2_1_2.xml b/.idea/libraries/Maven__io_swagger_core_v3_swagger_annotations_2_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_core_v3_swagger_annotations_2_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger.core.v3:swagger-annotations:2.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-annotations/2.1.2/swagger-annotations-2.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-annotations/2.1.2/swagger-annotations-2.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/core/v3/swagger-annotations/2.1.2/swagger-annotations-2.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/dto/InstrutorDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/InstrutorDTO.java b/aba/src/main/java/com/aba/dto/InstrutorDTO.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/dto/InstrutorDTO.java	
@@ -0,0 +1,20 @@
+package com.aba.dto;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+import java.util.List;
+
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class InstrutorDTO {
+
+    String nome;
+    int idade;
+    String email;
+}
Index: .idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml b/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.persistence:jakarta.persistence-api:2.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/interfaces/InstrutorService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/interfaces/InstrutorService.java b/aba/src/main/java/com/aba/interfaces/InstrutorService.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/interfaces/InstrutorService.java	
@@ -0,0 +1,16 @@
+package com.aba.interfaces;
+import com.aba.dto.InstrutorDTO;
+import org.springframework.http.ResponseEntity;
+
+public interface InstrutorService {
+
+    public ResponseEntity<?> cadastrarInstrutor(InstrutorDTO instrutorDTO);
+
+    public ResponseEntity<?> editarInstrutor(Long id, InstrutorDTO instrutorDTO);
+
+    public ResponseEntity<?> removerInstrutor(Long id);
+
+    public ResponseEntity<?> consultarInstrutor(Long id);
+
+    public ResponseEntity<?> listarInstrutores();
+}
\ No newline at end of file
Index: .idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml b/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger:swagger-models:1.5.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/model/Instrutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/model/Instrutor.java b/aba/src/main/java/com/aba/model/Instrutor.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/model/Instrutor.java	
@@ -0,0 +1,44 @@
+package com.aba.model;
+
+import com.aba.dto.InstrutorDTO;
+import lombok.*;
+import javax.persistence.*;
+
+@Data
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+@Entity
+public class Instrutor extends Usuario{
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    private String nome;
+    private int idade;
+    private String email;
+
+    public Instrutor (String nome, int idade, String email) {
+        this.nome = nome;
+        this.idade = idade;
+        this.email = email;
+    }
+
+    public Instrutor (InstrutorDTO instrutorDTO) {
+        this.nome = instrutorDTO.getNome();
+        this.idade = instrutorDTO.getIdade();
+        this.email = instrutorDTO.getEmail();
+    }
+
+    public void editar(InstrutorDTO instrutorDTO) {
+        this.nome = instrutorDTO.getNome();
+        this.idade = instrutorDTO.getIdade();
+        this.email = instrutorDTO.getEmail();
+    }
+
+    public InstrutorDTO getDto() {
+        return new InstrutorDTO(this.nome, this.idade, this.email);
+    }
+}
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.activation:jakarta.activation-api:1.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_1_12_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_12_10.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_12_10.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_12_10.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy:1.12.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.12.10/byte-buddy-1.12.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_12_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_12_10.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_12_10.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_12_10.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy-agent:1.12.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.12.10/byte-buddy-agent-1.12.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.12.10/byte-buddy-agent-1.12.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.12.10/byte-buddy-agent-1.12.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/dto/InstrutoresDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/dto/InstrutoresDTO.java b/aba/src/main/java/com/aba/dto/InstrutoresDTO.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/dto/InstrutoresDTO.java	
@@ -0,0 +1,27 @@
+package com.aba.dto;
+
+import com.aba.model.Instrutor;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+import org.apache.tomcat.util.digester.ArrayStack;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@NoArgsConstructor
+@Getter
+@Setter
+public class InstrutoresDTO {
+
+    private List<InstrutorDTO> dadosInstrutores;
+
+    public InstrutoresDTO (List<Instrutor> instrutores) {
+        this.dadosInstrutores = new ArrayList<>();
+
+        for (Instrutor instrutor : instrutores) {
+            dadosInstrutores.add(instrutor.getDto());
+        }
+    }
+}
Index: .idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml b/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.transaction:jakarta.transaction-api:1.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/package.json b/node_modules/angular/package.json
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/package.json	
@@ -0,0 +1,25 @@
+{
+  "name": "angular",
+  "version": "1.8.3",
+  "description": "HTML enhanced for web apps",
+  "main": "index.js",
+  "scripts": {
+    "test": "echo \"Error: no test specified\" && exit 1"
+  },
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/angular/angular.js.git"
+  },
+  "keywords": [
+    "angular",
+    "framework",
+    "browser",
+    "client-side"
+  ],
+  "author": "Angular Core Team <angular-core+npm@google.com>",
+  "license": "MIT",
+  "bugs": {
+    "url": "https://github.com/angular/angular.js/issues"
+  },
+  "homepage": "http://angularjs.org"
+}
Index: .idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
new file mode 100644
--- /dev/null	
+++ b/package.json	
@@ -0,0 +1,5 @@
+{
+  "dependencies": {
+    "angular": "^1.8.3"
+  }
+}
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_17_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_17_2.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_17_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_17_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-api:2.17.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/controller/InstrutorAPIController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/controller/InstrutorAPIController.java b/aba/src/main/java/com/aba/controller/InstrutorAPIController.java
new file mode 100644
--- /dev/null	
+++ b/aba/src/main/java/com/aba/controller/InstrutorAPIController.java	
@@ -0,0 +1,40 @@
+package com.aba.controller;
+
+import com.aba.dto.InstrutorDTO;
+import com.aba.interfaces.InstrutorService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+@RestController
+@RequestMapping("/api/instrutores")
+public class InstrutorAPIController {
+
+    @Autowired
+    InstrutorService instrutorService;
+
+    @PostMapping("")
+    public ResponseEntity<?> cadastrarInstrutor(@RequestBody InstrutorDTO instrutorDTO) {
+        return this.instrutorService.cadastrarInstrutor(instrutorDTO);
+    }
+
+    @PutMapping("/{id}")
+    public ResponseEntity<?> editarInstrutor(@PathVariable Long id, @RequestBody InstrutorDTO instrutorDTO) {
+        return this.instrutorService.editarInstrutor(id, instrutorDTO);
+    }
+
+    @GetMapping("/{id}")
+    public ResponseEntity<?> consultarInstrutor(@PathVariable Long id){
+        return this.instrutorService.consultarInstrutor(id);
+    }
+
+    @DeleteMapping("/{id}")
+    public ResponseEntity<?> removerInstrutor(@PathVariable Long id) {
+        return this.instrutorService.removerInstrutor(id);
+    }
+
+    @GetMapping("/listar")
+    public ResponseEntity<?> listarInstrutores(){
+        return this.instrutorService.listarInstrutores();
+    }
+}
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_17_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_17_2.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_17_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_17_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.17.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_minidev_accessors_smart_2_4_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_accessors_smart_2_4_8.xml b/.idea/libraries/Maven__net_minidev_accessors_smart_2_4_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_accessors_smart_2_4_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:accessors-smart:2.4.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/2.4.8/accessors-smart-2.4.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/.package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.package-lock.json b/node_modules/.package-lock.json
new file mode 100644
--- /dev/null	
+++ b/node_modules/.package-lock.json	
@@ -0,0 +1,13 @@
+{
+  "name": "ABA",
+  "lockfileVersion": 2,
+  "requires": true,
+  "packages": {
+    "node_modules/angular": {
+      "version": "1.8.3",
+      "resolved": "https://registry.npmjs.org/angular/-/angular-1.8.3.tgz",
+      "integrity": "sha512-5qjkWIQQVsHj4Sb5TcEs4WZWpFeVFHXwxEBHUhrny41D8UrBAd6T/6nPPAsLngJCReIOqi95W3mxdveveutpZw==",
+      "deprecated": "For the actively supported Angular, see https://www.npmjs.com/package/@angular/core. AngularJS support has officially ended. For extended AngularJS support options, see https://goo.gle/angularjs-path-forward."
+    }
+  }
+}
Index: aba/src/main/java/com/aba/config/SwaggerConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.config;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\r\n\r\nimport springfox.documentation.builders.PathSelectors;\r\nimport springfox.documentation.builders.RequestHandlerSelectors;\r\nimport springfox.documentation.spi.DocumentationType;\r\nimport springfox.documentation.spring.web.plugins.Docket;\r\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\r\n\r\n@Configuration\r\n@EnableSwagger2\r\npublic class SwaggerConfiguration {\r\n\r\n    @Bean\r\n    public Docket api() {\r\n        return new Docket(DocumentationType.SWAGGER_2)\r\n        .select()\r\n        .apis(RequestHandlerSelectors.any())\r\n        .paths(PathSelectors.any())\r\n        .build();\r\n    }\r\n\r\n    @Bean\r\n    public InternalResourceViewResolver defaultViewResolver() {\r\n        return new InternalResourceViewResolver();\r\n      }\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/config/SwaggerConfiguration.java b/aba/src/main/java/com/aba/config/SwaggerConfiguration.java
--- a/aba/src/main/java/com/aba/config/SwaggerConfiguration.java	
+++ b/aba/src/main/java/com/aba/config/SwaggerConfiguration.java	
@@ -27,5 +27,4 @@
     public InternalResourceViewResolver defaultViewResolver() {
         return new InternalResourceViewResolver();
       }
-    
 }
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
--- /dev/null	
+++ b/package-lock.json	
@@ -0,0 +1,25 @@
+{
+  "name": "ABA",
+  "lockfileVersion": 2,
+  "requires": true,
+  "packages": {
+    "": {
+      "dependencies": {
+        "angular": "^1.8.3"
+      }
+    },
+    "node_modules/angular": {
+      "version": "1.8.3",
+      "resolved": "https://registry.npmjs.org/angular/-/angular-1.8.3.tgz",
+      "integrity": "sha512-5qjkWIQQVsHj4Sb5TcEs4WZWpFeVFHXwxEBHUhrny41D8UrBAd6T/6nPPAsLngJCReIOqi95W3mxdveveutpZw==",
+      "deprecated": "For the actively supported Angular, see https://www.npmjs.com/package/@angular/core. AngularJS support has officially ended. For extended AngularJS support options, see https://goo.gle/angularjs-path-forward."
+    }
+  },
+  "dependencies": {
+    "angular": {
+      "version": "1.8.3",
+      "resolved": "https://registry.npmjs.org/angular/-/angular-1.8.3.tgz",
+      "integrity": "sha512-5qjkWIQQVsHj4Sb5TcEs4WZWpFeVFHXwxEBHUhrny41D8UrBAd6T/6nPPAsLngJCReIOqi95W3mxdveveutpZw=="
+    }
+  }
+}
Index: .idea/libraries/Maven__net_minidev_json_smart_2_4_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_json_smart_2_4_8.xml b/.idea/libraries/Maven__net_minidev_json_smart_2_4_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_json_smart_2_4_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:json-smart:2.4.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.4.8/json-smart-2.4.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.4.8/json-smart-2.4.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.4.8/json-smart-2.4.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/angular-csp.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/angular-csp.css b/node_modules/angular/angular-csp.css
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/angular-csp.css	
@@ -0,0 +1,25 @@
+/* Include this file in your html if you are using the CSP mode. */
+
+@charset "UTF-8";
+
+[ng\:cloak],
+[ng-cloak],
+[data-ng-cloak],
+[x-ng-cloak],
+.ng-cloak,
+.x-ng-cloak,
+.ng-hide:not(.ng-hide-animate) {
+  display: none !important;
+}
+
+ng\:form {
+  display: block;
+}
+
+.ng-animate-shim {
+  visibility:hidden;
+}
+
+.ng-anchor {
+  position:absolute;
+}
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_63.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_63.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_63.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_63.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.63">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.63/tomcat-embed-websocket-9.0.63.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.63/tomcat-embed-websocket-9.0.63-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.63/tomcat-embed-websocket-9.0.63-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/README.md b/node_modules/angular/README.md
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/README.md	
@@ -0,0 +1,67 @@
+# packaged angular
+
+**This package contains the legacy AngularJS (version 1.x). AngularJS support has officially ended
+as of January 2022.
+[See what ending support means](https://docs.angularjs.org/misc/version-support-status) and
+[read the end of life announcement](https://goo.gle/angularjs-end-of-life).**
+
+**[See `@angular/core` for the actively supported Angular](https://npmjs.com/@angular/core).**
+
+## Install
+
+You can install this package either with `npm` or with `bower`.
+
+### npm
+
+```shell
+npm install angular
+```
+
+Then add a `<script>` to your `index.html`:
+
+```html
+<script src="/node_modules/angular/angular.js"></script>
+```
+
+Or `require('angular')` from your code.
+
+### bower
+
+```shell
+bower install angular
+```
+
+Then add a `<script>` to your `index.html`:
+
+```html
+<script src="/bower_components/angular/angular.js"></script>
+```
+
+## Documentation
+
+Documentation is available on the
+[AngularJS docs site](http://docs.angularjs.org/).
+
+## License
+
+The MIT License
+
+Copyright (c) 2022 Google LLC
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apiguardian:apiguardian-api:1.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/LICENSE.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/LICENSE.md b/node_modules/angular/LICENSE.md
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/LICENSE.md	
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2016 Angular
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_63.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_63.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_63.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_63.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.63">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.63/tomcat-embed-core-9.0.63.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.63/tomcat-embed-core-9.0.63-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.63/tomcat-embed-core-9.0.63-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_63.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_63.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_63.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_el_9_0_63.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.63">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-el/9.0.63/tomcat-embed-el-9.0.63.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-el/9.0.63/tomcat-embed-el-9.0.63-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-el/9.0.63/tomcat-embed-el-9.0.63-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/bower.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/bower.json b/node_modules/angular/bower.json
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/bower.json	
@@ -0,0 +1,9 @@
+{
+  "name": "angular",
+  "version": "1.8.3",
+  "license": "MIT",
+  "main": "./angular.js",
+  "ignore": [],
+  "dependencies": {
+  }
+}
Index: node_modules/angular/angular.min.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/angular.min.js.map b/node_modules/angular/angular.min.js.map
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/angular.min.js.map	
@@ -0,0 +1,8 @@
+{
+"version":3,
+"file":"angular.min.js",
+"lineCount":351,
+"mappings":"A;;;;;aAKC,SAAQ,CAACA,CAAD,CAAS,CAwClBC,QAASA,GAAmB,CAACC,CAAD,CAAS,CACnC,GAAIC,CAAA,CAASD,CAAT,CAAJ,CACME,CAAA,CAAUF,CAAAG,eAAV,CAGJ,GAFEC,EAAAD,eAEF,CAFgCE,EAAA,CAAsBL,CAAAG,eAAtB,CAAA,CAA+CH,CAAAG,eAA/C,CAAuEG,GAEvG,EAAIJ,CAAA,CAAUF,CAAAO,sBAAV,CAAJ,EAA+CC,EAAA,CAAUR,CAAAO,sBAAV,CAA/C,GACEH,EAAAG,sBADF,CACuCP,CAAAO,sBADvC,CAJF,KAQE,OAAOH,GAT0B,CAkBrCC,QAASA,GAAqB,CAACI,CAAD,CAAW,CACvC,MAAOC,EAAA,CAASD,CAAT,CAAP,EAAwC,CAAxC,CAA6BA,CADU,CAmCzCE,QAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,KAAAA,OAAAA,SAAAA,EAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,sCAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,EAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,GAAAA,KAAAA,EAAAA,kBAAAA;AAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MAAAA,EAAAA,CAAAA,CAAAA,SAAAA,EAAAA,QAAAA,CAAAA,aAAAA,CAAAA,EAAAA,CAAAA,CAAAA,WAAAA,EAAAA,MAAAA,EAAAA,CAAAA,WAAAA,CAAAA,QAAAA,EAAAA,MAAAA,EAAAA,CAAAA,IAAAA,UAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CA4NAC,QAASA,GAAW,CAACC,CAAD,CAAM,CAGxB,GAAW,IAAX,EAAIA,CAAJ,EAAmBC,EAAA,CAASD,CAAT,CAAnB,CAAkC,MAAO,CAAA,CAMzC,IAAIE,CAAA,CAAQF,CAAR,CAAJ,EAAoBG,CAAA,CAASH,CAAT,CAApB,EAAsCI,CAAtC,EAAgDJ,CAAhD,WAA+DI,EAA/D,CAAwE,MAAO,CAAA,CAI/E,KAAIC,EAAS,QAATA,EAAqBC,OAAA,CAAON,CAAP,CAArBK,EAAoCL,CAAAK,OAIxC,OAAOR,EAAA,CAASQ,CAAT,CAAP,GAAsC,CAAtC,EAA4BA,CAA5B,EAA4CA,CAA5C,CAAqD,CAArD,GAA2DL,EAA3D,EAAsF,UAAtF,GAAkE,MAAOA,EAAAO,KAAzE,CAjBwB,CAwD1BC,QAASA,EAAO,CAACR,CAAD,CAAMS,CAAN,CAAgBC,CAAhB,CAAyB,CAAA,IACnCC,CADmC,CAC9BN,CACT,IAAIL,CAAJ,CACE,GAAIY,CAAA,CAAWZ,CAAX,CAAJ,CACE,IAAKW,CAAL,GAAYX,EAAZ,CACc,WAAZ,GAAIW,CAAJ,EAAmC,QAAnC,GAA2BA,CAA3B,EAAuD,MAAvD,GAA+CA,CAA/C,EAAiEX,CAAAa,eAAA,CAAmBF,CAAnB,CAAjE,EACEF,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIW,CAAJ,CAAvB,CAAiCA,CAAjC,CAAsCX,CAAtC,CAHN,KAMO,IAAIE,CAAA,CAAQF,CAAR,CAAJ;AAAoBD,EAAA,CAAYC,CAAZ,CAApB,CAAsC,CAC3C,IAAIe,EAA6B,QAA7BA,GAAc,MAAOf,EACpBW,EAAA,CAAM,CAAX,KAAcN,CAAd,CAAuBL,CAAAK,OAAvB,CAAmCM,CAAnC,CAAyCN,CAAzC,CAAiDM,CAAA,EAAjD,CACE,CAAII,CAAJ,EAAmBJ,CAAnB,GAA0BX,EAA1B,GACES,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIW,CAAJ,CAAvB,CAAiCA,CAAjC,CAAsCX,CAAtC,CAJuC,CAAtC,IAOA,IAAIA,CAAAQ,QAAJ,EAAmBR,CAAAQ,QAAnB,GAAmCA,CAAnC,CACHR,CAAAQ,QAAA,CAAYC,CAAZ,CAAsBC,CAAtB,CAA+BV,CAA/B,CADG,KAEA,IAAIgB,EAAA,CAAchB,CAAd,CAAJ,CAEL,IAAKW,CAAL,GAAYX,EAAZ,CACES,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIW,CAAJ,CAAvB,CAAiCA,CAAjC,CAAsCX,CAAtC,CAHG,KAKA,IAAkC,UAAlC,GAAI,MAAOA,EAAAa,eAAX,CAEL,IAAKF,CAAL,GAAYX,EAAZ,CACMA,CAAAa,eAAA,CAAmBF,CAAnB,CAAJ,EACEF,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIW,CAAJ,CAAvB,CAAiCA,CAAjC,CAAsCX,CAAtC,CAJC,KASL,KAAKW,CAAL,GAAYX,EAAZ,CACMa,EAAAC,KAAA,CAAoBd,CAApB,CAAyBW,CAAzB,CAAJ,EACEF,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIW,CAAJ,CAAvB,CAAiCA,CAAjC,CAAsCX,CAAtC,CAKR,OAAOA,EAvCgC,CA0CzCiB,QAASA,GAAa,CAACjB,CAAD,CAAMS,CAAN,CAAgBC,CAAhB,CAAyB,CAE7C,IADA,IAAIQ,EAAOZ,MAAAY,KAAA,CAAYlB,CAAZ,CAAAmB,KAAA,EAAX,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,CAAAb,OAApB,CAAiCe,CAAA,EAAjC,CACEX,CAAAK,KAAA,CAAcJ,CAAd,CAAuBV,CAAA,CAAIkB,CAAA,CAAKE,CAAL,CAAJ,CAAvB,CAAqCF,CAAA,CAAKE,CAAL,CAArC,CAEF,OAAOF,EALsC,CAc/CG,QAASA,GAAa,CAACC,CAAD,CAAa,CACjC,MAAO,SAAQ,CAACC,CAAD,CAAQZ,CAAR,CAAa,CAACW,CAAA,CAAWX,CAAX,CAAgBY,CAAhB,CAAD,CADK,CAcnCC,QAASA,GAAO,EAAG,CACjB,MAAO,EAAEC,EADQ,CAvbD;AA0clBC,QAASA,GAAU,CAACC,CAAD,CAAMC,CAAN,CAAYC,CAAZ,CAAkB,CAGnC,IAFA,IAAIC,EAAIH,CAAAI,UAAR,CAESX,EAAI,CAFb,CAEgBY,EAAKJ,CAAAvB,OAArB,CAAkCe,CAAlC,CAAsCY,CAAtC,CAA0C,EAAEZ,CAA5C,CAA+C,CAC7C,IAAIpB,EAAM4B,CAAA,CAAKR,CAAL,CACV,IAAKhC,CAAA,CAASY,CAAT,CAAL,EAAuBY,CAAA,CAAWZ,CAAX,CAAvB,CAEA,IADA,IAAIkB,EAAOZ,MAAAY,KAAA,CAAYlB,CAAZ,CAAX,CACSiC,EAAI,CADb,CACgBC,EAAKhB,CAAAb,OAArB,CAAkC4B,CAAlC,CAAsCC,CAAtC,CAA0CD,CAAA,EAA1C,CAA+C,CAC7C,IAAItB,EAAMO,CAAA,CAAKe,CAAL,CAAV,CACIE,EAAMnC,CAAA,CAAIW,CAAJ,CAENkB,EAAJ,EAAYzC,CAAA,CAAS+C,CAAT,CAAZ,CACMC,EAAA,CAAOD,CAAP,CAAJ,CACER,CAAA,CAAIhB,CAAJ,CADF,CACa,IAAI0B,IAAJ,CAASF,CAAAG,QAAA,EAAT,CADb,CAEWC,EAAA,CAASJ,CAAT,CAAJ,CACLR,CAAA,CAAIhB,CAAJ,CADK,CACM,IAAI6B,MAAJ,CAAWL,CAAX,CADN,CAEIA,CAAAM,SAAJ,CACLd,CAAA,CAAIhB,CAAJ,CADK,CACMwB,CAAAO,UAAA,CAAc,CAAA,CAAd,CADN,CAEIC,EAAA,CAAUR,CAAV,CAAJ,CACLR,CAAA,CAAIhB,CAAJ,CADK,CACMwB,CAAAS,MAAA,EADN,CAGO,WAHP,GAGDjC,CAHC,GAIEvB,CAAA,CAASuC,CAAA,CAAIhB,CAAJ,CAAT,CACL,GADyBgB,CAAA,CAAIhB,CAAJ,CACzB,CADoCT,CAAA,CAAQiC,CAAR,CAAA,CAAe,EAAf,CAAoB,EACxD,EAAAT,EAAA,CAAWC,CAAA,CAAIhB,CAAJ,CAAX,CAAqB,CAACwB,CAAD,CAArB,CAA4B,CAAA,CAA5B,CALG,CAPT,CAgBER,CAAA,CAAIhB,CAAJ,CAhBF,CAgBawB,CApBgC,CAJF,CA6B/BL,CAxChB,CAwCWH,CAvCTI,UADF,CAwCgBD,CAxChB,CAGE,OAqCSH,CArCFI,UAsCT,OAAOJ,EAjC4B,CAsDrCkB,QAASA,EAAM,CAAClB,CAAD,CAAM,CACnB,MAAOD,GAAA,CAAWC,CAAX,CAAgBmB,EAAAhC,KAAA,CAAWiC,SAAX,CAAsB,CAAtB,CAAhB,CAA0C,CAAA,CAA1C,CADY,CAuCrBC,QAASA,GAAK,CAACrB,CAAD,CAAM,CAClB,MAAOD,GAAA,CAAWC,CAAX,CAAgBmB,EAAAhC,KAAA,CAAWiC,SAAX,CAAsB,CAAtB,CAAhB,CAA0C,CAAA,CAA1C,CADW,CAMpBE,QAASA,GAAK,CAACC,CAAD,CAAM,CAClB,MAAOC,SAAA,CAASD,CAAT;AAAc,EAAd,CADW,CAUpBE,QAASA,GAAO,CAACC,CAAD,CAASC,CAAT,CAAgB,CAC9B,MAAOT,EAAA,CAAOvC,MAAAiD,OAAA,CAAcF,CAAd,CAAP,CAA8BC,CAA9B,CADuB,CAoBhCE,QAASA,EAAI,EAAG,EAgChBC,QAASA,GAAQ,CAACC,CAAD,CAAI,CAAC,MAAOA,EAAR,CAIrBC,QAASA,GAAO,CAACpC,CAAD,CAAQ,CAAC,MAAOqC,SAAiB,EAAG,CAAC,MAAOrC,EAAR,CAA5B,CAExBsC,QAASA,GAAiB,CAAC7D,CAAD,CAAM,CAC9B,MAAOY,EAAA,CAAWZ,CAAA8D,SAAX,CAAP,EAAmC9D,CAAA8D,SAAnC,GAAoDA,EADtB,CAiBhCC,QAASA,EAAW,CAACxC,CAAD,CAAQ,CAAC,MAAwB,WAAxB,GAAO,MAAOA,EAAf,CAe5BlC,QAASA,EAAS,CAACkC,CAAD,CAAQ,CAAC,MAAwB,WAAxB,GAAO,MAAOA,EAAf,CAgB1BnC,QAASA,EAAQ,CAACmC,CAAD,CAAQ,CAEvB,MAAiB,KAAjB,GAAOA,CAAP,EAA0C,QAA1C,GAAyB,MAAOA,EAFT,CAWzBP,QAASA,GAAa,CAACO,CAAD,CAAQ,CAC5B,MAAiB,KAAjB,GAAOA,CAAP,EAA0C,QAA1C,GAAyB,MAAOA,EAAhC,EAAsD,CAACyC,EAAA,CAAezC,CAAf,CAD3B,CAiB9BpB,QAASA,EAAQ,CAACoB,CAAD,CAAQ,CAAC,MAAwB,QAAxB,GAAO,MAAOA,EAAf,CAqBzB1B,QAASA,EAAQ,CAAC0B,CAAD,CAAQ,CAAC,MAAwB,QAAxB,GAAO,MAAOA,EAAf,CAezBa,QAASA,GAAM,CAACb,CAAD,CAAQ,CACrB,MAAgC,eAAhC,GAAOuC,EAAAhD,KAAA,CAAcS,CAAd,CADc,CAjuBL;AAkvBlBrB,QAASA,EAAO,CAAC+D,CAAD,CAAM,CACpB,MAAOC,MAAAhE,QAAA,CAAc+D,CAAd,CAAP,EAA6BA,CAA7B,WAA4CC,MADxB,CAYtBC,QAASA,GAAO,CAAC5C,CAAD,CAAQ,CAEtB,OADUuC,EAAAhD,KAAAsD,CAAc7C,CAAd6C,CACV,EACE,KAAK,gBAAL,CAAuB,MAAO,CAAA,CAC9B,MAAK,oBAAL,CAA2B,MAAO,CAAA,CAClC,MAAK,uBAAL,CAA8B,MAAO,CAAA,CACrC,SAAS,MAAO7C,EAAP,WAAwB8C,MAJnC,CAFsB,CAsBxBzD,QAASA,EAAU,CAACW,CAAD,CAAQ,CAAC,MAAwB,UAAxB,GAAO,MAAOA,EAAf,CAU3BgB,QAASA,GAAQ,CAAChB,CAAD,CAAQ,CACvB,MAAgC,iBAAhC,GAAOuC,EAAAhD,KAAA,CAAcS,CAAd,CADgB,CAYzBtB,QAASA,GAAQ,CAACD,CAAD,CAAM,CACrB,MAAOA,EAAP,EAAcA,CAAAf,OAAd,GAA6Be,CADR,CAKvBsE,QAASA,GAAO,CAACtE,CAAD,CAAM,CACpB,MAAOA,EAAP,EAAcA,CAAAuE,WAAd,EAAgCvE,CAAAwE,OADZ,CAoBtB7E,QAASA,GAAS,CAAC4B,CAAD,CAAQ,CACxB,MAAwB,SAAxB,GAAO,MAAOA,EADU,CAW1BkD,QAASA,GAAY,CAAClD,CAAD,CAAQ,CAC3B,MAAOA,EAAP,EAAgB1B,CAAA,CAAS0B,CAAAlB,OAAT,CAAhB,EAA0CqE,EAAAC,KAAA,CAAwBb,EAAAhD,KAAA,CAAcS,CAAd,CAAxB,CADf,CA90BX;AAk3BlBoB,QAASA,GAAS,CAACiC,CAAD,CAAO,CACvB,MAAO,EAAGA,CAAAA,CAAH,EACJ,EAAAA,CAAAnC,SAAA,EACGmC,CAAAC,KADH,EACgBD,CAAAE,KADhB,EAC6BF,CAAAG,KAD7B,CADI,CADgB,CAUzBC,QAASA,GAAO,CAAC9B,CAAD,CAAM,CAAA,IAChBlD,EAAM,EAAIiF,EAAAA,CAAQ/B,CAAAgC,MAAA,CAAU,GAAV,CAAtB,KAAsC9D,CACtC,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB6D,CAAA5E,OAAhB,CAA8Be,CAAA,EAA9B,CACEpB,CAAA,CAAIiF,CAAA,CAAM7D,CAAN,CAAJ,CAAA,CAAgB,CAAA,CAElB,OAAOpB,EALa,CAStBmF,QAASA,GAAS,CAACC,CAAD,CAAU,CAC1B,MAAOC,EAAA,CAAUD,CAAA3C,SAAV,EAA+B2C,CAAA,CAAQ,CAAR,CAA/B,EAA6CA,CAAA,CAAQ,CAAR,CAAA3C,SAA7C,CADmB,CAQ5B6C,QAASA,GAAW,CAACC,CAAD,CAAQhE,CAAR,CAAe,CACjC,IAAIiE,EAAQD,CAAAE,QAAA,CAAclE,CAAd,CACC,EAAb,EAAIiE,CAAJ,EACED,CAAAG,OAAA,CAAaF,CAAb,CAAoB,CAApB,CAEF,OAAOA,EAL0B,CA+FnCG,QAASA,GAAI,CAACC,CAAD,CAASC,CAAT,CAAsBjG,CAAtB,CAAgC,CA+B3CkG,QAASA,EAAW,CAACF,CAAD,CAASC,CAAT,CAAsBjG,CAAtB,CAAgC,CAClDA,CAAA,EACA,IAAe,CAAf,CAAIA,CAAJ,CACE,MAAO,KAET,KAAIkC,EAAI+D,CAAA9D,UAAR,CACIpB,CACJ,IAAIT,CAAA,CAAQ0F,CAAR,CAAJ,CAAqB,CACVxE,CAAAA,CAAI,CAAb,KAAS,IAAOY,EAAK4D,CAAAvF,OAArB,CAAoCe,CAApC,CAAwCY,CAAxC,CAA4CZ,CAAA,EAA5C,CACEyE,CAAAE,KAAA,CAAiBC,CAAA,CAAYJ,CAAA,CAAOxE,CAAP,CAAZ,CAAuBxB,CAAvB,CAAjB,CAFiB,CAArB,IAIO,IAAIoB,EAAA,CAAc4E,CAAd,CAAJ,CAEL,IAAKjF,CAAL,GAAYiF,EAAZ,CACEC,CAAA,CAAYlF,CAAZ,CAAA,CAAmBqF,CAAA,CAAYJ,CAAA,CAAOjF,CAAP,CAAZ,CAAyBf,CAAzB,CAHhB,KAKA,IAAIgG,CAAJ,EAA+C,UAA/C,GAAc,MAAOA,EAAA/E,eAArB,CAEL,IAAKF,CAAL,GAAYiF,EAAZ,CACMA,CAAA/E,eAAA,CAAsBF,CAAtB,CAAJ;CACEkF,CAAA,CAAYlF,CAAZ,CADF,CACqBqF,CAAA,CAAYJ,CAAA,CAAOjF,CAAP,CAAZ,CAAyBf,CAAzB,CADrB,CAHG,KASL,KAAKe,CAAL,GAAYiF,EAAZ,CACM/E,EAAAC,KAAA,CAAoB8E,CAApB,CAA4BjF,CAA5B,CAAJ,GACEkF,CAAA,CAAYlF,CAAZ,CADF,CACqBqF,CAAA,CAAYJ,CAAA,CAAOjF,CAAP,CAAZ,CAAyBf,CAAzB,CADrB,CAKoBkC,EAxmB1B,CAwmBa+D,CAvmBX9D,UADF,CAwmB0BD,CAxmB1B,CAGE,OAqmBW+D,CArmBJ9D,UAsmBP,OAAO8D,EAhC2C,CAmCpDG,QAASA,EAAW,CAACJ,CAAD,CAAShG,CAAT,CAAmB,CAErC,GAAK,CAAAR,CAAA,CAASwG,CAAT,CAAL,CACE,MAAOA,EAIT,KAAIJ,EAAQS,CAAAR,QAAA,CAAoBG,CAApB,CACZ,IAAe,EAAf,GAAIJ,CAAJ,CACE,MAAOU,EAAA,CAAUV,CAAV,CAGT,IAAIvF,EAAA,CAAS2F,CAAT,CAAJ,EAAwBtB,EAAA,CAAQsB,CAAR,CAAxB,CACE,KAAMO,GAAA,CAAS,MAAT,CAAN,CAIEC,IAAAA,EAAe,CAAA,CAAfA,CACAP,EAAcQ,CAAA,CAAST,CAAT,CAEEU,KAAAA,EAApB,GAAIT,CAAJ,GACEA,CACA,CADc3F,CAAA,CAAQ0F,CAAR,CAAA,CAAkB,EAAlB,CAAuBtF,MAAAiD,OAAA,CAAcS,EAAA,CAAe4B,CAAf,CAAd,CACrC,CAAAQ,CAAA,CAAe,CAAA,CAFjB,CAKAH,EAAAF,KAAA,CAAiBH,CAAjB,CACAM,EAAAH,KAAA,CAAeF,CAAf,CAEA,OAAOO,EAAA,CACHN,CAAA,CAAYF,CAAZ,CAAoBC,CAApB,CAAiCjG,CAAjC,CADG,CAEHiG,CA9BiC,CAiCvCQ,QAASA,EAAQ,CAACT,CAAD,CAAS,CACxB,OAAQ9B,EAAAhD,KAAA,CAAc8E,CAAd,CAAR,EACE,KAAK,oBAAL,CACA,KAAK,qBAAL,CACA,KAAK,qBAAL,CACA,KAAK,uBAAL,CACA,KAAK,uBAAL,CACA,KAAK,qBAAL,CACA,KAAK,4BAAL,CACA,KAAK,sBAAL,CACA,KAAK,sBAAL,CACE,MAAO,KAAIA,CAAAW,YAAJ,CAAuBP,CAAA,CAAYJ,CAAAY,OAAZ,CAAvB;AAAmDZ,CAAAa,WAAnD,CAAsEb,CAAAvF,OAAtE,CAET,MAAK,sBAAL,CAEE,GAAKyC,CAAA8C,CAAA9C,MAAL,CAAmB,CAGjB,IAAI4D,EAAS,IAAIC,WAAJ,CAAgBf,CAAAgB,WAAhB,CACbC,EAAA,IAAIC,UAAJ,CAAeJ,CAAf,CAAAG,KAAA,CAA2B,IAAIC,UAAJ,CAAelB,CAAf,CAA3B,CAEA,OAAOc,EANU,CAQnB,MAAOd,EAAA9C,MAAA,CAAa,CAAb,CAET,MAAK,kBAAL,CACA,KAAK,iBAAL,CACA,KAAK,iBAAL,CACA,KAAK,eAAL,CACE,MAAO,KAAI8C,CAAAW,YAAJ,CAAuBX,CAAAtD,QAAA,EAAvB,CAET,MAAK,iBAAL,CAGE,MAFIyE,EAEGA,CAFE,IAAIvE,MAAJ,CAAWoD,CAAAA,OAAX,CAA0BA,CAAA9B,SAAA,EAAAkD,MAAA,CAAwB,QAAxB,CAAA,CAAkC,CAAlC,CAA1B,CAEFD,CADPA,CAAAE,UACOF,CADQnB,CAAAqB,UACRF,CAAAA,CAET,MAAK,eAAL,CACE,MAAO,KAAInB,CAAAW,YAAJ,CAAuB,CAACX,CAAD,CAAvB,CAAiC,CAACsB,KAAMtB,CAAAsB,KAAP,CAAjC,CApCX,CAuCA,GAAItG,CAAA,CAAWgF,CAAAlD,UAAX,CAAJ,CACE,MAAOkD,EAAAlD,UAAA,CAAiB,CAAA,CAAjB,CAzCe,CAnGiB;AAC3C,IAAIuD,EAAc,EAAlB,CACIC,EAAY,EAChBtG,EAAA,CAAWJ,EAAA,CAAsBI,CAAtB,CAAA,CAAkCA,CAAlC,CAA6CH,GAExD,IAAIoG,CAAJ,CAAiB,CACf,GAAIpB,EAAA,CAAaoB,CAAb,CAAJ,EA/J4B,sBA+J5B,GA/JK/B,EAAAhD,KAAA,CA+J0C+E,CA/J1C,CA+JL,CACE,KAAMM,GAAA,CAAS,MAAT,CAAN,CAEF,GAAIP,CAAJ,GAAeC,CAAf,CACE,KAAMM,GAAA,CAAS,KAAT,CAAN,CAIEjG,CAAA,CAAQ2F,CAAR,CAAJ,CACEA,CAAAxF,OADF,CACuB,CADvB,CAGEG,CAAA,CAAQqF,CAAR,CAAqB,QAAQ,CAACtE,CAAD,CAAQZ,CAAR,CAAa,CAC5B,WAAZ,GAAIA,CAAJ,EACE,OAAOkF,CAAA,CAAYlF,CAAZ,CAF+B,CAA1C,CAOFsF,EAAAF,KAAA,CAAiBH,CAAjB,CACAM,EAAAH,KAAA,CAAeF,CAAf,CACA,OAAOC,EAAA,CAAYF,CAAZ,CAAoBC,CAApB,CAAiCjG,CAAjC,CArBQ,CAwBjB,MAAOoG,EAAA,CAAYJ,CAAZ,CAAoBhG,CAApB,CA7BoC,CAmJ7CuH,QAASA,GAAa,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAOD,EAAP,GAAaC,CAAb,EAAmBD,CAAnB,GAAyBA,CAAzB,EAA8BC,CAA9B,GAAoCA,CAAtC,CAkE7BC,QAASA,GAAM,CAACC,CAAD,CAAKC,CAAL,CAAS,CACtB,GAAID,CAAJ,GAAWC,CAAX,CAAe,MAAO,CAAA,CACtB,IAAW,IAAX,GAAID,CAAJ,EAA0B,IAA1B,GAAmBC,CAAnB,CAAgC,MAAO,CAAA,CAEvC,IAAID,CAAJ,GAAWA,CAAX,EAAiBC,CAAjB,GAAwBA,CAAxB,CAA4B,MAAO,CAAA,CAJb,KAKlBC,EAAK,MAAOF,EALM,CAKsB5G,CAC5C,IAAI8G,CAAJ,GADyBC,MAAOF,EAChC,EAAwB,QAAxB,GAAiBC,CAAjB,CACE,GAAIvH,CAAA,CAAQqH,CAAR,CAAJ,CAAiB,CACf,GAAK,CAAArH,CAAA,CAAQsH,CAAR,CAAL,CAAkB,MAAO,CAAA,CACzB,KAAKnH,CAAL,CAAckH,CAAAlH,OAAd,IAA6BmH,CAAAnH,OAA7B,CAAwC,CACtC,IAAKM,CAAL,CAAW,CAAX,CAAcA,CAAd,CAAoBN,CAApB,CAA4BM,CAAA,EAA5B,CACE,GAAK,CAAA2G,EAAA,CAAOC,CAAA,CAAG5G,CAAH,CAAP;AAAgB6G,CAAA,CAAG7G,CAAH,CAAhB,CAAL,CAA+B,MAAO,CAAA,CAExC,OAAO,CAAA,CAJ+B,CAFzB,CAAjB,IAQO,CAAA,GAAIyB,EAAA,CAAOmF,CAAP,CAAJ,CACL,MAAKnF,GAAA,CAAOoF,CAAP,CAAL,CACOL,EAAA,CAAcI,CAAAI,QAAA,EAAd,CAA4BH,CAAAG,QAAA,EAA5B,CADP,CAAwB,CAAA,CAEnB,IAAIpF,EAAA,CAASgF,CAAT,CAAJ,CACL,MAAKhF,GAAA,CAASiF,CAAT,CAAL,CACOD,CAAAzD,SAAA,EADP,GACyB0D,CAAA1D,SAAA,EADzB,CAA0B,CAAA,CAG1B,IAAIQ,EAAA,CAAQiD,CAAR,CAAJ,EAAmBjD,EAAA,CAAQkD,CAAR,CAAnB,EAAkCvH,EAAA,CAASsH,CAAT,CAAlC,EAAkDtH,EAAA,CAASuH,CAAT,CAAlD,EACEtH,CAAA,CAAQsH,CAAR,CADF,EACiBpF,EAAA,CAAOoF,CAAP,CADjB,EAC+BjF,EAAA,CAASiF,CAAT,CAD/B,CAC6C,MAAO,CAAA,CACpDI,EAAA,CAASC,CAAA,EACT,KAAKlH,CAAL,GAAY4G,EAAZ,CACE,GAAsB,GAAtB,GAAI5G,CAAAmH,OAAA,CAAW,CAAX,CAAJ,EAA6B,CAAAlH,CAAA,CAAW2G,CAAA,CAAG5G,CAAH,CAAX,CAA7B,CAAA,CACA,GAAK,CAAA2G,EAAA,CAAOC,CAAA,CAAG5G,CAAH,CAAP,CAAgB6G,CAAA,CAAG7G,CAAH,CAAhB,CAAL,CAA+B,MAAO,CAAA,CACtCiH,EAAA,CAAOjH,CAAP,CAAA,CAAc,CAAA,CAFd,CAIF,IAAKA,CAAL,GAAY6G,EAAZ,CACE,GAAM,EAAA7G,CAAA,GAAOiH,EAAP,CAAN,EACsB,GADtB,GACIjH,CAAAmH,OAAA,CAAW,CAAX,CADJ,EAEIzI,CAAA,CAAUmI,CAAA,CAAG7G,CAAH,CAAV,CAFJ,EAGK,CAAAC,CAAA,CAAW4G,CAAA,CAAG7G,CAAH,CAAX,CAHL,CAG0B,MAAO,CAAA,CAEnC,OAAO,CAAA,CArBF,CAwBT,MAAO,CAAA,CAvCe,CAmIxBoH,QAASA,GAAM,CAACC,CAAD,CAASC,CAAT,CAAiBzC,CAAjB,CAAwB,CACrC,MAAOwC,EAAAD,OAAA,CAAcjF,EAAAhC,KAAA,CAAWmH,CAAX,CAAmBzC,CAAnB,CAAd,CAD8B,CA0BvC0C,QAASA,GAAI,CAACC,CAAD,CAAOC,CAAP,CAAW,CACtB,IAAIC,EAA+B,CAAnB,CAAAtF,SAAA1C,OAAA,CAtBTyC,EAAAhC,KAAA,CAsB0CiC,SAtB1C,CAsBqDuF,CAtBrD,CAsBS,CAAiD,EACjE,OAAI,CAAA1H,CAAA,CAAWwH,CAAX,CAAJ,EAAwBA,CAAxB;AAAsC5F,MAAtC,CAcS4F,CAdT,CACSC,CAAAhI,OAAA,CACH,QAAQ,EAAG,CACT,MAAO0C,UAAA1C,OAAA,CACH+H,CAAAG,MAAA,CAASJ,CAAT,CAAeJ,EAAA,CAAOM,CAAP,CAAkBtF,SAAlB,CAA6B,CAA7B,CAAf,CADG,CAEHqF,CAAAG,MAAA,CAASJ,CAAT,CAAeE,CAAf,CAHK,CADR,CAMH,QAAQ,EAAG,CACT,MAAOtF,UAAA1C,OAAA,CACH+H,CAAAG,MAAA,CAASJ,CAAT,CAAepF,SAAf,CADG,CAEHqF,CAAAtH,KAAA,CAAQqH,CAAR,CAHK,CATK,CAqBxBK,QAASA,GAAc,CAAC7H,CAAD,CAAMY,CAAN,CAAa,CAClC,IAAIkH,EAAMlH,CAES,SAAnB,GAAI,MAAOZ,EAAX,EAAiD,GAAjD,GAA+BA,CAAAmH,OAAA,CAAW,CAAX,CAA/B,EAA0E,GAA1E,GAAwDnH,CAAAmH,OAAA,CAAW,CAAX,CAAxD,CACEW,CADF,CACQnC,IAAAA,EADR,CAEWrG,EAAA,CAASsB,CAAT,CAAJ,CACLkH,CADK,CACC,SADD,CAEIlH,CAAJ,EAActC,CAAAyJ,SAAd,GAAkCnH,CAAlC,CACLkH,CADK,CACC,WADD,CAEInE,EAAA,CAAQ/C,CAAR,CAFJ,GAGLkH,CAHK,CAGC,QAHD,CAMP,OAAOA,EAb2B,CAqDpCE,QAASA,GAAM,CAAC3I,CAAD,CAAM4I,CAAN,CAAc,CAC3B,GAAI,CAAA7E,CAAA,CAAY/D,CAAZ,CAAJ,CAIA,MAHKH,EAAA,CAAS+I,CAAT,CAGE,GAFLA,CAEK,CAFIA,CAAA,CAAS,CAAT,CAAa,IAEjB,EAAAC,IAAAC,UAAA,CAAe9I,CAAf,CAAoBwI,EAApB,CAAoCI,CAApC,CALoB,CAqB7BG,QAASA,GAAQ,CAACC,CAAD,CAAO,CACtB,MAAO7I,EAAA,CAAS6I,CAAT,CAAA,CACDH,IAAAI,MAAA,CAAWD,CAAX,CADC,CAEDA,CAHgB,CAQxBE,QAASA,GAAgB,CAACC,CAAD,CAAWC,CAAX,CAAqB,CAG5CD,CAAA,CAAWA,CAAAE,QAAA,CAAiBC,EAAjB,CAA6B,EAA7B,CACX,KAAIC,EAA0BlH,IAAA4G,MAAA,CAAW,wBAAX;AAAsCE,CAAtC,CAA1BI,CAA4E,GAChF,OAAOC,EAAA,CAAYD,CAAZ,CAAA,CAAuCH,CAAvC,CAAkDG,CALb,CAS9CE,QAASA,GAAc,CAACC,CAAD,CAAOC,CAAP,CAAgB,CACrCD,CAAA,CAAO,IAAIrH,IAAJ,CAASqH,CAAA/B,QAAA,EAAT,CACP+B,EAAAE,WAAA,CAAgBF,CAAAG,WAAA,EAAhB,CAAoCF,CAApC,CACA,OAAOD,EAH8B,CAOvCI,QAASA,GAAsB,CAACJ,CAAD,CAAOP,CAAP,CAAiBY,CAAjB,CAA0B,CACvDA,CAAA,CAAUA,CAAA,CAAW,EAAX,CAAe,CACzB,KAAIC,EAAqBN,CAAAO,kBAAA,EACrBC,EAAAA,CAAiBhB,EAAA,CAAiBC,CAAjB,CAA2Ba,CAA3B,CACrB,OAAOP,GAAA,CAAeC,CAAf,CAAqBK,CAArB,EAAgCG,CAAhC,CAAiDF,CAAjD,EAJgD,CAWzDG,QAASA,GAAW,CAAC/E,CAAD,CAAU,CAC5BA,CAAA,CAAUhF,CAAA,CAAOgF,CAAP,CAAAxC,MAAA,EAAAwH,MAAA,EACV,KAAIC,EAAWjK,CAAA,CAAO,aAAP,CAAAkK,OAAA,CAA6BlF,CAA7B,CAAAmF,KAAA,EACf,IAAI,CACF,MAAOnF,EAAA,CAAQ,CAAR,CAAAoF,SAAA,GAAwBC,EAAxB,CAAyCpF,CAAA,CAAUgF,CAAV,CAAzC,CACHA,CAAArD,MAAA,CACQ,YADR,CAAA,CACsB,CADtB,CAAAqC,QAAA,CAEU,YAFV,CAEwB,QAAQ,CAACrC,CAAD,CAAQvE,CAAR,CAAkB,CAAC,MAAO,GAAP,CAAa4C,CAAA,CAAU5C,CAAV,CAAd,CAFlD,CAFF,CAKF,MAAOiI,CAAP,CAAU,CACV,MAAOrF,EAAA,CAAUgF,CAAV,CADG,CARgB,CAyB9BM,QAASA,GAAqB,CAACpJ,CAAD,CAAQ,CACpC,GAAI,CACF,MAAOqJ,mBAAA,CAAmBrJ,CAAnB,CADL,CAEF,MAAOmJ,CAAP,CAAU,EAHwB,CAatCG,QAASA,GAAa,CAAYC,CAAZ,CAAsB,CAC1C,IAAI9K,EAAM,EACVQ,EAAA,CAAQ0E,CAAC4F,CAAD5F,EAAa,EAAbA,OAAA,CAAuB,GAAvB,CAAR;AAAqC,QAAQ,CAAC4F,CAAD,CAAW,CAAA,IAClDC,CADkD,CACtCpK,CADsC,CACjC8H,CACjBqC,EAAJ,GACEnK,CAOA,CAPMmK,CAON,CAPiBA,CAAAzB,QAAA,CAAiB,KAAjB,CAAuB,KAAvB,CAOjB,CANA0B,CAMA,CANaD,CAAArF,QAAA,CAAiB,GAAjB,CAMb,CALoB,EAKpB,GALIsF,CAKJ,GAJEpK,CACA,CADMmK,CAAAE,UAAA,CAAmB,CAAnB,CAAsBD,CAAtB,CACN,CAAAtC,CAAA,CAAMqC,CAAAE,UAAA,CAAmBD,CAAnB,CAAgC,CAAhC,CAGR,EADApK,CACA,CADMgK,EAAA,CAAsBhK,CAAtB,CACN,CAAItB,CAAA,CAAUsB,CAAV,CAAJ,GACE8H,CACA,CADMpJ,CAAA,CAAUoJ,CAAV,CAAA,CAAiBkC,EAAA,CAAsBlC,CAAtB,CAAjB,CAA8C,CAAA,CACpD,CAAK5H,EAAAC,KAAA,CAAoBd,CAApB,CAAyBW,CAAzB,CAAL,CAEWT,CAAA,CAAQF,CAAA,CAAIW,CAAJ,CAAR,CAAJ,CACLX,CAAA,CAAIW,CAAJ,CAAAoF,KAAA,CAAc0C,CAAd,CADK,CAGLzI,CAAA,CAAIW,CAAJ,CAHK,CAGM,CAACX,CAAA,CAAIW,CAAJ,CAAD,CAAU8H,CAAV,CALb,CACEzI,CAAA,CAAIW,CAAJ,CADF,CACa8H,CAHf,CARF,CAFsD,CAAxD,CAsBA,OAAOzI,EAxBmC,CA2B5CiL,QAASA,GAAU,CAACjL,CAAD,CAAM,CACvB,IAAIkL,EAAQ,EACZ1K,EAAA,CAAQR,CAAR,CAAa,QAAQ,CAACuB,CAAD,CAAQZ,CAAR,CAAa,CAC5BT,CAAA,CAAQqB,CAAR,CAAJ,CACEf,CAAA,CAAQe,CAAR,CAAe,QAAQ,CAAC4J,CAAD,CAAa,CAClCD,CAAAnF,KAAA,CAAWqF,EAAA,CAAezK,CAAf,CAAoB,CAAA,CAApB,CAAX,EAC2B,CAAA,CAAf,GAAAwK,CAAA,CAAsB,EAAtB,CAA2B,GAA3B,CAAiCC,EAAA,CAAeD,CAAf,CAA2B,CAAA,CAA3B,CAD7C,EADkC,CAApC,CADF,CAMAD,CAAAnF,KAAA,CAAWqF,EAAA,CAAezK,CAAf,CAAoB,CAAA,CAApB,CAAX,EACsB,CAAA,CAAV,GAAAY,CAAA,CAAiB,EAAjB,CAAsB,GAAtB,CAA4B6J,EAAA,CAAe7J,CAAf,CAAsB,CAAA,CAAtB,CADxC,EAPgC,CAAlC,CAWA,OAAO2J,EAAA7K,OAAA,CAAe6K,CAAAG,KAAA,CAAW,GAAX,CAAf,CAAiC,EAbjB,CA4BzBC,QAASA,GAAgB,CAAC7C,CAAD,CAAM,CAC7B,MAAO2C,GAAA,CAAe3C,CAAf,CAAoB,CAAA,CAApB,CAAAY,QAAA,CACY,OADZ,CACqB,GADrB,CAAAA,QAAA,CAEY,OAFZ,CAEqB,GAFrB,CAAAA,QAAA,CAGY,OAHZ,CAGqB,GAHrB,CADsB,CAmB/B+B,QAASA,GAAc,CAAC3C,CAAD;AAAM8C,CAAN,CAAuB,CAC5C,MAAOC,mBAAA,CAAmB/C,CAAnB,CAAAY,QAAA,CACY,OADZ,CACqB,GADrB,CAAAA,QAAA,CAEY,OAFZ,CAEqB,GAFrB,CAAAA,QAAA,CAGY,MAHZ,CAGoB,GAHpB,CAAAA,QAAA,CAIY,OAJZ,CAIqB,GAJrB,CAAAA,QAAA,CAKY,OALZ,CAKqB,GALrB,CAAAA,QAAA,CAMY,MANZ,CAMqBkC,CAAA,CAAkB,KAAlB,CAA0B,GAN/C,CADqC,CAY9CE,QAASA,GAAc,CAACrG,CAAD,CAAUsG,CAAV,CAAkB,CAAA,IACnC5G,CADmC,CAC7B1D,CAD6B,CAC1BY,EAAK2J,EAAAtL,OAClB,KAAKe,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBY,CAAhB,CAAoB,EAAEZ,CAAtB,CAEE,GADA0D,CACI,CADG6G,EAAA,CAAevK,CAAf,CACH,CADuBsK,CACvB,CAAAvL,CAAA,CAAS2E,CAAT,CAAgBM,CAAAwG,aAAA,CAAqB9G,CAArB,CAAhB,CAAJ,CACE,MAAOA,EAGX,OAAO,KARgC,CA6MzC+G,QAASA,GAAW,CAACzG,CAAD,CAAU0G,CAAV,CAAqB,CAAA,IACnCC,CADmC,CAEnCC,CAFmC,CAGnC7M,EAAS,EAGbqB,EAAA,CAAQmL,EAAR,CAAwB,QAAQ,CAACM,CAAD,CAAS,CACnCC,CAAAA,EAAgB,KAEfH,EAAAA,CAAL,EAAmB3G,CAAA+G,aAAnB,EAA2C/G,CAAA+G,aAAA,CAAqBD,CAArB,CAA3C,GACEH,CACA,CADa3G,CACb,CAAA4G,CAAA,CAAS5G,CAAAwG,aAAA,CAAqBM,CAArB,CAFX,CAHuC,CAAzC,CAQA1L,EAAA,CAAQmL,EAAR,CAAwB,QAAQ,CAACM,CAAD,CAAS,CACnCC,CAAAA,EAAgB,KACpB,KAAIE,CAECL,EAAAA,CAAL,GAAoBK,CAApB,CAAgChH,CAAAiH,cAAA,CAAsB,GAAtB,CAA4BH,CAAA7C,QAAA,CAAa,GAAb,CAAkB,KAAlB,CAA5B,CAAuD,GAAvD,CAAhC,IACE0C,CACA,CADaK,CACb,CAAAJ,CAAA,CAASI,CAAAR,aAAA,CAAuBM,CAAvB,CAFX,CAJuC,CAAzC,CASIH;CAAJ,GACOO,EAAL,EAKAnN,CAAAoN,SACA,CAD8D,IAC9D,GADkBd,EAAA,CAAeM,CAAf,CAA2B,WAA3B,CAClB,CAAAD,CAAA,CAAUC,CAAV,CAAsBC,CAAA,CAAS,CAACA,CAAD,CAAT,CAAoB,EAA1C,CAA8C7M,CAA9C,CANA,EACEF,CAAAuN,QAAAC,MAAA,CAAqB,4HAArB,CAFJ,CAvBuC,CA6FzCX,QAASA,GAAS,CAAC1G,CAAD,CAAUsH,CAAV,CAAmBvN,CAAnB,CAA2B,CACtCC,CAAA,CAASD,CAAT,CAAL,GAAuBA,CAAvB,CAAgC,EAAhC,CAIAA,EAAA,CAAS0D,CAAA,CAHW8J,CAClBJ,SAAU,CAAA,CADQI,CAGX,CAAsBxN,CAAtB,CACT,KAAIyN,EAAcA,QAAQ,EAAG,CAC3BxH,CAAA,CAAUhF,CAAA,CAAOgF,CAAP,CAEV,IAAIA,CAAAyH,SAAA,EAAJ,CAAwB,CACtB,IAAIzI,EAAOgB,CAAA,CAAQ,CAAR,CAAD,GAAgBnG,CAAAyJ,SAAhB,CAAmC,UAAnC,CAAgDyB,EAAA,CAAY/E,CAAZ,CAE1D,MAAMe,GAAA,CACF,SADE,CAGF/B,CAAAiF,QAAA,CAAY,GAAZ,CAAgB,MAAhB,CAAAA,QAAA,CAAgC,GAAhC,CAAoC,MAApC,CAHE,CAAN,CAHsB,CASxBqD,CAAA,CAAUA,CAAV,EAAqB,EACrBA,EAAAI,QAAA,CAAgB,CAAC,UAAD,CAAa,QAAQ,CAACC,CAAD,CAAW,CAC9CA,CAAAxL,MAAA,CAAe,cAAf,CAA+B6D,CAA/B,CAD8C,CAAhC,CAAhB,CAIIjG,EAAA6N,iBAAJ,EAEEN,CAAA3G,KAAA,CAAa,CAAC,kBAAD;AAAqB,QAAQ,CAACkH,CAAD,CAAmB,CAC3DA,CAAAD,iBAAA,CAAkC,CAAA,CAAlC,CAD2D,CAAhD,CAAb,CAKFN,EAAAI,QAAA,CAAgB,IAAhB,CACID,EAAAA,CAAWK,EAAA,CAAeR,CAAf,CAAwBvN,CAAAoN,SAAxB,CACfM,EAAAM,OAAA,CAAgB,CAAC,YAAD,CAAe,cAAf,CAA+B,UAA/B,CAA2C,WAA3C,CACbC,QAAuB,CAACC,CAAD,CAAQjI,CAAR,CAAiBkI,CAAjB,CAA0BT,CAA1B,CAAoC,CAC1DQ,CAAAE,OAAA,CAAa,QAAQ,EAAG,CACtBnI,CAAAoI,KAAA,CAAa,WAAb,CAA0BX,CAA1B,CACAS,EAAA,CAAQlI,CAAR,CAAA,CAAiBiI,CAAjB,CAFsB,CAAxB,CAD0D,CAD9C,CAAhB,CAQA,OAAOR,EAlCoB,CAA7B,CAqCIY,EAAuB,wBArC3B,CAsCIC,EAAqB,sBAErBzO,EAAJ,EAAcwO,CAAA9I,KAAA,CAA0B1F,CAAAiN,KAA1B,CAAd,GACE/M,CAAA6N,iBACA,CAD0B,CAAA,CAC1B,CAAA/N,CAAAiN,KAAA,CAAcjN,CAAAiN,KAAA7C,QAAA,CAAoBoE,CAApB,CAA0C,EAA1C,CAFhB,CAKA,IAAIxO,CAAJ,EAAe,CAAAyO,CAAA/I,KAAA,CAAwB1F,CAAAiN,KAAxB,CAAf,CACE,MAAOU,EAAA,EAGT3N,EAAAiN,KAAA,CAAcjN,CAAAiN,KAAA7C,QAAA,CAAoBqE,CAApB,CAAwC,EAAxC,CACdC,GAAAC,gBAAA,CAA0BC,QAAQ,CAACC,CAAD,CAAe,CAC/CtN,CAAA,CAAQsN,CAAR,CAAsB,QAAQ,CAAC9B,CAAD,CAAS,CACrCU,CAAA3G,KAAA,CAAaiG,CAAb,CADqC,CAAvC,CAGA,OAAOY,EAAA,EAJwC,CAO7ChM,EAAA,CAAW+M,EAAAI,wBAAX,CAAJ;AACEJ,EAAAI,wBAAA,EAhEyC,CA8E7CC,QAASA,GAAmB,EAAG,CAC7B/O,CAAAiN,KAAA,CAAc,uBAAd,CAAwCjN,CAAAiN,KACxCjN,EAAAgP,SAAAC,OAAA,EAF6B,CAa/BC,QAASA,GAAc,CAACC,CAAD,CAAc,CAC/BvB,CAAAA,CAAWc,EAAAvI,QAAA,CAAgBgJ,CAAhB,CAAAvB,SAAA,EACf,IAAKA,CAAAA,CAAL,CACE,KAAM1G,GAAA,CAAS,MAAT,CAAN,CAGF,MAAO0G,EAAAwB,IAAA,CAAa,eAAb,CAN4B,CAUrCC,QAASA,GAAU,CAACpC,CAAD,CAAOqC,CAAP,CAAkB,CACnCA,CAAA,CAAYA,CAAZ,EAAyB,GACzB,OAAOrC,EAAA7C,QAAA,CAAamF,EAAb,CAAgC,QAAQ,CAACC,CAAD,CAASC,CAAT,CAAc,CAC3D,OAAQA,CAAA,CAAMH,CAAN,CAAkB,EAA1B,EAAgCE,CAAAE,YAAA,EAD2B,CAAtD,CAF4B,CAQrCC,QAASA,GAAU,EAAG,CACpB,IAAIC,CAEJ,IAAIC,CAAAA,EAAJ,CAAA,CAKA,IAAIC,EAASC,EAAA,EASb,EARAC,EAQA,CARSlL,CAAA,CAAYgL,CAAZ,CAAA,CAAsB9P,CAAAgQ,OAAtB,CACCF,CAAD,CACsB9P,CAAA,CAAO8P,CAAP,CADtB,CAAsBzI,IAAAA,EAO/B,GAAc2I,EAAA7G,GAAA8G,GAAd,EACE9O,CACA,CADS6O,EACT,CAAApM,CAAA,CAAOoM,EAAA7G,GAAP,CAAkB,CAChBiF,MAAO8B,EAAA9B,MADS,CAEhB+B,aAAcD,EAAAC,aAFE,CAGhBC,WAA8BF,EAADE,WAHb,CAIhBxC,SAAUsC,EAAAtC,SAJM,CAKhByC,cAAeH,EAAAG,cALC,CAAlB,CAFF;AAUElP,CAVF,CAUWmP,CAMXV,EAAA,CAAoBzO,CAAAoP,UACpBpP,EAAAoP,UAAA,CAAmBC,QAAQ,CAACC,CAAD,CAAQ,CAEjC,IADA,IAAIC,CAAJ,CACSvO,EAAI,CADb,CACgBwO,CAAhB,CAA2C,IAA3C,GAAuBA,CAAvB,CAA8BF,CAAA,CAAMtO,CAAN,CAA9B,EAAiDA,CAAA,EAAjD,CAEE,CADAuO,CACA,CADSA,CAACvP,CAAAyP,MAAA,CAAaD,CAAb,CAADD,EAAuB,EAAvBA,QACT,GAAcA,CAAAG,SAAd,EACE1P,CAAA,CAAOwP,CAAP,CAAAG,eAAA,CAA4B,UAA5B,CAGJlB,EAAA,CAAkBa,CAAlB,CARiC,CAWnC/B,GAAAvI,QAAA,CAAkBhF,CAGlB0O,GAAA,CAAkB,CAAA,CA7ClB,CAHoB,CAmEtBkB,QAASA,GAA0C,EAAG,CACpDT,CAAAU,uBAAA,CAAgC,CAAA,CADoB,CAOtDC,QAASA,GAAS,CAACC,CAAD,CAAMjE,CAAN,CAAYkE,CAAZ,CAAoB,CACpC,GAAKD,CAAAA,CAAL,CACE,KAAMhK,GAAA,CAAS,MAAT,CAA6C+F,CAA7C,EAAqD,GAArD,CAA4DkE,CAA5D,EAAsE,UAAtE,CAAN,CAEF,MAAOD,EAJ6B,CAOtCE,QAASA,GAAW,CAACF,CAAD,CAAMjE,CAAN,CAAYoE,CAAZ,CAAmC,CACjDA,CAAJ,EAA6BpQ,CAAA,CAAQiQ,CAAR,CAA7B,GACIA,CADJ,CACUA,CAAA,CAAIA,CAAA9P,OAAJ,CAAiB,CAAjB,CADV,CAIA6P,GAAA,CAAUtP,CAAA,CAAWuP,CAAX,CAAV,CAA2BjE,CAA3B,CAAiC,sBAAjC,EACKiE,CAAA,EAAsB,QAAtB,GAAO,MAAOA,EAAd,CAAiCA,CAAA5J,YAAA2F,KAAjC,EAAyD,QAAzD,CAAoE,MAAOiE,EADhF,EAEA,OAAOA,EAP8C,CAevDI,QAASA,GAAuB,CAACrE,CAAD,CAAOxL,CAAP,CAAgB,CAC9C,GAAa,gBAAb,GAAIwL,CAAJ,CACE,KAAM/F,GAAA,CAAS,SAAT;AAA8DzF,CAA9D,CAAN,CAF4C,CAchD8P,QAASA,GAAM,CAACxQ,CAAD,CAAMyQ,CAAN,CAAYC,CAAZ,CAA2B,CACxC,GAAKD,CAAAA,CAAL,CAAW,MAAOzQ,EACdkB,EAAAA,CAAOuP,CAAAvL,MAAA,CAAW,GAAX,CAKX,KAJA,IAAIvE,CAAJ,CACIgQ,EAAe3Q,CADnB,CAEI4Q,EAAM1P,CAAAb,OAFV,CAISe,EAAI,CAAb,CAAgBA,CAAhB,CAAoBwP,CAApB,CAAyBxP,CAAA,EAAzB,CACET,CACA,CADMO,CAAA,CAAKE,CAAL,CACN,CAAIpB,CAAJ,GACEA,CADF,CACQ,CAAC2Q,CAAD,CAAgB3Q,CAAhB,EAAqBW,CAArB,CADR,CAIF,OAAK+P,CAAAA,CAAL,EAAsB9P,CAAA,CAAWZ,CAAX,CAAtB,CACSkI,EAAA,CAAKyI,CAAL,CAAmB3Q,CAAnB,CADT,CAGOA,CAhBiC,CAwB1C6Q,QAASA,GAAa,CAACC,CAAD,CAAQ,CAM5B,IAJA,IAAIlM,EAAOkM,CAAA,CAAM,CAAN,CAAX,CACIC,EAAUD,CAAA,CAAMA,CAAAzQ,OAAN,CAAqB,CAArB,CADd,CAEI2Q,CAFJ,CAIS5P,EAAI,CAAb,CAAgBwD,CAAhB,GAAyBmM,CAAzB,GAAqCnM,CAArC,CAA4CA,CAAAqM,YAA5C,EAA+D7P,CAAA,EAA/D,CACE,GAAI4P,CAAJ,EAAkBF,CAAA,CAAM1P,CAAN,CAAlB,GAA+BwD,CAA/B,CACOoM,CAGL,GAFEA,CAEF,CAFe5Q,CAAA,CAAO0C,EAAAhC,KAAA,CAAWgQ,CAAX,CAAkB,CAAlB,CAAqB1P,CAArB,CAAP,CAEf,EAAA4P,CAAAjL,KAAA,CAAgBnB,CAAhB,CAIJ,OAAOoM,EAAP,EAAqBF,CAfO,CA8B9BjJ,QAASA,EAAS,EAAG,CACnB,MAAOvH,OAAAiD,OAAA,CAAc,IAAd,CADY,CAIrBuF,QAASA,GAAS,CAACvH,CAAD,CAAQ,CACxB,GAAa,IAAb,EAAIA,CAAJ,CACE,MAAO,EAET,QAAQ,MAAOA,EAAf,EACE,KAAK,QAAL,CACE,KACF,MAAK,QAAL,CACEA,CAAA,CAAQ,EAAR,CAAaA,CACb,MACF,SAIIA,CAAA,CAHE,CAAAsC,EAAA,CAAkBtC,CAAlB,CAAJ,EAAiCrB,CAAA,CAAQqB,CAAR,CAAjC,EAAoDa,EAAA,CAAOb,CAAP,CAApD,CAGUoH,EAAA,CAAOpH,CAAP,CAHV,CACUA,CAAAuC,SAAA,EARd,CAcA,MAAOvC,EAlBiB,CAqC1B2P,QAASA,GAAiB,CAACjS,CAAD,CAAS,CAKjCkS,QAASA,EAAM,CAACnR,CAAD;AAAMkM,CAAN,CAAYkF,CAAZ,CAAqB,CAClC,MAAOpR,EAAA,CAAIkM,CAAJ,CAAP,GAAqBlM,CAAA,CAAIkM,CAAJ,CAArB,CAAiCkF,CAAA,EAAjC,CADkC,CAHpC,IAAIC,EAAkBvR,CAAA,CAAO,WAAP,CAAtB,CACIqG,EAAWrG,CAAA,CAAO,IAAP,CAMX6N,EAAAA,CAAUwD,CAAA,CAAOlS,CAAP,CAAe,SAAf,CAA0BqB,MAA1B,CAGdqN,EAAA2D,SAAA,CAAmB3D,CAAA2D,SAAnB,EAAuCxR,CAEvC,OAAOqR,EAAA,CAAOxD,CAAP,CAAgB,QAAhB,CAA0B,QAAQ,EAAG,CAE1C,IAAIjB,EAAU,EAqDd,OAAOV,SAAe,CAACE,CAAD,CAAOqF,CAAP,CAAiBC,CAAjB,CAA2B,CAE/C,IAAIC,EAAO,EAGT,IAAa,gBAAb,GAKsBvF,CALtB,CACE,KAAM/F,EAAA,CAAS,SAAT,CAIoBzF,QAJpB,CAAN,CAKA6Q,CAAJ,EAAgB7E,CAAA7L,eAAA,CAAuBqL,CAAvB,CAAhB,GACEQ,CAAA,CAAQR,CAAR,CADF,CACkB,IADlB,CAGA,OAAOiF,EAAA,CAAOzE,CAAP,CAAgBR,CAAhB,CAAsB,QAAQ,EAAG,CAqStCwF,QAASA,EAAW,CAACC,CAAD,CAAWC,CAAX,CAAmBC,CAAnB,CAAiCC,CAAjC,CAAwC,CACrDA,CAAL,GAAYA,CAAZ,CAAoBC,CAApB,CACA,OAAO,SAAQ,EAAG,CAChBD,CAAA,CAAMD,CAAN,EAAsB,MAAtB,CAAA,CAA8B,CAACF,CAAD,CAAWC,CAAX,CAAmB7O,SAAnB,CAA9B,CACA,OAAOiP,EAFS,CAFwC,CAa5DC,QAASA,EAA2B,CAACN,CAAD,CAAWC,CAAX,CAAmBE,CAAnB,CAA0B,CACvDA,CAAL,GAAYA,CAAZ,CAAoBC,CAApB,CACA,OAAO,SAAQ,CAACG,CAAD,CAAaC,CAAb,CAA8B,CACvCA,CAAJ,EAAuBvR,CAAA,CAAWuR,CAAX,CAAvB,GAAoDA,CAAAC,aAApD,CAAmFlG,CAAnF,CACA4F,EAAA/L,KAAA,CAAW,CAAC4L,CAAD,CAAWC,CAAX,CAAmB7O,SAAnB,CAAX,CACA,OAAOiP,EAHoC,CAFe,CAjT9D,GAAKT,CAAAA,CAAL,CACE,KAAMF,EAAA,CAAgB,OAAhB;AAEiDnF,CAFjD,CAAN,CAMF,IAAI6F,EAAc,EAAlB,CAGIM,EAAe,EAHnB,CAMIC,EAAY,EANhB,CAQInT,EAASuS,CAAA,CAAY,WAAZ,CAAyB,QAAzB,CAAmC,MAAnC,CAA2CW,CAA3C,CARb,CAWIL,EAAiB,CAEnBO,aAAcR,CAFK,CAGnBS,cAAeH,CAHI,CAInBI,WAAYH,CAJO,CAoCnBb,KAAMA,QAAQ,CAAClQ,CAAD,CAAQ,CACpB,GAAIlC,CAAA,CAAUkC,CAAV,CAAJ,CAAsB,CACpB,GAAK,CAAAnC,CAAA,CAASmC,CAAT,CAAL,CAAsB,KAAM4E,EAAA,CAAS,MAAT,CAAuD,OAAvD,CAAN,CACtBsL,CAAA,CAAOlQ,CACP,OAAO,KAHa,CAKtB,MAAOkQ,EANa,CApCH,CAsDnBF,SAAUA,CAtDS,CAgEnBrF,KAAMA,CAhEa,CA6EnByF,SAAUM,CAAA,CAA4B,UAA5B,CAAwC,UAAxC,CA7ES,CAwFnBb,QAASa,CAAA,CAA4B,UAA5B,CAAwC,SAAxC,CAxFU,CAmGnBS,QAAST,CAAA,CAA4B,UAA5B,CAAwC,SAAxC,CAnGU,CA8GnB1Q,MAAOmQ,CAAA,CAAY,UAAZ,CAAwB,OAAxB,CA9GY,CA0HnBiB,SAAUjB,CAAA,CAAY,UAAZ,CAAwB,UAAxB,CAAoC,SAApC,CA1HS,CAsInBkB,UAAWX,CAAA,CAA4B,UAA5B,CAAwC,WAAxC,CAAqDI,CAArD,CAtIQ,CAwKnBQ,UAAWZ,CAAA,CAA4B,kBAA5B,CAAgD,UAAhD,CAxKQ,CA0LnBa,OAAQb,CAAA,CAA4B,iBAA5B,CAA+C,UAA/C,CA1LW,CAsMnB5C,WAAY4C,CAAA,CAA4B,qBAA5B;AAAmD,UAAnD,CAtMO,CAmNnBc,UAAWd,CAAA,CAA4B,kBAA5B,CAAgD,WAAhD,CAnNQ,CAiOnBe,UAAWf,CAAA,CAA4B,kBAA5B,CAAgD,WAAhD,CAjOQ,CAoPnB9S,OAAQA,CApPW,CAgQnB8T,IAAKA,QAAQ,CAACC,CAAD,CAAQ,CACnBZ,CAAAvM,KAAA,CAAemN,CAAf,CACA,OAAO,KAFY,CAhQF,CAsQjB1B,EAAJ,EACErS,CAAA,CAAOqS,CAAP,CAGF,OAAOQ,EA7R+B,CAAjC,CAdwC,CAvDP,CAArC,CAd0B,CA0ZnCmB,QAASA,GAAW,CAAChR,CAAD,CAAMR,CAAN,CAAW,CAC7B,GAAIzB,CAAA,CAAQiC,CAAR,CAAJ,CAAkB,CAChBR,CAAA,CAAMA,CAAN,EAAa,EAEb,KAHgB,IAGPP,EAAI,CAHG,CAGAY,EAAKG,CAAA9B,OAArB,CAAiCe,CAAjC,CAAqCY,CAArC,CAAyCZ,CAAA,EAAzC,CACEO,CAAA,CAAIP,CAAJ,CAAA,CAASe,CAAA,CAAIf,CAAJ,CAJK,CAAlB,IAMO,IAAIhC,CAAA,CAAS+C,CAAT,CAAJ,CAGL,IAASxB,CAAT,GAFAgB,EAEgBQ,CAFVR,CAEUQ,EAFH,EAEGA,CAAAA,CAAhB,CACE,GAAwB,GAAxB,GAAMxB,CAAAmH,OAAA,CAAW,CAAX,CAAN,EAAiD,GAAjD,GAA+BnH,CAAAmH,OAAA,CAAW,CAAX,CAA/B,CACEnG,CAAA,CAAIhB,CAAJ,CAAA,CAAWwB,CAAA,CAAIxB,CAAJ,CAKjB,OAAOgB,EAAP,EAAcQ,CAjBe,CAsB/BiR,QAASA,GAAe,CAACpT,CAAD,CAAMJ,CAAN,CAAgB,CACtC,IAAIyT,EAAO,EAKP7T,GAAA,CAAsBI,CAAtB,CAAJ,GAGEI,CAHF,CAGQ2N,EAAAhI,KAAA,CAAa3F,CAAb,CAAkB,IAAlB,CAAwBJ,CAAxB,CAHR,CAKA,OAAOiJ,KAAAC,UAAA,CAAe9I,CAAf,CAAoB,QAAQ,CAACW,CAAD,CAAM8H,CAAN,CAAW,CAC5CA,CAAA,CAAMD,EAAA,CAAe7H,CAAf,CAAoB8H,CAApB,CACN,IAAIrJ,CAAA,CAASqJ,CAAT,CAAJ,CAAmB,CAEjB,GAAyB,CAAzB,EAAI4K,CAAA5N,QAAA,CAAagD,CAAb,CAAJ,CAA4B,MAAO,KAEnC4K,EAAAtN,KAAA,CAAU0C,CAAV,CAJiB,CAMnB,MAAOA,EARqC,CAAvC,CAX+B,CAhnFtB;AAixFlB6K,QAASA,GAAkB,CAAC3F,CAAD,CAAU,CACnC9K,CAAA,CAAO8K,CAAP,CAAgB,CACd,oBAAuBzO,EADT,CAEd,UAAa4M,EAFC,CAGd,KAAQnG,EAHM,CAId,OAAU9C,CAJI,CAKd,MAASG,EALK,CAMd,OAAUsE,EANI,CAOd,QAAWlH,CAPG,CAQd,QAAWI,CARG,CASd,SAAY0M,EATE,CAUd,KAAQ1J,CAVM,CAWd,KAAQ0E,EAXM,CAYd,OAAUS,EAZI,CAad,SAAYI,EAbE,CAcd,SAAYtF,EAdE,CAed,YAAeM,CAfD,CAgBd,UAAa1E,CAhBC,CAiBd,SAAYc,CAjBE,CAkBd,WAAcS,CAlBA,CAmBd,SAAYxB,CAnBE,CAoBd,SAAYS,CApBE,CAqBd,UAAa8C,EArBC,CAsBd,QAAWzC,CAtBG,CAuBd,QAAWqT,EAvBG,CAwBd,OAAUnR,EAxBI,CAyBd,UAAa,CAACoR,UAAW,CAAZ,CAzBC,CA0Bd,eAAkBrF,EA1BJ,CA2Bd,oBAAuBH,EA3BT,CA4Bd,2CAA8CgC,EA5BhC,CA6Bd,SAAYlQ,CA7BE,CA8Bd,MAAS2T,EA9BK,CA+Bd,mBAAsBnI,EA/BR,CAgCd,iBAAoBF,EAhCN,CAiCd,YAAe/F,CAjCD,CAkCd,YAAeyD,EAlCD,CAmCd,YAAe4K,EAnCD,CAAhB,CAsCAC;EAAA,CAAgBzC,EAAA,CAAkBjS,CAAlB,CAEhB0U,GAAA,CAAc,IAAd,CAAoB,CAAC,UAAD,CAApB,CAAkC,CAAC,UAAD,CAChCC,QAAiB,CAAC7G,CAAD,CAAW,CAE1BA,CAAA4E,SAAA,CAAkB,CAChBkC,cAAeC,EADC,CAAlB,CAGA/G,EAAA4E,SAAA,CAAkB,UAAlB,CAA8BoC,EAA9B,CAAAhB,UAAA,CACY,CACN3L,EAAG4M,EADG,CAENC,MAAOC,EAFD,CAGNC,SAAUD,EAHJ,CAINE,KAAMC,EAJA,CAKNC,OAAQC,EALF,CAMNC,OAAQC,EANF,CAONC,OAAQC,EAPF,CAQNC,OAAQC,EARF,CASNC,WAAYC,EATN,CAUNC,eAAgBC,EAVV,CAWNC,QAASC,EAXH,CAYNC,YAAaC,EAZP,CAaNC,WAAYC,EAbN,CAcNC,QAASC,EAdH,CAeNC,aAAcC,EAfR,CAgBNC,OAAQC,EAhBF,CAiBNC,OAAQC,EAjBF,CAkBNC,KAAMC,EAlBA,CAmBNC,UAAWC,EAnBL,CAoBNC,OAAQC,EApBF,CAqBNC,cAAeC,EArBT,CAsBNC,YAAaC,EAtBP,CAuBNC,MAAOC,EAvBD,CAwBNC,SAAUC,EAxBJ,CAyBNC,OAAQC,EAzBF,CA0BNC,QAASC,EA1BH,CA2BNC,SAAUC,EA3BJ,CA4BNC,aAAcC,EA5BR,CA6BNC,gBAAiBC,EA7BX,CA8BNC,UAAWC,EA9BL,CA+BNC,aAAcC,EA/BR,CAgCNC,QAASC,EAhCH;AAiCNC,OAAQC,EAjCF,CAkCNC,SAAUC,EAlCJ,CAmCNC,QAASC,EAnCH,CAoCNC,UAAWD,EApCL,CAqCNE,SAAUC,EArCJ,CAsCNC,WAAYD,EAtCN,CAuCNE,UAAWC,EAvCL,CAwCNC,YAAaD,EAxCP,CAyCNE,UAAWC,EAzCL,CA0CNC,YAAaD,EA1CP,CA2CNE,QAASC,EA3CH,CA4CNC,eAAgBC,EA5CV,CADZ,CAAAlG,UAAA,CA+CY,CACRmD,UAAWgD,EADH,CAERjF,MAAOkF,EAFC,CA/CZ,CAAApG,UAAA,CAmDYqG,EAnDZ,CAAArG,UAAA,CAoDYsG,EApDZ,CAqDAtM,EAAA4E,SAAA,CAAkB,CAChB2H,cAAeC,EADC,CAEhBC,SAAUC,EAFM,CAGhBC,YAAaC,EAHG,CAIhBC,YAAaC,EAJG,CAKhBC,eAAgBC,EALA,CAMhBC,gBAAiBC,EAND,CAOhBC,kBAAmBC,EAPH,CAQhBC,SAAUC,EARM,CAShBC,cAAeC,EATC,CAUhBC,YAAaC,EAVG,CAWhBC,UAAWC,EAXK,CAYhBC,mBAAoBC,EAZJ,CAahBC,kBAAmBC,EAbH,CAchBC,QAASC,EAdO,CAehBC,cAAeC,EAfC,CAgBhBC,aAAcC,EAhBE,CAiBhBC,UAAWC,EAjBK;AAkBhBC,kBAAmBC,EAlBH,CAmBhBC,MAAOC,EAnBS,CAoBhBC,qBAAsBC,EApBN,CAqBhBC,2BAA4BC,EArBZ,CAsBhBC,aAAcC,EAtBE,CAuBhBC,YAAaC,EAvBG,CAwBhBC,gBAAiBC,EAxBD,CAyBhBC,UAAWC,EAzBK,CA0BhBC,KAAMC,EA1BU,CA2BhBC,OAAQC,EA3BQ,CA4BhBC,WAAYC,EA5BI,CA6BhBC,GAAIC,EA7BY,CA8BhBC,IAAKC,EA9BW,CA+BhBC,KAAMC,EA/BU,CAgChBC,aAAcC,EAhCE,CAiChBC,SAAUC,EAjCM,CAkChBC,qBAAsBC,EAlCN,CAmChBC,eAAgBC,EAnCA,CAoChBC,iBAAkBC,EApCF,CAqChBC,cAAeC,EArCC,CAsChBC,SAAUC,EAtCM,CAuChBC,QAASC,EAvCO,CAwChBC,MAAOC,EAxCS,CAyChBC,SAAUC,EAzCM,CA0ChBC,MAAOC,EA1CS,CA2ChBC,eAAgBC,EA3CA,CAAlB,CA1D0B,CADI,CAAlC,CAAAlN,KAAA,CA0GM,CAAEmN,eAAgB,OAAlB,CA1GN,CAzCmC,CAuTrCC,QAASA,GAAkB,CAACC,CAAD,CAAMrQ,CAAN,CAAc,CACvC,MAAOA,EAAAsQ,YAAA,EADgC,CAQzCC,QAASA,GAAY,CAAC9S,CAAD,CAAO,CAC1B,MAAOA,EAAA7C,QAAA,CACI4V,EADJ,CAC2BJ,EAD3B,CADmB,CA6C5BK,QAASA,GAAiB,CAACta,CAAD,CAAO,CAG3B4F,CAAAA;AAAW5F,CAAA4F,SACf,OAj9BsB2U,EAi9BtB,GAAO3U,CAAP,EAAyC,CAACA,CAA1C,EA78BuB4U,CA68BvB,GAAsD5U,CAJvB,CAcjC6U,QAASA,GAAmB,CAAC9U,CAAD,CAAO7J,CAAP,CAAgB,CAAA,IACtC4e,CADsC,CACjClb,CADiC,CACtBmb,CADsB,CAEtCC,EAAW9e,CAAA+e,uBAAA,EAF2B,CAGtC3O,EAAQ,EAH8B,CAG1B1P,CAEhB,IAtBQse,EAAA/a,KAAA,CAsBa4F,CAtBb,CAsBR,CAGO,CAEL+U,CAAA,CAAME,CAAAG,YAAA,CAAqBjf,CAAAkf,cAAA,CAAsB,KAAtB,CAArB,CACNxb,EAAA,CAAM,CAACyb,EAAAC,KAAA,CAAqBvV,CAArB,CAAD,EAA+B,CAAC,EAAD,CAAK,EAAL,CAA/B,EAAyC,CAAzC,CAAAoE,YAAA,EACN4Q,EAAA,CAAYhQ,CAAAU,uBAAA,CACV1F,CAAAlB,QAAA,CAAa0W,EAAb,CAA+B,WAA/B,CADU,CAEVxV,CAEF,IAAW,EAAX,CAAIyV,EAAJ,CAME,IALAC,CAIA,CAJOC,EAAA,CAAW9b,CAAX,CAIP,EAJ0B8b,EAAAC,SAI1B,CAHAb,CAAAc,UAGA,CAHgBH,CAAA,CAAK,CAAL,CAGhB,CAH0BV,CAG1B,CAHsCU,CAAA,CAAK,CAAL,CAGtC,CAAA7e,CAAA,CAAI6e,CAAA,CAAK,CAAL,CACJ,CAAO7e,CAAA,EAAP,CAAA,CACEke,CAAA,CAAMA,CAAAe,WAPV,KASO,CACLJ,CAAA,CAAOK,EAAA,CAAQlc,CAAR,CAAP,EAAuB,EAIvB,KADAhD,CACA,CADI6e,CAAA5f,OACJ,CAAc,EAAd,CAAO,EAAEe,CAAT,CAAA,CACEke,CAAAK,YAAA,CAAgB1gB,CAAAyJ,SAAAkX,cAAA,CAA8BK,CAAA,CAAK7e,CAAL,CAA9B,CAAhB,CACA,CAAAke,CAAA,CAAMA,CAAAe,WAGRf,EAAAc,UAAA,CAAgBb,CAVX,CAaPzO,CAAA,CAAQ/I,EAAA,CAAO+I,CAAP,CAAcwO,CAAAiB,WAAd,CAERjB,EAAA,CAAME,CAAAa,WACNf,EAAAkB,YAAA,CAAkB,EAjCb,CAHP,IAEE1P,EAAA/K,KAAA,CAAWrF,CAAA+f,eAAA,CAAuBlW,CAAvB,CAAX,CAsCFiV;CAAAgB,YAAA,CAAuB,EACvBhB,EAAAY,UAAA,CAAqB,EACrB5f,EAAA,CAAQsQ,CAAR,CAAe,QAAQ,CAAClM,CAAD,CAAO,CAC5B4a,CAAAG,YAAA,CAAqB/a,CAArB,CAD4B,CAA9B,CAIA,OAAO4a,EAnDmC,CAuF5CjQ,QAASA,EAAM,CAACnK,CAAD,CAAU,CACvB,GAAIA,CAAJ,WAAuBmK,EAAvB,CACE,MAAOnK,EAGT,KAAIsb,CAEAvgB,EAAA,CAASiF,CAAT,CAAJ,GACEA,CACA,CADUub,CAAA,CAAKvb,CAAL,CACV,CAAAsb,CAAA,CAAc,CAAA,CAFhB,CAIA,IAAM,EAAA,IAAA,WAAgBnR,EAAhB,CAAN,CAA+B,CAC7B,GAAImR,CAAJ,EAAyC,GAAzC,GAAmBtb,CAAA0C,OAAA,CAAe,CAAf,CAAnB,CACE,KAAM8Y,GAAA,CAAa,OAAb,CAAN,CAEF,MAAO,KAAIrR,CAAJ,CAAWnK,CAAX,CAJsB,CAO/B,GAAIsb,CAAJ,CAAiB,CAlDjBhgB,CAAA,CAAqBzB,CAAAyJ,SACrB,KAAImY,CAGF,EAAA,CADF,CAAKA,CAAL,CAAcC,EAAAhB,KAAA,CAAuBvV,CAAvB,CAAd,EACS,CAAC7J,CAAAkf,cAAA,CAAsBiB,CAAA,CAAO,CAAP,CAAtB,CAAD,CADT,CAIA,CAAKA,CAAL,CAAcxB,EAAA,CAAoB9U,CAApB,CAA0B7J,CAA1B,CAAd,EACSmgB,CAAAN,WADT,CAIO,EAwCLQ,GAAA,CAAe,IAAf,CAAqB,CAArB,CADe,CAAjB,IAEWngB,EAAA,CAAWwE,CAAX,CAAJ,CACL4b,EAAA,CAAY5b,CAAZ,CADK,CAGL2b,EAAA,CAAe,IAAf,CAAqB3b,CAArB,CAvBqB,CA2BzB6b,QAASA,GAAW,CAAC7b,CAAD,CAAU,CAC5B,MAAOA,EAAA1C,UAAA,CAAkB,CAAA,CAAlB,CADqB,CAI9Bwe,QAASA,GAAY,CAAC9b,CAAD,CAAU+b,CAAV,CAA2B,CACzCA,CAAAA,CAAL,EAAwBjC,EAAA,CAAkB9Z,CAAlB,CAAxB,EAAoDhF,CAAAoP,UAAA,CAAiB,CAACpK,CAAD,CAAjB,CAEhDA,EAAAgc,iBAAJ,EACEhhB,CAAAoP,UAAA,CAAiBpK,CAAAgc,iBAAA,CAAyB,GAAzB,CAAjB,CAJ4C,CAQhDC,QAASA,GAAa,CAACrhB,CAAD,CAAM,CAG1B,IAFAkM,IAAIA,CAEJ,GAAalM,EAAb,CACE,MAAO,CAAA,CAET;MAAO,CAAA,CANmB,CAS5BshB,QAASA,GAAiB,CAAClc,CAAD,CAAU,CAClC,IAAImc,EAAYnc,CAAAoc,MAAhB,CACIC,EAAeF,CAAfE,EAA4BC,EAAA,CAAQH,CAAR,CADhC,CAGI5R,EAAS8R,CAAT9R,EAAyB8R,CAAA9R,OAH7B,CAIInC,EAAOiU,CAAPjU,EAAuBiU,CAAAjU,KAErBA,EAAN,EAAc,CAAA6T,EAAA,CAAc7T,CAAd,CAAd,EAAwCmC,CAAxC,EAAkD,CAAA0R,EAAA,CAAc1R,CAAd,CAAlD,GACE,OAAO+R,EAAA,CAAQH,CAAR,CACP,CAAAnc,CAAAoc,MAAA,CAAgBlb,IAAAA,EAFlB,CAPkC,CAapCqb,QAASA,GAAS,CAACvc,CAAD,CAAU8B,CAAV,CAAgBkB,CAAhB,CAAoBwZ,CAApB,CAAiC,CACjD,GAAIviB,CAAA,CAAUuiB,CAAV,CAAJ,CAA4B,KAAMhB,GAAA,CAAa,SAAb,CAAN,CAG5B,IAAIjR,GADA8R,CACA9R,CADekS,EAAA,CAAmBzc,CAAnB,CACfuK,GAAyB8R,CAAA9R,OAA7B,CACImS,EAASL,CAATK,EAAyBL,CAAAK,OAE7B,IAAKA,CAAL,CAAA,CAEA,GAAK5a,CAAL,CAOO,CAEL,IAAI6a,EAAgBA,QAAQ,CAAC7a,CAAD,CAAO,CACjC,IAAI8a,EAAcrS,CAAA,CAAOzI,CAAP,CACd7H,EAAA,CAAU+I,CAAV,CAAJ,EACE9C,EAAA,CAAY0c,CAAZ,EAA2B,EAA3B,CAA+B5Z,CAA/B,CAEI/I,EAAA,CAAU+I,CAAV,CAAN,EAAuB4Z,CAAvB,EAA2D,CAA3D,CAAsCA,CAAA3hB,OAAtC,GACE+E,CAAA6c,oBAAA,CAA4B/a,CAA5B,CAAkC4a,CAAlC,CACA,CAAA,OAAOnS,CAAA,CAAOzI,CAAP,CAFT,CALiC,CAWnC1G,EAAA,CAAQ0G,CAAAhC,MAAA,CAAW,GAAX,CAAR,CAAyB,QAAQ,CAACgC,CAAD,CAAO,CACtC6a,CAAA,CAAc7a,CAAd,CACIgb,GAAA,CAAgBhb,CAAhB,CAAJ,EACE6a,CAAA,CAAcG,EAAA,CAAgBhb,CAAhB,CAAd,CAHoC,CAAxC,CAbK,CAPP,IACE,KAAKA,CAAL,GAAayI,EAAb,CACe,UAGb,GAHIzI,CAGJ,EAFE9B,CAAA6c,oBAAA,CAA4B/a,CAA5B,CAAkC4a,CAAlC,CAEF,CAAA,OAAOnS,CAAA,CAAOzI,CAAP,CAuBXoa,GAAA,CAAkBlc,CAAlB,CA9BA,CAPiD,CAwCnD+c,QAASA,GAAgB,CAAC/c,CAAD,CAAU8G,CAAV,CAAgB,CACvC,IAAIqV,EAAYnc,CAAAoc,MAGhB,IAFIC,CAEJ;AAFmBF,CAEnB,EAFgCG,EAAA,CAAQH,CAAR,CAEhC,CACMrV,CAAJ,CACE,OAAOuV,CAAAjU,KAAA,CAAkBtB,CAAlB,CADT,CAGEuV,CAAAjU,KAHF,CAGsB,EAGtB,CAAA8T,EAAA,CAAkBlc,CAAlB,CAXqC,CAgBzCyc,QAASA,GAAkB,CAACzc,CAAD,CAAUgd,CAAV,CAA6B,CAAA,IAClDb,EAAYnc,CAAAoc,MADsC,CAElDC,EAAeF,CAAfE,EAA4BC,EAAA,CAAQH,CAAR,CAE5Ba,EAAJ,EAA0BX,CAAAA,CAA1B,GACErc,CAAAoc,MACA,CADgBD,CAChB,CAtSyB,EAAEc,EAsS3B,CAAAZ,CAAA,CAAeC,EAAA,CAAQH,CAAR,CAAf,CAAoC,CAAC5R,OAAQ,EAAT,CAAanC,KAAM,EAAnB,CAAuBsU,OAAQxb,IAAAA,EAA/B,CAFtC,CAKA,OAAOmb,EAT+C,CAaxDa,QAASA,GAAU,CAACld,CAAD,CAAUzE,CAAV,CAAeY,CAAf,CAAsB,CACvC,GAAI2d,EAAA,CAAkB9Z,CAAlB,CAAJ,CAAgC,CAC9B,IAAIP,CAAJ,CAEI0d,EAAiBljB,CAAA,CAAUkC,CAAV,CAFrB,CAGIihB,EAAiB,CAACD,CAAlBC,EAAoC7hB,CAApC6hB,EAA2C,CAACpjB,CAAA,CAASuB,CAAT,CAHhD,CAII8hB,EAAa,CAAC9hB,CAEd6M,EAAAA,EADAiU,CACAjU,CADeqU,EAAA,CAAmBzc,CAAnB,CAA4B,CAACod,CAA7B,CACfhV,GAAuBiU,CAAAjU,KAE3B,IAAI+U,CAAJ,CACE/U,CAAA,CAAKwR,EAAA,CAAare,CAAb,CAAL,CAAA,CAA0BY,CAD5B,KAEO,CACL,GAAIkhB,CAAJ,CACE,MAAOjV,EAEP,IAAIgV,CAAJ,CAEE,MAAOhV,EAAP,EAAeA,CAAA,CAAKwR,EAAA,CAAare,CAAb,CAAL,CAEf,KAAKkE,CAAL,GAAalE,EAAb,CACE6M,CAAA,CAAKwR,EAAA,CAAana,CAAb,CAAL,CAAA,CAA2BlE,CAAA,CAAIkE,CAAJ,CAT5B,CAXuB,CADO,CA6BzC6d,QAASA,GAAc,CAACtd,CAAD,CAAUud,CAAV,CAAoB,CACzC,MAAKvd,EAAAwG,aAAL,CAEqC,EAFrC,CACQvC,CAAC,GAADA,EAAQjE,CAAAwG,aAAA,CAAqB,OAArB,CAARvC,EAAyC,EAAzCA,EAA+C,GAA/CA,SAAA,CAA4D,SAA5D,CAAuE,GAAvE,CAAA5D,QAAA,CACI,GADJ,CACUkd,CADV,CACqB,GADrB,CADR,CAAkC,CAAA,CADO,CAM3CC,QAASA,GAAiB,CAACxd,CAAD,CAAUyd,CAAV,CAAsB,CAC9C,GAAIA,CAAJ,EAAkBzd,CAAA0d,aAAlB,CAAwC,CACtC,IAAIC;AAAkB1Z,CAAC,GAADA,EAAQjE,CAAAwG,aAAA,CAAqB,OAArB,CAARvC,EAAyC,EAAzCA,EAA+C,GAA/CA,SAAA,CACW,SADX,CACsB,GADtB,CAAtB,CAEI2Z,EAAaD,CAEjBviB,EAAA,CAAQqiB,CAAA3d,MAAA,CAAiB,GAAjB,CAAR,CAA+B,QAAQ,CAAC+d,CAAD,CAAW,CAChDA,CAAA,CAAWtC,CAAA,CAAKsC,CAAL,CACXD,EAAA,CAAaA,CAAA3Z,QAAA,CAAmB,GAAnB,CAAyB4Z,CAAzB,CAAoC,GAApC,CAAyC,GAAzC,CAFmC,CAAlD,CAKID,EAAJ,GAAmBD,CAAnB,EACE3d,CAAA0d,aAAA,CAAqB,OAArB,CAA8BnC,CAAA,CAAKqC,CAAL,CAA9B,CAXoC,CADM,CAiBhDE,QAASA,GAAc,CAAC9d,CAAD,CAAUyd,CAAV,CAAsB,CAC3C,GAAIA,CAAJ,EAAkBzd,CAAA0d,aAAlB,CAAwC,CACtC,IAAIC,EAAkB1Z,CAAC,GAADA,EAAQjE,CAAAwG,aAAA,CAAqB,OAArB,CAARvC,EAAyC,EAAzCA,EAA+C,GAA/CA,SAAA,CACW,SADX,CACsB,GADtB,CAAtB,CAEI2Z,EAAaD,CAEjBviB,EAAA,CAAQqiB,CAAA3d,MAAA,CAAiB,GAAjB,CAAR,CAA+B,QAAQ,CAAC+d,CAAD,CAAW,CAChDA,CAAA,CAAWtC,CAAA,CAAKsC,CAAL,CACuC,GAAlD,GAAID,CAAAvd,QAAA,CAAmB,GAAnB,CAAyBwd,CAAzB,CAAoC,GAApC,CAAJ,GACED,CADF,EACgBC,CADhB,CAC2B,GAD3B,CAFgD,CAAlD,CAOID,EAAJ,GAAmBD,CAAnB,EACE3d,CAAA0d,aAAA,CAAqB,OAArB,CAA8BnC,CAAA,CAAKqC,CAAL,CAA9B,CAboC,CADG,CAoB7CjC,QAASA,GAAc,CAACoC,CAAD,CAAOC,CAAP,CAAiB,CAGtC,GAAIA,CAAJ,CAGE,GAAIA,CAAA5Y,SAAJ,CACE2Y,CAAA,CAAKA,CAAA9iB,OAAA,EAAL,CAAA,CAAsB+iB,CADxB,KAEO,CACL,IAAI/iB,EAAS+iB,CAAA/iB,OAGb,IAAsB,QAAtB,GAAI,MAAOA,EAAX,EAAkC+iB,CAAAnkB,OAAlC,GAAsDmkB,CAAtD,CACE,IAAI/iB,CAAJ,CACE,IAAS,IAAAe;AAAI,CAAb,CAAgBA,CAAhB,CAAoBf,CAApB,CAA4Be,CAAA,EAA5B,CACE+hB,CAAA,CAAKA,CAAA9iB,OAAA,EAAL,CAAA,CAAsB+iB,CAAA,CAAShiB,CAAT,CAF1B,CADF,IAOE+hB,EAAA,CAAKA,CAAA9iB,OAAA,EAAL,CAAA,CAAsB+iB,CAXnB,CAR6B,CA0BxCC,QAASA,GAAgB,CAACje,CAAD,CAAU8G,CAAV,CAAgB,CACvC,MAAOoX,GAAA,CAAoBle,CAApB,CAA6B,GAA7B,EAAoC8G,CAApC,EAA4C,cAA5C,EAA8D,YAA9D,CADgC,CAIzCoX,QAASA,GAAmB,CAACle,CAAD,CAAU8G,CAAV,CAAgB3K,CAAhB,CAAuB,CAtxC1B6d,CAyxCvB,GAAIha,CAAAoF,SAAJ,GACEpF,CADF,CACYA,CAAAme,gBADZ,CAKA,KAFIC,CAEJ,CAFYtjB,CAAA,CAAQgM,CAAR,CAAA,CAAgBA,CAAhB,CAAuB,CAACA,CAAD,CAEnC,CAAO9G,CAAP,CAAA,CAAgB,CACd,IADc,IACLhE,EAAI,CADC,CACEY,EAAKwhB,CAAAnjB,OAArB,CAAmCe,CAAnC,CAAuCY,CAAvC,CAA2CZ,CAAA,EAA3C,CACE,GAAI/B,CAAA,CAAUkC,CAAV,CAAkBnB,CAAAoN,KAAA,CAAYpI,CAAZ,CAAqBoe,CAAA,CAAMpiB,CAAN,CAArB,CAAlB,CAAJ,CAAuD,MAAOG,EAMhE6D,EAAA,CAAUA,CAAAqe,WAAV,EAryC8BC,EAqyC9B,GAAiCte,CAAAoF,SAAjC,EAAqFpF,CAAAue,KARvE,CARiC,CAoBnDC,QAASA,GAAW,CAACxe,CAAD,CAAU,CAE5B,IADA8b,EAAA,CAAa9b,CAAb,CAAsB,CAAA,CAAtB,CACA,CAAOA,CAAAib,WAAP,CAAA,CACEjb,CAAAye,YAAA,CAAoBze,CAAAib,WAApB,CAH0B,CAO9ByD,QAASA,GAAY,CAAC1e,CAAD,CAAU2e,CAAV,CAAoB,CAClCA,CAAL,EAAe7C,EAAA,CAAa9b,CAAb,CACf,KAAI/B,EAAS+B,CAAAqe,WACTpgB,EAAJ,EAAYA,CAAAwgB,YAAA,CAAmBze,CAAnB,CAH2B,CAOzC4e,QAASA,GAAoB,CAACC,CAAD,CAASC,CAAT,CAAc,CACzCA,CAAA,CAAMA,CAAN,EAAajlB,CACb,IAAgC,UAAhC,GAAIilB,CAAAxb,SAAAyb,WAAJ,CAIED,CAAAE,WAAA,CAAeH,CAAf,CAJF;IAOE7jB,EAAA,CAAO8jB,CAAP,CAAAhV,GAAA,CAAe,MAAf,CAAuB+U,CAAvB,CATuC,CAa3CjD,QAASA,GAAW,CAAC5Y,CAAD,CAAK,CACvBic,QAASA,EAAO,EAAG,CACjBplB,CAAAyJ,SAAAuZ,oBAAA,CAAoC,kBAApC,CAAwDoC,CAAxD,CACAplB,EAAAgjB,oBAAA,CAA2B,MAA3B,CAAmCoC,CAAnC,CACAjc,EAAA,EAHiB,CAOgB,UAAnC,GAAInJ,CAAAyJ,SAAAyb,WAAJ,CACEllB,CAAAmlB,WAAA,CAAkBhc,CAAlB,CADF,EAMEnJ,CAAAyJ,SAAA4b,iBAAA,CAAiC,kBAAjC,CAAqDD,CAArD,CAGA,CAAAplB,CAAAqlB,iBAAA,CAAwB,MAAxB,CAAgCD,CAAhC,CATF,CARuB,CAgEzBE,QAASA,GAAkB,CAACnf,CAAD,CAAU8G,CAAV,CAAgB,CAEzC,IAAIsY,EAAcC,EAAA,CAAavY,CAAAyC,YAAA,EAAb,CAGlB,OAAO6V,EAAP,EAAsBE,EAAA,CAAiBvf,EAAA,CAAUC,CAAV,CAAjB,CAAtB,EAA8Dof,CALrB,CA+L3CG,QAASA,GAAkB,CAACvf,CAAD,CAAUuK,CAAV,CAAkB,CAC3C,IAAIiV,EAAeA,QAAQ,CAACC,CAAD,CAAQ3d,CAAR,CAAc,CAEvC2d,CAAAC,mBAAA,CAA2BC,QAAQ,EAAG,CACpC,MAAOF,EAAAG,iBAD6B,CAItC,KAAIC,EAAWtV,CAAA,CAAOzI,CAAP,EAAe2d,CAAA3d,KAAf,CAAf,CACIge,EAAiBD,CAAA,CAAWA,CAAA5kB,OAAX,CAA6B,CAElD,IAAK6kB,CAAL,CAAA,CAEA,GAAInhB,CAAA,CAAY8gB,CAAAM,4BAAZ,CAAJ,CAAoD,CAClD,IAAIC;AAAmCP,CAAAQ,yBACvCR,EAAAQ,yBAAA,CAAiCC,QAAQ,EAAG,CAC1CT,CAAAM,4BAAA,CAAoC,CAAA,CAEhCN,EAAAU,gBAAJ,EACEV,CAAAU,gBAAA,EAGEH,EAAJ,EACEA,CAAAtkB,KAAA,CAAsC+jB,CAAtC,CARwC,CAFM,CAepDA,CAAAW,8BAAA,CAAsCC,QAAQ,EAAG,CAC/C,MAA6C,CAAA,CAA7C,GAAOZ,CAAAM,4BADwC,CAKjD,KAAIO,EAAiBT,CAAAU,sBAAjBD,EAAmDE,EAGjC,EAAtB,CAAKV,CAAL,GACED,CADF,CACa9R,EAAA,CAAY8R,CAAZ,CADb,CAIA,KAAS,IAAA7jB,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8jB,CAApB,CAAoC9jB,CAAA,EAApC,CACOyjB,CAAAW,8BAAA,EAAL,EACEE,CAAA,CAAetgB,CAAf,CAAwByf,CAAxB,CAA+BI,CAAA,CAAS7jB,CAAT,CAA/B,CA/BJ,CATuC,CA+CzCwjB,EAAAhV,KAAA,CAAoBxK,CACpB,OAAOwf,EAjDoC,CAoD7CgB,QAASA,GAAqB,CAACxgB,CAAD,CAAUyf,CAAV,CAAiBgB,CAAjB,CAA0B,CACtDA,CAAA/kB,KAAA,CAAasE,CAAb,CAAsByf,CAAtB,CADsD,CAIxDiB,QAASA,GAA0B,CAACC,CAAD,CAASlB,CAAT,CAAgBgB,CAAhB,CAAyB,CAI1D,IAAIG,EAAUnB,CAAAoB,cAGTD,EAAL,GAAiBA,CAAjB,GAA6BD,CAA7B,EAAwCG,EAAAplB,KAAA,CAAoBilB,CAApB,CAA4BC,CAA5B,CAAxC,GACEH,CAAA/kB,KAAA,CAAailB,CAAb,CAAqBlB,CAArB,CARwD,CA2P5DtG,QAASA,GAAgB,EAAG,CAC1B,IAAA4H,KAAA;AAAYC,QAAiB,EAAG,CAC9B,MAAOvjB,EAAA,CAAO0M,CAAP,CAAe,CACpB8W,SAAUA,QAAQ,CAACzhB,CAAD,CAAO0hB,CAAP,CAAgB,CAC5B1hB,CAAAE,KAAJ,GAAeF,CAAf,CAAsBA,CAAA,CAAK,CAAL,CAAtB,CACA,OAAO8d,GAAA,CAAe9d,CAAf,CAAqB0hB,CAArB,CAFyB,CADd,CAKpBC,SAAUA,QAAQ,CAAC3hB,CAAD,CAAO0hB,CAAP,CAAgB,CAC5B1hB,CAAAE,KAAJ,GAAeF,CAAf,CAAsBA,CAAA,CAAK,CAAL,CAAtB,CACA,OAAOse,GAAA,CAAete,CAAf,CAAqB0hB,CAArB,CAFyB,CALd,CASpBE,YAAaA,QAAQ,CAAC5hB,CAAD,CAAO0hB,CAAP,CAAgB,CAC/B1hB,CAAAE,KAAJ,GAAeF,CAAf,CAAsBA,CAAA,CAAK,CAAL,CAAtB,CACA,OAAOge,GAAA,CAAkBhe,CAAlB,CAAwB0hB,CAAxB,CAF4B,CATjB,CAAf,CADuB,CADN,CA+B5BG,QAASA,GAAO,CAACzmB,CAAD,CAAM0mB,CAAN,CAAiB,CAC/B,IAAI/lB,EAAMX,CAANW,EAAaX,CAAA+B,UAEjB,IAAIpB,CAAJ,CAIE,MAHmB,UAGZA,GAHH,MAAOA,EAGJA,GAFLA,CAEKA,CAFCX,CAAA+B,UAAA,EAEDpB,EAAAA,CAGLgmB,EAAAA,CAAU,MAAO3mB,EAOrB,OALEW,EAKF,CANgB,UAAhB,GAAIgmB,CAAJ,EAA2C,QAA3C,GAA+BA,CAA/B,EAA+D,IAA/D,GAAuD3mB,CAAvD,CACQA,CAAA+B,UADR,CACwB4kB,CADxB,CACkC,GADlC,CACwC,CAACD,CAAD,EAAcllB,EAAd,GADxC,CAGQmlB,CAHR,CAGkB,GAHlB,CAGwB3mB,CAdO,CAyBjC4mB,QAASA,GAAS,EAAG,CACnB,IAAAC,MAAA,CAAa,EACb,KAAAC,QAAA,CAAe,EACf,KAAAC,SAAA,CAAgBtnB,GAChB,KAAAunB,WAAA,CAAmB,EAJA,CA4IrBC,QAASA,GAAW,CAAC7e,CAAD,CAAK,CACnB8e,CAAAA,CAJGC,QAAAC,UAAAtjB,SAAAhD,KAAA,CAIkBsH,CAJlB,CAIMiB,QAAA,CAAwBge,EAAxB;AAAwC,EAAxC,CAEb,OADWH,EAAAlgB,MAAA,CAAasgB,EAAb,CACX,EADsCJ,CAAAlgB,MAAA,CAAaugB,EAAb,CAFf,CAMzBC,QAASA,GAAM,CAACpf,CAAD,CAAK,CAIlB,MAAA,CADIqf,CACJ,CADWR,EAAA,CAAY7e,CAAZ,CACX,EACS,WADT,CACuBiB,CAACoe,CAAA,CAAK,CAAL,CAADpe,EAAY,EAAZA,SAAA,CAAwB,WAAxB,CAAqC,GAArC,CADvB,CACmE,GADnE,CAGO,IAPW,CA+mBpB6D,QAASA,GAAc,CAACwa,CAAD,CAAgBnb,CAAhB,CAA0B,CAkD/Cob,QAASA,EAAa,CAACC,CAAD,CAAW,CAC/B,MAAO,SAAQ,CAACjnB,CAAD,CAAMY,CAAN,CAAa,CAC1B,GAAInC,CAAA,CAASuB,CAAT,CAAJ,CACEH,CAAA,CAAQG,CAAR,CAAaU,EAAA,CAAcumB,CAAd,CAAb,CADF,KAGE,OAAOA,EAAA,CAASjnB,CAAT,CAAcY,CAAd,CAJiB,CADG,CAUjCoQ,QAASA,EAAQ,CAACzF,CAAD,CAAO2b,CAAP,CAAkB,CACjCtX,EAAA,CAAwBrE,CAAxB,CAA8B,SAA9B,CACA,IAAItL,CAAA,CAAWinB,CAAX,CAAJ,EAA6B3nB,CAAA,CAAQ2nB,CAAR,CAA7B,CACEA,CAAA,CAAYC,CAAAC,YAAA,CAA6BF,CAA7B,CAEd,IAAK1B,CAAA0B,CAAA1B,KAAL,CACE,KAAM9U,GAAA,CAAgB,MAAhB,CAA6EnF,CAA7E,CAAN,CAEF,MAAQ8b,EAAA,CAAc9b,CAAd,CAjEW+b,UAiEX,CAAR,CAA+CJ,CARd,CAWnCK,QAASA,EAAkB,CAAChc,CAAD,CAAOkF,CAAP,CAAgB,CACzC,MAAoB+W,SAA4B,EAAG,CACjD,IAAIC,EAASC,CAAAlb,OAAA,CAAwBiE,CAAxB,CAAiC,IAAjC,CACb,IAAIrN,CAAA,CAAYqkB,CAAZ,CAAJ,CACE,KAAM/W,GAAA,CAAgB,OAAhB,CAA2FnF,CAA3F,CAAN,CAEF,MAAOkc,EAL0C,CADV,CAU3ChX,QAASA,EAAO,CAAClF,CAAD,CAAOoc,CAAP,CAAkBC,CAAlB,CAA2B,CACzC,MAAO5W,EAAA,CAASzF,CAAT,CAAe,CACpBia,KAAkB,CAAA,CAAZ,GAAAoC,CAAA,CAAoBL,CAAA,CAAmBhc,CAAnB,CAAyBoc,CAAzB,CAApB,CAA0DA,CAD5C,CAAf,CADkC,CAiC3CE,QAASA,EAAW,CAACd,CAAD,CAAgB,CAClCxX,EAAA,CAAUnM,CAAA,CAAY2jB,CAAZ,CAAV;AAAwCxnB,CAAA,CAAQwnB,CAAR,CAAxC,CAAgE,eAAhE,CAAiF,cAAjF,CADkC,KAE9BpV,EAAY,EAFkB,CAEdmW,CACpBjoB,EAAA,CAAQknB,CAAR,CAAuB,QAAQ,CAAC1b,CAAD,CAAS,CAItC0c,QAASA,EAAc,CAAC5W,CAAD,CAAQ,CAAA,IACzB1Q,CADyB,CACtBY,CACFZ,EAAA,CAAI,CAAT,KAAYY,CAAZ,CAAiB8P,CAAAzR,OAAjB,CAA+Be,CAA/B,CAAmCY,CAAnC,CAAuCZ,CAAA,EAAvC,CAA4C,CAAA,IACtCunB,EAAa7W,CAAA,CAAM1Q,CAAN,CADyB,CAEtCuQ,EAAWmW,CAAAzZ,IAAA,CAAqBsa,CAAA,CAAW,CAAX,CAArB,CAEfhX,EAAA,CAASgX,CAAA,CAAW,CAAX,CAAT,CAAApgB,MAAA,CAA8BoJ,CAA9B,CAAwCgX,CAAA,CAAW,CAAX,CAAxC,CAJ0C,CAFf,CAH/B,GAAI,CAAAC,CAAAva,IAAA,CAAkBrC,CAAlB,CAAJ,CAAA,CACA4c,CAAA/hB,IAAA,CAAkBmF,CAAlB,CAA0B,CAAA,CAA1B,CAYA,IAAI,CACE7L,CAAA,CAAS6L,CAAT,CAAJ,EACEyc,CAIA,CAJW9U,EAAA,CAAc3H,CAAd,CAIX,CAHAqc,CAAA3b,QAAA,CAAyBV,CAAzB,CAGA,CAHmCyc,CAGnC,CAFAnW,CAEA,CAFYA,CAAAvK,OAAA,CAAiBygB,CAAA,CAAYC,CAAAlX,SAAZ,CAAjB,CAAAxJ,OAAA,CAAwD0gB,CAAAhW,WAAxD,CAEZ,CADAiW,CAAA,CAAeD,CAAAlW,aAAf,CACA,CAAAmW,CAAA,CAAeD,CAAAjW,cAAf,CALF,EAMW5R,CAAA,CAAWoL,CAAX,CAAJ,CACHsG,CAAAvM,KAAA,CAAe+hB,CAAA3a,OAAA,CAAwBnB,CAAxB,CAAf,CADG,CAEI9L,CAAA,CAAQ8L,CAAR,CAAJ,CACHsG,CAAAvM,KAAA,CAAe+hB,CAAA3a,OAAA,CAAwBnB,CAAxB,CAAf,CADG,CAGLqE,EAAA,CAAYrE,CAAZ,CAAoB,QAApB,CAZA,CAcF,MAAOtB,CAAP,CAAU,CAYV,KAXIxK,EAAA,CAAQ8L,CAAR,CAWE,GAVJA,CAUI,CAVKA,CAAA,CAAOA,CAAA3L,OAAP,CAAuB,CAAvB,CAUL,EARFqK,CAAAme,QAQE,EARWne,CAAAoe,MAQX,EARsD,EAQtD,GARsBpe,CAAAoe,MAAArjB,QAAA,CAAgBiF,CAAAme,QAAhB,CAQtB,GAFJne,CAEI,CAFAA,CAAAme,QAEA,CAFY,IAEZ,CAFmBne,CAAAoe,MAEnB,EAAAzX,EAAA,CAAgB,UAAhB;AACIrF,CADJ,CACYtB,CAAAoe,MADZ,EACuBpe,CAAAme,QADvB,EACoCne,CADpC,CAAN,CAZU,CA3BZ,CADsC,CAAxC,CA4CA,OAAO4H,EA/C2B,CAsDpCyW,QAASA,EAAsB,CAACC,CAAD,CAAQ5X,CAAR,CAAiB,CAE9C6X,QAASA,EAAU,CAACC,CAAD,CAAcC,CAAd,CAAsB,CACvC,GAAIH,CAAAnoB,eAAA,CAAqBqoB,CAArB,CAAJ,CAAuC,CACrC,GAAIF,CAAA,CAAME,CAAN,CAAJ,GAA2BE,CAA3B,CACE,KAAM/X,GAAA,CAAgB,MAAhB,CACI6X,CADJ,CACkB,MADlB,CAC2BzY,CAAApF,KAAA,CAAU,MAAV,CAD3B,CAAN,CAGF,MAAO2d,EAAA,CAAME,CAAN,CAL8B,CAOrC,GAAI,CAIF,MAHAzY,EAAA3D,QAAA,CAAaoc,CAAb,CAGO,CAFPF,CAAA,CAAME,CAAN,CAEO,CAFcE,CAEd,CADPJ,CAAA,CAAME,CAAN,CACO,CADc9X,CAAA,CAAQ8X,CAAR,CAAqBC,CAArB,CACd,CAAAH,CAAA,CAAME,CAAN,CAJL,CAKF,MAAOG,CAAP,CAAY,CAIZ,KAHIL,EAAA,CAAME,CAAN,CAGEG,GAHqBD,CAGrBC,EAFJ,OAAOL,CAAA,CAAME,CAAN,CAEHG,CAAAA,CAAN,CAJY,CALd,OAUU,CACR5Y,CAAA6Y,MAAA,EADQ,CAlB2B,CAyBzCC,QAASA,EAAa,CAACnhB,CAAD,CAAKohB,CAAL,CAAaN,CAAb,CAA0B,CAAA,IAC1CzB,EAAO,EACPgC,EAAAA,CAAUvc,EAAAwc,WAAA,CAA0BthB,CAA1B,CAA8BmE,CAA9B,CAAwC2c,CAAxC,CAEd,KAJ8C,IAIrC9nB,EAAI,CAJiC,CAI9Bf,EAASopB,CAAAppB,OAAzB,CAAyCe,CAAzC,CAA6Cf,CAA7C,CAAqDe,CAAA,EAArD,CAA0D,CACxD,IAAIT,EAAM8oB,CAAA,CAAQroB,CAAR,CACV,IAAmB,QAAnB,GAAI,MAAOT,EAAX,CACE,KAAM0Q,GAAA,CAAgB,MAAhB,CACyE1Q,CADzE,CAAN,CAGF8mB,CAAA1hB,KAAA,CAAUyjB,CAAA,EAAUA,CAAA3oB,eAAA,CAAsBF,CAAtB,CAAV,CAAuC6oB,CAAA,CAAO7oB,CAAP,CAAvC,CACuCsoB,CAAA,CAAWtoB,CAAX,CAAgBuoB,CAAhB,CADjD,CANwD,CAS1D,MAAOzB,EAbuC,CA8DhD,MAAO,CACLta,OAlCFA,QAAe,CAAC/E,CAAD,CAAKD,CAAL,CAAWqhB,CAAX,CAAmBN,CAAnB,CAAgC,CACvB,QAAtB,GAAI,MAAOM,EAAX;CACEN,CACA,CADcM,CACd,CAAAA,CAAA,CAAS,IAFX,CAKI/B,EAAAA,CAAO8B,CAAA,CAAcnhB,CAAd,CAAkBohB,CAAlB,CAA0BN,CAA1B,CACPhpB,EAAA,CAAQkI,CAAR,CAAJ,GACEA,CADF,CACOA,CAAA,CAAGA,CAAA/H,OAAH,CAAe,CAAf,CADP,CAIa+H,EAAAA,CAAAA,CArBb,IAAI4X,EAAJ,EAA4B,UAA5B,GAAY,MAAO2J,EAAnB,CACE,CAAA,CAAO,CAAA,CADT,KAAA,CAGA,IAAIvB,EAASuB,CAAAC,YACRjqB,GAAA,CAAUyoB,CAAV,CAAL,GACEA,CADF,CACWuB,CAAAC,YADX,CAC8B,UAAAjlB,KAAA,CAn1B3BwiB,QAAAC,UAAAtjB,SAAAhD,KAAA,CAm1BuD6oB,CAn1BvD,CAm1B2B,CAD9B,CAGA,EAAA,CAAOvB,CAPP,CAqBA,MAAK,EAAL,EAKEX,CAAA3a,QAAA,CAAa,IAAb,CACO,CAAA,KAAKqa,QAAAC,UAAAlf,KAAAK,MAAA,CAA8BH,CAA9B,CAAkCqf,CAAlC,CAAL,CANT,EAGSrf,CAAAG,MAAA,CAASJ,CAAT,CAAesf,CAAf,CAdoC,CAiCxC,CAELM,YAbFA,QAAoB,CAAC8B,CAAD,CAAOL,CAAP,CAAeN,CAAf,CAA4B,CAG9C,IAAIY,EAAQ5pB,CAAA,CAAQ2pB,CAAR,CAAA,CAAgBA,CAAA,CAAKA,CAAAxpB,OAAL,CAAmB,CAAnB,CAAhB,CAAwCwpB,CAChDpC,EAAAA,CAAO8B,CAAA,CAAcM,CAAd,CAAoBL,CAApB,CAA4BN,CAA5B,CAEXzB,EAAA3a,QAAA,CAAa,IAAb,CACA,OAAO,MAAKqa,QAAAC,UAAAlf,KAAAK,MAAA,CAA8BuhB,CAA9B,CAAoCrC,CAApC,CAAL,CAPuC,CAWzC,CAGLpZ,IAAK4a,CAHA,CAILc,SAAU7c,EAAAwc,WAJL,CAKLM,IAAKA,QAAQ,CAAC9d,CAAD,CAAO,CAClB,MAAO8b,EAAAnnB,eAAA,CAA6BqL,CAA7B,CApQQ+b,UAoQR,CAAP,EAA8De,CAAAnoB,eAAA,CAAqBqL,CAArB,CAD5C,CALf,CAzFuC,CAxKD;AAC/CK,CAAA,CAAyB,CAAA,CAAzB,GAAYA,CADmC,KAE3C6c,EAAgB,EAF2B,CAI3C3Y,EAAO,EAJoC,CAK3CmY,EAAgB,IAAIqB,EALuB,CAM3CjC,EAAgB,CACdjb,SAAU,CACN4E,SAAUgW,CAAA,CAAchW,CAAd,CADJ,CAENP,QAASuW,CAAA,CAAcvW,CAAd,CAFH,CAGNsB,QAASiV,CAAA,CA6EnBjV,QAAgB,CAACxG,CAAD,CAAO3F,CAAP,CAAoB,CAClC,MAAO6K,EAAA,CAAQlF,CAAR,CAAc,CAAC,WAAD,CAAc,QAAQ,CAACge,CAAD,CAAY,CACrD,MAAOA,EAAAnC,YAAA,CAAsBxhB,CAAtB,CAD8C,CAAlC,CAAd,CAD2B,CA7EjB,CAHH,CAINhF,MAAOomB,CAAA,CAkFjBpmB,QAAc,CAAC2K,CAAD,CAAOzD,CAAP,CAAY,CAAE,MAAO2I,EAAA,CAAQlF,CAAR,CAAcvI,EAAA,CAAQ8E,CAAR,CAAd,CAA4B,CAAA,CAA5B,CAAT,CAlFT,CAJD,CAKNkK,SAAUgV,CAAA,CAmFpBhV,QAAiB,CAACzG,CAAD,CAAO3K,CAAP,CAAc,CAC7BgP,EAAA,CAAwBrE,CAAxB,CAA8B,UAA9B,CACA8b,EAAA,CAAc9b,CAAd,CAAA,CAAsB3K,CACtB4oB,EAAA,CAAcje,CAAd,CAAA,CAAsB3K,CAHO,CAnFX,CALJ,CAMNqR,UAwFVA,QAAkB,CAACsW,CAAD,CAAckB,CAAd,CAAuB,CAAA,IACnCC,EAAevC,CAAAzZ,IAAA,CAAqB6a,CAArB,CAnGAjB,UAmGA,CADoB,CAEnCqC,EAAWD,CAAAlE,KAEfkE,EAAAlE,KAAA,CAAoBoE,QAAQ,EAAG,CAC7B,IAAIC,EAAenC,CAAAlb,OAAA,CAAwBmd,CAAxB,CAAkCD,CAAlC,CACnB,OAAOhC,EAAAlb,OAAA,CAAwBid,CAAxB,CAAiC,IAAjC,CAAuC,CAACK,UAAWD,CAAZ,CAAvC,CAFsB,CAJQ,CA9FzB,CADI,CAN2B,CAgB3C1C,EAAoBE,CAAAkC,UAApBpC,CACIiB,CAAA,CAAuBf,CAAvB,CAAsC,QAAQ,CAACkB,CAAD,CAAcC,CAAd,CAAsB,CAC9Dxb,EAAAxN,SAAA,CAAiBgpB,CAAjB,CAAJ,EACE1Y,CAAA1K,KAAA,CAAUojB,CAAV,CAEF,MAAM9X,GAAA,CAAgB,MAAhB,CAAiDZ,CAAApF,KAAA,CAAU,MAAV,CAAjD,CAAN,CAJkE,CAApE,CAjBuC,CAuB3C8e,EAAgB,EAvB2B;AAwB3CO,EACI3B,CAAA,CAAuBoB,CAAvB,CAAsC,QAAQ,CAACjB,CAAD,CAAcC,CAAd,CAAsB,CAClE,IAAIxX,EAAWmW,CAAAzZ,IAAA,CAAqB6a,CAArB,CAvBJjB,UAuBI,CAAmDkB,CAAnD,CACf,OAAOd,EAAAlb,OAAA,CACHwE,CAAAwU,KADG,CACYxU,CADZ,CACsBrL,IAAAA,EADtB,CACiC4iB,CADjC,CAF2D,CAApE,CAzBuC,CA8B3Cb,EAAmBqC,CAEvB1C,EAAA,kBAAA,CAA8C,CAAE7B,KAAMxiB,EAAA,CAAQ+mB,CAAR,CAAR,CAC9CrC,EAAA3b,QAAA,CAA2Bob,CAAApb,QAA3B,CAAsD7E,CAAA,EACtD,KAAIyK,EAAYkW,CAAA,CAAYd,CAAZ,CAAhB,CACAW,EAAmBqC,CAAArc,IAAA,CAA0B,WAA1B,CACnBga,EAAA9b,SAAA,CAA4BA,CAC5B/L,EAAA,CAAQ8R,CAAR,CAAmB,QAAQ,CAAClK,CAAD,CAAK,CAAMA,CAAJ,EAAQigB,CAAAlb,OAAA,CAAwB/E,CAAxB,CAAV,CAAhC,CAEAigB,EAAAsC,eAAA,CAAkCC,QAAQ,CAACC,CAAD,CAAO,CAC/CrqB,CAAA,CAAQgoB,CAAA,CAAYqC,CAAZ,CAAR,CAA2B,QAAQ,CAACziB,CAAD,CAAK,CAAMA,CAAJ,EAAQigB,CAAAlb,OAAA,CAAwB/E,CAAxB,CAAV,CAAxC,CAD+C,CAKjD,OAAOigB,EA5CwC,CAwRjD9O,QAASA,GAAqB,EAAG,CAE/B,IAAIuR,EAAuB,CAAA,CAe3B,KAAAC,qBAAA,CAA4BC,QAAQ,EAAG,CACrCF,CAAA,CAAuB,CAAA,CADc,CAiJvC,KAAA3E,KAAA,CAAY,CAAC,SAAD,CAAY,WAAZ,CAAyB,YAAzB,CAAuC,QAAQ,CAACjI,CAAD,CAAU5B,CAAV,CAAqBM,CAArB,CAAiC,CAM1FqO,QAASA,EAAc,CAACC,CAAD,CAAO,CAC5B,IAAI9C,EAAS,IACblkB,MAAAkjB,UAAA+D,KAAArqB,KAAA,CAA0BoqB,CAA1B,CAAgC,QAAQ,CAAC9lB,CAAD,CAAU,CAChD,GAA2B,GAA3B;AAAID,EAAA,CAAUC,CAAV,CAAJ,CAEE,MADAgjB,EACO,CADEhjB,CACF,CAAA,CAAA,CAHuC,CAAlD,CAMA,OAAOgjB,EARqB,CAgC9BgD,QAASA,EAAQ,CAACxb,CAAD,CAAO,CACtB,GAAIA,CAAJ,CAAU,CACRA,CAAAyb,eAAA,EAEA,KAAIC,CAvBFA,EAAAA,CAASC,CAAAC,QAET5qB,EAAA,CAAW0qB,CAAX,CAAJ,CACEA,CADF,CACWA,CAAA,EADX,CAEW3oB,EAAA,CAAU2oB,CAAV,CAAJ,EACD1b,CAGF,CAHS0b,CAAA,CAAO,CAAP,CAGT,CAAAA,CAAA,CADqB,OAAvB,GADYpN,CAAAuN,iBAAAC,CAAyB9b,CAAzB8b,CACRC,SAAJ,CACW,CADX,CAGW/b,CAAAgc,sBAAA,EAAAC,OANN,EAQKhsB,CAAA,CAASyrB,CAAT,CARL,GASLA,CATK,CASI,CATJ,CAqBDA,EAAJ,GAcMQ,CACJ,CADclc,CAAAgc,sBAAA,EAAAG,IACd,CAAA7N,CAAA8N,SAAA,CAAiB,CAAjB,CAAoBF,CAApB,CAA8BR,CAA9B,CAfF,CALQ,CAAV,IAuBEpN,EAAAkN,SAAA,CAAiB,CAAjB,CAAoB,CAApB,CAxBoB,CA4BxBG,QAASA,EAAM,CAACU,CAAD,CAAO,CAEpBA,CAAA,CAAO9rB,CAAA,CAAS8rB,CAAT,CAAA,CAAiBA,CAAjB,CAAwBpsB,CAAA,CAASosB,CAAT,CAAA,CAAiBA,CAAAnoB,SAAA,EAAjB,CAAmCwY,CAAA2P,KAAA,EAClE,KAAIC,CAGCD,EAAL,CAGK,CAAKC,CAAL,CAAWxjB,CAAAyjB,eAAA,CAAwBF,CAAxB,CAAX,EAA2Cb,CAAA,CAASc,CAAT,CAA3C,CAGA,CAAKA,CAAL,CAAWjB,CAAA,CAAeviB,CAAA0jB,kBAAA,CAA2BH,CAA3B,CAAf,CAAX,EAA8Db,CAAA,CAASc,CAAT,CAA9D,CAGa,KAHb,GAGID,CAHJ,EAGoBb,CAAA,CAAS,IAAT,CATzB,CAAWA,CAAA,CAAS,IAAT,CANS,CAjEtB,IAAI1iB,EAAWwV,CAAAxV,SAqFXoiB,EAAJ,EACElO,CAAApY,OAAA,CAAkB6nB,QAAwB,EAAG,CAAC,MAAO/P,EAAA2P,KAAA,EAAR,CAA7C,CACEK,QAA8B,CAACC,CAAD,CAASC,CAAT,CAAiB,CAEzCD,CAAJ;AAAeC,CAAf,EAAoC,EAApC,GAAyBD,CAAzB,EAEAvI,EAAA,CAAqB,QAAQ,EAAG,CAC9BpH,CAAArY,WAAA,CAAsBgnB,CAAtB,CAD8B,CAAhC,CAJ6C,CADjD,CAWF,OAAOA,EAlGmF,CAAhF,CAlKmB,CA4QjCkB,QAASA,GAAY,CAACrlB,CAAD,CAAGC,CAAH,CAAM,CACzB,GAAKD,CAAAA,CAAL,EAAWC,CAAAA,CAAX,CAAc,MAAO,EACrB,IAAKD,CAAAA,CAAL,CAAQ,MAAOC,EACf,IAAKA,CAAAA,CAAL,CAAQ,MAAOD,EACXlH,EAAA,CAAQkH,CAAR,CAAJ,GAAgBA,CAAhB,CAAoBA,CAAAiE,KAAA,CAAO,GAAP,CAApB,CACInL,EAAA,CAAQmH,CAAR,CAAJ,GAAgBA,CAAhB,CAAoBA,CAAAgE,KAAA,CAAO,GAAP,CAApB,CACA,OAAOjE,EAAP,CAAW,GAAX,CAAiBC,CANQ,CAkB3BqlB,QAASA,GAAY,CAACpG,CAAD,CAAU,CACzBnmB,CAAA,CAASmmB,CAAT,CAAJ,GACEA,CADF,CACYA,CAAAphB,MAAA,CAAc,GAAd,CADZ,CAMA,KAAIlF,EAAM6H,CAAA,EACVrH,EAAA,CAAQ8lB,CAAR,CAAiB,QAAQ,CAACqG,CAAD,CAAQ,CAG3BA,CAAAtsB,OAAJ,GACEL,CAAA,CAAI2sB,CAAJ,CADF,CACe,CAAA,CADf,CAH+B,CAAjC,CAOA,OAAO3sB,EAfsB,CAyB/B4sB,QAASA,GAAqB,CAACC,CAAD,CAAU,CACtC,MAAOztB,EAAA,CAASytB,CAAT,CAAA,CACDA,CADC,CAED,EAHgC,CAkhCxCC,QAASA,GAAO,CAAC7tB,CAAD,CAASyJ,CAAT,CAAmB8T,CAAnB,CAAyBc,CAAzB,CAAmCE,CAAnC,CAAyD,CA6IvEuP,QAASA,EAA0B,EAAG,CACpCC,EAAA,CAAkB,IAClBC,EAAA,EAFoC,CAOtCC,QAASA,EAAU,EAAG,CAEpBC,CAAA,CAAcC,CAAA,EACdD,EAAA,CAAcppB,CAAA,CAAYopB,CAAZ,CAAA,CAA2B,IAA3B,CAAkCA,CAG5C7lB,GAAA,CAAO6lB,CAAP,CAAoBE,CAApB,CAAJ,GACEF,CADF,CACgBE,CADhB,CAKAC,EAAA,CADAD,CACA,CADkBF,CAVE,CActBF,QAASA,EAAoB,EAAG,CAC9B,IAAIM,EAAuBD,CAC3BJ,EAAA,EAEA,IAAIM,CAAJ,GAAuBrlB,CAAAslB,IAAA,EAAvB,EAAqCF,CAArC,GAA8DJ,CAA9D,CAIAK,CAEA,CAFiBrlB,CAAAslB,IAAA,EAEjB,CADAH,CACA,CADmBH,CACnB,CAAA3sB,CAAA,CAAQktB,CAAR,CAA4B,QAAQ,CAACC,CAAD,CAAW,CAC7CA,CAAA,CAASxlB,CAAAslB,IAAA,EAAT,CAAqBN,CAArB,CAD6C,CAA/C,CAV8B,CAlKuC;AAAA,IACnEhlB,EAAO,IAD4D,CAEnE8F,EAAWhP,CAAAgP,SAFwD,CAGnE2f,EAAU3uB,CAAA2uB,QAHyD,CAInExJ,EAAanlB,CAAAmlB,WAJsD,CAKnEyJ,EAAe5uB,CAAA4uB,aALoD,CAMnEC,EAAkB,EANiD,CAOnEC,EAAcvQ,CAAA,CAAqBhB,CAArB,CAElBrU,EAAA6lB,OAAA,CAAc,CAAA,CAOd7lB,EAAA8lB,6BAAA,CAAoCF,CAAAG,aACpC/lB,EAAAgmB,6BAAA,CAAoCJ,CAAAK,aAGpCjmB,EAAAkmB,gCAAA,CAAuCN,CAAAO,yBApBgC,KA0BnEnB,CA1BmE,CA0BtDG,CA1BsD,CA2BnEE,EAAiBvf,CAAAsgB,KA3BkD,CA4BnEC,GAAc9lB,CAAA3D,KAAA,CAAc,MAAd,CA5BqD,CA6BnEioB,GAAkB,IA7BiD,CA8BnEI,EAAmB9P,CAAAsQ,QAAD,CAA2BR,QAAwB,EAAG,CACtE,GAAI,CACF,MAAOQ,EAAAa,MADL,CAEF,MAAO/jB,CAAP,CAAU,EAH0D,CAAtD,CAAoBlH,CAQ1C0pB,EAAA,EAuBA/kB,EAAAslB,IAAA,CAAWiB,QAAQ,CAACjB,CAAD,CAAMpkB,CAAN,CAAeolB,CAAf,CAAsB,CAInC1qB,CAAA,CAAY0qB,CAAZ,CAAJ,GACEA,CADF,CACU,IADV,CAKIxgB,EAAJ,GAAiBhP,CAAAgP,SAAjB,GAAkCA,CAAlC,CAA6ChP,CAAAgP,SAA7C,CACI2f,EAAJ,GAAgB3uB,CAAA2uB,QAAhB,GAAgCA,CAAhC,CAA0C3uB,CAAA2uB,QAA1C,CAGA,IAAIH,CAAJ,CAAS,CACP,IAAIkB,EAAYrB,CAAZqB,GAAiCF,CAGrChB,EAAA,CAAMmB,EAAA,CAAWnB,CAAX,CAAAc,KAKN,IAAIf,CAAJ,GAAuBC,CAAvB,GAAgCG,CAAAtQ,CAAAsQ,QAAhC,EAAoDe,CAApD,EACE,MAAOxmB,EAET;IAAI0mB,EAAWrB,CAAXqB,EAA6BC,EAAA,CAAUtB,CAAV,CAA7BqB,GAA2DC,EAAA,CAAUrB,CAAV,CAC/DD,EAAA,CAAiBC,CACjBH,EAAA,CAAmBmB,CAKfb,EAAAtQ,CAAAsQ,QAAJ,EAA0BiB,CAA1B,EAAuCF,CAAvC,EAIOE,CAUL,GATE7B,EASF,CAToBS,CASpB,EAPIpkB,CAAJ,CACE4E,CAAA5E,QAAA,CAAiBokB,CAAjB,CADF,CAEYoB,CAAL,EAGL5gB,CAAA,CAAAA,CAAA,CAAwBwf,CAAxB,CAAwBA,CAAxB,CAtIJjoB,CAsII,CAtIIioB,CAAAhoB,QAAA,CAAY,GAAZ,CAsIJ,CArIR,CAqIQ,CArIU,EAAX,GAAAD,CAAA,CAAe,EAAf,CAAoBioB,CAAAsB,OAAA,CAAWvpB,CAAX,CAqInB,CAAAyI,CAAAge,KAAA,CAAgB,CAHX,EACLhe,CAAAsgB,KADK,CACWd,CAIlB,CAAIxf,CAAAsgB,KAAJ,GAAsBd,CAAtB,GACET,EADF,CACoBS,CADpB,CAdF,GACEG,CAAA,CAAQvkB,CAAA,CAAU,cAAV,CAA2B,WAAnC,CAAA,CAAgDolB,CAAhD,CAAuD,EAAvD,CAA2DhB,CAA3D,CACA,CAAAP,CAAA,EAFF,CAkBIF,GAAJ,GACEA,EADF,CACoBS,CADpB,CAGA,OAAOtlB,EAxCA,CA8CP,MAhJGkB,CAgJkB2jB,EAhJlB3jB,EAgJqC4E,CAAAsgB,KAhJrCllB,SAAA,CAAY,IAAZ,CAAkB,EAAlB,CAqFkC,CAyEzClB,EAAAsmB,MAAA,CAAaO,QAAQ,EAAG,CACtB,MAAO7B,EADe,CAtI+C,KA0InEO,EAAqB,EA1I8C,CA2InEuB,EAAgB,CAAA,CA3ImD,CAmJnE5B,EAAkB,IAmDtBllB,EAAA+mB,YAAA,CAAmBC,QAAQ,CAACC,CAAD,CAAW,CAEpC,GAAKH,CAAAA,CAAL,CAAoB,CAMlB,GAAI3R,CAAAsQ,QAAJ,CAAsBxtB,CAAA,CAAOnB,CAAP,CAAAiQ,GAAA,CAAkB,UAAlB,CAA8B6d,CAA9B,CAEtB3sB,EAAA,CAAOnB,CAAP,CAAAiQ,GAAA,CAAkB,YAAlB,CAAgC6d,CAAhC,CAEAkC,EAAA,CAAgB,CAAA,CAVE,CAapBvB,CAAA3nB,KAAA,CAAwBqpB,CAAxB,CACA,OAAOA,EAhB6B,CAyBtCjnB,EAAAknB,uBAAA,CAA8BC,QAAQ,EAAG,CACvClvB,CAAA,CAAOnB,CAAP,CAAAswB,IAAA,CAAmB,qBAAnB;AAA0CxC,CAA1C,CADuC,CASzC5kB,EAAAqnB,iBAAA,CAAwBvC,CAexB9kB,EAAAsnB,SAAA,CAAgBC,QAAQ,EAAG,CACzB,IAAInB,EAAOC,EAAA1pB,KAAA,CAAiB,MAAjB,CACX,OAAOypB,EAAA,CAAOA,CAAAllB,QAAA,CAAa,sBAAb,CAAqC,EAArC,CAAP,CAAkD,EAFhC,CAoB3BlB,EAAAwnB,MAAA,CAAaC,QAAQ,CAACxnB,CAAD,CAAKynB,CAAL,CAAYC,CAAZ,CAAsB,CACzC,IAAIC,CAEJF,EAAA,CAAQA,CAAR,EAAiB,CACjBC,EAAA,CAAWA,CAAX,EAAuB/B,CAAAiC,kBAEvBjC,EAAAK,aAAA,CAAyB0B,CAAzB,CACAC,EAAA,CAAY3L,CAAA,CAAW,QAAQ,EAAG,CAChC,OAAO0J,CAAA,CAAgBiC,CAAhB,CACPhC,EAAAG,aAAA,CAAyB9lB,CAAzB,CAA6B0nB,CAA7B,CAFgC,CAAtB,CAGTD,CAHS,CAIZ/B,EAAA,CAAgBiC,CAAhB,CAAA,CAA6BD,CAE7B,OAAOC,EAbkC,CA2B3C5nB,EAAAwnB,MAAAM,OAAA,CAAoBC,QAAQ,CAACC,CAAD,CAAU,CACpC,GAAIrC,CAAAjtB,eAAA,CAA+BsvB,CAA/B,CAAJ,CAA6C,CAC3C,IAAIL,EAAWhC,CAAA,CAAgBqC,CAAhB,CACf,QAAOrC,CAAA,CAAgBqC,CAAhB,CACPtC,EAAA,CAAasC,CAAb,CACApC,EAAAG,aAAA,CAAyB1qB,CAAzB,CAA+BssB,CAA/B,CACA,OAAO,CAAA,CALoC,CAO7C,MAAO,CAAA,CAR6B,CAtSiC,CAoTzEzV,QAASA,GAAgB,EAAG,CAC1B,IAAA8L,KAAA,CAAY,CAAC,SAAD,CAAY,MAAZ,CAAoB,UAApB,CAAgC,WAAhC,CAA6C,sBAA7C,CACP,QAAQ,CAACjI,CAAD,CAAY1B,CAAZ,CAAoBc,CAApB,CAAgC5C,CAAhC,CAA6C8C,CAA7C,CAAmE,CAC9E,MAAO,KAAIsP,EAAJ,CAAY5O,CAAZ;AAAqBxD,CAArB,CAAgC8B,CAAhC,CAAsCc,CAAtC,CAAgDE,CAAhD,CADuE,CADpE,CADc,CAyF5BjD,QAASA,GAAqB,EAAG,CAE/B,IAAA4L,KAAA,CAAYC,QAAQ,EAAG,CAGrBgK,QAASA,EAAY,CAACC,CAAD,CAAUxD,CAAV,CAAmB,CA0MtCyD,QAASA,EAAO,CAACC,CAAD,CAAQ,CAClBA,CAAJ,GAAcC,CAAd,GACOC,CAAL,CAEWA,CAFX,GAEwBF,CAFxB,GAGEE,CAHF,CAGaF,CAAAG,EAHb,EACED,CADF,CACaF,CAQb,CAHAI,CAAA,CAAKJ,CAAAG,EAAL,CAAcH,CAAAK,EAAd,CAGA,CAFAD,CAAA,CAAKJ,CAAL,CAAYC,CAAZ,CAEA,CADAA,CACA,CADWD,CACX,CAAAC,CAAAE,EAAA,CAAa,IAVf,CADsB,CAmBxBC,QAASA,EAAI,CAACE,CAAD,CAAYC,CAAZ,CAAuB,CAC9BD,CAAJ,GAAkBC,CAAlB,GACMD,CACJ,GADeA,CAAAD,EACf,CAD6BE,CAC7B,EAAIA,CAAJ,GAAeA,CAAAJ,EAAf,CAA6BG,CAA7B,CAFF,CADkC,CA5NpC,GAAIR,CAAJ,GAAeU,EAAf,CACE,KAAMjxB,EAAA,CAAO,eAAP,CAAA,CAAwB,KAAxB,CAAoEuwB,CAApE,CAAN,CAFoC,IAKlCW,EAAO,CAL2B,CAMlCC,EAAQpuB,CAAA,CAAO,EAAP,CAAWgqB,CAAX,CAAoB,CAACqE,GAAIb,CAAL,CAApB,CAN0B,CAOlC7iB,EAAO3F,CAAA,EAP2B,CAQlCspB,EAAYtE,CAAZsE,EAAuBtE,CAAAsE,SAAvBA,EAA4CC,MAAAC,UARV,CASlCC,EAAUzpB,CAAA,EATwB,CAUlC2oB,EAAW,IAVuB,CAWlCC,EAAW,IAyCf,OAAQM,EAAA,CAAOV,CAAP,CAAR,CAA0B,CAoBxBkB,IAAKA,QAAQ,CAAC5wB,CAAD,CAAMY,CAAN,CAAa,CACxB,GAAI,CAAAwC,CAAA,CAAYxC,CAAZ,CAAJ,CAAA,CACA,GAAI4vB,CAAJ,CAAeC,MAAAC,UAAf,CAAiC,CAC/B,IAAIG,EAAWF,CAAA,CAAQ3wB,CAAR,CAAX6wB,GAA4BF,CAAA,CAAQ3wB,CAAR,CAA5B6wB,CAA2C,CAAC7wB,IAAKA,CAAN,CAA3C6wB,CAEJlB,EAAA,CAAQkB,CAAR,CAH+B,CAM3B7wB,CAAN,GAAa6M,EAAb,EAAoBwjB,CAAA,EACpBxjB,EAAA,CAAK7M,CAAL,CAAA,CAAYY,CAERyvB,EAAJ,CAAWG,CAAX,EACE,IAAAM,OAAA,CAAYhB,CAAA9vB,IAAZ,CAGF,OAAOY,EAdP,CADwB,CApBF,CAiDxB8M,IAAKA,QAAQ,CAAC1N,CAAD,CAAM,CACjB,GAAIwwB,CAAJ,CAAeC,MAAAC,UAAf,CAAiC,CAC/B,IAAIG;AAAWF,CAAA,CAAQ3wB,CAAR,CAEf,IAAK6wB,CAAAA,CAAL,CAAe,MAEflB,EAAA,CAAQkB,CAAR,CAL+B,CAQjC,MAAOhkB,EAAA,CAAK7M,CAAL,CATU,CAjDK,CAwExB8wB,OAAQA,QAAQ,CAAC9wB,CAAD,CAAM,CACpB,GAAIwwB,CAAJ,CAAeC,MAAAC,UAAf,CAAiC,CAC/B,IAAIG,EAAWF,CAAA,CAAQ3wB,CAAR,CAEf,IAAK6wB,CAAAA,CAAL,CAAe,MAEXA,EAAJ,GAAiBhB,CAAjB,GAA2BA,CAA3B,CAAsCgB,CAAAZ,EAAtC,CACIY,EAAJ,GAAiBf,CAAjB,GAA2BA,CAA3B,CAAsCe,CAAAd,EAAtC,CACAC,EAAA,CAAKa,CAAAd,EAAL,CAAgBc,CAAAZ,EAAhB,CAEA,QAAOU,CAAA,CAAQ3wB,CAAR,CATwB,CAY3BA,CAAN,GAAa6M,EAAb,GAEA,OAAOA,CAAA,CAAK7M,CAAL,CACP,CAAAqwB,CAAA,EAHA,CAboB,CAxEE,CAoGxBU,UAAWA,QAAQ,EAAG,CACpBlkB,CAAA,CAAO3F,CAAA,EACPmpB,EAAA,CAAO,CACPM,EAAA,CAAUzpB,CAAA,EACV2oB,EAAA,CAAWC,CAAX,CAAsB,IAJF,CApGE,CAqHxBkB,QAASA,QAAQ,EAAG,CAGlBL,CAAA,CADAL,CACA,CAFAzjB,CAEA,CAFO,IAGP,QAAOujB,CAAA,CAAOV,CAAP,CAJW,CArHI,CA6IxB5e,KAAMA,QAAQ,EAAG,CACf,MAAO5O,EAAA,CAAO,EAAP,CAAWouB,CAAX,CAAkB,CAACD,KAAMA,CAAP,CAAlB,CADQ,CA7IO,CApDY,CAFxC,IAAID,EAAS,EAiPbX,EAAA3e,KAAA,CAAoBmgB,QAAQ,EAAG,CAC7B,IAAIngB,EAAO,EACXjR,EAAA,CAAQuwB,CAAR,CAAgB,QAAQ,CAAC/H,CAAD,CAAQqH,CAAR,CAAiB,CACvC5e,CAAA,CAAK4e,CAAL,CAAA,CAAgBrH,CAAAvX,KAAA,EADuB,CAAzC,CAGA,OAAOA,EALsB,CAmB/B2e,EAAA/hB,IAAA,CAAmBwjB,QAAQ,CAACxB,CAAD,CAAU,CACnC,MAAOU,EAAA,CAAOV,CAAP,CAD4B,CAKrC,OAAOD,EA1Qc,CAFQ,CA+TjCzS,QAASA,GAAsB,EAAG,CAChC,IAAAwI,KAAA,CAAY,CAAC,eAAD,CAAkB,QAAQ,CAAC7L,CAAD,CAAgB,CACpD,MAAOA,EAAA,CAAc,WAAd,CAD6C,CAA1C,CADoB,CAjpOhB;AAw/QlBvG,QAASA,GAAgB,CAAChH,CAAD,CAAW+kB,CAAX,CAAkC,CAczDC,QAASA,EAAoB,CAAC1kB,CAAD,CAAQ2kB,CAAR,CAAuBC,CAAvB,CAAqC,CAChE,IAAIC,EAAe,oCAAnB,CAEIC,EAAWtqB,CAAA,EAEfrH,EAAA,CAAQ6M,CAAR,CAAe,QAAQ,CAAC+kB,CAAD,CAAaC,CAAb,CAAwB,CAC7CD,CAAA,CAAaA,CAAAzR,KAAA,EAEb,IAAIyR,CAAJ,GAAkBE,EAAlB,CACEH,CAAA,CAASE,CAAT,CAAA,CAAsBC,CAAA,CAAaF,CAAb,CADxB,KAAA,CAIA,IAAIprB,EAAQorB,CAAAprB,MAAA,CAAiBkrB,CAAjB,CAEZ,IAAKlrB,CAAAA,CAAL,CACE,KAAMurB,EAAA,CAAe,MAAf,CAGFP,CAHE,CAGaK,CAHb,CAGwBD,CAHxB,CAIDH,CAAA,CAAe,gCAAf,CACD,0BALE,CAAN,CAQFE,CAAA,CAASE,CAAT,CAAA,CAAsB,CACpBG,KAAMxrB,CAAA,CAAM,CAAN,CAAA,CAAS,CAAT,CADc,CAEpByrB,WAAyB,GAAzBA,GAAYzrB,CAAA,CAAM,CAAN,CAFQ,CAGpB0rB,SAAuB,GAAvBA,GAAU1rB,CAAA,CAAM,CAAN,CAHU,CAIpB2rB,SAAU3rB,CAAA,CAAM,CAAN,CAAV2rB,EAAsBN,CAJF,CAMlBrrB,EAAA,CAAM,CAAN,CAAJ,GACEsrB,CAAA,CAAaF,CAAb,CADF,CAC6BD,CAAA,CAASE,CAAT,CAD7B,CArBA,CAH6C,CAA/C,CA6BA,OAAOF,EAlCyD,CAiElES,QAASA,EAAwB,CAAC1mB,CAAD,CAAO,CACtC,IAAIuC,EAASvC,CAAApE,OAAA,CAAY,CAAZ,CACb,IAAK2G,CAAAA,CAAL,EAAeA,CAAf,GAA0BpJ,CAAA,CAAUoJ,CAAV,CAA1B,CACE,KAAM8jB,EAAA,CAAe,QAAf,CAAwHrmB,CAAxH,CAAN,CAEF,GAAIA,CAAJ,GAAaA,CAAAyU,KAAA,EAAb,CACE,KAAM4R,EAAA,CAAe,QAAf,CAEArmB,CAFA,CAAN,CANoC,CAYxC2mB,QAASA,EAAmB,CAAC9f,CAAD,CAAY,CACtC,IAAI+f,EAAU/f,CAAA+f,QAAVA,EAAgC/f,CAAA1D,WAAhCyjB;AAAwD/f,CAAA7G,KAEvD,EAAAhM,CAAA,CAAQ4yB,CAAR,CAAL,EAAyB1zB,CAAA,CAAS0zB,CAAT,CAAzB,EACEtyB,CAAA,CAAQsyB,CAAR,CAAiB,QAAQ,CAACvxB,CAAD,CAAQZ,CAAR,CAAa,CACpC,IAAIqG,EAAQzF,CAAAyF,MAAA,CAAY+rB,CAAZ,CACDxxB,EAAAyJ,UAAAkB,CAAgBlF,CAAA,CAAM,CAAN,CAAA3G,OAAhB6L,CACX,GAAW4mB,CAAA,CAAQnyB,CAAR,CAAX,CAA0BqG,CAAA,CAAM,CAAN,CAA1B,CAAqCrG,CAArC,CAHoC,CAAtC,CAOF,OAAOmyB,EAX+B,CA3FiB,IACrDE,EAAgB,EADqC,CAGrDC,EAA2B,mCAH0B,CAIrDC,EAAyB,2BAJ4B,CAKrDC,EAAuBnuB,EAAA,CAAQ,2BAAR,CAL8B,CAMrD+tB,EAAwB,6BAN6B,CAWrDK,EAA4B,yBAXyB,CAYrDd,EAAezqB,CAAA,EAuHnB,KAAAkL,UAAA,CAAiBsgB,QAASC,GAAiB,CAACpnB,CAAD,CAAOqnB,CAAP,CAAyB,CAClErjB,EAAA,CAAUhE,CAAV,CAAgB,MAAhB,CACAqE,GAAA,CAAwBrE,CAAxB,CAA8B,WAA9B,CACI/L,EAAA,CAAS+L,CAAT,CAAJ,EACE0mB,CAAA,CAAyB1mB,CAAzB,CA6BA,CA5BAgE,EAAA,CAAUqjB,CAAV,CAA4B,kBAA5B,CA4BA,CA3BKP,CAAAnyB,eAAA,CAA6BqL,CAA7B,CA2BL,GA1BE8mB,CAAA,CAAc9mB,CAAd,CACA,CADsB,EACtB,CAAAa,CAAAqE,QAAA,CAAiBlF,CAAjB,CAzIOsnB,WAyIP,CAAgC,CAAC,WAAD,CAAc,mBAAd,CAC9B,QAAQ,CAACtJ,CAAD,CAAYpP,CAAZ,CAA+B,CACrC,IAAI2Y,EAAa,EACjBjzB,EAAA,CAAQwyB,CAAA,CAAc9mB,CAAd,CAAR,CAA6B,QAAQ,CAACqnB,CAAD;AAAmB/tB,CAAnB,CAA0B,CAC7D,GAAI,CACF,IAAIuN,EAAYmX,CAAA/c,OAAA,CAAiBomB,CAAjB,CACZ3yB,EAAA,CAAWmS,CAAX,CAAJ,CACEA,CADF,CACc,CAAEzF,QAAS3J,EAAA,CAAQoP,CAAR,CAAX,CADd,CAEYzF,CAAAyF,CAAAzF,QAFZ,EAEiCyF,CAAA4d,KAFjC,GAGE5d,CAAAzF,QAHF,CAGsB3J,EAAA,CAAQoP,CAAA4d,KAAR,CAHtB,CAKA5d,EAAA2gB,SAAA,CAAqB3gB,CAAA2gB,SAArB,EAA2C,CAC3C3gB,EAAAvN,MAAA,CAAkBA,CAClBuN,EAAA7G,KAAA,CAAiB6G,CAAA7G,KAAjB,EAAmCA,CACnC6G,EAAA+f,QAAA,CAAoBD,CAAA,CAAoB9f,CAApB,CACpBA,KAAAA,EAAAA,CAAAA,CAA0C4gB,EAAA5gB,CAAA4gB,SAhDtD,IAAIA,CAAJ,GAAkB,CAAAxzB,CAAA,CAASwzB,CAAT,CAAlB,EAAwC,CAAA,QAAAhvB,KAAA,CAAcgvB,CAAd,CAAxC,EACE,KAAMpB,EAAA,CAAe,aAAf,CAEFoB,CAFE,CA+CkEznB,CA/ClE,CAAN,CA+CU6G,CAAA4gB,SAAA,CAzCLA,CAyCK,EAzCO,IA0CP5gB,EAAAX,aAAA,CAAyBmhB,CAAAnhB,aACzBqhB,EAAA1tB,KAAA,CAAgBgN,CAAhB,CAbE,CAcF,MAAOrI,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAfiD,CAA/D,CAmBA,OAAO+oB,EArB8B,CADT,CAAhC,CAyBF,EAAAT,CAAA,CAAc9mB,CAAd,CAAAnG,KAAA,CAAyBwtB,CAAzB,CA9BF,EAgCE/yB,CAAA,CAAQ0L,CAAR,CAAc7K,EAAA,CAAciyB,EAAd,CAAd,CAEF,OAAO,KArC2D,CA+HpE,KAAAtgB,UAAA,CAAiB4gB,QAASC,EAAiB,CAAC3nB,CAAD,CAAO2gB,CAAP,CAAgB,CAQzDzb,QAASA,EAAO,CAAC8Y,CAAD,CAAY,CAC1B4J,QAASA,EAAc,CAAC1rB,CAAD,CAAK,CAC1B,MAAIxH,EAAA,CAAWwH,CAAX,CAAJ,EAAsBlI,CAAA,CAAQkI,CAAR,CAAtB,CACsB,QAAQ,CAAC2rB,CAAD,CAAWC,CAAX,CAAmB,CAC7C,MAAO9J,EAAA/c,OAAA,CAAiB/E,CAAjB,CAAqB,IAArB,CAA2B,CAAC6rB,SAAUF,CAAX,CAAqBG,OAAQF,CAA7B,CAA3B,CADsC,CADjD;AAKS5rB,CANiB,CAU5B,IAAI+rB,EAAatH,CAAAsH,SAAD,EAAsBtH,CAAAuH,YAAtB,CAAiDvH,CAAAsH,SAAjD,CAA4C,EAA5D,CACIE,EAAM,CACRhlB,WAAYA,CADJ,CAERilB,aAAcC,EAAA,CAAwB1H,CAAAxd,WAAxB,CAAdilB,EAA6DzH,CAAAyH,aAA7DA,EAAqF,OAF7E,CAGRH,SAAUL,CAAA,CAAeK,CAAf,CAHF,CAIRC,YAAaN,CAAA,CAAejH,CAAAuH,YAAf,CAJL,CAKRI,WAAY3H,CAAA2H,WALJ,CAMRnnB,MAAO,EANC,CAORonB,iBAAkB5H,CAAAsF,SAAlBsC,EAAsC,EAP9B,CAQRd,SAAU,GARF,CASRb,QAASjG,CAAAiG,QATD,CAaVtyB,EAAA,CAAQqsB,CAAR,CAAiB,QAAQ,CAACpkB,CAAD,CAAM9H,CAAN,CAAW,CACZ,GAAtB,GAAIA,CAAAmH,OAAA,CAAW,CAAX,CAAJ,GAA2BusB,CAAA,CAAI1zB,CAAJ,CAA3B,CAAsC8H,CAAtC,CADkC,CAApC,CAIA,OAAO4rB,EA7BmB,CAP5B,GAAK,CAAAl0B,CAAA,CAAS+L,CAAT,CAAL,CAEE,MADA1L,EAAA,CAAQ0L,CAAR,CAAc7K,EAAA,CAAc6G,EAAA,CAAK,IAAL,CAAW2rB,CAAX,CAAd,CAAd,CACO,CAAA,IAGT,KAAIxkB,EAAawd,CAAAxd,WAAbA,EAAmC,QAAQ,EAAG,EAyClD7O,EAAA,CAAQqsB,CAAR,CAAiB,QAAQ,CAACpkB,CAAD,CAAM9H,CAAN,CAAW,CACZ,GAAtB,GAAIA,CAAAmH,OAAA,CAAW,CAAX,CAAJ,GACEsJ,CAAA,CAAQzQ,CAAR,CAEA,CAFe8H,CAEf,CAAI7H,CAAA,CAAWyO,CAAX,CAAJ,GAA4BA,CAAA,CAAW1O,CAAX,CAA5B,CAA8C8H,CAA9C,CAHF,CADkC,CAApC,CAQA2I,EAAAqY,QAAA,CAAkB,CAAC,WAAD,CAElB,OAAO,KAAA1W,UAAA,CAAe7G,CAAf;AAAqBkF,CAArB,CAzDkD,CAiF3D,KAAAsjB,gCAAA,CAAuCC,QAAQ,CAACC,CAAD,CAAS,CACtD,MAAIv1B,EAAA,CAAUu1B,CAAV,CAAJ,EACE9C,CAAA4C,gCAAA,CAAsDE,CAAtD,CACO,CAAA,IAFT,EAIS9C,CAAA4C,gCAAA,EAL6C,CAqBxDp0B,OAAAu0B,eAAA,CAAsB,IAAtB,CAA4B,4BAA5B,CAA0D,CACxDxmB,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAAqmB,gCADO,CADwC,CAIxD7tB,IAAKA,QAAQ,CAACtF,CAAD,CAAQ,CACnB,IAAAmzB,gCAAA,CAAuCnzB,CADpB,CAJmC,CAA1D,CA8BA,KAAAuzB,iCAAA,CAAwCC,QAAQ,CAACH,CAAD,CAAS,CACvD,MAAIv1B,EAAA,CAAUu1B,CAAV,CAAJ,EACE9C,CAAAgD,iCAAA,CAAuDF,CAAvD,CACO,CAAA,IAFT,EAIS9C,CAAAgD,iCAAA,EAL8C,CAqBzDx0B,OAAAu0B,eAAA,CAAsB,IAAtB,CAA4B,6BAA5B;AAA2D,CACzDxmB,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAAymB,iCADO,CADyC,CAIzDjuB,IAAKA,QAAQ,CAACtF,CAAD,CAAQ,CACnB,IAAAuzB,iCAAA,CAAwCvzB,CADrB,CAJoC,CAA3D,CAoCA,KAAIyL,EAAmB,CAAA,CACvB,KAAAA,iBAAA,CAAwBgoB,QAAQ,CAACC,CAAD,CAAU,CACxC,MAAI51B,EAAA,CAAU41B,CAAV,CAAJ,EACEjoB,CACO,CADYioB,CACZ,CAAA,IAFT,EAIOjoB,CALiC,CA4B1C,KAAIkoB,EAAiC,CAAA,CACrC,KAAAA,+BAAA,CAAsCC,QAAQ,CAACF,CAAD,CAAU,CACtD,MAAI51B,EAAA,CAAU41B,CAAV,CAAJ,EACEC,CACO,CAD0BD,CAC1B,CAAA,IAFT,EAIOC,CAL+C,CAQxD,KAAIE,EAAM,EAqBV,KAAAC,aAAA,CAAoBC,QAAQ,CAAC/zB,CAAD,CAAQ,CAClC,MAAIwB,UAAA1C,OAAJ,EACE+0B,CACO,CADD7zB,CACC,CAAA,IAFT,EAIO6zB,CAL2B,CAQpC,KAAIG,EAAiC,CAAA,CAoBrC,KAAAC,yBAAA,CAAgCC,QAAQ,CAACl0B,CAAD,CAAQ,CAC9C,MAAIwB,UAAA1C,OAAJ,EACEk1B,CACO,CAD0Bh0B,CAC1B,CAAA,IAFT,EAIOg0B,CALuC,CAShD,KAAIG,EAAkC,CAAA,CAoBtC,KAAAC,0BAAA,CAAiCC,QAAQ,CAACr0B,CAAD,CAAQ,CAC/C,MAAIwB,UAAA1C,OAAJ;CACEq1B,CACO,CAD2Bn0B,CAC3B,CAAA,IAFT,EAIOm0B,CALwC,CAajD,KAAIG,EAAgBhuB,CAAA,EAcpB,KAAAiuB,2BAAA,CAAkCC,QAAQ,CAACC,CAAD,CAAcC,CAAd,CAA4BC,CAA5B,CAAiC,CACzE,IAAIv1B,EAAOq1B,CAAArnB,YAAA,EAAPhO,CAAmC,GAAnCA,CAAyCs1B,CAAAtnB,YAAA,EAE7C,IAAIhO,CAAJ,GAAWk1B,EAAX,EAA4BA,CAAA,CAAcl1B,CAAd,CAA5B,GAAmDu1B,CAAnD,CACE,KAAM3D,EAAA,CAAe,aAAf,CAAkHyD,CAAlH,CAA+HC,CAA/H,CAA6IJ,CAAA,CAAcl1B,CAAd,CAA7I,CAAiKu1B,CAAjK,CAAN,CAGFL,CAAA,CAAcl1B,CAAd,CAAA,CAAqBu1B,CACrB,OAAO,KARkE,CAoB1EC,UAAuC,EAAG,CACzCC,QAASA,EAAe,CAACF,CAAD,CAAMG,CAAN,CAAc,CACpC71B,CAAA,CAAQ61B,CAAR,CAAgB,QAAQ,CAACC,CAAD,CAAI,CAAET,CAAA,CAAcS,CAAA3nB,YAAA,EAAd,CAAA,CAAiCunB,CAAnC,CAA5B,CADoC,CAItCE,CAAA,CAAgBG,CAAAC,KAAhB,CAAmC,CACjC,eADiC,CAEjC,aAFiC,CAGjC,aAHiC,CAAnC,CAKAJ,EAAA,CAAgBG,CAAAE,IAAhB,CAAkC,CAAC,SAAD,CAAlC,CACAL,EAAA,CAAgBG,CAAAG,IAAhB,CAAkC,sGAAA,MAAA,CAAA,GAAA,CAAlC,CAUAN,EAAA,CAAgBG,CAAAI,UAAhB,CAAwC,wFAAA,MAAA,CAAA,GAAA,CAAxC,CAOAP;CAAA,CAAgBG,CAAAK,aAAhB,CAA2C,qLAAA,MAAA,CAAA,GAAA,CAA3C,CA5ByC,CAA1CT,CAAD,EA8CA,KAAAhQ,KAAA,CAAY,CACF,WADE,CACW,cADX,CAC2B,mBAD3B,CACgD,kBADhD,CACoE,QADpE,CAEF,aAFE,CAEa,YAFb,CAE2B,MAF3B,CAEmC,UAFnC,CAGV,QAAQ,CAAC+D,CAAD,CAAc9O,CAAd,CAA8BN,CAA9B,CAAmD8C,CAAnD,CAAuElB,CAAvE,CACClC,CADD,CACgBoC,CADhB,CAC8BM,CAD9B,CACsC1D,CADtC,CACgD,CAgBxDqd,QAASA,EAAmB,EAAG,CAC7B,GAAI,CACF,GAAM,CAAA,EAAExB,EAAR,CAGE,KADAyB,GACM,CADWxwB,IAAAA,EACX,CAAAisB,CAAA,CAAe,SAAf,CAA8E6C,CAA9E,CAAN,CAGFxY,CAAArP,OAAA,CAAkB,QAAQ,EAAG,CAC3B,IAD2B,IAClBnM,EAAI,CADc,CACXY,EAAK80B,EAAAz2B,OAArB,CAA4Ce,CAA5C,CAAgDY,CAAhD,CAAoD,EAAEZ,CAAtD,CACE,GAAI,CACF01B,EAAA,CAAe11B,CAAf,CAAA,EADE,CAEF,MAAOsJ,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAKdosB,EAAA;AAAiBxwB,IAAAA,EATU,CAA7B,CAPE,CAAJ,OAkBU,CACR+uB,EAAA,EADQ,CAnBmB,CAyB/B0B,QAASA,GAAc,CAACx1B,CAAD,CAAQy1B,CAAR,CAAoB,CACzC,GAAKz1B,CAAAA,CAAL,CACE,MAAOA,EAET,IAAK,CAAApB,CAAA,CAASoB,CAAT,CAAL,CACE,KAAMgxB,EAAA,CAAe,QAAf,CAAuEyE,CAAvE,CAAmFz1B,CAAAuC,SAAA,EAAnF,CAAN,CAwBF,IAbA,IAAIskB,EAAS,EAAb,CAGI6O,EAAgBtW,CAAA,CAAKpf,CAAL,CAHpB,CAKI21B,EAAa,qCALjB,CAMIhf,EAAU,IAAAvT,KAAA,CAAUsyB,CAAV,CAAA,CAA2BC,CAA3B,CAAwC,KANtD,CASIC,EAAUF,CAAA/xB,MAAA,CAAoBgT,CAApB,CATd,CAYIkf,EAAoBC,IAAAC,MAAA,CAAWH,CAAA92B,OAAX,CAA4B,CAA5B,CAZxB,CAaSe,EAAI,CAAb,CAAgBA,CAAhB,CAAoBg2B,CAApB,CAAuCh2B,CAAA,EAAvC,CACE,IAAIm2B,EAAe,CAAfA,CAAWn2B,CAAf,CAEAgnB,EAAAA,CAAAA,CAAUlL,CAAAsa,mBAAA,CAAwB7W,CAAA,CAAKwW,CAAA,CAAQI,CAAR,CAAL,CAAxB,CAFV,CAIAnP,EAAAA,CAAAA,EAAU,GAAVA,CAAgBzH,CAAA,CAAKwW,CAAA,CAAQI,CAAR,CAAmB,CAAnB,CAAL,CAAhBnP,CAIEqP,EAAAA,CAAY9W,CAAA,CAAKwW,CAAA,CAAY,CAAZ,CAAQ/1B,CAAR,CAAL,CAAA8D,MAAA,CAA2B,IAA3B,CAGhBkjB,EAAA,EAAUlL,CAAAsa,mBAAA,CAAwB7W,CAAA,CAAK8W,CAAA,CAAU,CAAV,CAAL,CAAxB,CAGe,EAAzB,GAAIA,CAAAp3B,OAAJ,GACE+nB,CADF,EACa,GADb,CACmBzH,CAAA,CAAK8W,CAAA,CAAU,CAAV,CAAL,CADnB,CAGA,OAAOrP,EA/CkC,CAmD3CsP,QAASA,EAAU,CAACtyB,CAAD,CAAUuyB,CAAV,CAA4B,CAC7C,GAAIA,CAAJ,CAAsB,CACpB,IAAIz2B,EAAOZ,MAAAY,KAAA,CAAYy2B,CAAZ,CAAX,CACIv2B,CADJ,CACOw2B,CADP,CACUj3B,CAELS,EAAA,CAAI,CAAT,KAAYw2B,CAAZ,CAAgB12B,CAAAb,OAAhB,CAA6Be,CAA7B,CAAiCw2B,CAAjC,CAAoCx2B,CAAA,EAApC,CACET,CACA,CADMO,CAAA,CAAKE,CAAL,CACN,CAAA,IAAA,CAAKT,CAAL,CAAA,CAAYg3B,CAAA,CAAiBh3B,CAAjB,CANM,CAAtB,IASE,KAAAk3B,MAAA;AAAa,EAGf,KAAAC,UAAA,CAAiB1yB,CAb4B,CAqN/C2yB,QAASA,EAAc,CAAC3yB,CAAD,CAAUutB,CAAV,CAAoBpxB,CAApB,CAA2B,CAIhDy2B,EAAA5X,UAAA,CAA8B,QAA9B,CAAyCuS,CAAzC,CAAoD,GAChDsF,EAAAA,CAAaD,EAAA3X,WAAA4X,WACjB,KAAIC,EAAYD,CAAA,CAAW,CAAX,CAEhBA,EAAAE,gBAAA,CAA2BD,CAAAhsB,KAA3B,CACAgsB,EAAA32B,MAAA,CAAkBA,CAClB6D,EAAA6yB,WAAAG,aAAA,CAAgCF,CAAhC,CAVgD,CAalDG,QAASA,GAAY,CAACpE,CAAD,CAAWqE,CAAX,CAAsB,CACzC,GAAI,CACFrE,CAAA1N,SAAA,CAAkB+R,CAAlB,CADE,CAEF,MAAO5tB,CAAP,CAAU,EAH6B,CA0D3C4C,QAASA,GAAO,CAACirB,CAAD,CAAgBC,CAAhB,CAA8BC,CAA9B,CAA2CC,CAA3C,CACIC,CADJ,CAC4B,CACpCJ,CAAN,WAA+Bn4B,EAA/B,GAGEm4B,CAHF,CAGkBn4B,CAAA,CAAOm4B,CAAP,CAHlB,CAKA,KAAIK,EACIC,EAAA,CAAaN,CAAb,CAA4BC,CAA5B,CAA0CD,CAA1C,CACaE,CADb,CAC0BC,CAD1B,CAC2CC,CAD3C,CAERrrB,GAAAwrB,gBAAA,CAAwBP,CAAxB,CACA,KAAIQ,EAAY,IAChB,OAAOC,SAAqB,CAAC3rB,CAAD,CAAQ4rB,CAAR,CAAwBpM,CAAxB,CAAiC,CAC3D,GAAK0L,CAAAA,CAAL,CACE,KAAMhG,EAAA,CAAe,WAAf,CAAN,CAEFriB,EAAA,CAAU7C,CAAV,CAAiB,OAAjB,CAEIsrB,EAAJ,EAA8BA,CAAAO,cAA9B,GAKE7rB,CALF,CAKUA,CAAA8rB,QAAAC,KAAA,EALV,CAQAvM,EAAA,CAAUA,CAAV,EAAqB,EAdsC,KAevDwM,EAA0BxM,CAAAwM,wBAf6B,CAgBzDC,EAAwBzM,CAAAyM,sBACxBC,EAAAA,CAAsB1M,CAAA0M,oBAMpBF;CAAJ,EAA+BA,CAAAG,kBAA/B,GACEH,CADF,CAC4BA,CAAAG,kBAD5B,CAIKT,EAAL,GA6CA,CA7CA,CA0CF,CADIn0B,CACJ,CAzCgD20B,CAyChD,EAzCgDA,CAwCpB,CAAc,CAAd,CAC5B,EAG6B,eAApB,GAAAp0B,EAAA,CAAUP,CAAV,CAAA,EAAuCd,EAAAhD,KAAA,CAAc8D,CAAd,CAAAoC,MAAA,CAA0B,KAA1B,CAAvC,CAA0E,KAA1E,CAAkF,MAH3F,CACS,MA3CP,CAUEyyB,EAAA,CANgB,MAAlB,GAAIV,CAAJ,CAMc34B,CAAA,CACVs5B,EAAA,CAAaX,CAAb,CAAwB34B,CAAA,CAAO,aAAP,CAAAkK,OAAA,CAA6BiuB,CAA7B,CAAAhuB,KAAA,EAAxB,CADU,CANd,CASW0uB,CAAJ,CAGO9pB,EAAAvM,MAAA9B,KAAA,CAA2By3B,CAA3B,CAHP,CAKOA,CAGd,IAAIe,CAAJ,CACE,IAASK,IAAAA,CAAT,GAA2BL,EAA3B,CACEG,CAAAjsB,KAAA,CAAe,GAAf,CAAqBmsB,CAArB,CAAsC,YAAtC,CAAoDL,CAAA,CAAsBK,CAAtB,CAAAC,SAApD,CAIJtsB,GAAAusB,eAAA,CAAuBJ,CAAvB,CAAkCpsB,CAAlC,CAEI4rB,EAAJ,EAAoBA,CAAA,CAAeQ,CAAf,CAA0BpsB,CAA1B,CAChBurB,EAAJ,EAAqBA,CAAA,CAAgBvrB,CAAhB,CAAuBosB,CAAvB,CAAkCA,CAAlC,CAA6CJ,CAA7C,CAEhBJ,EAAL,GACEV,CADF,CACkBK,CADlB,CACoC,IADpC,CAGA,OAAOa,EA9DoD,CAXnB,CAsG5CZ,QAASA,GAAY,CAACiB,CAAD,CAAWtB,CAAX,CAAyBuB,CAAzB,CAAuCtB,CAAvC,CAAoDC,CAApD,CACGC,CADH,CAC2B,CAqD9CC,QAASA,EAAe,CAACvrB,CAAD,CAAQysB,CAAR,CAAkBC,CAAlB,CAAgCV,CAAhC,CAAyD,CAAA,IAC/DW,CAD+D,CAClDp1B,CADkD,CAC5Cq1B,CAD4C,CAChC74B,CADgC,CAC7BY,CAD6B,CACpBk4B,CADoB,CAE3EC,CAGJ,IAAIC,CAAJ,CAOE,IAHAD,CAGK,CAHgBj2B,KAAJ,CADI41B,CAAAz5B,OACJ,CAGZ,CAAAe,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBi5B,CAAAh6B,OAAhB,CAAgCe,CAAhC,EAAqC,CAArC,CACEk5B,CACA,CADMD,CAAA,CAAQj5B,CAAR,CACN,CAAA+4B,CAAA,CAAeG,CAAf,CAAA,CAAsBR,CAAA,CAASQ,CAAT,CAT1B,KAYEH,EAAA,CAAiBL,CAGd14B,EAAA,CAAI,CAAT,KAAYY,CAAZ,CAAiBq4B,CAAAh6B,OAAjB,CAAiCe,CAAjC;AAAqCY,CAArC,CAAA,CACE4C,CAIA,CAJOu1B,CAAA,CAAeE,CAAA,CAAQj5B,CAAA,EAAR,CAAf,CAIP,CAHAm5B,CAGA,CAHaF,CAAA,CAAQj5B,CAAA,EAAR,CAGb,CAFA44B,CAEA,CAFcK,CAAA,CAAQj5B,CAAA,EAAR,CAEd,CAAIm5B,CAAJ,EACMA,CAAAltB,MAAJ,EACE4sB,CACA,CADa5sB,CAAA+rB,KAAA,EACb,CAAA9rB,EAAAusB,eAAA,CAAuBz5B,CAAA,CAAOwE,CAAP,CAAvB,CAAqCq1B,CAArC,CAFF,EAIEA,CAJF,CAIe5sB,CAiBf,CAbE6sB,CAaF,CAdIK,CAAAC,wBAAJ,CAC2BC,EAAA,CACrBptB,CADqB,CACdktB,CAAA/F,WADc,CACS6E,CADT,CAD3B,CAIYqB,CAAAH,CAAAG,sBAAL,EAAyCrB,CAAzC,CACoBA,CADpB,CAGKA,CAAAA,CAAL,EAAgCb,CAAhC,CACoBiC,EAAA,CAAwBptB,CAAxB,CAA+BmrB,CAA/B,CADpB,CAIoB,IAG3B,CAAA+B,CAAA,CAAWP,CAAX,CAAwBC,CAAxB,CAAoCr1B,CAApC,CAA0Cm1B,CAA1C,CAAwDG,CAAxD,CAtBF,EAwBWF,CAxBX,EAyBEA,CAAA,CAAY3sB,CAAZ,CAAmBzI,CAAA2b,WAAnB,CAAoCja,IAAAA,EAApC,CAA+C+yB,CAA/C,CAlD2E,CA7CjF,IAR8C,IAC1CgB,EAAU,EADgC,CAI1CM,EAAcz6B,CAAA,CAAQ45B,CAAR,CAAda,EAAoCb,CAApCa,WAAwDv6B,EAJd,CAK1Cw6B,CAL0C,CAKnCnH,CALmC,CAKXlT,CALW,CAKcsa,CALd,CAK2BT,CAL3B,CAQrCh5B,EAAI,CAAb,CAAgBA,CAAhB,CAAoB04B,CAAAz5B,OAApB,CAAqCe,CAAA,EAArC,CAA0C,CACxCw5B,CAAA,CAAQ,IAAIlD,CAIC,GAAb,GAAI1X,EAAJ,EACE8a,EAAA,CAA0BhB,CAA1B,CAAoC14B,CAApC,CAAuCu5B,CAAvC,CAKFlH,EAAA,CAAasH,EAAA,CAAkBjB,CAAA,CAAS14B,CAAT,CAAlB,CAA+B,EAA/B,CAAmCw5B,CAAnC,CAAgD,CAAN,GAAAx5B,CAAA,CAAUq3B,CAAV,CAAwBnyB,IAAAA,EAAlE,CACmBoyB,CADnB,CAQb,EALA6B,CAKA,CALc9G,CAAApzB,OAAD,CACP26B,EAAA,CAAsBvH,CAAtB,CAAkCqG,CAAA,CAAS14B,CAAT,CAAlC,CAA+Cw5B,CAA/C,CAAsDpC,CAAtD,CAAoEuB,CAApE,CACwB,IADxB,CAC8B,EAD9B,CACkC,EADlC,CACsCpB,CADtC,CADO,CAGP,IAEN,GAAkB4B,CAAAltB,MAAlB,EACEC,EAAAwrB,gBAAA,CAAwB8B,CAAA9C,UAAxB,CAGFkC,EAAA,CAAeO,CAAD,EAAeA,CAAAU,SAAf,EACE,EAAA1a,CAAA,CAAauZ,CAAA,CAAS14B,CAAT,CAAAmf,WAAb,CADF,EAEClgB,CAAAkgB,CAAAlgB,OAFD,CAGR,IAHQ,CAIRw4B,EAAA,CAAatY,CAAb;AACGga,CAAA,EACEA,CAAAC,wBADF,EACwC,CAACD,CAAAG,sBADzC,GAEOH,CAAA/F,WAFP,CAEgCgE,CAHnC,CAKN,IAAI+B,CAAJ,EAAkBP,CAAlB,CACEK,CAAAt0B,KAAA,CAAa3E,CAAb,CAAgBm5B,CAAhB,CAA4BP,CAA5B,CAEA,CADAa,CACA,CADc,CAAA,CACd,CAAAT,CAAA,CAAkBA,CAAlB,EAAqCG,CAIvC5B,EAAA,CAAyB,IAvCe,CA2C1C,MAAOkC,EAAA,CAAcjC,CAAd,CAAgC,IAnDO,CA6GhDkC,QAASA,GAAyB,CAAChB,CAAD,CAAWQ,CAAX,CAAgBK,CAAhB,CAA6B,CAC7D,IAAI/1B,EAAOk1B,CAAA,CAASQ,CAAT,CAAX,CACIj3B,EAASuB,CAAA6e,WADb,CAEIyX,CAEJ,IAAIt2B,CAAA4F,SAAJ,GAAsBC,EAAtB,CAIA,IAAA,CAAA,CAAA,CAAa,CACXywB,CAAA,CAAU73B,CAAA,CAASuB,CAAAqM,YAAT,CAA4B6oB,CAAA,CAASQ,CAAT,CAAe,CAAf,CACtC,IAAKY,CAAAA,CAAL,EAAgBA,CAAA1wB,SAAhB,GAAqCC,EAArC,CACE,KAGF7F,EAAAu2B,UAAA,EAAkCD,CAAAC,UAE9BD,EAAAzX,WAAJ,EACEyX,CAAAzX,WAAAI,YAAA,CAA+BqX,CAA/B,CAEEP,EAAJ,EAAmBO,CAAnB,GAA+BpB,CAAA,CAASQ,CAAT,CAAe,CAAf,CAA/B,EACER,CAAAp0B,OAAA,CAAgB40B,CAAhB,CAAsB,CAAtB,CAAyB,CAAzB,CAZS,CATgD,CA0B/DG,QAASA,GAAuB,CAACptB,CAAD,CAAQmrB,CAAR,CAAsB4C,CAAtB,CAAiD,CAC/EC,QAASA,EAAiB,CAACC,CAAD,CAAmBC,CAAnB,CAA4BC,CAA5B,CAAyCjC,CAAzC,CAA8DkC,CAA9D,CAA+E,CAElGH,CAAL,GACEA,CACA,CADmBjuB,CAAA+rB,KAAA,CAAW,CAAA,CAAX,CAAkBqC,CAAlB,CACnB,CAAAH,CAAAI,cAAA,CAAiC,CAAA,CAFnC,CAKA,OAAOlD,EAAA,CAAa8C,CAAb,CAA+BC,CAA/B,CAAwC,CAC7ClC,wBAAyB+B,CADoB,CAE7C9B,sBAAuBkC,CAFsB;AAG7CjC,oBAAqBA,CAHwB,CAAxC,CAPgG,CAgBzG,IAAIoC,EAAaN,CAAAO,QAAbD,CAAyC9zB,CAAA,EAA7C,CACSg0B,CAAT,KAASA,CAAT,GAAqBrD,EAAAoD,QAArB,CAEID,CAAA,CAAWE,CAAX,CAAA,CADErD,CAAAoD,QAAA,CAAqBC,CAArB,CAAJ,CACyBpB,EAAA,CAAwBptB,CAAxB,CAA+BmrB,CAAAoD,QAAA,CAAqBC,CAArB,CAA/B,CAA+DT,CAA/D,CADzB,CAGyB,IAI3B,OAAOC,EA1BwE,CAuCjFN,QAASA,GAAiB,CAACn2B,CAAD,CAAO6uB,CAAP,CAAmBmH,CAAnB,CAA0BnC,CAA1B,CAAuCC,CAAvC,CAAwD,CAAA,IAE5EoD,EAAWlB,CAAA/C,MAFiE,CAI5Ep1B,CAGJ,QANemC,CAAA4F,SAMf,EACE,KAlnPgB2U,CAknPhB,CAEE1c,CAAA,CAAW0C,EAAA,CAAUP,CAAV,CAGXm3B,EAAA,CAAatI,CAAb,CACIuI,EAAA,CAAmBv5B,CAAnB,CADJ,CACkC,GADlC,CACuCg2B,CADvC,CACoDC,CADpD,CAIA,KATF,IASW5zB,CATX,CASiBoH,CATjB,CASuB+vB,CATvB,CAS8B16B,CAT9B,CASqC26B,CATrC,CASoDC,EAASv3B,CAAAqzB,WAT7D,CAUWh2B,EAAI,CAVf,CAUkBC,EAAKi6B,CAALj6B,EAAei6B,CAAA97B,OAD/B,CAC8C4B,CAD9C,CACkDC,CADlD,CACsDD,CAAA,EADtD,CAC2D,CACzD,IAAIm6B,EAAgB,CAAA,CAApB,CACIC,EAAc,CAAA,CADlB,CAGIC,EAAW,CAAA,CAHf,CAGsBC,EAAW,CAAA,CAHjC,CAGwCC,EAAY,CAAA,CAHpD,CAIIC,CAEJ33B,EAAA,CAAOq3B,CAAA,CAAOl6B,CAAP,CACPiK,EAAA,CAAOpH,CAAAoH,KACP3K,EAAA,CAAQuD,CAAAvD,MAER06B,EAAA,CAAQD,EAAA,CAAmB9vB,CAAAyC,YAAA,EAAnB,CAGR,EAAKutB,CAAL,CAAqBD,CAAAj1B,MAAA,CAAY01B,EAAZ,CAArB,GACEJ,CAKA,CALgC,MAKhC,GALWJ,CAAA,CAAc,CAAd,CAKX,CAJAK,CAIA,CAJgC,MAIhC,GAJWL,CAAA,CAAc,CAAd,CAIX,CAHAM,CAGA,CAHiC,IAGjC,GAHYN,CAAA,CAAc,CAAd,CAGZ,CAAAhwB,CAAA,CAAOA,CAAA7C,QAAA,CAAaszB,EAAb,CAA4B,EAA5B,CAAAhuB,YAAA,EAAAogB,OAAA,CAEG,CAFH,CAEOmN,CAAA,CAAc,CAAd,CAAA77B,OAFP,CAAAgJ,QAAA,CAEwC,OAFxC,CAEiD,QAAQ,CAACrC,CAAD,CAAQyH,CAAR,CAAgB,CAC5E,MAAOA,EAAAsQ,YAAA,EADqE,CAFzE,CANT;CAaY0d,CAbZ,CAagCR,CAAAj1B,MAAA,CAAY41B,EAAZ,CAbhC,GAasEC,EAAA,CAAwBJ,CAAA,CAAkB,CAAlB,CAAxB,CAbtE,GAcEL,CAEA,CAFgBlwB,CAEhB,CADAmwB,CACA,CADcnwB,CAAA6iB,OAAA,CAAY,CAAZ,CAAe7iB,CAAA7L,OAAf,CAA6B,CAA7B,CACd,CADgD,KAChD,CAAA6L,CAAA,CAAOA,CAAA6iB,OAAA,CAAY,CAAZ,CAAe7iB,CAAA7L,OAAf,CAA6B,CAA7B,CAhBT,CAmBA,IAAIk8B,CAAJ,EAAgBC,CAAhB,CACE5B,CAAA,CAAMqB,CAAN,CAGA,CAHe16B,CAGf,CAFAu6B,CAAA,CAASG,CAAT,CAEA,CAFkBn3B,CAAAoH,KAElB,CAAIqwB,CAAJ,CACEO,EAAA,CAAqBl4B,CAArB,CAA2B6uB,CAA3B,CAAuCwI,CAAvC,CAA8C/vB,CAA9C,CADF,CAGoBunB,CAunC5B1tB,KAAA,CACEg3B,EAAA,CAAqBrgB,CAArB,CAA6BE,CAA7B,CAAyC9B,CAAzC,CAxnCsCmhB,CAwnCtC,CAxnC6C/vB,CAwnC7C,CAAgG,CAAA,CAAhG,CADF,CA9nCM,KASO,CAGL+vB,CAAA,CAAQD,EAAA,CAAmB9vB,CAAAyC,YAAA,EAAnB,CACRmtB,EAAA,CAASG,CAAT,CAAA,CAAkB/vB,CAElB,IAAIowB,CAAJ,EAAiB,CAAA1B,CAAA/5B,eAAA,CAAqBo7B,CAArB,CAAjB,CACErB,CAAA,CAAMqB,CAAN,CACA,CADe16B,CACf,CAAIgjB,EAAA,CAAmB3f,CAAnB,CAAyBq3B,CAAzB,CAAJ,GACErB,CAAA,CAAMqB,CAAN,CADF,CACiB,CAAA,CADjB,CAKFe,GAAA,CAA4Bp4B,CAA5B,CAAkC6uB,CAAlC,CAA8ClyB,CAA9C,CAAqD06B,CAArD,CAA4DK,CAA5D,CACAP,EAAA,CAAatI,CAAb,CAAyBwI,CAAzB,CAAgC,GAAhC,CAAqCxD,CAArC,CAAkDC,CAAlD,CAAmE0D,CAAnE,CACcC,CADd,CAdK,CA1CkD,CA6D1C,OAAjB,GAAI55B,CAAJ,EAA0D,QAA1D,GAA4BmC,CAAAgH,aAAA,CAAkB,MAAlB,CAA5B,EAGEhH,CAAAke,aAAA,CAAkB,cAAlB,CAAkC,KAAlC,CAIF,IAAK6S,CAAAA,EAAL,CAAgC,KAChC2C,EAAA,CAAY1zB,CAAA0zB,UACRl5B,EAAA,CAASk5B,CAAT,CAAJ,GAEIA,CAFJ,CAEgBA,CAAA2E,QAFhB,CAIA,IAAI98B,CAAA,CAASm4B,CAAT,CAAJ,EAAyC,EAAzC,GAA2BA,CAA3B,CACE,IAAA,CAAQtxB,CAAR,CAAgBksB,CAAApT,KAAA,CAA4BwY,CAA5B,CAAhB,CAAA,CACE2D,CAIA,CAJQD,EAAA,CAAmBh1B,CAAA,CAAM,CAAN,CAAnB,CAIR,CAHI+0B,CAAA,CAAatI,CAAb,CAAyBwI,CAAzB,CAAgC,GAAhC,CAAqCxD,CAArC,CAAkDC,CAAlD,CAGJ,GAFEkC,CAAA,CAAMqB,CAAN,CAEF,CAFiBtb,CAAA,CAAK3Z,CAAA,CAAM,CAAN,CAAL,CAEjB,EAAAsxB,CAAA,CAAYA,CAAAvJ,OAAA,CAAiB/nB,CAAAxB,MAAjB;AAA+BwB,CAAA,CAAM,CAAN,CAAA3G,OAA/B,CAGhB,MACF,MAAKoK,EAAL,CACEyyB,EAAA,CAA4BzJ,CAA5B,CAAwC7uB,CAAAu2B,UAAxC,CACA,MACF,MAhtPgBgC,CAgtPhB,CACE,GAAK3H,CAAAA,EAAL,CAA+B,KAC/B4H,EAAA,CAAyBx4B,CAAzB,CAA+B6uB,CAA/B,CAA2CmH,CAA3C,CAAkDnC,CAAlD,CAA+DC,CAA/D,CApGJ,CAwGAjF,CAAAtyB,KAAA,CAAgBk8B,EAAhB,CACA,OAAO5J,EAhHyE,CAmHlF2J,QAASA,EAAwB,CAACx4B,CAAD,CAAO6uB,CAAP,CAAmBmH,CAAnB,CAA0BnC,CAA1B,CAAuCC,CAAvC,CAAwD,CAGvF,GAAI,CACF,IAAI1xB,EAAQisB,CAAAnT,KAAA,CAA8Blb,CAAAu2B,UAA9B,CACZ,IAAIn0B,CAAJ,CAAW,CACT,IAAIi1B,EAAQD,EAAA,CAAmBh1B,CAAA,CAAM,CAAN,CAAnB,CACR+0B,EAAA,CAAatI,CAAb,CAAyBwI,CAAzB,CAAgC,GAAhC,CAAqCxD,CAArC,CAAkDC,CAAlD,CAAJ,GACEkC,CAAA,CAAMqB,CAAN,CADF,CACiBtb,CAAA,CAAK3Z,CAAA,CAAM,CAAN,CAAL,CADjB,CAFS,CAFT,CAQF,MAAO0D,CAAP,CAAU,EAX2E,CA0BzF4yB,QAASA,EAAS,CAAC14B,CAAD,CAAO24B,CAAP,CAAkBC,CAAlB,CAA2B,CAC3C,IAAI1sB,EAAQ,EAAZ,CACI2sB,EAAQ,CACZ,IAAIF,CAAJ,EAAiB34B,CAAAuH,aAAjB,EAAsCvH,CAAAuH,aAAA,CAAkBoxB,CAAlB,CAAtC,EACE,EAAG,CACD,GAAK34B,CAAAA,CAAL,CACE,KAAM2tB,EAAA,CAAe,SAAf,CAEIgL,CAFJ,CAEeC,CAFf,CAAN,CA7vPYre,CAiwPd,GAAIva,CAAA4F,SAAJ,GACM5F,CAAAuH,aAAA,CAAkBoxB,CAAlB,CACJ,EADkCE,CAAA,EAClC,CAAI74B,CAAAuH,aAAA,CAAkBqxB,CAAlB,CAAJ,EAAgCC,CAAA,EAFlC,CAIA3sB,EAAA/K,KAAA,CAAWnB,CAAX,CACAA,EAAA,CAAOA,CAAAqM,YAXN,CAAH,MAYiB,CAZjB,CAYSwsB,CAZT,CADF,KAeE3sB,EAAA/K,KAAA,CAAWnB,CAAX,CAGF,OAAOxE,EAAA,CAAO0Q,CAAP,CArBoC,CAgC7C4sB,QAASA,EAA0B,CAACC,CAAD,CAASJ,CAAT,CAAoBC,CAApB,CAA6B,CAC9D,MAAOI,SAA4B,CAACvwB,CAAD,CAAQjI,CAAR,CAAiBw1B,CAAjB,CAAwBY,CAAxB,CAAqChD,CAArC,CAAmD,CACpFpzB,CAAA,CAAUk4B,CAAA,CAAUl4B,CAAA,CAAQ,CAAR,CAAV;AAAsBm4B,CAAtB,CAAiCC,CAAjC,CACV,OAAOG,EAAA,CAAOtwB,CAAP,CAAcjI,CAAd,CAAuBw1B,CAAvB,CAA8BY,CAA9B,CAA2ChD,CAA3C,CAF6E,CADxB,CAkBhEqF,QAASA,EAAoB,CAACC,CAAD,CAAQvF,CAAR,CAAuBC,CAAvB,CAAqCC,CAArC,CAAkDC,CAAlD,CAAmEC,CAAnE,CAA2F,CACtH,IAAIoF,CAEJ,OAAID,EAAJ,CACSxwB,EAAA,CAAQirB,CAAR,CAAuBC,CAAvB,CAAqCC,CAArC,CAAkDC,CAAlD,CAAmEC,CAAnE,CADT,CAGoBqF,QAAwB,EAAG,CACxCD,CAAL,GACEA,CAIA,CAJWzwB,EAAA,CAAQirB,CAAR,CAAuBC,CAAvB,CAAqCC,CAArC,CAAkDC,CAAlD,CAAmEC,CAAnE,CAIX,CAAAJ,CAAA,CAAgBC,CAAhB,CAA+BG,CAA/B,CAAwD,IAL1D,CAOA,OAAOoF,EAAAx1B,MAAA,CAAe,IAAf,CAAqBxF,SAArB,CARsC,CANuE,CAyCxHi4B,QAASA,GAAqB,CAACvH,CAAD,CAAawK,CAAb,CAA0BC,CAA1B,CAAyC1F,CAAzC,CACC2F,CADD,CACeC,CADf,CACyCC,CADzC,CACqDC,CADrD,CAEC3F,CAFD,CAEyB,CA6SrD4F,QAASA,EAAU,CAACC,CAAD,CAAMC,CAAN,CAAYlB,CAAZ,CAAuBC,CAAvB,CAAgC,CACjD,GAAIgB,CAAJ,CAAS,CACHjB,CAAJ,GAAeiB,CAAf,CAAqBd,CAAA,CAA2Bc,CAA3B,CAAgCjB,CAAhC,CAA2CC,CAA3C,CAArB,CACAgB,EAAA1L,QAAA,CAAc/f,CAAA+f,QACd0L,EAAAxM,cAAA,CAAoBA,CACpB,IAAI0M,CAAJ,GAAiC3rB,CAAjC,EAA8CA,CAAA4rB,eAA9C,CACEH,CAAA,CAAMI,EAAA,CAAmBJ,CAAnB,CAAwB,CAACpvB,aAAc,CAAA,CAAf,CAAxB,CAERivB,EAAAt4B,KAAA,CAAgBy4B,CAAhB,CAPO,CAST,GAAIC,CAAJ,CAAU,CACJlB,CAAJ,GAAekB,CAAf,CAAsBf,CAAA,CAA2Be,CAA3B,CAAiClB,CAAjC,CAA4CC,CAA5C,CAAtB,CACAiB,EAAA3L,QAAA,CAAe/f,CAAA+f,QACf2L,EAAAzM,cAAA,CAAqBA,CACrB,IAAI0M,CAAJ,GAAiC3rB,CAAjC,EAA8CA,CAAA4rB,eAA9C,CACEF,CAAA,CAAOG,EAAA,CAAmBH,CAAnB,CAAyB,CAACrvB,aAAc,CAAA,CAAf,CAAzB,CAETkvB,EAAAv4B,KAAA,CAAiB04B,CAAjB,CAPQ,CAVuC,CAqBnDlE,QAASA,EAAU,CAACP,CAAD,CAAc3sB,CAAd,CAAqBwxB,CAArB,CAA+B9E,CAA/B,CAA6CsB,CAA7C,CAAgE,CA8IjFyD,QAASA,EAA0B,CAACzxB,CAAD,CAAQ0xB,CAAR,CAAuBxF,CAAvB,CAA4CsC,CAA5C,CAAsD,CACvF,IAAIvC,CAECh1B,GAAA,CAAQ+I,CAAR,CAAL;CACEwuB,CAGA,CAHWtC,CAGX,CAFAA,CAEA,CAFsBwF,CAEtB,CADAA,CACA,CADgB1xB,CAChB,CAAAA,CAAA,CAAQ/G,IAAAA,EAJV,CAOI04B,EAAJ,GACE1F,CADF,CAC0B2F,CAD1B,CAGK1F,EAAL,GACEA,CADF,CACwByF,CAAA,CAAgC/K,CAAA5wB,OAAA,EAAhC,CAAoD4wB,CAD5E,CAGA,IAAI4H,CAAJ,CAAc,CAKZ,IAAIqD,EAAmB7D,CAAAO,QAAA,CAA0BC,CAA1B,CACvB,IAAIqD,CAAJ,CACE,MAAOA,EAAA,CAAiB7xB,CAAjB,CAAwB0xB,CAAxB,CAAuCzF,CAAvC,CAA8DC,CAA9D,CAAmF4F,CAAnF,CACF,IAAIp7B,CAAA,CAAYm7B,CAAZ,CAAJ,CACL,KAAM3M,EAAA,CAAe,QAAf,CAGLsJ,CAHK,CAGK1xB,EAAA,CAAY8pB,CAAZ,CAHL,CAAN,CATU,CAAd,IAeE,OAAOoH,EAAA,CAAkBhuB,CAAlB,CAAyB0xB,CAAzB,CAAwCzF,CAAxC,CAA+DC,CAA/D,CAAoF4F,CAApF,CA/B8E,CA9IR,IAC7E/9B,CAD6E,CAC1EY,CAD0E,CACtE27B,CADsE,CAC9DvuB,CAD8D,CAChDgwB,CADgD,CAC/BH,CAD+B,CACXzG,CADW,CACGvE,CAGhFgK,EAAJ,GAAoBY,CAApB,EACEjE,CACA,CADQsD,CACR,CAAAjK,CAAA,CAAWiK,CAAApG,UAFb,GAIE7D,CACA,CADW7zB,CAAA,CAAOy+B,CAAP,CACX,CAAAjE,CAAA,CAAQ,IAAIlD,CAAJ,CAAezD,CAAf,CAAyBiK,CAAzB,CALV,CAQAkB,EAAA,CAAkB/xB,CACdqxB,EAAJ,CACEtvB,CADF,CACiB/B,CAAA+rB,KAAA,CAAW,CAAA,CAAX,CADjB,CAEWiG,CAFX,GAGED,CAHF,CAGoB/xB,CAAA8rB,QAHpB,CAMIkC,EAAJ,GAGE7C,CAGA,CAHesG,CAGf,CAFAtG,CAAAgB,kBAEA,CAFiC6B,CAEjC,CAAA7C,CAAA8G,aAAA,CAA4BC,QAAQ,CAAC1D,CAAD,CAAW,CAC7C,MAAO,CAAE,CAAAR,CAAAO,QAAA,CAA0BC,CAA1B,CADoC,CANjD,CAWI2D,EAAJ,GACEP,CADF,CACuBQ,EAAA,CAAiBxL,CAAjB,CAA2B2G,CAA3B,CAAkCpC,CAAlC,CAAgDgH,CAAhD,CAAsEpwB,CAAtE,CAAoF/B,CAApF,CAA2FqxB,CAA3F,CADvB,CAIIA,EAAJ,GAEEpxB,EAAAusB,eAAA,CAAuB5F,CAAvB,CAAiC7kB,CAAjC,CAA+C,CAAA,CAA/C,CAAqD,EAAEswB,CAAF,GAAwBA,CAAxB,GAA8ChB,CAA9C,EACjDgB,CADiD,GAC3BhB,CAAAiB,oBAD2B,EAArD,CAQA,CANAryB,EAAAwrB,gBAAA,CAAwB7E,CAAxB,CAAkC,CAAA,CAAlC,CAMA,CALA7kB,CAAAwwB,kBAKA,CAJIlB,CAAAkB,kBAIJ;AAHAC,CAGA,CAHmBC,EAAA,CAA4BzyB,CAA5B,CAAmCutB,CAAnC,CAA0CxrB,CAA1C,CACWA,CAAAwwB,kBADX,CAEWlB,CAFX,CAGnB,CAAImB,CAAAE,cAAJ,EACE3wB,CAAA4wB,IAAA,CAAiB,UAAjB,CAA6BH,CAAAE,cAA7B,CAXJ,CAgBA,KAAS7zB,CAAT,GAAiB+yB,EAAjB,CAAqC,CAC/BgB,CAAAA,CAAsBT,CAAA,CAAqBtzB,CAArB,CACtBmD,EAAAA,CAAa4vB,CAAA,CAAmB/yB,CAAnB,CACjB,KAAIimB,GAAW8N,CAAAC,WAAAzL,iBAEfplB,EAAAuqB,SAAA,CAAsBvqB,CAAA,EACtB4kB,EAAAzmB,KAAA,CAAc,GAAd,CAAoByyB,CAAA/zB,KAApB,CAA+C,YAA/C,CAA6DmD,CAAAuqB,SAA7D,CACAvqB,EAAA8wB,YAAA,CACEL,EAAA,CAA4BV,CAA5B,CAA6CxE,CAA7C,CAAoDvrB,CAAAuqB,SAApD,CAAyEzH,EAAzE,CAAmF8N,CAAnF,CARiC,CAYrCz/B,CAAA,CAAQg/B,CAAR,CAA8B,QAAQ,CAACS,CAAD,CAAsB/zB,CAAtB,CAA4B,CAChE,IAAI4mB,EAAUmN,CAAAnN,QACVmN,EAAAxL,iBAAJ,EAA6C,CAAAv0B,CAAA,CAAQ4yB,CAAR,CAA7C,EAAiE1zB,CAAA,CAAS0zB,CAAT,CAAjE,EACEjwB,CAAA,CAAOo8B,CAAA,CAAmB/yB,CAAnB,CAAA0tB,SAAP,CAA0CwG,CAAA,CAAel0B,CAAf,CAAqB4mB,CAArB,CAA8BmB,CAA9B,CAAwCgL,CAAxC,CAA1C,CAH8D,CAAlE,CAQAz+B,EAAA,CAAQy+B,CAAR,CAA4B,QAAQ,CAAC5vB,CAAD,CAAa,CAC/C,IAAIgxB,EAAqBhxB,CAAAuqB,SACzB,IAAIh5B,CAAA,CAAWy/B,CAAAC,WAAX,CAAJ,CACE,GAAI,CACFD,CAAAC,WAAA,CAA8BjxB,CAAA8wB,YAAAI,eAA9B,CADE,CAEF,MAAO71B,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAId,GAAI9J,CAAA,CAAWy/B,CAAAG,QAAX,CAAJ,CACE,GAAI,CACFH,CAAAG,QAAA,EADE,CAEF,MAAO91B,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAIV9J,CAAA,CAAWy/B,CAAAI,SAAX,CAAJ;CACErB,CAAA56B,OAAA,CAAuB,QAAQ,EAAG,CAAE67B,CAAAI,SAAA,EAAF,CAAlC,CACA,CAAAJ,CAAAI,SAAA,EAFF,CAII7/B,EAAA,CAAWy/B,CAAAK,WAAX,CAAJ,EACEtB,CAAAY,IAAA,CAAoB,UAApB,CAAgCW,QAA0B,EAAG,CAC3DN,CAAAK,WAAA,EAD2D,CAA7D,CArB6C,CAAjD,CA4BKt/B,EAAA,CAAI,CAAT,KAAYY,CAAZ,CAAiBq8B,CAAAh+B,OAAjB,CAAoCe,CAApC,CAAwCY,CAAxC,CAA4CZ,CAAA,EAA5C,CACEu8B,CACA,CADSU,CAAA,CAAWj9B,CAAX,CACT,CAAAw/B,EAAA,CAAajD,CAAb,CACIA,CAAAvuB,aAAA,CAAsBA,CAAtB,CAAqC/B,CADzC,CAEI4mB,CAFJ,CAGI2G,CAHJ,CAII+C,CAAA7K,QAJJ,EAIsBsN,CAAA,CAAezC,CAAA3L,cAAf,CAAqC2L,CAAA7K,QAArC,CAAqDmB,CAArD,CAA+DgL,CAA/D,CAJtB,CAKIzG,CALJ,CAYF,KAAI2G,EAAe9xB,CACfqxB,EAAJ,GAAiCA,CAAAvK,SAAjC,EAA+G,IAA/G,GAAsEuK,CAAAtK,YAAtE,IACE+K,CADF,CACiB/vB,CADjB,CAGI4qB,EAAJ,EACEA,CAAA,CAAYmF,CAAZ,CAA0BN,CAAAte,WAA1B,CAA+Cja,IAAAA,EAA/C,CAA0D+0B,CAA1D,CAIF,KAAKj6B,CAAL,CAASk9B,CAAAj+B,OAAT,CAA8B,CAA9B,CAAsC,CAAtC,EAAiCe,CAAjC,CAAyCA,CAAA,EAAzC,CACEu8B,CACA,CADSW,CAAA,CAAYl9B,CAAZ,CACT,CAAAw/B,EAAA,CAAajD,CAAb,CACIA,CAAAvuB,aAAA,CAAsBA,CAAtB,CAAqC/B,CADzC,CAEI4mB,CAFJ,CAGI2G,CAHJ,CAII+C,CAAA7K,QAJJ,EAIsBsN,CAAA,CAAezC,CAAA3L,cAAf,CAAqC2L,CAAA7K,QAArC,CAAqDmB,CAArD,CAA+DgL,CAA/D,CAJtB,CAKIzG,CALJ,CAUFh4B,EAAA,CAAQy+B,CAAR,CAA4B,QAAQ,CAAC5vB,CAAD,CAAa,CAC3CgxB,CAAAA,CAAqBhxB,CAAAuqB,SACrBh5B,EAAA,CAAWy/B,CAAAQ,UAAX,CAAJ,EACER,CAAAQ,UAAA,EAH6C,CAAjD,CArIiF,CAjUnFlI,CAAA,CAAyBA,CAAzB,EAAmD,EAuBnD,KAxBqD,IAGjDmI,EAAmB,CAAC1P,MAAAC,UAH6B;AAIjDgO,EAAoB1G,CAAA0G,kBAJ6B,CAKjDG,EAAuB7G,CAAA6G,qBAL0B,CAMjDd,EAA2B/F,CAAA+F,yBANsB,CAOjDgB,EAAoB/G,CAAA+G,kBAP6B,CAQjDqB,EAA4BpI,CAAAoI,0BARqB,CASjDC,EAAyB,CAAA,CATwB,CAUjDC,EAAc,CAAA,CAVmC,CAWjDjC,EAAgCrG,CAAAqG,8BAXiB,CAYjDkC,EAAehD,CAAApG,UAAfoJ,CAAyC9gC,CAAA,CAAO69B,CAAP,CAZQ,CAajDlrB,CAbiD,CAcjDif,CAdiD,CAejDmP,CAfiD,CAiBjDC,EAAoB5I,CAjB6B,CAkBjDmF,CAlBiD,CAmBjD0D,GAAiC,CAAA,CAnBgB,CAoBjDC,GAAqC,CAAA,CApBY,CAqBjDC,CArBiD,CAwB5CngC,GAAI,CAxBwC,CAwBrCY,EAAKyxB,CAAApzB,OAArB,CAAwCe,EAAxC,CAA4CY,CAA5C,CAAgDZ,EAAA,EAAhD,CAAqD,CACnD2R,CAAA,CAAY0gB,CAAA,CAAWryB,EAAX,CACZ,KAAIm8B,EAAYxqB,CAAAyuB,QAAhB,CACIhE,GAAUzqB,CAAA0uB,MAGVlE,EAAJ,GACE2D,CADF,CACiB5D,CAAA,CAAUW,CAAV,CAAuBV,CAAvB,CAAkCC,EAAlC,CADjB,CAGA2D,EAAA,CAAY76B,IAAAA,EAEZ,IAAIw6B,CAAJ,CAAuB/tB,CAAA2gB,SAAvB,CACE,KAKF,IAFA6N,CAEA,CAFiBxuB,CAAA1F,MAEjB,CAIO0F,CAAAqhB,YAeL,GAdMh1B,CAAA,CAASmiC,CAAT,CAAJ,EAGEG,EAAA,CAAkB,oBAAlB,CAAwChD,CAAxC,EAAoEW,CAApE,CACkBtsB,CADlB,CAC6BmuB,CAD7B,CAEA,CAAAxC,CAAA,CAA2B3rB,CAL7B,EASE2uB,EAAA,CAAkB,oBAAlB,CAAwChD,CAAxC,CAAkE3rB,CAAlE,CACkBmuB,CADlB,CAKJ,EAAA7B,CAAA,CAAoBA,CAApB,EAAyCtsB,CAG3Cif,EAAA,CAAgBjf,CAAA7G,KAQhB,IAAKm1B,CAAAA,EAAL,GAAyCtuB,CAAA1J,QAAzC,GAA+D0J,CAAAqhB,YAA/D,EAAwFrhB,CAAAohB,SAAxF,GACQphB,CAAAyhB,WADR;AACiCmN,CAAA5uB,CAAA4uB,MADjC,EACoD,CAG5C,IAASC,CAAT,CAAyBxgC,EAAzB,CAA6B,CAA7B,CAAiCygC,EAAjC,CAAsDpO,CAAA,CAAWmO,CAAA,EAAX,CAAtD,CAAA,CACI,GAAKC,EAAArN,WAAL,EAAuCmN,CAAAE,EAAAF,MAAvC,EACQE,EAAAx4B,QADR,GACuCw4B,EAAAzN,YADvC,EACyEyN,EAAA1N,SADzE,EACwG,CACpGmN,EAAA,CAAqC,CAAA,CACrC,MAFoG,CAM5GD,EAAA,CAAiC,CAAA,CAXW,CAc/CjN,CAAArhB,CAAAqhB,YAAL,EAA8BrhB,CAAA1D,WAA9B,GACEmwB,CAGA,CAHuBA,CAGvB,EAH+C33B,CAAA,EAG/C,CAFA65B,EAAA,CAAkB,GAAlB,CAAyB1P,CAAzB,CAAyC,cAAzC,CACIwN,CAAA,CAAqBxN,CAArB,CADJ,CACyCjf,CADzC,CACoDmuB,CADpD,CAEA,CAAA1B,CAAA,CAAqBxN,CAArB,CAAA,CAAsCjf,CAJxC,CASA,IAFAwuB,CAEA,CAFiBxuB,CAAAyhB,WAEjB,CAWE,GAVAwM,CAUI,CAVqB,CAAA,CAUrB,CALCjuB,CAAA4uB,MAKD,GAJFD,EAAA,CAAkB,cAAlB,CAAkCX,CAAlC,CAA6DhuB,CAA7D,CAAwEmuB,CAAxE,CACA,CAAAH,CAAA,CAA4BhuB,CAG1B,EAAmB,SAAnB,GAAAwuB,CAAJ,CACEvC,CAQA,CARgC,CAAA,CAQhC,CAPA8B,CAOA,CAPmB/tB,CAAA2gB,SAOnB,CANAyN,CAMA,CANYD,CAMZ,CALAA,CAKA,CALehD,CAAApG,UAKf,CAJI13B,CAAA,CAAOkN,EAAAw0B,gBAAA,CAAwB9P,CAAxB,CAAuCkM,CAAA,CAAclM,CAAd,CAAvC,CAAP,CAIJ,CAHAiM,CAGA,CAHciD,CAAA,CAAa,CAAb,CAGd,CAFAa,EAAA,CAAY5D,CAAZ,CA5yRHr7B,EAAAhC,KAAA,CA4yRuCqgC,CA5yRvC,CAA+B,CAA/B,CA4yRG,CAAgDlD,CAAhD,CAEA,CAAAmD,CAAA,CAAoBvD,CAAA,CAAqByD,EAArB,CAAyDH,CAAzD,CAAoE3I,CAApE,CAAkFsI,CAAlF,CACQkB,CADR,EAC4BA,CAAA91B,KAD5B,CACmD,CAQzC60B,0BAA2BA,CARc,CADnD,CATtB,KAoBO,CAEL,IAAIkB,GAAQp6B,CAAA,EAEZ,IAAKzI,CAAA,CAASmiC,CAAT,CAAL,CAEO,CAILJ,CAAA,CAAYliC,CAAAyJ,SAAA+W,uBAAA,EAEZ,KAAIyiB;AAAUr6B,CAAA,EAAd,CACIs6B,EAAct6B,CAAA,EAGlBrH,EAAA,CAAQ+gC,CAAR,CAAwB,QAAQ,CAACa,CAAD,CAAkBvG,CAAlB,CAA4B,CAE1D,IAAInJ,EAA0C,GAA1CA,GAAY0P,CAAAt6B,OAAA,CAAuB,CAAvB,CAChBs6B,EAAA,CAAkB1P,CAAA,CAAW0P,CAAAp3B,UAAA,CAA0B,CAA1B,CAAX,CAA0Co3B,CAE5DF,GAAA,CAAQE,CAAR,CAAA,CAA2BvG,CAK3BoG,GAAA,CAAMpG,CAAN,CAAA,CAAkB,IAIlBsG,EAAA,CAAYtG,CAAZ,CAAA,CAAwBnJ,CAdkC,CAA5D,CAkBAlyB,EAAA,CAAQ0gC,CAAAmB,SAAA,EAAR,CAAiC,QAAQ,CAACz9B,CAAD,CAAO,CAC9C,IAAIi3B,EAAWqG,EAAA,CAAQlG,EAAA,CAAmB72B,EAAA,CAAUP,CAAV,CAAnB,CAAR,CACXi3B,EAAJ,EACEsG,CAAA,CAAYtG,CAAZ,CAEA,CAFwB,CAAA,CAExB,CADAoG,EAAA,CAAMpG,CAAN,CACA,CADkBoG,EAAA,CAAMpG,CAAN,CAClB,EADqC58B,CAAAyJ,SAAA+W,uBAAA,EACrC,CAAAwiB,EAAA,CAAMpG,CAAN,CAAAlc,YAAA,CAA4B/a,CAA5B,CAHF,EAKEu8B,CAAAxhB,YAAA,CAAsB/a,CAAtB,CAP4C,CAAhD,CAYApE,EAAA,CAAQ2hC,CAAR,CAAqB,QAAQ,CAACG,CAAD,CAASzG,CAAT,CAAmB,CAC9C,GAAKyG,CAAAA,CAAL,CACE,KAAM/P,EAAA,CAAe,SAAf,CAA8EsJ,CAA9E,CAAN,CAF4C,CAAhD,CAMA,KAASA,IAAAA,CAAT,GAAqBoG,GAArB,CACMA,EAAA,CAAMpG,CAAN,CAAJ,GAEM0G,CACJ,CADuBniC,CAAA,CAAO6hC,EAAA,CAAMpG,CAAN,CAAAtb,WAAP,CACvB,CAAA0hB,EAAA,CAAMpG,CAAN,CAAA,CAAkBgC,CAAA,CAAqByD,EAArB,CAAyDiB,CAAzD,CAA2E/J,CAA3E,CAHpB,CAOF2I,EAAA,CAAY/gC,CAAA,CAAO+gC,CAAA5gB,WAAP,CAtDP,CAFP,IACE4gB,EAAA,CAAY/gC,CAAA,CAAO6gB,EAAA,CAAYgd,CAAZ,CAAP,CAAAoE,SAAA,EA0DdnB,EAAA92B,MAAA,EACAg3B,EAAA,CAAoBvD,CAAA,CAAqByD,EAArB,CAAyDH,CAAzD,CAAoE3I,CAApE,CAAkFlyB,IAAAA,EAAlF,CAChBA,IAAAA,EADgB,CACL,CAAE4yB,cAAenmB,CAAA4rB,eAAfzF,EAA2CnmB,CAAAyvB,WAA7C,CADK,CAEpBpB,EAAAxF,QAAA,CAA4BqG,EAlEvB,CAsET,GAAIlvB,CAAAohB,SAAJ,CAWE,GAVA8M,CAUI53B;AAVU,CAAA,CAUVA,CATJq4B,EAAA,CAAkB,UAAlB,CAA8BhC,CAA9B,CAAiD3sB,CAAjD,CAA4DmuB,CAA5D,CASI73B,CARJq2B,CAQIr2B,CARgB0J,CAQhB1J,CANJk4B,CAMIl4B,CANczI,CAAA,CAAWmS,CAAAohB,SAAX,CAAD,CACXphB,CAAAohB,SAAA,CAAmB+M,CAAnB,CAAiChD,CAAjC,CADW,CAEXnrB,CAAAohB,SAIF9qB,CAFJk4B,CAEIl4B,CAFao5B,EAAA,CAAoBlB,CAApB,CAEbl4B,CAAA0J,CAAA1J,QAAJ,CAAuB,CACrB24B,CAAA,CAAmBjvB,CAIjBouB,EAAA,CA9lOJzhB,EAAA/a,KAAA,CA2lOuB48B,CA3lOvB,CA2lOE,CAGcmB,EAAA,CAAehJ,EAAA,CAAa3mB,CAAA4vB,kBAAb,CAA0ChiB,CAAA,CAAK4gB,CAAL,CAA1C,CAAf,CAHd,CACc,EAIdtD,EAAA,CAAckD,CAAA,CAAU,CAAV,CAEd,IAAyB,CAAzB,GAAIA,CAAA9gC,OAAJ,EA5iQY8e,CA4iQZ,GAA8B8e,CAAAzzB,SAA9B,CACE,KAAM+nB,EAAA,CAAe,OAAf,CAEFP,CAFE,CAEa,EAFb,CAAN,CAKF+P,EAAA,CAAY5D,CAAZ,CAA0B+C,CAA1B,CAAwCjD,CAAxC,CAEI2E,EAAAA,CAAmB,CAAC/K,MAAO,EAAR,CAOnBgL,EAAAA,CAAqB9H,EAAA,CAAkBkD,CAAlB,CAA+B,EAA/B,CAAmC2E,CAAnC,CACzB,KAAIE,GAAwBrP,CAAA/tB,OAAA,CAAkBtE,EAAlB,CAAsB,CAAtB,CAAyBqyB,CAAApzB,OAAzB,EAA8Ce,EAA9C,CAAkD,CAAlD,EAE5B,EAAIs9B,CAAJ,EAAgCW,CAAhC,GAIE0D,EAAA,CAAmBF,CAAnB,CAAuCnE,CAAvC,CAAiEW,CAAjE,CAEF5L,EAAA,CAAaA,CAAA1rB,OAAA,CAAkB86B,CAAlB,CAAA96B,OAAA,CAA6C+6B,EAA7C,CACbE,GAAA,CAAwB9E,CAAxB,CAAuC0E,CAAvC,CAEA5gC,EAAA,CAAKyxB,CAAApzB,OApCgB,CAAvB,IAsCE6gC,EAAA32B,KAAA,CAAkBg3B,CAAlB,CAIJ,IAAIxuB,CAAAqhB,YAAJ,CACE6M,CAiBA,CAjBc,CAAA,CAiBd,CAhBAS,EAAA,CAAkB,UAAlB,CAA8BhC,CAA9B,CAAiD3sB,CAAjD,CAA4DmuB,CAA5D,CAgBA,CAfAxB,CAeA,CAfoB3sB,CAepB,CAbIA,CAAA1J,QAaJ,GAZE24B,CAYF,CAZqBjvB,CAYrB,EARAwnB,CAQA,CARa0I,EAAA,CAAmBxP,CAAA/tB,OAAA,CAAkBtE,EAAlB,CAAqBqyB,CAAApzB,OAArB,CAAyCe,EAAzC,CAAnB,CAAgE8/B,CAAhE,CACThD,CADS,CACMC,CADN,CACoB6C,CADpB,EAC8CI,CAD9C,CACiE/C,CADjE,CAC6EC,CAD7E,CAC0F,CACjGkB,qBAAsBA,CAD2E,CAEjGH,kBAAoBA,CAApBA;AAA0CtsB,CAA1CssB,EAAwDA,CAFyC,CAGjGX,yBAA0BA,CAHuE,CAIjGgB,kBAAmBA,CAJ8E,CAKjGqB,0BAA2BA,CALsE,CAD1F,CAQb,CAAA/+B,CAAA,CAAKyxB,CAAApzB,OAlBP,KAmBO,IAAI0S,CAAAzF,QAAJ,CACL,GAAI,CACFqwB,CAAA,CAAS5qB,CAAAzF,QAAA,CAAkB4zB,CAAlB,CAAgChD,CAAhC,CAA+CkD,CAA/C,CACT,KAAI1gC,EAAUqS,CAAA4sB,oBAAVj/B,EAA2CqS,CAC3CnS,EAAA,CAAW+8B,CAAX,CAAJ,CACEY,CAAA,CAAW,IAAX,CAAiBr2B,EAAA,CAAKxH,CAAL,CAAci9B,CAAd,CAAjB,CAAwCJ,CAAxC,CAAmDC,EAAnD,CADF,CAEWG,CAFX,EAGEY,CAAA,CAAWr2B,EAAA,CAAKxH,CAAL,CAAci9B,CAAAa,IAAd,CAAX,CAAsCt2B,EAAA,CAAKxH,CAAL,CAAci9B,CAAAc,KAAd,CAAtC,CAAkElB,CAAlE,CAA6EC,EAA7E,CANA,CAQF,MAAO9yB,EAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,EAAlB,CAAqBP,EAAA,CAAY+2B,CAAZ,CAArB,CADU,CAKVnuB,CAAAkoB,SAAJ,GACEV,CAAAU,SACA,CADsB,CAAA,CACtB,CAAA6F,CAAA,CAAmBzJ,IAAA6L,IAAA,CAASpC,CAAT,CAA2B/tB,CAAA2gB,SAA3B,CAFrB,CAlQmD,CAyQrD6G,CAAAltB,MAAA,CAAmBgyB,CAAnB,EAAoE,CAAA,CAApE,GAAwCA,CAAAhyB,MACxCktB,EAAAC,wBAAA,CAAqCwG,CACrCzG,EAAAG,sBAAA,CAAmCuG,CACnC1G,EAAA/F,WAAA,CAAwB4M,CAExBzI,EAAAqG,8BAAA,CAAuDA,CAGvD,OAAOzE,EAzS8C,CAqfvD6F,QAASA,EAAc,CAACpO,CAAD,CAAgBc,CAAhB,CAAyBmB,CAAzB,CAAmCgL,CAAnC,CAAuD,CAC5E,IAAI19B,CAEJ,IAAIpB,CAAA,CAAS2yB,CAAT,CAAJ,CAAuB,CACrB,IAAI9rB,EAAQ8rB,CAAA9rB,MAAA,CAAc+rB,CAAd,CACR7mB,EAAAA,CAAO4mB,CAAA9nB,UAAA,CAAkBhE,CAAA,CAAM,CAAN,CAAA3G,OAAlB,CACX;IAAI8iC,EAAcn8B,CAAA,CAAM,CAAN,CAAdm8B,EAA0Bn8B,CAAA,CAAM,CAAN,CAA9B,CACI0rB,EAAwB,GAAxBA,GAAW1rB,CAAA,CAAM,CAAN,CAGK,KAApB,GAAIm8B,CAAJ,CACElP,CADF,CACaA,CAAA5wB,OAAA,EADb,CAME9B,CANF,EAKEA,CALF,CAKU09B,CALV,EAKgCA,CAAA,CAAmB/yB,CAAnB,CALhC,GAMmB3K,CAAAq4B,SAGnB,IAAKr4B,CAAAA,CAAL,CAAY,CACV,IAAI6hC,EAAW,GAAXA,CAAiBl3B,CAAjBk3B,CAAwB,YAK1B7hC,EAAA,CAHkB,IAApB,GAAI4hC,CAAJ,EAA4BlP,CAAA,CAAS,CAAT,CAA5B,EA31Qe7U,CA21Qf,GAA2C6U,CAAA,CAAS,CAAT,CAAAzpB,SAA3C,CAGU,IAHV,CAKU24B,CAAA,CAAclP,CAAA3kB,cAAA,CAAuB8zB,CAAvB,CAAd,CAAiDnP,CAAAzmB,KAAA,CAAc41B,CAAd,CARjD,CAYZ,GAAK7hC,CAAAA,CAAL,EAAemxB,CAAAA,CAAf,CACE,KAAMH,EAAA,CAAe,OAAf,CAEFrmB,CAFE,CAEI8lB,CAFJ,CAAN,CA7BmB,CAAvB,IAiCO,IAAI9xB,CAAA,CAAQ4yB,CAAR,CAAJ,CAEL,IADAvxB,CACgBS,CADR,EACQA,CAAPZ,CAAOY,CAAH,CAAGA,CAAAA,CAAAA,CAAK8wB,CAAAzyB,OAArB,CAAqCe,CAArC,CAAyCY,CAAzC,CAA6CZ,CAAA,EAA7C,CACEG,CAAA,CAAMH,CAAN,CAAA,CAAWg/B,CAAA,CAAepO,CAAf,CAA8Bc,CAAA,CAAQ1xB,CAAR,CAA9B,CAA0C6yB,CAA1C,CAAoDgL,CAApD,CAHR,KAKI7/B,EAAA,CAAS0zB,CAAT,CAAJ,GACLvxB,CACA,CADQ,EACR,CAAAf,CAAA,CAAQsyB,CAAR,CAAiB,QAAQ,CAACzjB,CAAD,CAAag0B,CAAb,CAAuB,CAC9C9hC,CAAA,CAAM8hC,CAAN,CAAA,CAAkBjD,CAAA,CAAepO,CAAf,CAA8B3iB,CAA9B,CAA0C4kB,CAA1C,CAAoDgL,CAApD,CAD4B,CAAhD,CAFK,CAOP,OAAO19B,EAAP,EAAgB,IAhD4D,CAmD9Ek+B,QAASA,GAAgB,CAACxL,CAAD,CAAW2G,CAAX,CAAkBpC,CAAlB,CAAgCgH,CAAhC,CAAsDpwB,CAAtD,CAAoE/B,CAApE,CAA2EqxB,CAA3E,CAAqG,CAC5H,IAAIO,EAAqBp3B,CAAA,EAAzB,CACSy7B,CAAT,KAASA,CAAT,GAA0B9D,EAA1B,CAAgD,CAC9C,IAAIzsB,EAAYysB,CAAA,CAAqB8D,CAArB,CAAhB,CACI9Z,EAAS,CACX+Z,OAAQxwB,CAAA,GAAc2rB,CAAd,EAA0C3rB,CAAA4rB,eAA1C,CAAqEvvB,CAArE,CAAoF/B,CADjF,CAEX4mB,SAAUA,CAFC,CAGXC,OAAQ0G,CAHG,CAIX4I,YAAahL,CAJF,CADb,CAQInpB,EAAa0D,CAAA1D,WACE,IAAnB;AAAIA,CAAJ,GACEA,CADF,CACeurB,CAAA,CAAM7nB,CAAA7G,KAAN,CADf,CAIIm0B,EAAAA,CAAqB7lB,CAAA,CAAYnL,CAAZ,CAAwBma,CAAxB,CAAgC,CAAA,CAAhC,CAAsCzW,CAAAuhB,aAAtC,CAMzB2K,EAAA,CAAmBlsB,CAAA7G,KAAnB,CAAA,CAAqCm0B,CACrCpM,EAAAzmB,KAAA,CAAc,GAAd,CAAoBuF,CAAA7G,KAApB,CAAqC,YAArC,CAAmDm0B,CAAAzG,SAAnD,CArB8C,CAuBhD,MAAOqF,EAzBqH,CAkC9H8D,QAASA,GAAkB,CAACtP,CAAD,CAAarkB,CAAb,CAA2Bq0B,CAA3B,CAAqC,CAC9D,IAD8D,IACrDxhC,EAAI,CADiD,CAC9CC,EAAKuxB,CAAApzB,OAArB,CAAwC4B,CAAxC,CAA4CC,CAA5C,CAAgDD,CAAA,EAAhD,CACEwxB,CAAA,CAAWxxB,CAAX,CAAA,CAAgBmB,EAAA,CAAQqwB,CAAA,CAAWxxB,CAAX,CAAR,CAAuB,CAAC08B,eAAgBvvB,CAAjB,CAA+BozB,WAAYiB,CAA3C,CAAvB,CAF4C,CAoBhE1H,QAASA,EAAY,CAAC2H,CAAD,CAAcx3B,CAAd,CAAoB+B,CAApB,CAA8BwqB,CAA9B,CAA2CC,CAA3C,CAA4DiL,CAA5D,CACCC,CADD,CACc,CACjC,GAAI13B,CAAJ,GAAawsB,CAAb,CAA8B,MAAO,KACrC,KAAI1xB,EAAQ,IACZ,IAAIgsB,CAAAnyB,eAAA,CAA6BqL,CAA7B,CAAJ,CAAwC,CAClBunB,CAAAA,CAAavJ,CAAA7b,IAAA,CAAcnC,CAAd,CA7mE1BsnB,WA6mE0B,CAAjC,KADsC,IAElCpyB,EAAI,CAF8B,CAE3BY,EAAKyxB,CAAApzB,OADhB,CACmCe,CADnC,CACuCY,CADvC,CAC2CZ,CAAA,EAD3C,CAGE,GADA2R,CACI,CADQ0gB,CAAA,CAAWryB,CAAX,CACR,EAAC2C,CAAA,CAAY00B,CAAZ,CAAD,EAA6BA,CAA7B,CAA2C1lB,CAAA2gB,SAA3C,GAC2C,EAD3C,GACC3gB,CAAA4gB,SAAAluB,QAAA,CAA2BwI,CAA3B,CADL,CACkD,CAC5C01B,CAAJ,GACE5wB,CADF,CACc3P,EAAA,CAAQ2P,CAAR,CAAmB,CAACyuB,QAASmC,CAAV,CAAyBlC,MAAOmC,CAAhC,CAAnB,CADd,CAGA,IAAK1D,CAAAntB,CAAAmtB,WAAL,CAA2B,CAEEntB,IAAAA,EADZA,CACYA,CADZA,CACYA,CAAW7G,EAAA6G,CAAA7G,KAAX6G,CArkEjCof,EAAW,CACb/iB,aAAc,IADD,CAEbqlB,iBAAkB,IAFL,CAIXr1B;CAAA,CAAS2T,CAAA1F,MAAT,CAAJ,GACqC,CAAA,CAAnC,GAAI0F,CAAA0hB,iBAAJ,EACEtC,CAAAsC,iBAEA,CAF4B1C,CAAA,CAAqBhf,CAAA1F,MAArB,CACqB2kB,CADrB,CACoC,CAAA,CADpC,CAE5B,CAAAG,CAAA/iB,aAAA,CAAwB,EAH1B,EAKE+iB,CAAA/iB,aALF,CAK0B2iB,CAAA,CAAqBhf,CAAA1F,MAArB,CACqB2kB,CADrB,CACoC,CAAA,CADpC,CAN5B,CAUI5yB,EAAA,CAAS2T,CAAA0hB,iBAAT,CAAJ,GACEtC,CAAAsC,iBADF,CAEM1C,CAAA,CAAqBhf,CAAA0hB,iBAArB,CAAiDzC,CAAjD,CAAgE,CAAA,CAAhE,CAFN,CAIA,IAAIG,CAAAsC,iBAAJ,EAAkCplB,CAAA0D,CAAA1D,WAAlC,CAEE,KAAMkjB,EAAA,CAAe,QAAf,CAEAP,CAFA,CAAN,CAgjEYG,CAAAA,CAAWpf,CAAAmtB,WAAX/N,CA5iEPA,CA8iEO/yB,EAAA,CAAS+yB,CAAA/iB,aAAT,CAAJ,GACE2D,CAAA6sB,kBADF,CACgCzN,CAAA/iB,aADhC,CAHyB,CAO3Bs0B,CAAA39B,KAAA,CAAiBgN,CAAjB,CACA/L,EAAA,CAAQ+L,CAZwC,CALd,CAqBxC,MAAO/L,EAxB0B,CAoCnC61B,QAASA,GAAuB,CAAC3wB,CAAD,CAAO,CACrC,GAAI8mB,CAAAnyB,eAAA,CAA6BqL,CAA7B,CAAJ,CACE,IADsC,IAClBunB,EAAavJ,CAAA7b,IAAA,CAAcnC,CAAd,CA/oE1BsnB,WA+oE0B,CADK,CAElCpyB,EAAI,CAF8B,CAE3BY,EAAKyxB,CAAApzB,OADhB,CACmCe,CADnC,CACuCY,CADvC,CAC2CZ,CAAA,EAD3C,CAGE,GADA2R,CACI8wB,CADQpQ,CAAA,CAAWryB,CAAX,CACRyiC,CAAA9wB,CAAA8wB,aAAJ,CACE,MAAO,CAAA,CAIb,OAAO,CAAA,CAV8B,CAqBvCb,QAASA,GAAuB,CAACrhC,CAAD,CAAMQ,CAAN,CAAW,CAAA,IACrC2hC;AAAU3hC,CAAA01B,MAD2B,CAErCkM,EAAUpiC,CAAAk2B,MAGdr3B,EAAA,CAAQmB,CAAR,CAAa,QAAQ,CAACJ,CAAD,CAAQZ,CAAR,CAAa,CACV,GAAtB,GAAIA,CAAAmH,OAAA,CAAW,CAAX,CAAJ,GACM3F,CAAA,CAAIxB,CAAJ,CAOJ,EAPgBwB,CAAA,CAAIxB,CAAJ,CAOhB,GAP6BY,CAO7B,GALIA,CAKJ,CANMA,CAAAlB,OAAJ,CACEkB,CADF,GACoB,OAAR,GAAAZ,CAAA,CAAkB,GAAlB,CAAwB,GADpC,EAC2CwB,CAAA,CAAIxB,CAAJ,CAD3C,EAGUwB,CAAA,CAAIxB,CAAJ,CAGZ,EAAAgB,CAAAqiC,KAAA,CAASrjC,CAAT,CAAcY,CAAd,CAAqB,CAAA,CAArB,CAA2BuiC,CAAA,CAAQnjC,CAAR,CAA3B,CARF,CADgC,CAAlC,CAcAH,EAAA,CAAQ2B,CAAR,CAAa,QAAQ,CAACZ,CAAD,CAAQZ,CAAR,CAAa,CAK3BgB,CAAAd,eAAA,CAAmBF,CAAnB,CAAL,EAAkD,GAAlD,GAAgCA,CAAAmH,OAAA,CAAW,CAAX,CAAhC,GACEnG,CAAA,CAAIhB,CAAJ,CAEA,CAFWY,CAEX,CAAY,OAAZ,GAAIZ,CAAJ,EAA+B,OAA/B,GAAuBA,CAAvB,GACEojC,CAAA,CAAQpjC,CAAR,CADF,CACiBmjC,CAAA,CAAQnjC,CAAR,CADjB,CAHF,CALgC,CAAlC,CAnByC,CAmC3CsiC,QAASA,GAAkB,CAACxP,CAAD,CAAayN,CAAb,CAA2BlN,CAA3B,CACvB+F,CADuB,CACTqH,CADS,CACU/C,CADV,CACsBC,CADtB,CACmC3F,CADnC,CAC2D,CAAA,IAChFsL,EAAY,EADoE,CAEhFC,CAFgF,CAGhFC,CAHgF,CAIhFC,EAA4BlD,CAAA,CAAa,CAAb,CAJoD,CAKhFmD,EAAqB5Q,CAAAnK,MAAA,EAL2D,CAMhFgb,EAAuBlhC,EAAA,CAAQihC,CAAR,CAA4B,CACjDjQ,YAAa,IADoC,CAC9BI,WAAY,IADkB,CACZnrB,QAAS,IADG,CACGs2B,oBAAqB0E,CADxB,CAA5B,CANyD,CAShFjQ,EAAexzB,CAAA,CAAWyjC,CAAAjQ,YAAX,CAAD,CACRiQ,CAAAjQ,YAAA,CAA+B8M,CAA/B,CAA6ClN,CAA7C,CADQ,CAERqQ,CAAAjQ,YAX0E,CAYhFuO,EAAoB0B,CAAA1B,kBAExBzB,EAAA92B,MAAA,EAEAwT,EAAA,CAAiBwW,CAAjB,CAAAmQ,KAAA,CACQ,QAAQ,CAACC,CAAD,CAAU,CAAA,IAClBvG,CADkB;AACyB/D,CAE/CsK,EAAA,CAAU/B,EAAA,CAAoB+B,CAApB,CAEV,IAAIH,CAAAh7B,QAAJ,CAAgC,CAI5B83B,CAAA,CAhmPJzhB,EAAA/a,KAAA,CA6lPuB6/B,CA7lPvB,CA6lPE,CAGc9B,EAAA,CAAehJ,EAAA,CAAaiJ,CAAb,CAAgChiB,CAAA,CAAK6jB,CAAL,CAAhC,CAAf,CAHd,CACc,EAIdvG,EAAA,CAAckD,CAAA,CAAU,CAAV,CAEd,IAAyB,CAAzB,GAAIA,CAAA9gC,OAAJ,EA9iRY8e,CA8iRZ,GAA8B8e,CAAAzzB,SAA9B,CACE,KAAM+nB,EAAA,CAAe,OAAf,CAEF8R,CAAAn4B,KAFE,CAEuBkoB,CAFvB,CAAN,CAKFqQ,CAAA,CAAoB,CAAC5M,MAAO,EAAR,CACpBkK,GAAA,CAAYhI,CAAZ,CAA0BmH,CAA1B,CAAwCjD,CAAxC,CACA,KAAI4E,EAAqB9H,EAAA,CAAkBkD,CAAlB,CAA+B,EAA/B,CAAmCwG,CAAnC,CAErBrlC,EAAA,CAASilC,CAAAh3B,MAAT,CAAJ,EAGE01B,EAAA,CAAmBF,CAAnB,CAAuC,CAAA,CAAvC,CAEFpP,EAAA,CAAaoP,CAAA96B,OAAA,CAA0B0rB,CAA1B,CACbuP,GAAA,CAAwBhP,CAAxB,CAAgCyQ,CAAhC,CAxB8B,CAAhC,IA0BExG,EACA,CADcmG,CACd,CAAAlD,CAAA32B,KAAA,CAAkBi6B,CAAlB,CAGF/Q,EAAA3mB,QAAA,CAAmBw3B,CAAnB,CAEAJ,EAAA,CAA0BlJ,EAAA,CAAsBvH,CAAtB,CAAkCwK,CAAlC,CAA+CjK,CAA/C,CACtBoN,CADsB,CACHF,CADG,CACWmD,CADX,CAC+BhG,CAD/B,CAC2CC,CAD3C,CAEtB3F,CAFsB,CAG1Bn4B,EAAA,CAAQu5B,CAAR,CAAsB,QAAQ,CAACn1B,CAAD,CAAOxD,CAAP,CAAU,CAClCwD,CAAJ,GAAaq5B,CAAb,GACElE,CAAA,CAAa34B,CAAb,CADF,CACoB8/B,CAAA,CAAa,CAAb,CADpB,CADsC,CAAxC,CAOA,KAFAiD,CAEA,CAF2BtL,EAAA,CAAaqI,CAAA,CAAa,CAAb,CAAA3gB,WAAb,CAAyC6gB,CAAzC,CAE3B,CAAO6C,CAAA5jC,OAAP,CAAA,CAAyB,CACnBgN,CAAAA,CAAQ42B,CAAA3a,MAAA,EACRob,EAAAA,CAAyBT,CAAA3a,MAAA,EAFN,KAGnBqb,EAAkBV,CAAA3a,MAAA,EAHC,CAInB+R,EAAoB4I,CAAA3a,MAAA,EAJD,CAKnBuV,EAAWqC,CAAA,CAAa,CAAb,CAEf,IAAI0D,CAAAv3B,CAAAu3B,YAAJ,CAAA,CAEA,GAAIF,CAAJ,GAA+BN,CAA/B,CAA0D,CACxD,IAAIS,EAAaH,CAAApM,UAEXK,EAAAqG,8BAAN,EACIqF,CAAAh7B,QADJ,GAGEw1B,CAHF,CAGa5d,EAAA,CAAYgd,CAAZ,CAHb,CAKA8D,GAAA,CAAY4C,CAAZ;AAA6BvkC,CAAA,CAAOskC,CAAP,CAA7B,CAA6D7F,CAA7D,CAGAxG,GAAA,CAAaj4B,CAAA,CAAOy+B,CAAP,CAAb,CAA+BgG,CAA/B,CAXwD,CAcxD3K,CAAA,CADEgK,CAAA1J,wBAAJ,CAC2BC,EAAA,CAAwBptB,CAAxB,CAA+B62B,CAAA1P,WAA/B,CAAmE6G,CAAnE,CAD3B,CAG2BA,CAE3B6I,EAAA,CAAwBC,CAAxB,CAAkD92B,CAAlD,CAAyDwxB,CAAzD,CAAmE9E,CAAnE,CACEG,CADF,CApBA,CAPuB,CA8BzB+J,CAAA,CAAY,IA7EU,CAD1B,CAAAa,MAAA,CA+EW,QAAQ,CAACr4B,CAAD,CAAQ,CACnBtI,EAAA,CAAQsI,CAAR,CAAJ,EACEqO,CAAA,CAAkBrO,CAAlB,CAFqB,CA/E3B,CAqFA,OAAOs4B,SAA0B,CAACC,CAAD,CAAoB33B,CAApB,CAA2BzI,CAA3B,CAAiCwJ,CAAjC,CAA8CitB,CAA9C,CAAiE,CAC5FnB,CAAAA,CAAyBmB,CACzBhuB,EAAAu3B,YAAJ,GACIX,CAAJ,CACEA,CAAAl+B,KAAA,CAAesH,CAAf,CACezI,CADf,CAEewJ,CAFf,CAGe8rB,CAHf,CADF,EAMMgK,CAAA1J,wBAGJ,GAFEN,CAEF,CAF2BO,EAAA,CAAwBptB,CAAxB,CAA+B62B,CAAA1P,WAA/B,CAAmE6G,CAAnE,CAE3B,EAAA6I,CAAA,CAAwBC,CAAxB,CAAkD92B,CAAlD,CAAyDzI,CAAzD,CAA+DwJ,CAA/D,CAA4E8rB,CAA5E,CATF,CADA,CAFgG,CArGd,CA0HtFmD,QAASA,GAAU,CAACj2B,CAAD,CAAIC,CAAJ,CAAO,CACxB,IAAI49B,EAAO59B,CAAAqsB,SAAPuR,CAAoB79B,CAAAssB,SACxB,OAAa,EAAb,GAAIuR,CAAJ,CAAuBA,CAAvB,CACI79B,CAAA8E,KAAJ,GAAe7E,CAAA6E,KAAf,CAA+B9E,CAAA8E,KAAD,CAAU7E,CAAA6E,KAAV,CAAqB,EAArB,CAAyB,CAAvD,CACO9E,CAAA5B,MADP,CACiB6B,CAAA7B,MAJO,CAO1Bk8B,QAASA,GAAiB,CAACwD,CAAD,CAAOC,CAAP,CAA0BpyB,CAA1B,CAAqC3N,CAArC,CAA8C,CAEtEggC,QAASA,EAAuB,CAACC,CAAD,CAAa,CAC3C,MAAOA,EAAA,CACJ,YADI,CACWA,CADX,CACwB,GADxB,CAEL,EAHyC,CAM7C,GAAIF,CAAJ,CACE,KAAM5S,EAAA,CAAe,UAAf,CACF4S,CAAAj5B,KADE,CACsBk5B,CAAA,CAAwBD,CAAA/yB,aAAxB,CADtB,CAEFW,CAAA7G,KAFE,CAEck5B,CAAA,CAAwBryB,CAAAX,aAAxB,CAFd;AAE+D8yB,CAF/D,CAEqE/6B,EAAA,CAAY/E,CAAZ,CAFrE,CAAN,CAToE,CAgBxE83B,QAASA,GAA2B,CAACzJ,CAAD,CAAa6R,CAAb,CAAmB,CACrD,IAAIC,EAAgBnqB,CAAA,CAAakqB,CAAb,CAAmB,CAAA,CAAnB,CAChBC,EAAJ,EACE9R,CAAA1tB,KAAA,CAAgB,CACd2tB,SAAU,CADI,CAEdpmB,QAASk4B,QAAiC,CAACC,CAAD,CAAe,CACnDC,CAAAA,CAAqBD,CAAApiC,OAAA,EAAzB,KACIsiC,EAAmB,CAAEtlC,CAAAqlC,CAAArlC,OAIrBslC,EAAJ,EAAsBr4B,EAAAs4B,kBAAA,CAA0BF,CAA1B,CAEtB,OAAOG,SAA8B,CAACx4B,CAAD,CAAQzI,CAAR,CAAc,CACjD,IAAIvB,EAASuB,CAAAvB,OAAA,EACRsiC,EAAL,EAAuBr4B,EAAAs4B,kBAAA,CAA0BviC,CAA1B,CACvBiK,GAAAw4B,iBAAA,CAAyBziC,CAAzB,CAAiCkiC,CAAAQ,YAAjC,CACA14B,EAAA7I,OAAA,CAAa+gC,CAAb,CAA4BS,QAAiC,CAACzkC,CAAD,CAAQ,CACnEqD,CAAA,CAAK,CAAL,CAAAu2B,UAAA,CAAoB55B,CAD+C,CAArE,CAJiD,CARI,CAF3C,CAAhB,CAHmD,CA2BvDm4B,QAASA,GAAY,CAACxyB,CAAD,CAAOitB,CAAP,CAAiB,CACpCjtB,CAAA,CAAO7B,CAAA,CAAU6B,CAAV,EAAkB,MAAlB,CACP,QAAQA,CAAR,EACA,KAAK,KAAL,CACA,KAAK,MAAL,CACE,IAAI++B,EAAUhnC,CAAAyJ,SAAAkX,cAAA,CAA8B,KAA9B,CACdqmB,EAAA7lB,UAAA,CAAoB,GAApB,CAA0BlZ,CAA1B,CAAiC,GAAjC,CAAuCitB,CAAvC,CAAkD,IAAlD,CAAyDjtB,CAAzD,CAAgE,GAChE,OAAO++B,EAAA1lB,WAAA,CAAmB,CAAnB,CAAAA,WACT,SACE,MAAO4T,EAPT,CAFoC,CActC+R,QAASA,GAAqB,CAACzjC,CAAD,CAAW0jC,CAAX,CAA+B,CAC3D,GAA2B,QAA3B;AAAIA,CAAJ,CACE,MAAOjpB,EAAAsZ,KAIT,IAA2B,KAA3B,GAAI2P,CAAJ,EAA2D,OAA3D,GAAoCA,CAApC,CACE,MAAwE,EAAxE,GAAI,CAAC,KAAD,CAAQ,OAAR,CAAiB,OAAjB,CAA0B,QAA1B,CAAoC,OAApC,CAAA1gC,QAAA,CAAqDhD,CAArD,CAAJ,CACSya,CAAA0Z,aADT,CAGO1Z,CAAAyZ,UACF,IAA2B,WAA3B,GAAIwP,CAAJ,CAEL,MAAiB,OAAjB,GAAI1jC,CAAJ,CAAiCya,CAAAyZ,UAAjC,CACiB,GAAjB,GAAIl0B,CAAJ,CAA6Bya,CAAAwZ,IAA7B,CACOxZ,CAAA0Z,aACF,IAEW,MAFX,GAEFn0B,CAFE,EAE4C,QAF5C,GAEqB0jC,CAFrB,EAKW,MALX,GAKF1jC,CALE,EAK4C,MAL5C,GAKqB0jC,CALrB,EAOW,MAPX,GAOF1jC,CAPE,EAO4C,MAP5C,GAOqB0jC,CAPrB,CASL,MAAOjpB,EAAA0Z,aACF,IAAiB,GAAjB,GAAIn0B,CAAJ,GAAgD,MAAhD,GAAyB0jC,CAAzB,EAC2C,QAD3C,GACoBA,CADpB,EAEL,MAAOjpB,EAAAwZ,IA5BkD,CAgC7D0P,QAASA,GAAqB,CAAC3jC,CAAD,CAAW4jC,CAAX,CAA+B,CAC3D,IAAIxhC,EAAOwhC,CAAA13B,YAAA,EACX,OAAOknB,EAAA,CAAcpzB,CAAd,CAAyB,GAAzB,CAA+BoC,CAA/B,CAAP,EAA+CgxB,CAAA,CAAc,IAAd,CAAqBhxB,CAArB,CAFY,CAK7DyhC,QAASA,GAA2B,CAAC/kC,CAAD,CAAQ,CAC1C,MAAOw1B,GAAA,CAAe7Z,CAAA5a,QAAA,CAAaf,CAAb,CAAf,CAAoC,gBAApC,CADmC,CAG5Cu7B,QAASA,GAAoB,CAACl4B,CAAD,CAAO6uB,CAAP,CAAmBd,CAAnB;AAA6B4T,CAA7B,CAAuC,CAClE,GAAInT,CAAAzuB,KAAA,CAA+B4hC,CAA/B,CAAJ,CACE,KAAMhU,EAAA,CAAe,aAAf,CAAN,CAGE9vB,CAAAA,CAAW0C,EAAA,CAAUP,CAAV,CACf,KAAI4hC,EAAiBJ,EAAA,CAAsB3jC,CAAtB,CAAgC8jC,CAAhC,CAArB,CAEIE,EAAYhjC,EAEC,SAAjB,GAAI8iC,CAAJ,EAA2C,KAA3C,GAA8B9jC,CAA9B,EAAiE,QAAjE,GAAoDA,CAApD,CAEW+jC,CAFX,GAGEC,CAHF,CAGcvpB,CAAAwpB,WAAAx+B,KAAA,CAAqBgV,CAArB,CAA2BspB,CAA3B,CAHd,EACEC,CADF,CACcH,EAKd7S,EAAA1tB,KAAA,CAAgB,CACd2tB,SAAU,GADI,CAEdpmB,QAASq5B,QAAwB,CAACC,CAAD,CAAI9hC,CAAJ,CAAU,CACzC,IAAI+hC,EAAenqB,CAAA,CAAO5X,CAAA,CAAK6tB,CAAL,CAAP,CAAnB,CACImU,EAAcpqB,CAAA,CAAO5X,CAAA,CAAK6tB,CAAL,CAAP,CAAuBoU,QAAmB,CAACt+B,CAAD,CAAM,CAEhE,MAAOyU,EAAA5a,QAAA,CAAamG,CAAb,CAFyD,CAAhD,CAKlB,OAAO,CACL+1B,IAAKwI,QAAwB,CAAC35B,CAAD,CAAQ4mB,CAAR,CAAkB,CAC7CgT,QAASA,EAAc,EAAG,CACxB,IAAIC,EAAYL,CAAA,CAAax5B,CAAb,CAChB4mB,EAAA,CAAS,CAAT,CAAA,CAAYsS,CAAZ,CAAA,CAAwBE,CAAA,CAAUS,CAAV,CAFA,CAK1BD,CAAA,EACA55B,EAAA7I,OAAA,CAAasiC,CAAb,CAA0BG,CAA1B,CAP6C,CAD1C,CAPkC,CAF7B,CAAhB,CAhBkE,CA8CpEjK,QAASA,GAA2B,CAACp4B,CAAD,CAAO6uB,CAAP,CAAmBlyB,CAAnB,CAA0B2K,CAA1B,CAAgCowB,CAAhC,CAA0C,CAC5E,IAAI75B,EAAW0C,EAAA,CAAUP,CAAV,CAAf,CACI4hC,EAAiBN,EAAA,CAAsBzjC,CAAtB,CAAgCyJ,CAAhC,CADrB,CAGIi7B,EAAehU,CAAA,CAAqBjnB,CAArB,CAAfi7B,EAA6C7K,CAHjD,CAKIiJ,EAAgBnqB,CAAA,CAAa7Z,CAAb,CAHK6lC,CAAC9K,CAGN,CAAwCkK,CAAxC,CAAwDW,CAAxD,CAGpB,IAAK5B,CAAL,CAAA,CAEA,GAAa,UAAb,GAAIr5B,CAAJ,EAAwC,QAAxC,GAA2BzJ,CAA3B,CACE,KAAM8vB,EAAA,CAAe,UAAf,CAEFpoB,EAAA,CAAYvF,CAAZ,CAFE,CAAN,CAKF,GAAIwuB,CAAAzuB,KAAA,CAA+BuH,CAA/B,CAAJ,CACE,KAAMqmB,EAAA,CAAe,aAAf,CAAN,CAGFkB,CAAA1tB,KAAA,CAAgB,CACd2tB,SAAU,GADI;AAEdpmB,QAASA,QAAQ,EAAG,CAChB,MAAO,CACLkxB,IAAK6I,QAAiC,CAACh6B,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CACvDwiC,CAAAA,CAAexiC,CAAAwiC,YAAfA,GAAoCxiC,CAAAwiC,YAApCA,CAAuDz/B,CAAA,EAAvDy/B,CAGJ,KAAIC,EAAWziC,CAAA,CAAKoH,CAAL,CACXq7B,EAAJ,GAAiBhmC,CAAjB,GAIEgkC,CACA,CADgBgC,CAChB,EAD4BnsB,CAAA,CAAamsB,CAAb,CAAuB,CAAA,CAAvB,CAA6Bf,CAA7B,CAA6CW,CAA7C,CAC5B,CAAA5lC,CAAA,CAAQgmC,CALV,CAUKhC,EAAL,GAKAzgC,CAAA,CAAKoH,CAAL,CAGA,CAHaq5B,CAAA,CAAcl4B,CAAd,CAGb,CADAm6B,CAACF,CAAA,CAAYp7B,CAAZ,CAADs7B,GAAuBF,CAAA,CAAYp7B,CAAZ,CAAvBs7B,CAA2C,EAA3CA,UACA,CAD0D,CAAA,CAC1D,CAAAhjC,CAACM,CAAAwiC,YAAD9iC,EAAqBM,CAAAwiC,YAAA,CAAiBp7B,CAAjB,CAAAu7B,QAArBjjC,EAAuD6I,CAAvD7I,QAAA,CACS+gC,CADT,CACwBS,QAAiC,CAACuB,CAAD,CAAWG,CAAX,CAAqB,CAO7D,OAAb,GAAIx7B,CAAJ,EAAwBq7B,CAAxB,GAAqCG,CAArC,CACE5iC,CAAA6iC,aAAA,CAAkBJ,CAAlB,CAA4BG,CAA5B,CADF,CAGE5iC,CAAAk/B,KAAA,CAAU93B,CAAV,CAAgBq7B,CAAhB,CAVwE,CAD9E,CARA,CAf2D,CADxD,CADS,CAFN,CAAhB,CAZA,CAT4E,CA+E9ExF,QAASA,GAAW,CAAChI,CAAD,CAAe6N,CAAf,CAAiCC,CAAjC,CAA0C,CAAA,IACxDC,EAAuBF,CAAA,CAAiB,CAAjB,CADiC,CAExDG,EAAcH,CAAAvnC,OAF0C,CAGxDgD,EAASykC,CAAArkB,WAH+C,CAIxDriB,CAJwD,CAIrDY,CAEP,IAAI+3B,CAAJ,CACE,IAAK34B,CAAO,CAAH,CAAG,CAAAY,CAAA,CAAK+3B,CAAA15B,OAAjB,CAAsCe,CAAtC,CAA0CY,CAA1C,CAA8CZ,CAAA,EAA9C,CACE,GAAI24B,CAAA,CAAa34B,CAAb,CAAJ,GAAwB0mC,CAAxB,CAA8C,CAC5C/N,CAAA,CAAa34B,CAAA,EAAb,CAAA,CAAoBymC,CACJG,EAAAA,CAAK/lC,CAAL+lC,CAASD,CAATC,CAAuB,CAAvC,KAAS,IACA9lC,EAAK63B,CAAA15B,OADd,CAEK4B,CAFL,CAESC,CAFT,CAEaD,CAAA,EAAA,CAAK+lC,CAAA,EAFlB,CAGMA,CAAJ,CAAS9lC,CAAT,CACE63B,CAAA,CAAa93B,CAAb,CADF,CACoB83B,CAAA,CAAaiO,CAAb,CADpB,CAGE,OAAOjO,CAAA,CAAa93B,CAAb,CAGX83B,EAAA15B,OAAA,EAAuB0nC,CAAvB,CAAqC,CAKjChO,EAAAr5B,QAAJ,GAA6BonC,CAA7B;CACE/N,CAAAr5B,QADF,CACyBmnC,CADzB,CAGA,MAnB4C,CAwB9CxkC,CAAJ,EACEA,CAAA4kC,aAAA,CAAoBJ,CAApB,CAA6BC,CAA7B,CAOEtoB,EAAAA,CAAWvgB,CAAAyJ,SAAA+W,uBAAA,EACf,KAAKre,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2mC,CAAhB,CAA6B3mC,CAAA,EAA7B,CACEoe,CAAAG,YAAA,CAAqBioB,CAAA,CAAiBxmC,CAAjB,CAArB,CAGEhB,EAAA8nC,QAAA,CAAeJ,CAAf,CAAJ,GAIE1nC,CAAAoN,KAAA,CAAYq6B,CAAZ,CAAqBznC,CAAAoN,KAAA,CAAYs6B,CAAZ,CAArB,CAGA,CAAA1nC,CAAA,CAAO0nC,CAAP,CAAAvY,IAAA,CAAiC,UAAjC,CAPF,CAYAnvB,EAAAoP,UAAA,CAAiBgQ,CAAA4B,iBAAA,CAA0B,GAA1B,CAAjB,CAGA,KAAKhgB,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgB2mC,CAAhB,CAA6B3mC,CAAA,EAA7B,CACE,OAAOwmC,CAAA,CAAiBxmC,CAAjB,CAETwmC,EAAA,CAAiB,CAAjB,CAAA,CAAsBC,CACtBD,EAAAvnC,OAAA,CAA0B,CAhEkC,CAoE9Du+B,QAASA,GAAkB,CAACx2B,CAAD,CAAK+/B,CAAL,CAAiB,CAC1C,MAAOtlC,EAAA,CAAO,QAAQ,EAAG,CAAE,MAAOuF,EAAAG,MAAA,CAAS,IAAT,CAAexF,SAAf,CAAT,CAAlB,CAAyDqF,CAAzD,CAA6D+/B,CAA7D,CADmC,CAK5CvH,QAASA,GAAY,CAACjD,CAAD,CAAStwB,CAAT,CAAgB4mB,CAAhB,CAA0B2G,CAA1B,CAAiCY,CAAjC,CAA8ChD,CAA9C,CAA4D,CAC/E,GAAI,CACFmF,CAAA,CAAOtwB,CAAP,CAAc4mB,CAAd,CAAwB2G,CAAxB,CAA+BY,CAA/B,CAA4ChD,CAA5C,CADE,CAEF,MAAO9tB,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CAAqBP,EAAA,CAAY8pB,CAAZ,CAArB,CADU,CAHmE,CAQjFmU,QAASA,GAAmB,CAACzV,CAAD,CAAWX,CAAX,CAA0B,CACpD,GAAIkD,CAAJ,CACE,KAAM3C,EAAA,CAAe,aAAf,CAEJI,CAFI,CAEMX,CAFN,CAAN,CAFkD,CAStD8N,QAASA,GAA2B,CAACzyB,CAAD,CAAQutB,CAAR,CAAe/0B,CAAf,CAA4BssB,CAA5B,CAAsCpf,CAAtC,CAAiD,CAoInFs1B,QAASA,EAAa,CAAC1nC,CAAD,CAAM2nC,CAAN,CAAoBC,CAApB,CAAmC,CACnD3nC,CAAA,CAAWiF,CAAAy6B,WAAX,CAAJ;AAA2C,CAAAn5B,EAAA,CAAcmhC,CAAd,CAA4BC,CAA5B,CAA3C,GAEOzR,EAcL,GAbEzpB,CAAAm7B,aAAA,CAAmB3R,CAAnB,CACA,CAAAC,EAAA,CAAiB,EAYnB,EATK2R,CASL,GAREA,CACA,CADU,EACV,CAAA3R,EAAA/wB,KAAA,CAAoB2iC,CAApB,CAOF,EAJID,CAAA,CAAQ9nC,CAAR,CAIJ,GAHE4nC,CAGF,CAHkBE,CAAA,CAAQ9nC,CAAR,CAAA4nC,cAGlB,EAAAE,CAAA,CAAQ9nC,CAAR,CAAA,CAAe,IAAIgoC,EAAJ,CAAiBJ,CAAjB,CAAgCD,CAAhC,CAhBjB,CADuD,CAqBzDI,QAASA,EAAoB,EAAG,CAC9B7iC,CAAAy6B,WAAA,CAAuBmI,CAAvB,CAEAA,EAAA,CAAUniC,IAAAA,EAHoB,CAxJhC,IAAIsiC,EAAwB,EAA5B,CACIrI,EAAiB,EADrB,CAEIkI,CAEJjoC,EAAA,CAAQ2xB,CAAR,CAAkB0W,QAA0B,CAACzW,CAAD,CAAaC,CAAb,CAAwB,CAAA,IAC9DM,EAAWP,CAAAO,SADmD,CAElED,EAAWN,CAAAM,SAFuD,CAIlEoW,CAJkE,CAKlEC,CALkE,CAKvDC,CALuD,CAK5CC,CAEtB,QAJO7W,CAAAI,KAIP,EAEE,KAAK,GAAL,CACOE,CAAL,EAAkB7xB,EAAAC,KAAA,CAAoB85B,CAApB,CAA2BjI,CAA3B,CAAlB,GACEyV,EAAA,CAAoBzV,CAApB,CAA8B5f,CAAA7G,KAA9B,CACA,CAAArG,CAAA,CAAYwsB,CAAZ,CAAA,CAAyBuI,CAAA,CAAMjI,CAAN,CAAzB,CAA2CrsB,IAAAA,EAF7C,CAKA4iC,EAAA,CAActO,CAAAuO,SAAA,CAAexW,CAAf,CAAyB,QAAQ,CAACpxB,CAAD,CAAQ,CACrD,GAAIpB,CAAA,CAASoB,CAAT,CAAJ,EAAuB5B,EAAA,CAAU4B,CAAV,CAAvB,CAEE8mC,CAAA,CAAchW,CAAd,CAAyB9wB,CAAzB,CADesE,CAAA6hC,CAAYrV,CAAZqV,CACf,CACA,CAAA7hC,CAAA,CAAYwsB,CAAZ,CAAA,CAAyB9wB,CAJ0B,CAAzC,CAOdq5B,EAAA0M,YAAA,CAAkB3U,CAAlB,CAAA8U,QAAA,CAAsCp6B,CACtCy7B,EAAA,CAAYlO,CAAA,CAAMjI,CAAN,CACRxyB,EAAA,CAAS2oC,CAAT,CAAJ,CAGEjjC,CAAA,CAAYwsB,CAAZ,CAHF,CAG2BjX,CAAA,CAAa0tB,CAAb,CAAA,CAAwBz7B,CAAxB,CAH3B,CAIW1N,EAAA,CAAUmpC,CAAV,CAJX,GAOEjjC,CAAA,CAAYwsB,CAAZ,CAPF,CAO2ByW,CAP3B,CASAvI,EAAA,CAAelO,CAAf,CAAA,CAA4B,IAAIsW,EAAJ,CAAiBS,EAAjB,CAAuCvjC,CAAA,CAAYwsB,CAAZ,CAAvC,CAC5BuW,EAAA7iC,KAAA,CAA2BmjC,CAA3B,CACA,MAEF,MAAK,GAAL,CACE,GAAK,CAAAroC,EAAAC,KAAA,CAAoB85B,CAApB,CAA2BjI,CAA3B,CAAL,CAA2C,CACzC,GAAID,CAAJ,CAAc,KACd0V,GAAA,CAAoBzV,CAApB;AAA8B5f,CAAA7G,KAA9B,CACA0uB,EAAA,CAAMjI,CAAN,CAAA,CAAkBrsB,IAAAA,EAHuB,CAK3C,GAAIosB,CAAJ,EAAiB,CAAAkI,CAAA,CAAMjI,CAAN,CAAjB,CAAkC,KAElCoW,EAAA,CAAYrsB,CAAA,CAAOke,CAAA,CAAMjI,CAAN,CAAP,CAEVsW,EAAA,CADEF,CAAAM,QAAJ,CACY/hC,EADZ,CAGYH,EAEZ6hC,EAAA,CAAYD,CAAAO,OAAZ,EAAgC,QAAQ,EAAG,CAEzCR,CAAA,CAAYjjC,CAAA,CAAYwsB,CAAZ,CAAZ,CAAqC0W,CAAA,CAAU17B,CAAV,CACrC,MAAMklB,EAAA,CAAe,WAAf,CAEFqI,CAAA,CAAMjI,CAAN,CAFE,CAEeA,CAFf,CAEyB5f,CAAA7G,KAFzB,CAAN,CAHyC,CAO3C48B,EAAA,CAAYjjC,CAAA,CAAYwsB,CAAZ,CAAZ,CAAqC0W,CAAA,CAAU17B,CAAV,CACjCk8B,EAAAA,CAAmBA,QAAyB,CAACC,CAAD,CAAc,CACvDP,CAAA,CAAQO,CAAR,CAAqB3jC,CAAA,CAAYwsB,CAAZ,CAArB,CAAL,GAEO4W,CAAA,CAAQO,CAAR,CAAqBV,CAArB,CAAL,CAKEE,CAAA,CAAU37B,CAAV,CAAiBm8B,CAAjB,CAA+B3jC,CAAA,CAAYwsB,CAAZ,CAA/B,CALF,CAEExsB,CAAA,CAAYwsB,CAAZ,CAFF,CAE2BmX,CAJ7B,CAWA,OADAV,EACA,CADYU,CAXgD,CAc9DD,EAAAE,UAAA,CAA6B,CAAA,CAE3BP,EAAA,CADE9W,CAAAK,WAAJ,CACgBplB,CAAAq8B,iBAAA,CAAuB9O,CAAA,CAAMjI,CAAN,CAAvB,CAAwC4W,CAAxC,CADhB,CAGgBl8B,CAAA7I,OAAA,CAAakY,CAAA,CAAOke,CAAA,CAAMjI,CAAN,CAAP,CAAwB4W,CAAxB,CAAb,CAAwD,IAAxD,CAA8DR,CAAAM,QAA9D,CAEhBT,EAAA7iC,KAAA,CAA2BmjC,CAA3B,CACA,MAEF,MAAK,GAAL,CACE,GAAK,CAAAroC,EAAAC,KAAA,CAAoB85B,CAApB,CAA2BjI,CAA3B,CAAL,CAA2C,CACzC,GAAID,CAAJ,CAAc,KACd0V,GAAA,CAAoBzV,CAApB,CAA8B5f,CAAA7G,KAA9B,CACA0uB,EAAA,CAAMjI,CAAN,CAAA,CAAkBrsB,IAAAA,EAHuB,CAK3C,GAAIosB,CAAJ,EAAiB,CAAAkI,CAAA,CAAMjI,CAAN,CAAjB,CAAkC,KAElCoW,EAAA,CAAYrsB,CAAA,CAAOke,CAAA,CAAMjI,CAAN,CAAP,CACZ,KAAIgX,EAAYZ,CAAAM,QAAhB,CAEIO,EAAe/jC,CAAA,CAAYwsB,CAAZ,CAAfuX,CAAwCb,CAAA,CAAU17B,CAAV,CAC5CkzB,EAAA,CAAelO,CAAf,CAAA,CAA4B,IAAIsW,EAAJ,CAAiBS,EAAjB,CAAuCvjC,CAAA,CAAYwsB,CAAZ,CAAvC,CAE5B6W,EAAA,CAAc77B,CAAA,CAAM+kB,CAAAK,WAAA,CAAwB,kBAAxB,CAA6C,QAAnD,CAAA,CAA6DsW,CAA7D;AAAwEc,QAA+B,CAACtC,CAAD,CAAWG,CAAX,CAAqB,CACxI,GAAIA,CAAJ,GAAiBH,CAAjB,CAA2B,CACzB,GAAIG,CAAJ,GAAiBkC,CAAjB,EAAkCD,CAAlC,EAA+CriC,EAAA,CAAOogC,CAAP,CAAiBkC,CAAjB,CAA/C,CACE,MAEFlC,EAAA,CAAWkC,CAJc,CAM3BvB,CAAA,CAAchW,CAAd,CAAyBkV,CAAzB,CAAmCG,CAAnC,CACA7hC,EAAA,CAAYwsB,CAAZ,CAAA,CAAyBkV,CAR+G,CAA5H,CAWdqB,EAAA7iC,KAAA,CAA2BmjC,CAA3B,CACA,MAEF,MAAK,GAAL,CACOxW,CAAL,EAAkB7xB,EAAAC,KAAA,CAAoB85B,CAApB,CAA2BjI,CAA3B,CAAlB,EACEyV,EAAA,CAAoBzV,CAApB,CAA8B5f,CAAA7G,KAA9B,CAGF68B,EAAA,CAAYnO,CAAA/5B,eAAA,CAAqB8xB,CAArB,CAAA,CAAiCjW,CAAA,CAAOke,CAAA,CAAMjI,CAAN,CAAP,CAAjC,CAA2DnvB,CAGvE,IAAIulC,CAAJ,GAAkBvlC,CAAlB,EAA0BkvB,CAA1B,CAAoC,KAEpC7sB,EAAA,CAAYwsB,CAAZ,CAAA,CAAyB,QAAQ,CAAC7I,CAAD,CAAS,CACxC,MAAOuf,EAAA,CAAU17B,CAAV,CAAiBmc,CAAjB,CADiC,CAjH9C,CAPkE,CAApE,CA0JA,OAAO,CACL+W,eAAgBA,CADX,CAELR,cAAe6I,CAAAvoC,OAAf0/B,EAA+CA,QAAsB,EAAG,CACtE,IADsE,IAC7D3+B,EAAI,CADyD,CACtDY,EAAK4mC,CAAAvoC,OAArB,CAAmDe,CAAnD,CAAuDY,CAAvD,CAA2D,EAAEZ,CAA7D,CACEwnC,CAAA,CAAsBxnC,CAAtB,CAAA,EAFoE,CAFnE,CA/J4E,CA3+DrF,IAAI0oC,GAAmB,KAAvB,CACI9R,GAAoB/4B,CAAAyJ,SAAAkX,cAAA,CAA8B,KAA9B,CADxB,CAII4V,GAA2BD,CAJ/B,CAKII,GAA4BD,CALhC,CAQIL,GAAeD,CARnB,CAWI0B,EA+FJY,EAAAtQ,UAAA,CAAuB,CAgBrB2iB,WAAY/N,EAhBS,CA8BrBgO,UAAWA,QAAQ,CAACC,CAAD,CAAW,CACxBA,CAAJ,EAAkC,CAAlC,CAAgBA,CAAA5pC,OAAhB,EACEmZ,CAAA+M,SAAA,CAAkB,IAAAuR,UAAlB,CAAkCmS,CAAlC,CAF0B,CA9BT,CA+CrBC,aAAcA,QAAQ,CAACD,CAAD,CAAW,CAC3BA,CAAJ;AAAkC,CAAlC,CAAgBA,CAAA5pC,OAAhB,EACEmZ,CAAAgN,YAAA,CAAqB,IAAAsR,UAArB,CAAqCmS,CAArC,CAF6B,CA/CZ,CAiErBtC,aAAcA,QAAQ,CAAC3kB,CAAD,CAAa6hB,CAAb,CAAyB,CAC7C,IAAIsF,EAAQC,EAAA,CAAgBpnB,CAAhB,CAA4B6hB,CAA5B,CACRsF,EAAJ,EAAaA,CAAA9pC,OAAb,EACEmZ,CAAA+M,SAAA,CAAkB,IAAAuR,UAAlB,CAAkCqS,CAAlC,CAIF,EADIE,CACJ,CADeD,EAAA,CAAgBvF,CAAhB,CAA4B7hB,CAA5B,CACf,GAAgBqnB,CAAAhqC,OAAhB,EACEmZ,CAAAgN,YAAA,CAAqB,IAAAsR,UAArB,CAAqCuS,CAArC,CAR2C,CAjE1B,CAsFrBrG,KAAMA,QAAQ,CAACrjC,CAAD,CAAMY,CAAN,CAAa+oC,CAAb,CAAwB3X,CAAxB,CAAkC,CAAA,IAM1C4X,EAAahmB,EAAA,CADN,IAAAuT,UAAAlzB,CAAe,CAAfA,CACM,CAAyBjE,CAAzB,CAN6B,CAO1C6pC,EAnxLHC,EAAA,CAmxLmC9pC,CAnxLnC,CA4wL6C,CAQ1C+pC,EAAW/pC,CAGX4pC,EAAJ,EACE,IAAAzS,UAAAjzB,KAAA,CAAoBlE,CAApB,CAAyBY,CAAzB,CACA,CAAAoxB,CAAA,CAAW4X,CAFb,EAGWC,CAHX,GAIE,IAAA,CAAKA,CAAL,CACA,CADmBjpC,CACnB,CAAAmpC,CAAA,CAAWF,CALb,CAQA,KAAA,CAAK7pC,CAAL,CAAA,CAAYY,CAGRoxB,EAAJ,CACE,IAAAkF,MAAA,CAAWl3B,CAAX,CADF,CACoBgyB,CADpB,EAGEA,CAHF,CAGa,IAAAkF,MAAA,CAAWl3B,CAAX,CAHb,IAKI,IAAAk3B,MAAA,CAAWl3B,CAAX,CALJ,CAKsBgyB,CALtB,CAKiCrkB,EAAA,CAAW3N,CAAX,CAAgB,GAAhB,CALjC,CAYiB,MAAjB,GAHWwE,EAAA1C,CAAU,IAAAq1B,UAAVr1B,CAGX,EAAkC,QAAlC,GAA0B9B,CAA1B,GACE,IAAA,CAAKA,CAAL,CADF,CACcY,CADd,CACsBw1B,EAAA,CAAex1B,CAAf,CAAsB,uBAAtB,CADtB,CAIkB,EAAA,CAAlB,GAAI+oC,CAAJ,GACgB,IAAd,GAAI/oC,CAAJ,EAAsBwC,CAAA,CAAYxC,CAAZ,CAAtB,CACE,IAAAu2B,UAAA6S,WAAA,CAA0BhY,CAA1B,CADF;AAGMmX,EAAAnlC,KAAA,CAAsBguB,CAAtB,CAAJ,CAMM4X,CAAJ,EAA4B,CAAA,CAA5B,GAAkBhpC,CAAlB,CACE,IAAAu2B,UAAA6S,WAAA,CAA0BhY,CAA1B,CADF,CAGE,IAAAmF,UAAAhzB,KAAA,CAAoB6tB,CAApB,CAA8BpxB,CAA9B,CATJ,CAYEw2B,CAAA,CAAe,IAAAD,UAAA,CAAe,CAAf,CAAf,CAAkCnF,CAAlC,CAA4CpxB,CAA5C,CAhBN,CAuBA,EADI+lC,CACJ,CADkB,IAAAA,YAClB,GACE9mC,CAAA,CAAQ8mC,CAAA,CAAYoD,CAAZ,CAAR,CAA+B,QAAQ,CAACtiC,CAAD,CAAK,CAC1C,GAAI,CACFA,CAAA,CAAG7G,CAAH,CADE,CAEF,MAAOmJ,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAH8B,CAA5C,CA9D4C,CAtF3B,CAkLrBy+B,SAAUA,QAAQ,CAACxoC,CAAD,CAAMyH,CAAN,CAAU,CAAA,IACtBwyB,EAAQ,IADc,CAEtB0M,EAAe1M,CAAA0M,YAAfA,GAAqC1M,CAAA0M,YAArCA,CAAyDz/B,CAAA,EAAzDy/B,CAFsB,CAGtBsD,EAAatD,CAAA,CAAY3mC,CAAZ,CAAbiqC,GAAkCtD,CAAA,CAAY3mC,CAAZ,CAAlCiqC,CAAqD,EAArDA,CAEJA,EAAA7kC,KAAA,CAAeqC,CAAf,CACAwU,EAAArY,WAAA,CAAsB,QAAQ,EAAG,CAC1BqmC,CAAApD,QAAL,EAA0B,CAAA5M,CAAA/5B,eAAA,CAAqBF,CAArB,CAA1B,EAAwDoD,CAAA,CAAY62B,CAAA,CAAMj6B,CAAN,CAAZ,CAAxD,EAEEyH,CAAA,CAAGwyB,CAAA,CAAMj6B,CAAN,CAAH,CAH6B,CAAjC,CAOA,OAAO,SAAQ,EAAG,CAChB2E,EAAA,CAAYslC,CAAZ,CAAuBxiC,CAAvB,CADgB,CAbQ,CAlLP,CA5GiC,KAwUpDyiC,GAAczvB,CAAAyvB,YAAA,EAxUsC,CAyUpDC,GAAY1vB,CAAA0vB,UAAA,EAzUwC,CA0UpDrI,GAAuC,IAAjB,GAACoI,EAAD,EAAwC,IAAxC,GAAyBC,EAAzB,CAChBrnC,EADgB,CAEhBg/B,QAA4B,CAACtO,CAAD,CAAW,CACvC,MAAOA,EAAA9qB,QAAA,CAAiB,OAAjB,CAA0BwhC,EAA1B,CAAAxhC,QAAA,CAA+C,KAA/C,CAAsDyhC,EAAtD,CADgC,CA5UO,CA+UpDpO;AAAoB,6BA/UgC,CAgVpDE,GAAuB,aAE3BtvB,GAAAw4B,iBAAA,CAA2B94B,CAAA,CAAmB84B,QAAyB,CAAC7R,CAAD,CAAW8W,CAAX,CAAoB,CACzF,IAAI5Y,EAAW8B,CAAAzmB,KAAA,CAAc,UAAd,CAAX2kB,EAAwC,EAExCjyB,EAAA,CAAQ6qC,CAAR,CAAJ,CACE5Y,CADF,CACaA,CAAApqB,OAAA,CAAgBgjC,CAAhB,CADb,CAGE5Y,CAAApsB,KAAA,CAAcglC,CAAd,CAGF9W,EAAAzmB,KAAA,CAAc,UAAd,CAA0B2kB,CAA1B,CATyF,CAAhE,CAUvB3uB,CAEJ8J,GAAAs4B,kBAAA,CAA4B54B,CAAA,CAAmB44B,QAA0B,CAAC3R,CAAD,CAAW,CAClFoE,EAAA,CAAapE,CAAb,CAAuB,YAAvB,CADkF,CAAxD,CAExBzwB,CAEJ8J,GAAAusB,eAAA,CAAyB7sB,CAAA,CAAmB6sB,QAAuB,CAAC5F,CAAD,CAAW5mB,CAAX,CAAkB29B,CAAlB,CAA4BC,CAA5B,CAAwC,CAEzGhX,CAAAzmB,KAAA,CADew9B,CAAA5H,CAAY6H,CAAA,CAAa,yBAAb,CAAyC,eAArD7H,CAAwE,QACvF,CAAwB/1B,CAAxB,CAFyG,CAAlF,CAGrB7J,CAEJ8J,GAAAwrB,gBAAA,CAA0B9rB,CAAA,CAAmB8rB,QAAwB,CAAC7E,CAAD,CAAW+W,CAAX,CAAqB,CACxF3S,EAAA,CAAapE,CAAb,CAAuB+W,CAAA,CAAW,kBAAX,CAAgC,UAAvD,CADwF,CAAhE,CAEtBxnC,CAEJ8J,GAAAw0B,gBAAA,CAA0BoJ,QAAQ,CAAClZ,CAAD,CAAgBmZ,CAAhB,CAAyB,CACzD,IAAI3G,EAAU,EACVx3B,EAAJ,GACEw3B,CACA,CADU,GACV,EADiBxS,CACjB,EADkC,EAClC,EADwC,IACxC,CAAImZ,CAAJ,GAAa3G,CAAb,EAAwB2G,CAAxB,CAAkC,GAAlC,CAFF,CAIA,OAAOlsC,EAAAyJ,SAAA0iC,cAAA,CAA8B5G,CAA9B,CANkD,CAS3D;MAAOl3B,GApXiD,CAJ9C,CAhpB6C,CA4yF3Dq7B,QAASA,GAAY,CAAC0C,CAAD,CAAWC,CAAX,CAAoB,CACvC,IAAA/C,cAAA,CAAqB8C,CACrB,KAAA/C,aAAA,CAAoBgD,CAFmB,CAczCtP,QAASA,GAAkB,CAAC9vB,CAAD,CAAO,CAChC,MAAOA,EAAA7C,QAAA,CACIszB,EADJ,CACmB,EADnB,CAAAtzB,QAAA,CAEIkiC,EAFJ,CAE0B,QAAQ,CAAC3E,CAAD,CAAIn4B,CAAJ,CAAY6c,CAAZ,CAAoB,CACzD,MAAOA,EAAA,CAAS7c,CAAAsQ,YAAA,EAAT,CAAgCtQ,CADkB,CAFtD,CADyB,CAoElC27B,QAASA,GAAe,CAACoB,CAAD,CAAOC,CAAP,CAAa,CAAA,IAC/BpV,EAAS,EADsB,CAE/BqV,EAAUF,CAAAtmC,MAAA,CAAW,KAAX,CAFqB,CAG/BymC,EAAUF,CAAAvmC,MAAA,CAAW,KAAX,CAHqB,CAM1B9D,EAAI,CADb,EAAA,CACA,IAAA,CAAgBA,CAAhB,CAAoBsqC,CAAArrC,OAApB,CAAoCe,CAAA,EAApC,CAAyC,CAEvC,IADA,IAAIwqC,EAAQF,CAAA,CAAQtqC,CAAR,CAAZ,CACSa,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0pC,CAAAtrC,OAApB,CAAoC4B,CAAA,EAApC,CACE,GAAI2pC,CAAJ,GAAcD,CAAA,CAAQ1pC,CAAR,CAAd,CAA0B,SAAS,CAErCo0B,EAAA,GAA2B,CAAhB,CAAAA,CAAAh2B,OAAA,CAAoB,GAApB,CAA0B,EAArC,EAA2CurC,CALJ,CAOzC,MAAOvV,EAb4B,CAgBrCqM,QAASA,GAAc,CAACmJ,CAAD,CAAU,CAC/BA,CAAA,CAAUzrC,CAAA,CAAOyrC,CAAP,CACV,KAAIzqC,EAAIyqC,CAAAxrC,OAER,IAAS,CAAT,EAAIe,CAAJ,CACE,MAAOyqC,EAGT,KAAA,CAAOzqC,CAAA,EAAP,CAAA,CAAY,CACV,IAAIwD,EAAOinC,CAAA,CAAQzqC,CAAR,CACX,EA7tSoB+7B,CA6tSpB,GAAIv4B,CAAA4F,SAAJ,EACI5F,CAAA4F,SADJ,GACsBC,EADtB,EACkE,EADlE,GACwC7F,CAAAu2B,UAAAxa,KAAA,EADxC,GAEKjb,EAAA5E,KAAA,CAAY+qC,CAAZ,CAAqBzqC,CAArB,CAAwB,CAAxB,CAJK,CAOZ,MAAOyqC,EAfwB,CAt4Wf;AA45WlBtX,QAASA,GAAuB,CAACllB,CAAD,CAAay8B,CAAb,CAAoB,CAClD,GAAIA,CAAJ,EAAa3rC,CAAA,CAAS2rC,CAAT,CAAb,CAA8B,MAAOA,EACrC,IAAI3rC,CAAA,CAASkP,CAAT,CAAJ,CAA0B,CACxB,IAAIrI,EAAQ+kC,EAAAjsB,KAAA,CAAezQ,CAAf,CACZ,IAAIrI,CAAJ,CAAW,MAAOA,EAAA,CAAM,CAAN,CAFM,CAFwB,CAqBpDyT,QAASA,GAAmB,EAAG,CAC7B,IAAI+gB,EAAc,EAOlB,KAAAxR,IAAA,CAAWgiB,QAAQ,CAAC9/B,CAAD,CAAO,CACxB,MAAOsvB,EAAA36B,eAAA,CAA2BqL,CAA3B,CADiB,CAY1B,KAAA+/B,SAAA,CAAgBC,QAAQ,CAAChgC,CAAD,CAAO3F,CAAP,CAAoB,CAC1CgK,EAAA,CAAwBrE,CAAxB,CAA8B,YAA9B,CACI9M,EAAA,CAAS8M,CAAT,CAAJ,CACErJ,CAAA,CAAO24B,CAAP,CAAoBtvB,CAApB,CADF,CAGEsvB,CAAA,CAAYtvB,CAAZ,CAHF,CAGsB3F,CALoB,CAS5C,KAAA4f,KAAA,CAAY,CAAC,WAAD,CAAc,QAAQ,CAAC+D,CAAD,CAAY,CA0G5CiiB,QAASA,EAAa,CAAC3iB,CAAD,CAAS4iB,CAAT,CAAqBxS,CAArB,CAA+B1tB,CAA/B,CAAqC,CACzD,GAAMsd,CAAAA,CAAN,EAAgB,CAAApqB,CAAA,CAASoqB,CAAA+Z,OAAT,CAAhB,CACE,KAAMzjC,EAAA,CAAO,aAAP,CAAA,CAAsB,OAAtB,CAEJoM,CAFI,CAEEkgC,CAFF,CAAN,CAKF5iB,CAAA+Z,OAAA,CAAc6I,CAAd,CAAA,CAA4BxS,CAP6B,CA/E3D,MAAOpf,SAAoB,CAAC6xB,CAAD,CAAa7iB,CAAb,CAAqB8iB,CAArB,CAA4BR,CAA5B,CAAmC,CAAA,IAQxDlS,CARwD,CAQvCrzB,CARuC,CAQ1B6lC,CAClCE,EAAA,CAAkB,CAAA,CAAlB,GAAQA,CACJR,EAAJ,EAAa3rC,CAAA,CAAS2rC,CAAT,CAAb,GACEM,CADF,CACeN,CADf,CAIA,IAAI3rC,CAAA,CAASksC,CAAT,CAAJ,CAA0B,CACxBrlC,CAAA,CAAQqlC,CAAArlC,MAAA,CAAiB+kC,EAAjB,CACR,IAAK/kC,CAAAA,CAAL,CACE,KAAMulC,GAAA,CAAkB,SAAlB,CAE8CF,CAF9C,CAAN,CAIF9lC,CAAA,CAAcS,CAAA,CAAM,CAAN,CACdolC,EAAA,CAAaA,CAAb,EAA2BplC,CAAA,CAAM,CAAN,CAC3BqlC,EAAA,CAAa7Q,CAAA36B,eAAA,CAA2B0F,CAA3B,CAAA,CACPi1B,CAAA,CAAYj1B,CAAZ,CADO,CAEPiK,EAAA,CAAOgZ,CAAA+Z,OAAP;AAAsBh9B,CAAtB,CAAmC,CAAA,CAAnC,CAEN,IAAK8lC,CAAAA,CAAL,CACE,KAAME,GAAA,CAAkB,SAAlB,CACuDhmC,CADvD,CAAN,CAIF8J,EAAA,CAAYg8B,CAAZ,CAAwB9lC,CAAxB,CAAqC,CAAA,CAArC,CAlBwB,CAqB1B,GAAI+lC,CAAJ,CAmBE,MARIE,EAQG,CARmBplB,CAAClnB,CAAA,CAAQmsC,CAAR,CAAA,CACzBA,CAAA,CAAWA,CAAAhsC,OAAX,CAA+B,CAA/B,CADyB,CACWgsC,CADZjlB,WAQnB,CANPwS,CAMO,CANIt5B,MAAAiD,OAAA,CAAcipC,CAAd,EAAqC,IAArC,CAMJ,CAJHJ,CAIG,EAHLD,CAAA,CAAc3iB,CAAd,CAAsB4iB,CAAtB,CAAkCxS,CAAlC,CAA4CrzB,CAA5C,EAA2D8lC,CAAAngC,KAA3D,CAGK,CAAArJ,CAAA,CAAO4pC,QAAwB,EAAG,CACvC,IAAIrkB,EAAS8B,CAAA/c,OAAA,CAAiBk/B,CAAjB,CAA6BzS,CAA7B,CAAuCpQ,CAAvC,CAA+CjjB,CAA/C,CACT6hB,EAAJ,GAAewR,CAAf,GAA4Bx6B,CAAA,CAASgpB,CAAT,CAA5B,EAAgDxnB,CAAA,CAAWwnB,CAAX,CAAhD,IACEwR,CACA,CADWxR,CACX,CAAIgkB,CAAJ,EAEED,CAAA,CAAc3iB,CAAd,CAAsB4iB,CAAtB,CAAkCxS,CAAlC,CAA4CrzB,CAA5C,EAA2D8lC,CAAAngC,KAA3D,CAJJ,CAOA,OAAO0tB,EATgC,CAAlC,CAUJ,CACDA,SAAUA,CADT,CAEDwS,WAAYA,CAFX,CAVI,CAgBTxS,EAAA,CAAW1P,CAAAnC,YAAA,CAAsBskB,CAAtB,CAAkC7iB,CAAlC,CAA0CjjB,CAA1C,CAEP6lC,EAAJ,EACED,CAAA,CAAc3iB,CAAd,CAAsB4iB,CAAtB,CAAkCxS,CAAlC,CAA4CrzB,CAA5C,EAA2D8lC,CAAAngC,KAA3D,CAGF,OAAO0tB,EA5EqD,CA3BlB,CAAlC,CA7BiB,CA6K/Bjf,QAASA,GAAiB,EAAG,CAC3B,IAAAwL,KAAA,CAAY,CAAC,SAAD,CAAY,QAAQ,CAAClnB,CAAD,CAAS,CACvC,MAAOmB,EAAA,CAAOnB,CAAAyJ,SAAP,CADgC,CAA7B,CADe,CAY7BmS,QAASA,GAA0B,EAAG,CACpC,IAAAsL,KAAA,CAAY,CAAC,WAAD,CAAc,YAAd,CAA4B,QAAQ,CAACzL,CAAD,CAAYkC,CAAZ,CAAwB,CAUtE8vB,QAASA,EAAc,EAAG,CACxBC,CAAA,CAASC,CAAAD,OADe,CAT1B,IAAIC,EAAMlyB,CAAA,CAAU,CAAV,CAAV,CACIiyB,EAASC,CAATD,EAAgBC,CAAAD,OAEpBjyB;CAAAxL,GAAA,CAAa,kBAAb,CAAiCw9B,CAAjC,CAEA9vB,EAAAojB,IAAA,CAAe,UAAf,CAA2B,QAAQ,EAAG,CACpCtlB,CAAA6U,IAAA,CAAc,kBAAd,CAAkCmd,CAAlC,CADoC,CAAtC,CAQA,OAAO,SAAQ,EAAG,CAChB,MAAOC,EADS,CAdoD,CAA5D,CADwB,CAiEtC5xB,QAASA,GAAyB,EAAG,CACnC,IAAAoL,KAAA,CAAY,CAAC,MAAD,CAAS,QAAQ,CAAC3J,CAAD,CAAO,CAClC,MAAO,SAAQ,CAACqwB,CAAD,CAAYC,CAAZ,CAAmB,CAChCtwB,CAAA/P,MAAAlE,MAAA,CAAiBiU,CAAjB,CAAuBzZ,SAAvB,CADgC,CADA,CAAxB,CADuB,CAyCrCgqC,QAASA,GAAc,CAACzW,CAAD,CAAI,CACzB,MAAIl3B,EAAA,CAASk3B,CAAT,CAAJ,CACSl0B,EAAA,CAAOk0B,CAAP,CAAA,CAAYA,CAAA0W,YAAA,EAAZ,CAA8BrkC,EAAA,CAAO2tB,CAAP,CADvC,CAGOA,CAJkB,CAS3Bza,QAASA,GAA4B,EAAG,CAiBtC,IAAAsK,KAAA,CAAYC,QAAQ,EAAG,CACrB,MAAO6mB,SAA0B,CAACC,CAAD,CAAS,CACxC,GAAKA,CAAAA,CAAL,CAAa,MAAO,EACpB,KAAIhiC,EAAQ,EACZjK,GAAA,CAAcisC,CAAd,CAAsB,QAAQ,CAAC3rC,CAAD,CAAQZ,CAAR,CAAa,CAC3B,IAAd,GAAIY,CAAJ,EAAsBwC,CAAA,CAAYxC,CAAZ,CAAtB,EAA4CX,CAAA,CAAWW,CAAX,CAA5C,GACIrB,CAAA,CAAQqB,CAAR,CAAJ,CACEf,CAAA,CAAQe,CAAR,CAAe,QAAQ,CAAC+0B,CAAD,CAAI,CACzBprB,CAAAnF,KAAA,CAAWqF,EAAA,CAAezK,CAAf,CAAX,CAAkC,GAAlC,CAAwCyK,EAAA,CAAe2hC,EAAA,CAAezW,CAAf,CAAf,CAAxC,CADyB,CAA3B,CADF,CAKEprB,CAAAnF,KAAA,CAAWqF,EAAA,CAAezK,CAAf,CAAX,CAAiC,GAAjC,CAAuCyK,EAAA,CAAe2hC,EAAA,CAAexrC,CAAf,CAAf,CAAvC,CANF,CADyC,CAA3C,CAWA,OAAO2J,EAAAG,KAAA,CAAW,GAAX,CAdiC,CADrB,CAjBe,CAsCxC0Q,QAASA,GAAkC,EAAG,CA6C5C,IAAAoK,KAAA;AAAYC,QAAQ,EAAG,CACrB,MAAO+mB,SAAkC,CAACD,CAAD,CAAS,CAMhDE,QAASA,EAAS,CAACC,CAAD,CAAcphC,CAAd,CAAsBqhC,CAAtB,CAAgC,CAC5CptC,CAAA,CAAQmtC,CAAR,CAAJ,CACE7sC,CAAA,CAAQ6sC,CAAR,CAAqB,QAAQ,CAAC9rC,CAAD,CAAQiE,CAAR,CAAe,CAC1C4nC,CAAA,CAAU7rC,CAAV,CAAiB0K,CAAjB,CAA0B,GAA1B,EAAiC7M,CAAA,CAASmC,CAAT,CAAA,CAAkBiE,CAAlB,CAA0B,EAA3D,EAAiE,GAAjE,CAD0C,CAA5C,CADF,CAIWpG,CAAA,CAASiuC,CAAT,CAAJ,EAA8B,CAAAjrC,EAAA,CAAOirC,CAAP,CAA9B,CACLpsC,EAAA,CAAcosC,CAAd,CAA2B,QAAQ,CAAC9rC,CAAD,CAAQZ,CAAR,CAAa,CAC9CysC,CAAA,CAAU7rC,CAAV,CAAiB0K,CAAjB,EACKqhC,CAAA,CAAW,EAAX,CAAgB,GADrB,EAEI3sC,CAFJ,EAGK2sC,CAAA,CAAW,EAAX,CAAgB,GAHrB,EAD8C,CAAhD,CADK,EAQD1sC,CAAA,CAAWysC,CAAX,CAGJ,GAFEA,CAEF,CAFgBA,CAAA,EAEhB,EAAAniC,CAAAnF,KAAA,CAAWqF,EAAA,CAAea,CAAf,CAAX,CAAoC,GAApC,EACoB,IAAf,EAAAohC,CAAA,CAAsB,EAAtB,CAA2BjiC,EAAA,CAAe2hC,EAAA,CAAeM,CAAf,CAAf,CADhC,EAXK,CALyC,CALlD,GAAKH,CAAAA,CAAL,CAAa,MAAO,EACpB,KAAIhiC,EAAQ,EACZkiC,EAAA,CAAUF,CAAV,CAAkB,EAAlB,CAAsB,CAAA,CAAtB,CACA,OAAOhiC,EAAAG,KAAA,CAAW,GAAX,CAJyC,CAD7B,CA7CqB,CA4E9CkiC,QAASA,GAA4B,CAAC//B,CAAD,CAAOggC,CAAP,CAAgB,CACnD,GAAIrtC,CAAA,CAASqN,CAAT,CAAJ,CAAoB,CAElB,IAAIigC,EAAWjgC,CAAAnE,QAAA,CAAaqkC,EAAb,CAAqC,EAArC,CAAA/sB,KAAA,EAEf,IAAI8sB,CAAJ,CAAc,CACZ,IAAIE,EAAcH,CAAA,CAAQ,cAAR,CAAlB,CACII,EAAqBD,CAArBC,EAA+E,CAA/EA,GAAqCD,CAAAloC,QAAA,CAAoBooC,EAApB,CADzC,CAGI,CAAA,EAAAD,CAAA,CAAAA,CAAA,IAmBN,CAnBM,EAkBFE,CAlBE,CAAsB5qC,CAkBZ8D,MAAA,CAAU+mC,EAAV,CAlBV,GAmBcC,EAAA,CAAUF,CAAA,CAAU,CAAV,CAAV,CAAAnpC,KAAA,CAnBQzB,CAmBR,CAnBd,CAAJ,IAAI,CAAJ,CACE,GAAI,CACFsK,CAAA,CAAOzE,EAAA,CAAS0kC,CAAT,CADL,CAEF,MAAO/iC,CAAP,CAAU,CACV,GAAKkjC,CAAAA,CAAL,CACE,MAAOpgC,EAET,MAAMygC,GAAA,CAAY,SAAZ,CACgBzgC,CADhB,CACsB9C,CADtB,CAAN,CAJU,CAPF,CAJI,CAsBpB,MAAO8C,EAvB4C,CA/0XnC;AAo3XlB0gC,QAASA,GAAY,CAACV,CAAD,CAAU,CAAA,IACzB3sB,EAAShZ,CAAA,EADgB,CACHzG,CAQtBjB,EAAA,CAASqtC,CAAT,CAAJ,CACEhtC,CAAA,CAAQgtC,CAAAtoC,MAAA,CAAc,IAAd,CAAR,CAA6B,QAAQ,CAACipC,CAAD,CAAO,CAC1C/sC,CAAA,CAAI+sC,CAAA1oC,QAAA,CAAa,GAAb,CACS,KAAA,EAAAJ,CAAA,CAAUsb,CAAA,CAAKwtB,CAAApf,OAAA,CAAY,CAAZ,CAAe3tB,CAAf,CAAL,CAAV,CAAoC,EAAA,CAAAuf,CAAA,CAAKwtB,CAAApf,OAAA,CAAY3tB,CAAZ,CAAgB,CAAhB,CAAL,CAR/CT,EAAJ,GACEkgB,CAAA,CAAOlgB,CAAP,CADF,CACgBkgB,CAAA,CAAOlgB,CAAP,CAAA,CAAckgB,CAAA,CAAOlgB,CAAP,CAAd,CAA4B,IAA5B,CAAmC8H,CAAnC,CAAyCA,CADzD,CAM4C,CAA5C,CADF,CAKWrJ,CAAA,CAASouC,CAAT,CALX,EAMEhtC,CAAA,CAAQgtC,CAAR,CAAiB,QAAQ,CAACY,CAAD,CAAYC,CAAZ,CAAuB,CACjC,IAAA,EAAAhpC,CAAA,CAAUgpC,CAAV,CAAA,CAAsB,EAAA1tB,CAAA,CAAKytB,CAAL,CAZjCztC,EAAJ,GACEkgB,CAAA,CAAOlgB,CAAP,CADF,CACgBkgB,CAAA,CAAOlgB,CAAP,CAAA,CAAckgB,CAAA,CAAOlgB,CAAP,CAAd,CAA4B,IAA5B,CAAmC8H,CAAnC,CAAyCA,CADzD,CAWgD,CAAhD,CAKF,OAAOoY,EApBsB,CAoC/BytB,QAASA,GAAa,CAACd,CAAD,CAAU,CAC9B,IAAIe,CAEJ,OAAO,SAAQ,CAACriC,CAAD,CAAO,CACfqiC,CAAL,GAAiBA,CAAjB,CAA+BL,EAAA,CAAaV,CAAb,CAA/B,CAEA,OAAIthC,EAAJ,EACM3K,CAIGA,CAJKgtC,CAAA,CAAWlpC,CAAA,CAAU6G,CAAV,CAAX,CAIL3K,CAHO+E,IAAAA,EAGP/E,GAHHA,CAGGA,GAFLA,CAEKA,CAFG,IAEHA,EAAAA,CALT,EAQOgtC,CAXa,CAHQ,CA8BhCC,QAASA,GAAa,CAAChhC,CAAD,CAAOggC,CAAP,CAAgBiB,CAAhB,CAAwBC,CAAxB,CAA6B,CACjD,GAAI9tC,CAAA,CAAW8tC,CAAX,CAAJ,CACE,MAAOA,EAAA,CAAIlhC,CAAJ,CAAUggC,CAAV,CAAmBiB,CAAnB,CAGTjuC,EAAA,CAAQkuC,CAAR,CAAa,QAAQ,CAACtmC,CAAD,CAAK,CACxBoF,CAAA,CAAOpF,CAAA,CAAGoF,CAAH,CAASggC,CAAT,CAAkBiB,CAAlB,CADiB,CAA1B,CAIA,OAAOjhC,EAT0C,CA0BnDmO,QAASA,GAAa,EAAG,CAsDvB,IAAIgzB,EAAW,IAAAA,SAAXA,CAA2B,CAE7BC,kBAAmB,CAACrB,EAAD,CAFU,CAK7BsB,iBAAkB,CAAC,QAAQ,CAACC,CAAD,CAAI,CAC7B,MAAO1vC,EAAA,CAAS0vC,CAAT,CAAA;AAvtWmB,eAutWnB,GAvtWJhrC,EAAAhD,KAAA,CAutW2BguC,CAvtW3B,CAutWI,EA7sWmB,eA6sWnB,GA7sWJhrC,EAAAhD,KAAA,CA6sWyCguC,CA7sWzC,CA6sWI,EAltWmB,mBAktWnB,GAltWJhrC,EAAAhD,KAAA,CAktW2DguC,CAltW3D,CAktWI,CAA4DnmC,EAAA,CAAOmmC,CAAP,CAA5D,CAAwEA,CADlD,CAAb,CALW,CAU7BtB,QAAS,CACPuB,OAAQ,CACN,OAAU,mCADJ,CADD,CAIPtQ,KAAQtrB,EAAA,CAAY67B,EAAZ,CAJD,CAKPzd,IAAQpe,EAAA,CAAY67B,EAAZ,CALD,CAMPC,MAAQ97B,EAAA,CAAY67B,EAAZ,CAND,CAVoB,CAmB7BE,eAAgB,YAnBa,CAoB7BC,eAAgB,cApBa,CAsB7BC,gBAAiB,sBAtBY,CAwB7BC,mBAAoB,UAxBS,CAA/B,CA2BIC,EAAgB,CAAA,CAoBpB,KAAAA,cAAA,CAAqBC,QAAQ,CAAChuC,CAAD,CAAQ,CACnC,MAAIlC,EAAA,CAAUkC,CAAV,CAAJ,EACE+tC,CACO,CADS,CAAE/tC,CAAAA,CACX,CAAA,IAFT,EAIO+tC,CAL4B,CAqBrC,KAAIE,EAAuB,IAAAC,aAAvBD,CAA2C,EAA/C,CA0CIE,EAAqB,IAAAA,mBAArBA,CAA+C,EAanDpvC,OAAAu0B,eAAA,CAAsB,IAAtB,CAA4B,wBAA5B;AAAsD,CACpDxmB,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAAqhC,mBADO,CADoC,CAIpD7oC,IAAKA,QAAQ,CAAC8oC,CAAD,CAAU,CACrB,IAAAD,mBAAA,CAA0BC,CADL,CAJ6B,CAAtD,CASA,KAAAxpB,KAAA,CAAY,CAAC,UAAD,CAAa,cAAb,CAA6B,gBAA7B,CAA+C,eAA/C,CAAgE,YAAhE,CAA8E,IAA9E,CAAoF,WAApF,CAAiG,MAAjG,CACR,QAAQ,CAAC/L,CAAD,CAAW4B,CAAX,CAAyB0C,CAAzB,CAAyCpE,CAAzC,CAAwDsC,CAAxD,CAAoEE,CAApE,CAAwEoN,CAAxE,CAAmFhN,CAAnF,CAAyF,CA0lBnGxB,QAASA,EAAK,CAACk0B,CAAD,CAAgB,CA+C5BC,QAASA,EAAiB,CAACC,CAAD,CAAUL,CAAV,CAAwB,CAChD,IADgD,IACvCruC,EAAI,CADmC,CAChCY,EAAKytC,CAAApvC,OAArB,CAA0Ce,CAA1C,CAA8CY,CAA9C,CAAA,CAAmD,CACjD,IAAI+tC,EAASN,CAAA,CAAaruC,CAAA,EAAb,CAAb,CACI4uC,EAAWP,CAAA,CAAaruC,CAAA,EAAb,CAEf0uC,EAAA,CAAUA,CAAAvL,KAAA,CAAawL,CAAb,CAAqBC,CAArB,CAJuC,CAOnDP,CAAApvC,OAAA,CAAsB,CAEtB,OAAOyvC,EAVyC,CAiBlDG,QAASA,EAAgB,CAACzC,CAAD,CAAUruC,CAAV,CAAkB,CAAA,IACrC+wC,CADqC,CACtBC,EAAmB,EAEtC3vC,EAAA,CAAQgtC,CAAR,CAAiB,QAAQ,CAAC4C,CAAD,CAAWC,CAAX,CAAmB,CACtCzvC,CAAA,CAAWwvC,CAAX,CAAJ,EACEF,CACA,CADgBE,CAAA,CAASjxC,CAAT,CAChB,CAAqB,IAArB,EAAI+wC,CAAJ,GACEC,CAAA,CAAiBE,CAAjB,CADF,CAC6BH,CAD7B,CAFF,EAMEC,CAAA,CAAiBE,CAAjB,CANF,CAM6BD,CAPa,CAA5C,CAWA,OAAOD,EAdkC,CA+D3CvB,QAASA,EAAiB,CAAC0B,CAAD,CAAW,CAEnC,IAAIC,EAAO1tC,CAAA,CAAO,EAAP,CAAWytC,CAAX,CACXC,EAAA/iC,KAAA,CAAYghC,EAAA,CAAc8B,CAAA9iC,KAAd,CAA6B8iC,CAAA9C,QAA7B,CAA+C8C,CAAA7B,OAA/C,CACctvC,CAAAyvC,kBADd,CAEMH;CAAAA,CAAA6B,CAAA7B,OAAlB,OAr6BC,IAq6BM,EAr6BCA,CAq6BD,EAr6BoB,GAq6BpB,CAr6BWA,CAq6BX,CACH8B,CADG,CAEHzzB,CAAA0zB,OAAA,CAAUD,CAAV,CAP+B,CA7HrC,GAAK,CAAAnxC,CAAA,CAASwwC,CAAT,CAAL,CACE,KAAM9vC,EAAA,CAAO,OAAP,CAAA,CAAgB,QAAhB,CAA0F8vC,CAA1F,CAAN,CAGF,GAAK,CAAAzvC,CAAA,CAAS+c,CAAA5a,QAAA,CAAastC,CAAAniB,IAAb,CAAT,CAAL,CACE,KAAM3tB,EAAA,CAAO,OAAP,CAAA,CAAgB,QAAhB,CAAsH8vC,CAAAniB,IAAtH,CAAN,CAGF,IAAItuB,EAAS0D,CAAA,CAAO,CAClB+O,OAAQ,KADU,CAElBi9B,iBAAkBF,CAAAE,iBAFA,CAGlBD,kBAAmBD,CAAAC,kBAHD,CAIlBQ,gBAAiBT,CAAAS,gBAJC,CAKlBC,mBAAoBV,CAAAU,mBALF,CAAP,CAMVO,CANU,CAQbzwC,EAAAquC,QAAA,CA+DAiD,QAAqB,CAACtxC,CAAD,CAAS,CAAA,IACxBuxC,EAAa/B,CAAAnB,QADW,CAExBmD,EAAa9tC,CAAA,CAAO,EAAP,CAAW1D,CAAAquC,QAAX,CAFW,CAGxBoD,CAHwB,CAGTC,CAHS,CAGeC,CAHf,CAK5BJ,EAAa7tC,CAAA,CAAO,EAAP,CAAW6tC,CAAA3B,OAAX,CAA8B2B,CAAA,CAAWrrC,CAAA,CAAUlG,CAAAyS,OAAV,CAAX,CAA9B,CAGb,EAAA,CACA,IAAKg/B,CAAL,GAAsBF,EAAtB,CAAkC,CAChCG,CAAA,CAAyBxrC,CAAA,CAAUurC,CAAV,CAEzB,KAAKE,CAAL,GAAsBH,EAAtB,CACE,GAAItrC,CAAA,CAAUyrC,CAAV,CAAJ,GAAiCD,CAAjC,CACE,SAAS,CAIbF,EAAA,CAAWC,CAAX,CAAA,CAA4BF,CAAA,CAAWE,CAAX,CATI,CAalC,MAAOX,EAAA,CAAiBU,CAAjB,CAA6Bx9B,EAAA,CAAYhU,CAAZ,CAA7B,CAtBqB,CA/Db,CAAaywC,CAAb,CACjBzwC,EAAAyS,OAAA;AAAgB8B,EAAA,CAAUvU,CAAAyS,OAAV,CAChBzS,EAAAiwC,gBAAA,CAAyBjvC,CAAA,CAAShB,CAAAiwC,gBAAT,CAAA,CACrBllB,CAAA7b,IAAA,CAAclP,CAAAiwC,gBAAd,CADqB,CACmBjwC,CAAAiwC,gBAE5Ch1B,EAAA+T,6BAAA,CAAsC,OAAtC,CAEA,KAAI4iB,EAAsB,EAA1B,CACIC,EAAuB,EACvBlB,EAAAA,CAAUhzB,CAAAm0B,QAAA,CAAW9xC,CAAX,CAGdqB,EAAA,CAAQ0wC,CAAR,CAA8B,QAAQ,CAACC,CAAD,CAAc,CAClD,CAAIA,CAAAC,QAAJ,EAA2BD,CAAAE,aAA3B,GACEN,CAAAjkC,QAAA,CAA4BqkC,CAAAC,QAA5B,CAAiDD,CAAAE,aAAjD,CAEF,EAAIF,CAAAb,SAAJ,EAA4Ba,CAAAG,cAA5B,GACEN,CAAAjrC,KAAA,CAA0BorC,CAAAb,SAA1B,CAAgDa,CAAAG,cAAhD,CALgD,CAApD,CASAxB,EAAA,CAAUD,CAAA,CAAkBC,CAAlB,CAA2BiB,CAA3B,CACVjB,EAAA,CAAUA,CAAAvL,KAAA,CAkEVgN,QAAsB,CAACpyC,CAAD,CAAS,CAC7B,IAAIquC,EAAUruC,CAAAquC,QAAd,CACIgE,EAAUhD,EAAA,CAAcrvC,CAAAqO,KAAd,CAA2B8gC,EAAA,CAAcd,CAAd,CAA3B,CAAmDlnC,IAAAA,EAAnD,CAA8DnH,CAAA0vC,iBAA9D,CAGV9qC,EAAA,CAAYytC,CAAZ,CAAJ,EACEhxC,CAAA,CAAQgtC,CAAR,CAAiB,QAAQ,CAACjsC,CAAD,CAAQ8uC,CAAR,CAAgB,CACb,cAA1B,GAAIhrC,CAAA,CAAUgrC,CAAV,CAAJ,EACE,OAAO7C,CAAA,CAAQ6C,CAAR,CAF8B,CAAzC,CAOEtsC,EAAA,CAAY5E,CAAAsyC,gBAAZ,CAAJ,EAA4C,CAAA1tC,CAAA,CAAY4qC,CAAA8C,gBAAZ,CAA5C;CACEtyC,CAAAsyC,gBADF,CAC2B9C,CAAA8C,gBAD3B,CAKA,OAAOC,EAAA,CAAQvyC,CAAR,CAAgBqyC,CAAhB,CAAAjN,KAAA,CAA8BqK,CAA9B,CAAiDA,CAAjD,CAlBsB,CAlErB,CACVkB,EAAA,CAAUD,CAAA,CAAkBC,CAAlB,CAA2BkB,CAA3B,CAGV,OAFAlB,EAEA,CAFUA,CAAA6B,QAAA,CAkBVC,QAAmC,EAAG,CACpCx3B,CAAA6T,6BAAA,CAAsCzqB,CAAtC,CAA4C,OAA5C,CADoC,CAlB5B,CA1CkB,CA4T9BkuC,QAASA,EAAO,CAACvyC,CAAD,CAASqyC,CAAT,CAAkB,CA2EhCK,QAASA,EAAmB,CAACC,CAAD,CAAgB,CAC1C,GAAIA,CAAJ,CAAmB,CACjB,IAAIC,EAAgB,EACpBvxC,EAAA,CAAQsxC,CAAR,CAAuB,QAAQ,CAACltB,CAAD,CAAejkB,CAAf,CAAoB,CACjDoxC,CAAA,CAAcpxC,CAAd,CAAA,CAAqB,QAAQ,CAACkkB,CAAD,CAAQ,CASnCmtB,QAASA,EAAgB,EAAG,CAC1BptB,CAAA,CAAaC,CAAb,CAD0B,CARxByqB,CAAJ,CACE1yB,CAAAq1B,YAAA,CAAuBD,CAAvB,CADF,CAEWp1B,CAAAs1B,QAAJ,CACLF,CAAA,EADK,CAGLp1B,CAAArP,OAAA,CAAkBykC,CAAlB,CANiC,CADY,CAAnD,CAeA,OAAOD,EAjBU,CADuB,CA6B5CI,QAASA,EAAI,CAAC1D,CAAD,CAAS6B,CAAT,CAAmB8B,CAAnB,CAAkCC,CAAlC,CAA8CC,CAA9C,CAAyD,CAUpEC,QAASA,EAAkB,EAAG,CAC5BC,CAAA,CAAelC,CAAf,CAAyB7B,CAAzB,CAAiC2D,CAAjC,CAAgDC,CAAhD,CAA4DC,CAA5D,CAD4B,CAT1BtpB,CAAJ,GAtsCC,GAusCC,EAAcylB,CAAd,EAvsCyB,GAusCzB,CAAcA,CAAd,CACEzlB,CAAAuI,IAAA,CAAU9D,CAAV,CAAe,CAACghB,CAAD,CAAS6B,CAAT,CAAmBpC,EAAA,CAAakE,CAAb,CAAnB,CAAgDC,CAAhD,CAA4DC,CAA5D,CAAf,CADF,CAIEtpB,CAAAyI,OAAA,CAAahE,CAAb,CALJ,CAaI6hB,EAAJ,CACE1yB,CAAAq1B,YAAA,CAAuBM,CAAvB,CADF,EAGEA,CAAA,EACA,CAAK31B,CAAAs1B,QAAL,EAAyBt1B,CAAArP,OAAA,EAJ3B,CAdoE,CA0BtEilC,QAASA,EAAc,CAAClC,CAAD,CAAW7B,CAAX,CAAmBjB,CAAnB,CAA4B6E,CAA5B,CAAwCC,CAAxC,CAAmD,CAExE7D,CAAA,CAAoB,EAAX,EAAAA,CAAA,CAAeA,CAAf,CAAwB,CAEjC,EAnuCC,GAmuCA,EAAUA,CAAV,EAnuC0B,GAmuC1B;AAAUA,CAAV,CAAoBgE,CAAAxB,QAApB,CAAuCwB,CAAAjC,OAAxC,EAAyD,CACvDhjC,KAAM8iC,CADiD,CAEvD7B,OAAQA,CAF+C,CAGvDjB,QAASc,EAAA,CAAcd,CAAd,CAH8C,CAIvDruC,OAAQA,CAJ+C,CAKvDkzC,WAAYA,CAL2C,CAMvDC,UAAWA,CAN4C,CAAzD,CAJwE,CAc1EI,QAASA,EAAwB,CAACtqB,CAAD,CAAS,CACxCoqB,CAAA,CAAepqB,CAAA5a,KAAf,CAA4B4a,CAAAqmB,OAA5B,CAA2Ct7B,EAAA,CAAYiV,CAAAolB,QAAA,EAAZ,CAA3C,CAA0EplB,CAAAiqB,WAA1E,CAA6FjqB,CAAAkqB,UAA7F,CADwC,CAI1CK,QAASA,EAAgB,EAAG,CAC1B,IAAIrY,EAAM5e,CAAAk3B,gBAAAntC,QAAA,CAA8BtG,CAA9B,CACG,GAAb,GAAIm7B,CAAJ,EAAgB5e,CAAAk3B,gBAAAltC,OAAA,CAA6B40B,CAA7B,CAAkC,CAAlC,CAFU,CApJI,IAC5BmY,EAAW31B,CAAA6S,MAAA,EADiB,CAE5BmgB,EAAU2C,CAAA3C,QAFkB,CAG5B9mB,CAH4B,CAI5B6pB,CAJ4B,CAK5BlC,GAAaxxC,CAAAquC,QALe,CAM5BsF,EAAuC,OAAvCA,GAAUztC,CAAA,CAAUlG,CAAAyS,OAAV,CANkB,CAO5B6b,EAAMtuB,CAAAsuB,IAENqlB,EAAJ,CAGErlB,CAHF,CAGQvQ,CAAA61B,sBAAA,CAA2BtlB,CAA3B,CAHR,CAIYttB,CAAA,CAASstB,CAAT,CAJZ,GAMEA,CANF,CAMQvQ,CAAA5a,QAAA,CAAamrB,CAAb,CANR,CASAA,EAAA,CAAMulB,CAAA,CAASvlB,CAAT,CAActuB,CAAAiwC,gBAAA,CAAuBjwC,CAAA+tC,OAAvB,CAAd,CAEF4F,EAAJ,GAEErlB,CAFF,CAEQwlB,CAAA,CAA2BxlB,CAA3B,CAAgCtuB,CAAAkwC,mBAAhC,CAFR,CAKA3zB,EAAAk3B,gBAAA7sC,KAAA,CAA2B5G,CAA3B,CACA2wC,EAAAvL,KAAA,CAAaoO,CAAb,CAA+BA,CAA/B,CAEK3pB,EAAA7pB,CAAA6pB,MAAL,EAAqBA,CAAA2lB,CAAA3lB,MAArB;AAAyD,CAAA,CAAzD,GAAwC7pB,CAAA6pB,MAAxC,EACuB,KADvB,GACK7pB,CAAAyS,OADL,EACkD,OADlD,GACgCzS,CAAAyS,OADhC,GAEEoX,CAFF,CAEU5pB,CAAA,CAASD,CAAA6pB,MAAT,CAAA,CAAyB7pB,CAAA6pB,MAAzB,CACF5pB,CAAA,CAA2BuvC,CAAD3lB,MAA1B,CAAA,CACoB2lB,CAAD3lB,MADnB,CAEEkqB,CALV,CAQIlqB,EAAJ,GACE6pB,CACA,CADa7pB,CAAA3a,IAAA,CAAUof,CAAV,CACb,CAAIpuB,CAAA,CAAUwzC,CAAV,CAAJ,CACoBA,CAAlB,EA/vYMjyC,CAAA,CA+vYYiyC,CA/vYDtO,KAAX,CA+vYN,CAEEsO,CAAAtO,KAAA,CAAgBmO,CAAhB,CAA0CA,CAA1C,CAFF,CAKMxyC,CAAA,CAAQ2yC,CAAR,CAAJ,CACEL,CAAA,CAAeK,CAAA,CAAW,CAAX,CAAf,CAA8BA,CAAA,CAAW,CAAX,CAA9B,CAA6C1/B,EAAA,CAAY0/B,CAAA,CAAW,CAAX,CAAZ,CAA7C,CAAyEA,CAAA,CAAW,CAAX,CAAzE,CAAwFA,CAAA,CAAW,CAAX,CAAxF,CADF,CAGEL,CAAA,CAAeK,CAAf,CAA2B,GAA3B,CAAgC,EAAhC,CAAoC,IAApC,CAA0C,UAA1C,CATN,CAcE7pB,CAAAuI,IAAA,CAAU9D,CAAV,CAAeqiB,CAAf,CAhBJ,CAuBI/rC,EAAA,CAAY8uC,CAAZ,CAAJ,GAQE,CAPIM,CAOJ,CAPgBC,EAAA,CAAmBj0C,CAAAsuB,IAAnB,CAAA,CACV/O,CAAA,EAAA,CAAiBvf,CAAA+vC,eAAjB,EAA0CP,CAAAO,eAA1C,CADU,CAEV5oC,IAAAA,EAKN,IAHEqqC,EAAA,CAAYxxC,CAAAgwC,eAAZ,EAAqCR,CAAAQ,eAArC,CAGF,CAHmEgE,CAGnE,EAAAn3B,CAAA,CAAa7c,CAAAyS,OAAb,CAA4B6b,CAA5B,CAAiC+jB,CAAjC,CAA0CW,CAA1C,CAAgDxB,EAAhD,CAA4DxxC,CAAAk0C,QAA5D,CACIl0C,CAAAsyC,gBADJ,CAC4BtyC,CAAAm0C,aAD5B,CAEIzB,CAAA,CAAoB1yC,CAAA2yC,cAApB,CAFJ,CAGID,CAAA,CAAoB1yC,CAAAo0C,oBAApB,CAHJ,CARF,CAcA,OAAOzD,EAzEyB,CA2JlCkD,QAASA,EAAQ,CAACvlB,CAAD,CAAM+lB,CAAN,CAAwB,CACT,CAA9B,CAAIA,CAAAnzC,OAAJ,GACEotB,CADF,GACiC,EAAvB,GAACA,CAAAhoB,QAAA,CAAY,GAAZ,CAAD;AAA4B,GAA5B,CAAkC,GAD5C,EACmD+tC,CADnD,CAGA,OAAO/lB,EAJgC,CAOzCwlB,QAASA,EAA0B,CAACxlB,CAAD,CAAMgmB,CAAN,CAAa,CAC9C,IAAIvoC,EAAQuiB,CAAAvoB,MAAA,CAAU,GAAV,CACZ,IAAmB,CAAnB,CAAIgG,CAAA7K,OAAJ,CAEE,KAAM4tC,GAAA,CAAY,UAAZ,CAAwExgB,CAAxE,CAAN,CAEEyf,CAAAA,CAASriC,EAAA,CAAcK,CAAA,CAAM,CAAN,CAAd,CACb1K,EAAA,CAAQ0sC,CAAR,CAAgB,QAAQ,CAAC3rC,CAAD,CAAQZ,CAAR,CAAa,CACnC,GAAc,eAAd,GAAIY,CAAJ,CAEE,KAAM0sC,GAAA,CAAY,UAAZ,CAAsExgB,CAAtE,CAAN,CAEF,GAAI9sB,CAAJ,GAAY8yC,CAAZ,CAEE,KAAMxF,GAAA,CAAY,UAAZ,CAA+EwF,CAA/E,CAAsFhmB,CAAtF,CAAN,CAPiC,CAArC,CAcA,OAFAA,EAEA,GAF+B,EAAvB,GAACA,CAAAhoB,QAAA,CAAY,GAAZ,CAAD,CAA4B,GAA5B,CAAkC,GAE1C,EAFiDguC,CAEjD,CAFyD,gBAnBX,CAtjChD,IAAIP,EAAe54B,CAAA,CAAc,OAAd,CAKnBq0B,EAAAS,gBAAA,CAA2BjvC,CAAA,CAASwuC,CAAAS,gBAAT,CAAA,CACzBllB,CAAA7b,IAAA,CAAcsgC,CAAAS,gBAAd,CADyB,CACiBT,CAAAS,gBAO5C,KAAI8B,EAAuB,EAE3B1wC,EAAA,CAAQgvC,CAAR,CAA8B,QAAQ,CAACkE,CAAD,CAAqB,CACzDxC,CAAApkC,QAAA,CAA6B3M,CAAA,CAASuzC,CAAT,CAAA,CACvBxpB,CAAA7b,IAAA,CAAcqlC,CAAd,CADuB,CACaxpB,CAAA/c,OAAA,CAAiBumC,CAAjB,CAD1C,CADyD,CAA3D,CAQA,KAAIN,GAAqBO,EAAA,CAA0BjE,CAA1B,CA2sBzBh0B,EAAAk3B,gBAAA,CAAwB,EAmJxBgB,UAA2B,CAACpwB,CAAD,CAAQ,CACjChjB,CAAA,CAAQuC,SAAR,CAAmB,QAAQ,CAACmJ,CAAD,CAAO,CAChCwP,CAAA,CAAMxP,CAAN,CAAA;AAAc,QAAQ,CAACuhB,CAAD,CAAMtuB,CAAN,CAAc,CAClC,MAAOuc,EAAA,CAAM7Y,CAAA,CAAO,EAAP,CAAW1D,CAAX,EAAqB,EAArB,CAAyB,CACpCyS,OAAQ1F,CAD4B,CAEpCuhB,IAAKA,CAF+B,CAAzB,CAAN,CAD2B,CADJ,CAAlC,CADiC,CAAnCmmB,CA7DA,CAAmB,KAAnB,CAA0B,QAA1B,CAAoC,MAApC,CAA4C,OAA5C,CAyEAC,UAAmC,CAAC3nC,CAAD,CAAO,CACxC1L,CAAA,CAAQuC,SAAR,CAAmB,QAAQ,CAACmJ,CAAD,CAAO,CAChCwP,CAAA,CAAMxP,CAAN,CAAA,CAAc,QAAQ,CAACuhB,CAAD,CAAMjgB,CAAN,CAAYrO,CAAZ,CAAoB,CACxC,MAAOuc,EAAA,CAAM7Y,CAAA,CAAO,EAAP,CAAW1D,CAAX,EAAqB,EAArB,CAAyB,CACpCyS,OAAQ1F,CAD4B,CAEpCuhB,IAAKA,CAF+B,CAGpCjgB,KAAMA,CAH8B,CAAzB,CAAN,CADiC,CADV,CAAlC,CADwC,CAA1CqmC,CA9BA,CAA2B,MAA3B,CAAmC,KAAnC,CAA0C,OAA1C,CAYAn4B,EAAAizB,SAAA,CAAiBA,CAGjB,OAAOjzB,EAp3B4F,CADzF,CA1LW,CAmyCzBS,QAASA,GAAmB,EAAG,CAC7B,IAAAgK,KAAA,CAAYC,QAAQ,EAAG,CACrB,MAAO0tB,SAAkB,EAAG,CAC1B,MAAO,KAAI70C,CAAA80C,eADe,CADP,CADM,CA0B/B93B,QAASA,GAAoB,EAAG,CAC9B,IAAAkK,KAAA,CAAY,CAAC,UAAD,CAAa,iBAAb,CAAgC,WAAhC,CAA6C,aAA7C,CAA4D,QAAQ,CAAC/L,CAAD,CAAWgC,CAAX,CAA4B1B,CAA5B,CAAuCwB,CAAvC,CAAoD,CAClI,MAAO83B,GAAA,CAAkB55B,CAAlB,CAA4B8B,CAA5B,CAAyC9B,CAAAuV,MAAzC,CAAyDvT,CAAzD,CAA0E1B,CAAA,CAAU,CAAV,CAA1E,CAD2H,CAAxH,CADkB,CAMhCs5B,QAASA,GAAiB,CAAC55B,CAAD,CAAW05B,CAAX,CAAsBG,CAAtB,CAAqCC,CAArC,CAAgDC,CAAhD,CAA6D,CA6IrFC,QAASA,EAAQ,CAAC3mB,CAAD,CAAM4mB,CAAN,CAAoBlC,CAApB,CAA0B,CACzC1kB,CAAA,CAAMA,CAAApkB,QAAA,CAAY,eAAZ;AAA6BgrC,CAA7B,CADmC,KAKrC//B,EAAS6/B,CAAAv0B,cAAA,CAA0B,QAA1B,CAL4B,CAKSwP,EAAW,IAC7D9a,EAAApN,KAAA,CAAc,iBACdoN,EAAAnS,IAAA,CAAasrB,CACbnZ,EAAAggC,MAAA,CAAe,CAAA,CAEfllB,EAAA,CAAWA,QAAQ,CAACvK,CAAD,CAAQ,CACzBvQ,CAAA2N,oBAAA,CAA2B,MAA3B,CAAmCmN,CAAnC,CACA9a,EAAA2N,oBAAA,CAA2B,OAA3B,CAAoCmN,CAApC,CACA+kB,EAAAI,KAAA1wB,YAAA,CAA6BvP,CAA7B,CACAA,EAAA,CAAS,IACT,KAAIm6B,EAAU,EAAd,CACInJ,EAAO,SAEPzgB,EAAJ,GACqB,MAInB,GAJIA,CAAA3d,KAIJ,EAJ8BgtC,CAAAM,UAAA,CAAoBH,CAApB,CAI9B,GAHExvB,CAGF,CAHU,CAAE3d,KAAM,OAAR,CAGV,EADAo+B,CACA,CADOzgB,CAAA3d,KACP,CAAAunC,CAAA,CAAwB,OAAf,GAAA5pB,CAAA3d,KAAA,CAAyB,GAAzB,CAA+B,GAL1C,CAQIirC,EAAJ,EACEA,CAAA,CAAK1D,CAAL,CAAanJ,CAAb,CAjBuB,CAqB3BhxB,EAAAgQ,iBAAA,CAAwB,MAAxB,CAAgC8K,CAAhC,CACA9a,EAAAgQ,iBAAA,CAAwB,OAAxB,CAAiC8K,CAAjC,CACA+kB,EAAAI,KAAA50B,YAAA,CAA6BrL,CAA7B,CACA,OAAO8a,EAlCkC,CA3I3C,MAAO,SAAQ,CAACxd,CAAD,CAAS6b,CAAT,CAAcgR,CAAd,CAAoBrP,CAApB,CAA8Boe,CAA9B,CAAuC6F,CAAvC,CAAgD5B,CAAhD,CAAiE6B,CAAjE,CAA+ExB,CAA/E,CAA8FyB,CAA9F,CAAmH,CAsHhIkB,QAASA,EAAc,CAACrkC,CAAD,CAAS,CAC9BskC,CAAA,CAA8B,SAA9B,GAAmBtkC,CACfukC,GAAJ,EACEA,EAAA,EAEEC,EAAJ,EACEA,CAAAC,MAAA,EAN4B,CAUhCC,QAASA,EAAe,CAAC1lB,CAAD;AAAWqf,CAAX,CAAmB6B,CAAnB,CAA6B8B,CAA7B,CAA4CC,CAA5C,CAAwDC,CAAxD,CAAmE,CAErFjzC,CAAA,CAAU0wB,CAAV,CAAJ,EACEkkB,CAAAhkB,OAAA,CAAqBF,CAArB,CAEF4kB,GAAA,CAAYC,CAAZ,CAAkB,IAElBxlB,EAAA,CAASqf,CAAT,CAAiB6B,CAAjB,CAA2B8B,CAA3B,CAA0CC,CAA1C,CAAsDC,CAAtD,CAPyF,CA/H3F7kB,CAAA,CAAMA,CAAN,EAAarT,CAAAqT,IAAA,EAEb,IAA0B,OAA1B,GAAIpoB,CAAA,CAAUuM,CAAV,CAAJ,CACE,IAAIyiC,EAAeH,CAAAa,eAAA,CAAyBtnB,CAAzB,CAAnB,CACIknB,GAAYP,CAAA,CAAS3mB,CAAT,CAAc4mB,CAAd,CAA4B,QAAQ,CAAC5F,CAAD,CAASnJ,CAAT,CAAe,CAEjE,IAAIgL,EAAuB,GAAvBA,GAAY7B,CAAZ6B,EAA+B4D,CAAAc,YAAA,CAAsBX,CAAtB,CACnCS,EAAA,CAAgB1lB,CAAhB,CAA0Bqf,CAA1B,CAAkC6B,CAAlC,CAA4C,EAA5C,CAAgDhL,CAAhD,CAAsD,UAAtD,CACA4O,EAAAe,eAAA,CAAyBZ,CAAzB,CAJiE,CAAnD,CAFlB,KAQO,CAEL,IAAIO,EAAMd,CAAA,CAAUliC,CAAV,CAAkB6b,CAAlB,CAAV,CACIinB,EAAmB,CAAA,CAEvBE,EAAAM,KAAA,CAAStjC,CAAT,CAAiB6b,CAAjB,CAAsB,CAAA,CAAtB,CACAjtB,EAAA,CAAQgtC,CAAR,CAAiB,QAAQ,CAACjsC,CAAD,CAAQZ,CAAR,CAAa,CAChCtB,CAAA,CAAUkC,CAAV,CAAJ,EACIqzC,CAAAO,iBAAA,CAAqBx0C,CAArB,CAA0BY,CAA1B,CAFgC,CAAtC,CAMAqzC,EAAAQ,OAAA,CAAaC,QAAsB,EAAG,CACpC,IAAIhD,EAAauC,CAAAvC,WAAbA,EAA+B,EAAnC,CAII/B,EAAY,UAAD,EAAesE,EAAf,CAAsBA,CAAAtE,SAAtB,CAAqCsE,CAAAU,aAJpD,CAOI7G,EAAwB,IAAf,GAAAmG,CAAAnG,OAAA,CAAsB,GAAtB,CAA4BmG,CAAAnG,OAK1B,EAAf,GAAIA,CAAJ,GACEA,CADF,CACW6B,CAAA,CAAW,GAAX,CAA8C,MAA7B,GAAA1hB,EAAA,CAAWnB,CAAX,CAAA8nB,SAAA,CAAsC,GAAtC,CAA4C,CADxE,CAIAT,EAAA,CAAgB1lB,CAAhB,CACIqf,CADJ,CAEI6B,CAFJ,CAGIsE,CAAAY,sBAAA,EAHJ,CAIInD,CAJJ,CAKI,UALJ,CAjBoC,CAyCtCuC;CAAAa,QAAA,CAhBmBpE,QAAQ,EAAG,CAG5ByD,CAAA,CAAgB1lB,CAAhB,CAA2B,EAA3B,CAA8B,IAA9B,CAAoC,IAApC,CAA0C,EAA1C,CAA8C,OAA9C,CAH4B,CAiB9BwlB,EAAAc,UAAA,CAPqBC,QAAQ,EAAG,CAG9Bb,CAAA,CAAgB1lB,CAAhB,CAA2B,EAA3B,CAA8B,IAA9B,CAAoC,IAApC,CAA0C,EAA1C,CAA8C,SAA9C,CAH8B,CAQhCwlB,EAAAgB,QAAA,CAZqBC,QAAQ,EAAG,CAC9Bf,CAAA,CAAgB1lB,CAAhB,CAA2B,EAA3B,CAA8B,IAA9B,CAAoC,IAApC,CAA0C,EAA1C,CAA8CslB,CAAA,CAAmB,SAAnB,CAA+B,OAA7E,CAD8B,CAchCl0C,EAAA,CAAQsxC,CAAR,CAAuB,QAAQ,CAACvwC,CAAD,CAAQZ,CAAR,CAAa,CAC1Ci0C,CAAAtwB,iBAAA,CAAqB3jB,CAArB,CAA0BY,CAA1B,CAD0C,CAA5C,CAIAf,EAAA,CAAQ+yC,CAAR,CAA6B,QAAQ,CAAChyC,CAAD,CAAQZ,CAAR,CAAa,CAChDi0C,CAAAkB,OAAAxxB,iBAAA,CAA4B3jB,CAA5B,CAAiCY,CAAjC,CADgD,CAAlD,CAIIkwC,EAAJ,GACEmD,CAAAnD,gBADF,CACwB,CAAA,CADxB,CAIA,IAAI6B,CAAJ,CACE,GAAI,CACFsB,CAAAtB,aAAA,CAAmBA,CADjB,CAEF,MAAO5oC,CAAP,CAAU,CAQV,GAAqB,MAArB,GAAI4oC,CAAJ,CACE,KAAM5oC,EAAN,CATQ,CAcdkqC,CAAAmB,KAAA,CAAShyC,CAAA,CAAY06B,CAAZ,CAAA,CAAoB,IAApB,CAA2BA,CAApC,CAtFK,CAiGP,GAAc,CAAd,CAAI4U,CAAJ,CACE,IAAItjB,EAAYkkB,CAAA,CAAc,QAAQ,EAAG,CACvCQ,CAAA,CAAe,SAAf,CADuC,CAAzB,CAEbpB,CAFa,CADlB,KAIyBA,EAAlB,EA5jZKzyC,CAAA,CA4jZayyC,CA5jZF9O,KAAX,CA4jZL,EACL8O,CAAA9O,KAAA,CAAa,QAAQ,EAAG,CACtBkQ,CAAA,CAAep1C,CAAA,CAAUg0C,CAAA2C,YAAV,CAAA,CAAiC,SAAjC,CAA6C,OAA5D,CADsB,CAAxB,CAjH8H,CAF7C,CA2OvF36B,QAASA,GAAoB,EAAG,CAC9B,IAAIwvB;AAAc,IAAlB,CACIC,EAAY,IAWhB,KAAAD,YAAA,CAAmBoL,QAAQ,CAAC10C,CAAD,CAAQ,CACjC,MAAIA,EAAJ,EACEspC,CACO,CADOtpC,CACP,CAAA,IAFT,EAIOspC,CAL0B,CAiBnC,KAAAC,UAAA,CAAiBoL,QAAQ,CAAC30C,CAAD,CAAQ,CAC/B,MAAIA,EAAJ,EACEupC,CACO,CADKvpC,CACL,CAAA,IAFT,EAIOupC,CALwB,CASjC,KAAA3kB,KAAA,CAAY,CAAC,QAAD,CAAW,mBAAX,CAAgC,MAAhC,CAAwC,QAAQ,CAACzJ,CAAD,CAAS5B,CAAT,CAA4BoC,CAA5B,CAAkC,CAM5Fi5B,QAASA,EAAM,CAACC,CAAD,CAAK,CAClB,MAAO,QAAP,CAAkBA,CADA,CAIpBC,QAASA,EAAY,CAAC/Q,CAAD,CAAO,CAC1B,MAAOA,EAAAj8B,QAAA,CAAaitC,CAAb,CAAiCzL,CAAjC,CAAAxhC,QAAA,CACGktC,CADH,CACqBzL,CADrB,CADmB,CAM5B0L,QAASA,EAAqB,CAACnpC,CAAD,CAAQsgB,CAAR,CAAkB8oB,CAAlB,CAAkCC,CAAlC,CAAkD,CAC9E,IAAIC,EAAUtpC,CAAA7I,OAAA,CAAaoyC,QAAiC,CAACvpC,CAAD,CAAQ,CAClEspC,CAAA,EACA,OAAOD,EAAA,CAAerpC,CAAf,CAF2D,CAAtD,CAGXsgB,CAHW,CAGD8oB,CAHC,CAId,OAAOE,EALuE,CA8HhFv7B,QAASA,EAAY,CAACkqB,CAAD,CAAO8B,CAAP,CAA2BZ,CAA3B,CAA2CW,CAA3C,CAAyD,CAwH5E0P,QAASA,EAAyB,CAACt1C,CAAD,CAAQ,CACxC,GAAI,CAQF,MAHAA,EAGO,CAHEilC,CAAD,EAAoBsQ,CAAAA,CAApB,CACE55B,CAAAwpB,WAAA,CAAgBF,CAAhB,CAAgCjlC,CAAhC,CADF,CAEE2b,CAAA5a,QAAA,CAAaf,CAAb,CACH,CAAA4lC,CAAA,EAAiB,CAAA9nC,CAAA,CAAUkC,CAAV,CAAjB,CAAoCA,CAApC,CAA4CuH,EAAA,CAAUvH,CAAV,CARjD,CASF,MAAO8nB,CAAP,CAAY,CACZvO,CAAA,CAAkBi8B,EAAAC,OAAA,CAA0B1R,CAA1B,CAAgCjc,CAAhC,CAAlB,CADY,CAV0B,CAvH1C,IAAIytB,EAA6BtQ,CAA7BsQ,GAAgD55B,CAAAwZ,IAAhDogB,EAA4DtQ,CAA5DsQ,GAA+E55B,CAAAyZ,UAGnF,IAAKt2B,CAAAilC,CAAAjlC,OAAL;AAAmD,EAAnD,GAAoBilC,CAAA7/B,QAAA,CAAaolC,CAAb,CAApB,CAAsD,CACpD,GAAIzD,CAAJ,CAAwB,MAEpB6P,EAAAA,CAAgBZ,CAAA,CAAa/Q,CAAb,CAChBwR,EAAJ,GACEG,CADF,CACkB/5B,CAAAwpB,WAAA,CAAgBF,CAAhB,CAAgCyQ,CAAhC,CADlB,CAGIP,EAAAA,CAAiB/yC,EAAA,CAAQszC,CAAR,CACrBP,EAAAQ,IAAA,CAAqB5R,CACrBoR,EAAA3Q,YAAA,CAA6B,EAC7B2Q,EAAAS,gBAAA,CAAiCX,CAEjC,OAAOE,EAZ6C,CAetDvP,CAAA,CAAe,CAAEA,CAAAA,CAajB,KAhC4E,IAoBxE7+B,CApBwE,CAqBxE8uC,CArBwE,CAsBxE5xC,EAAQ,CAtBgE,CAuBxEugC,EAAc,EAvB0D,CAwBxEsR,CAxBwE,CAyBxEC,EAAahS,CAAAjlC,OAzB2D,CA2BxE0H,EAAS,EA3B+D,CA4BxEwvC,EAAsB,EA5BkD,CA6BxEC,CAGJ,CAAOhyC,CAAP,CAAe8xC,CAAf,CAAA,CACE,GAA0D,EAA1D,IAAMhvC,CAAN,CAAmBg9B,CAAA7/B,QAAA,CAAaolC,CAAb,CAA0BrlC,CAA1B,CAAnB,GACgF,EADhF,IACO4xC,CADP,CACkB9R,CAAA7/B,QAAA,CAAaqlC,CAAb,CAAwBxiC,CAAxB,CAAqCmvC,CAArC,CADlB,EAEMjyC,CAOJ,GAPc8C,CAOd,EANEP,CAAAhC,KAAA,CAAYswC,CAAA,CAAa/Q,CAAAt6B,UAAA,CAAexF,CAAf,CAAsB8C,CAAtB,CAAb,CAAZ,CAMF,CAJA4uC,CAIA,CAJM5R,CAAAt6B,UAAA,CAAe1C,CAAf,CAA4BmvC,CAA5B,CAA+CL,CAA/C,CAIN,CAHArR,CAAAhgC,KAAA,CAAiBmxC,CAAjB,CAGA,CAFA1xC,CAEA,CAFQ4xC,CAER,CAFmBM,CAEnB,CADAH,CAAAxxC,KAAA,CAAyBgC,CAAA1H,OAAzB,CACA,CAAA0H,CAAAhC,KAAA,CAAY,EAAZ,CATF,KAUO,CAEDP,CAAJ,GAAc8xC,CAAd,EACEvvC,CAAAhC,KAAA,CAAYswC,CAAA,CAAa/Q,CAAAt6B,UAAA,CAAexF,CAAf,CAAb,CAAZ,CAEF,MALK,CASTgyC,CAAA,CAAqC,CAArC,GAAmBzvC,CAAA1H,OAAnB,EAAyE,CAAzE,GAA0Ck3C,CAAAl3C,OAI1C,KAAI8wC,EAAc2F,CAAA,EAA8BU,CAA9B,CAAiDlxC,IAAAA,EAAjD,CAA6DuwC,CAC/EQ,EAAA,CAAWtR,CAAA4R,IAAA,CAAgB,QAAQ,CAACT,CAAD,CAAM,CAAE,MAAOx6B,EAAA,CAAOw6B,CAAP,CAAY/F,CAAZ,CAAT,CAA9B,CAeX,IAAK/J,CAAAA,CAAL,EAA2BrB,CAAA1lC,OAA3B,CAA+C,CAC7C,IAAIu3C,EAAUA,QAAQ,CAACvhB,CAAD,CAAS,CAC7B,IAD6B,IACpBj1B;AAAI,CADgB,CACbY,EAAK+jC,CAAA1lC,OAArB,CAAyCe,CAAzC,CAA6CY,CAA7C,CAAiDZ,CAAA,EAAjD,CAAsD,CACpD,GAAI+lC,CAAJ,EAAoBpjC,CAAA,CAAYsyB,CAAA,CAAOj1B,CAAP,CAAZ,CAApB,CAA4C,MAC5C2G,EAAA,CAAOwvC,CAAA,CAAoBn2C,CAApB,CAAP,CAAA,CAAiCi1B,CAAA,CAAOj1B,CAAP,CAFmB,CAKtD,GAAI01C,CAAJ,CAEE,MAAO55B,EAAAwpB,WAAA,CAAgBF,CAAhB,CAAgCgR,CAAA,CAAmBzvC,CAAA,CAAO,CAAP,CAAnB,CAA+BA,CAAAsD,KAAA,CAAY,EAAZ,CAA/D,CACEm7B,EAAJ,EAAsC,CAAtC,CAAsBz+B,CAAA1H,OAAtB,EAEL02C,EAAAc,cAAA,CAAiCvS,CAAjC,CAGF,OAAOv9B,EAAAsD,KAAA,CAAY,EAAZ,CAdsB,CAiB/B,OAAOxI,EAAA,CAAOi1C,QAAwB,CAACp3C,CAAD,CAAU,CAC5C,IAAIU,EAAI,CAAR,CACIY,EAAK+jC,CAAA1lC,OADT,CAEIg2B,EAAanyB,KAAJ,CAAUlC,CAAV,CAEb,IAAI,CACF,IAAA,CAAOZ,CAAP,CAAWY,CAAX,CAAeZ,CAAA,EAAf,CACEi1B,CAAA,CAAOj1B,CAAP,CAAA,CAAYi2C,CAAA,CAASj2C,CAAT,CAAA,CAAYV,CAAZ,CAGd,OAAOk3C,EAAA,CAAQvhB,CAAR,CALL,CAMF,MAAOhN,CAAP,CAAY,CACZvO,CAAA,CAAkBi8B,EAAAC,OAAA,CAA0B1R,CAA1B,CAAgCjc,CAAhC,CAAlB,CADY,CAX8B,CAAzC,CAeF,CAEH6tB,IAAK5R,CAFF,CAGHS,YAAaA,CAHV,CAIHoR,gBAAiBA,QAAQ,CAAC9pC,CAAD,CAAQsgB,CAAR,CAAkB,CACzC,IAAImb,CACJ,OAAOz7B,EAAA0qC,YAAA,CAAkBV,CAAlB,CAAyCW,QAA6B,CAAC3hB,CAAD,CAAS4hB,CAAT,CAAoB,CAC/F,IAAIC,EAAYN,CAAA,CAAQvhB,CAAR,CAChB1I,EAAA7sB,KAAA,CAAc,IAAd,CAAoBo3C,CAApB,CAA+B7hB,CAAA,GAAW4hB,CAAX,CAAuBnP,CAAvB,CAAmCoP,CAAlE,CAA6E7qC,CAA7E,CACAy7B,EAAA,CAAYoP,CAHmF,CAA1F,CAFkC,CAJxC,CAfE,CAlBsC,CAxE6B,CA9Ic,IACxFT,EAAoB5M,CAAAxqC,OADoE,CAExFq3C,EAAkB5M,CAAAzqC,OAFsE,CAGxFi2C,EAAqB,IAAI9zC,MAAJ,CAAWqoC,CAAAxhC,QAAA,CAAoB,IAApB,CAA0B8sC,CAA1B,CAAX,CAA8C,GAA9C,CAHmE,CAIxFI,EAAmB,IAAI/zC,MAAJ,CAAWsoC,CAAAzhC,QAAA,CAAkB,IAAlB;AAAwB8sC,CAAxB,CAAX,CAA4C,GAA5C,CA8RvB/6B,EAAAyvB,YAAA,CAA2BsN,QAAQ,EAAG,CACpC,MAAOtN,EAD6B,CAgBtCzvB,EAAA0vB,UAAA,CAAyBsN,QAAQ,EAAG,CAClC,MAAOtN,EAD2B,CAIpC,OAAO1vB,EAtTqF,CAAlF,CAvCkB,CAoWhCG,QAASA,GAAiB,EAAG,CAC3B,IAAA4K,KAAA,CAAY,CAAC,mBAAD,CAAsB,SAAtB,CACP,QAAQ,CAAC3K,CAAD,CAAsB0C,CAAtB,CAA+B,CAC1C,IAAIm6B,EAAY,EAAhB,CAMIC,EAAkBA,QAAQ,CAACpnB,CAAD,CAAK,CACjChT,CAAAq6B,cAAA,CAAsBrnB,CAAtB,CACA,QAAOmnB,CAAA,CAAUnnB,CAAV,CAF0B,CANnC,CAyIIsnB,EAAWh9B,CAAA,CAxIKi9B,QAAQ,CAACC,CAAD,CAAO7oB,CAAP,CAAc4iB,CAAd,CAAwB,CAC9CvhB,CAAAA,CAAKhT,CAAAy6B,YAAA,CAAoBD,CAApB,CAA0B7oB,CAA1B,CACTwoB,EAAA,CAAUnnB,CAAV,CAAA,CAAgBuhB,CAChB,OAAOvhB,EAH2C,CAwIrC,CAAiConB,CAAjC,CAYfE,EAAAvoB,OAAA,CAAkB2oB,QAAQ,CAAC9I,CAAD,CAAU,CAClC,GAAKA,CAAAA,CAAL,CAAc,MAAO,CAAA,CAErB,IAAK,CAAAA,CAAAjvC,eAAA,CAAuB,cAAvB,CAAL,CACE,KAAMg4C,GAAA,CAAgB,SAAhB,CAAN,CAIF,GAAK,CAAAR,CAAAx3C,eAAA,CAAyBivC,CAAAgJ,aAAzB,CAAL,CAAqD,MAAO,CAAA,CAExD5nB,EAAAA,CAAK4e,CAAAgJ,aACT,KAAIrG,EAAW4F,CAAA,CAAUnnB,CAAV,CAAf,CAGsB4e,EAAA2C,CAAA3C,QAw9HtBiJ,EAAAC,QAAJ,GAC6BD,CAAAC,QAR7BC,IAOA,CAPY,CAAA,CAOZ,CAv9HIxG,EAAAjC,OAAA,CAAgB,UAAhB,CACA8H;CAAA,CAAgBpnB,CAAhB,CAEA,OAAO,CAAA,CAlB2B,CAqBpC,OAAOsnB,EA3KmC,CADhC,CADe,CAkL7B/8B,QAASA,GAAyB,EAAG,CACnC,IAAA0K,KAAA,CAAY,CAAC,UAAD,CAAa,IAAb,CAAmB,KAAnB,CAA0B,YAA1B,CACP,QAAQ,CAAC/L,CAAD,CAAa0C,CAAb,CAAmBE,CAAnB,CAA0BJ,CAA1B,CAAsC,CACjD,MAAOs8B,SAAwB,CAACT,CAAD,CAAgBH,CAAhB,CAAiC,CAC9D,MAAOa,SAAmB,CAAC/wC,CAAD,CAAKynB,CAAL,CAAYupB,CAAZ,CAAmBC,CAAnB,CAAgC,CAUxDjqB,QAASA,EAAQ,EAAG,CACbkqB,CAAL,CAGElxC,CAAAG,MAAA,CAAS,IAAT,CAAekf,CAAf,CAHF,CACErf,CAAA,CAAGmxC,CAAH,CAFgB,CAVoC,IACpDD,EAA+B,CAA/BA,CAAYv2C,SAAA1C,OADwC,CAEpDonB,EAAO6xB,CAAA,CAjtZVx2C,EAAAhC,KAAA,CAitZgCiC,SAjtZhC,CAitZ2CuF,CAjtZ3C,CAitZU,CAAsC,EAFO,CAGpDixC,EAAY,CAHwC,CAIpDC,EAAYn6C,CAAA,CAAUg6C,CAAV,CAAZG,EAAsC,CAACH,CAJa,CAKpD5G,EAAW9iB,CAAC6pB,CAAA,CAAYx8B,CAAZ,CAAkBF,CAAnB6S,OAAA,EALyC,CAMpDmgB,EAAU2C,CAAA3C,QAEdsJ,EAAA,CAAQ/5C,CAAA,CAAU+5C,CAAV,CAAA,CAAmBA,CAAnB,CAA2B,CA0BnCtJ,EAAAgJ,aAAA,CAAuBL,CAAA,CAhBvBC,QAAa,EAAG,CACVc,CAAJ,CACEp/B,CAAAuV,MAAA,CAAeP,CAAf,CADF,CAGExS,CAAArY,WAAA,CAAsB6qB,CAAtB,CAEFqjB,EAAAgH,OAAA,CAAgBF,CAAA,EAAhB,CAEY,EAAZ,CAAIH,CAAJ,EAAiBG,CAAjB,EAA8BH,CAA9B,GACE3G,CAAAxB,QAAA,CAAiBsI,CAAjB,CACA,CAAAjB,CAAA,CAAgBxI,CAAAgJ,aAAhB,CAFF,CAKKU,EAAL,EAAgB58B,CAAArP,OAAA,EAbF,CAgBO,CAAoBsiB,CAApB,CAA2B4iB,CAA3B,CAAqC+G,CAArC,CAEvB,OAAO1J,EApCiD,CADI,CADf,CADvC,CADuB,CA0LrC4J,QAASA,GAAgB,CAACC,CAAD,CAAcC,CAAd,CAA2B,CAClD,IAAIC,EAAYjrB,EAAA,CAAW+qB,CAAX,CAEhBC,EAAAE,WAAA,CAAyBD,CAAAtE,SACzBqE,EAAAG,OAAA;AAAqBF,CAAAG,SACrBJ,EAAAK,OAAA,CAAqBh3C,EAAA,CAAM42C,CAAAK,KAAN,CAArB,EAA8CC,EAAA,CAAcN,CAAAtE,SAAd,CAA9C,EAAmF,IALjC,CASpD6E,QAASA,GAAW,CAAC3sB,CAAD,CAAMmsB,CAAN,CAAmBS,CAAnB,CAA8B,CAEhD,GAAIC,EAAA31C,KAAA,CAAwB8oB,CAAxB,CAAJ,CACE,KAAM8sB,GAAA,CAAgB,SAAhB,CAAiD9sB,CAAjD,CAAN,CAGF,IAAI+sB,EAA8B,GAA9BA,GAAY/sB,CAAA3lB,OAAA,CAAW,CAAX,CACZ0yC,EAAJ,GACE/sB,CADF,CACQ,GADR,CACcA,CADd,CAGIzmB,EAAAA,CAAQ4nB,EAAA,CAAWnB,CAAX,CAtCZ,KAHIgtB,IAAAA,EAAWv1C,CA0CJs1C,CAAA/pC,EAAyC,GAAzCA,GAAYzJ,CAAA0zC,SAAA5yC,OAAA,CAAsB,CAAtB,CAAZ2I,CAA+CzJ,CAAA0zC,SAAA1vC,UAAA,CAAyB,CAAzB,CAA/CyF,CAA6EzJ,CAAA0zC,SA1CzEx1C,OAAA,CAAW,GAAX,CAAXu1C,CACAr5C,EAAIq5C,CAAAp6C,OAER,CAAOe,CAAA,EAAP,CAAA,CACEq5C,CAAA,CAASr5C,CAAT,CACA,CADcwJ,kBAAA,CAAmB6vC,CAAA,CAASr5C,CAAT,CAAnB,CACd,CAsCoCi5C,CAtCpC,GAEEI,CAAA,CAASr5C,CAAT,CAFF,CAEgBq5C,CAAA,CAASr5C,CAAT,CAAAiI,QAAA,CAAoB,KAApB,CAA2B,KAA3B,CAFhB,CAMF,EAAA,CAAOoxC,CAAApvC,KAAA,CAAc,GAAd,CAgCPuuC,EAAAe,OAAA,CAAqB,CACrBf,EAAAgB,SAAA,CAAuB/vC,EAAA,CAAc7D,CAAA6zC,OAAd,CACvBjB,EAAAkB,OAAA,CAAqBlwC,kBAAA,CAAmB5D,CAAAilB,KAAnB,CAGjB2tB,EAAAe,OAAJ,EAA2D,GAA3D,GAA0Bf,CAAAe,OAAA7yC,OAAA,CAA0B,CAA1B,CAA1B,GACE8xC,CAAAe,OADF,CACuB,GADvB,CAC6Bf,CAAAe,OAD7B,CAjBgD,CAsBlDI,QAASA,GAAU,CAAC73C,CAAD,CAAM23C,CAAN,CAAc,CAC/B,MAAO33C,EAAAJ,MAAA,CAAU,CAAV;AAAa+3C,CAAAx6C,OAAb,CAAP,GAAuCw6C,CADR,CAWjCG,QAASA,GAAY,CAACC,CAAD,CAAOxtB,CAAP,CAAY,CAC/B,GAAIstB,EAAA,CAAWttB,CAAX,CAAgBwtB,CAAhB,CAAJ,CACE,MAAOxtB,EAAAsB,OAAA,CAAWksB,CAAA56C,OAAX,CAFsB,CAMjCyuB,QAASA,GAAS,CAACrB,CAAD,CAAM,CACtB,IAAIjoB,EAAQioB,CAAAhoB,QAAA,CAAY,GAAZ,CACZ,OAAkB,EAAX,GAAAD,CAAA,CAAeioB,CAAf,CAAqBA,CAAAsB,OAAA,CAAW,CAAX,CAAcvpB,CAAd,CAFN,CAwBxB01C,QAASA,GAAgB,CAACC,CAAD,CAAUC,CAAV,CAAyBC,CAAzB,CAAqC,CAC5D,IAAAC,QAAA,CAAe,CAAA,CACfD,EAAA,CAAaA,CAAb,EAA2B,EAC3B3B,GAAA,CAAiByB,CAAjB,CAA0B,IAA1B,CAQA,KAAAI,QAAA,CAAeC,QAAQ,CAAC/tB,CAAD,CAAM,CAC3B,IAAIguB,EAAUT,EAAA,CAAaI,CAAb,CAA4B3tB,CAA5B,CACd,IAAK,CAAAttB,CAAA,CAASs7C,CAAT,CAAL,CACE,KAAMlB,GAAA,CAAgB,UAAhB,CAA6E9sB,CAA7E,CACF2tB,CADE,CAAN,CAIFhB,EAAA,CAAYqB,CAAZ,CAAqB,IAArB,CAA2B,CAAA,CAA3B,CAEK,KAAAd,OAAL,GACE,IAAAA,OADF,CACgB,GADhB,CAIA,KAAAe,UAAA,EAb2B,CAgB7B,KAAAC,eAAA,CAAsBC,QAAQ,CAACnuB,CAAD,CAAM,CAClC,MAAO2tB,EAAP,CAAuB3tB,CAAAsB,OAAA,CAAW,CAAX,CADW,CAIpC,KAAA8sB,eAAA,CAAsBC,QAAQ,CAACruB,CAAD,CAAMsuB,CAAN,CAAe,CAC3C,GAAIA,CAAJ,EAA8B,GAA9B,GAAeA,CAAA,CAAQ,CAAR,CAAf,CAIE,MADA,KAAA9vB,KAAA,CAAU8vB,CAAAj5C,MAAA,CAAc,CAAd,CAAV,CACO,CAAA,CAAA,CALkC,KAOvCk5C,CAPuC,CAO/BC,CAIR58C,EAAA,CAAU28C,CAAV,CAAmBhB,EAAA,CAAaG,CAAb,CAAsB1tB,CAAtB,CAAnB,CAAJ,EACEwuB,CAEE,CAFWD,CAEX,CAAAE,CAAA,CADEb,CAAJ,EAAkBh8C,CAAA,CAAU28C,CAAV,CAAmBhB,EAAA,CAAaK,CAAb,CAAyBW,CAAzB,CAAnB,CAAlB;AACiBZ,CADjB,EACkCJ,EAAA,CAAa,GAAb,CAAkBgB,CAAlB,CADlC,EAC+DA,CAD/D,EAGiBb,CAHjB,CAG2Bc,CAL7B,EAOW58C,CAAA,CAAU28C,CAAV,CAAmBhB,EAAA,CAAaI,CAAb,CAA4B3tB,CAA5B,CAAnB,CAAJ,CACLyuB,CADK,CACUd,CADV,CAC0BY,CAD1B,CAEIZ,CAFJ,GAEsB3tB,CAFtB,CAE4B,GAF5B,GAGLyuB,CAHK,CAGUd,CAHV,CAKHc,EAAJ,EACE,IAAAX,QAAA,CAAaW,CAAb,CAEF,OAAO,CAAEA,CAAAA,CA1BkC,CA/Be,CAwE9DC,QAASA,GAAmB,CAAChB,CAAD,CAAUC,CAAV,CAAyBgB,CAAzB,CAAqC,CAE/D1C,EAAA,CAAiByB,CAAjB,CAA0B,IAA1B,CAQA,KAAAI,QAAA,CAAeC,QAAQ,CAAC/tB,CAAD,CAAM,CAC3B,IAAI4uB,EAAiBrB,EAAA,CAAaG,CAAb,CAAsB1tB,CAAtB,CAAjB4uB,EAA+CrB,EAAA,CAAaI,CAAb,CAA4B3tB,CAA5B,CAAnD,CACI6uB,CAECv4C,EAAA,CAAYs4C,CAAZ,CAAL,EAAiE,GAAjE,GAAoCA,CAAAv0C,OAAA,CAAsB,CAAtB,CAApC,CAcM,IAAAwzC,QAAJ,CACEgB,CADF,CACmBD,CADnB,EAGEC,CACA,CADiB,EACjB,CAAIv4C,CAAA,CAAYs4C,CAAZ,CAAJ,GACElB,CACiB,CADP1tB,CACO,CAAC,IAADpkB,QAAA,EAFnB,CAJF,CAdF,EAIEizC,CACA,CADiBtB,EAAA,CAAaoB,CAAb,CAAyBC,CAAzB,CACjB,CAAIt4C,CAAA,CAAYu4C,CAAZ,CAAJ,GAEEA,CAFF,CAEmBD,CAFnB,CALF,CAyBAjC,GAAA,CAAYkC,CAAZ,CAA4B,IAA5B,CAAkC,CAAA,CAAlC,CAEqC3B,EAAAA,CAAAA,IAAAA,OAA6BQ,KAAAA,EAAAA,CAAAA,CAoB5DoB,EAAqB,iBAKrBxB,GAAA,CAAWttB,CAAX,CAAgBwtB,CAAhB,CAAJ,GACExtB,CADF,CACQA,CAAApkB,QAAA,CAAY4xC,CAAZ,CAAkB,EAAlB,CADR,CAKIsB,EAAAz8B,KAAA,CAAwB2N,CAAxB,CAAJ,GAKA,CALA,CAKO,CADP+uB,CACO,CADiBD,CAAAz8B,KAAA,CAAwBrP,CAAxB,CACjB,EAAwB+rC,CAAA,CAAsB,CAAtB,CAAxB,CAAmD/rC,CAL1D,CA9BF,KAAAkqC,OAAA,CAAc,CAEd,KAAAe,UAAA,EAjC2B,CAsE7B,KAAAC,eAAA,CAAsBC,QAAQ,CAACnuB,CAAD,CAAM,CAClC,MAAO0tB,EAAP,EAAkB1tB,CAAA,CAAM2uB,CAAN,CAAmB3uB,CAAnB,CAAyB,EAA3C,CADkC,CAIpC,KAAAouB,eAAA,CAAsBC,QAAQ,CAACruB,CAAD;AAAMsuB,CAAN,CAAe,CAC3C,MAAIjtB,GAAA,CAAUqsB,CAAV,CAAJ,GAA2BrsB,EAAA,CAAUrB,CAAV,CAA3B,EACE,IAAA8tB,QAAA,CAAa9tB,CAAb,CACO,CAAA,CAAA,CAFT,EAIO,CAAA,CALoC,CApFkB,CAwGjEgvB,QAASA,GAA0B,CAACtB,CAAD,CAAUC,CAAV,CAAyBgB,CAAzB,CAAqC,CACtE,IAAAd,QAAA,CAAe,CAAA,CACfa,GAAA5zC,MAAA,CAA0B,IAA1B,CAAgCxF,SAAhC,CAEA,KAAA84C,eAAA,CAAsBC,QAAQ,CAACruB,CAAD,CAAMsuB,CAAN,CAAe,CAC3C,GAAIA,CAAJ,EAA8B,GAA9B,GAAeA,CAAA,CAAQ,CAAR,CAAf,CAIE,MADA,KAAA9vB,KAAA,CAAU8vB,CAAAj5C,MAAA,CAAc,CAAd,CAAV,CACO,CAAA,CAAA,CAGT,KAAIo5C,CAAJ,CACIF,CAEAb,EAAJ,GAAgBrsB,EAAA,CAAUrB,CAAV,CAAhB,CACEyuB,CADF,CACiBzuB,CADjB,CAEO,CAAKuuB,CAAL,CAAchB,EAAA,CAAaI,CAAb,CAA4B3tB,CAA5B,CAAd,EACLyuB,CADK,CACUf,CADV,CACoBiB,CADpB,CACiCJ,CADjC,CAEIZ,CAFJ,GAEsB3tB,CAFtB,CAE4B,GAF5B,GAGLyuB,CAHK,CAGUd,CAHV,CAKHc,EAAJ,EACE,IAAAX,QAAA,CAAaW,CAAb,CAEF,OAAO,CAAEA,CAAAA,CArBkC,CAwB7C,KAAAP,eAAA,CAAsBC,QAAQ,CAACnuB,CAAD,CAAM,CAElC,MAAO0tB,EAAP,CAAiBiB,CAAjB,CAA8B3uB,CAFI,CA5BkC,CAwXxEivB,QAASA,GAAc,CAACrZ,CAAD,CAAW,CAChC,MAAoB,SAAQ,EAAG,CAC7B,MAAO,KAAA,CAAKA,CAAL,CADsB,CADC,CAOlCsZ,QAASA,GAAoB,CAACtZ,CAAD,CAAWuZ,CAAX,CAAuB,CAClD,MAAoB,SAAQ,CAACr7C,CAAD,CAAQ,CAClC,GAAIwC,CAAA,CAAYxC,CAAZ,CAAJ,CACE,MAAO,KAAA,CAAK8hC,CAAL,CAGT,KAAA,CAAKA,CAAL,CAAA,CAAiBuZ,CAAA,CAAWr7C,CAAX,CACjB,KAAAm6C,UAAA,EAEA,OAAO,KAR2B,CADc,CAgDpDn/B,QAASA,GAAiB,EAAG,CAAA,IACvB6/B,EAAa,GADU;AAEvB/B,EAAY,CACVplB,QAAS,CAAA,CADC,CAEV4nB,YAAa,CAAA,CAFH,CAGVC,aAAc,CAAA,CAHJ,CAchB,KAAAV,WAAA,CAAkBW,QAAQ,CAAC9wC,CAAD,CAAS,CACjC,MAAI5M,EAAA,CAAU4M,CAAV,CAAJ,EACEmwC,CACO,CADMnwC,CACN,CAAA,IAFT,EAISmwC,CALwB,CAgCnC,KAAA/B,UAAA,CAAiB2C,QAAQ,CAACxqB,CAAD,CAAO,CAC9B,GAAI7yB,EAAA,CAAU6yB,CAAV,CAAJ,CAEE,MADA6nB,EAAAplB,QACO,CADazC,CACb,CAAA,IACF,IAAIpzB,CAAA,CAASozB,CAAT,CAAJ,CAAoB,CAErB7yB,EAAA,CAAU6yB,CAAAyC,QAAV,CAAJ,GACEolB,CAAAplB,QADF,CACsBzC,CAAAyC,QADtB,CAIIt1B,GAAA,CAAU6yB,CAAAqqB,YAAV,CAAJ,GACExC,CAAAwC,YADF,CAC0BrqB,CAAAqqB,YAD1B,CAIA,IAAIl9C,EAAA,CAAU6yB,CAAAsqB,aAAV,CAAJ,EAAoC38C,CAAA,CAASqyB,CAAAsqB,aAAT,CAApC,CACEzC,CAAAyC,aAAA,CAAyBtqB,CAAAsqB,aAG3B,OAAO,KAdkB,CAgBzB,MAAOzC,EApBqB,CA+DhC,KAAAl0B,KAAA,CAAY,CAAC,YAAD,CAAe,UAAf,CAA2B,UAA3B,CAAuC,cAAvC,CAAuD,SAAvD,CACR,QAAQ,CAACvJ,CAAD,CAAaxC,CAAb,CAAuBkD,CAAvB,CAAiCyc,CAAjC,CAA+C7b,CAA/C,CAAwD,CA8BlE++B,QAASA,EAAS,CAAC71C,CAAD,CAAIC,CAAJ,CAAO,CACvB,MAAOD,EAAP,GAAaC,CAAb,EAAkBunB,EAAA,CAAWxnB,CAAX,CAAAmnB,KAAlB,GAAyCK,EAAA,CAAWvnB,CAAX,CAAAknB,KADlB,CAIzB2uB,QAASA,EAAyB,CAACzvB,CAAD;AAAMpkB,CAAN,CAAeolB,CAAf,CAAsB,CACtD,IAAI0uB,EAAS7gC,CAAAmR,IAAA,EAAb,CACI2vB,EAAW9gC,CAAA08B,QACf,IAAI,CACF5+B,CAAAqT,IAAA,CAAaA,CAAb,CAAkBpkB,CAAlB,CAA2BolB,CAA3B,CAKA,CAAAnS,CAAA08B,QAAA,CAAoB5+B,CAAAqU,MAAA,EANlB,CAOF,MAAO/jB,CAAP,CAAU,CAKV,KAHA4R,EAAAmR,IAAA,CAAc0vB,CAAd,CAGMzyC,CAFN4R,CAAA08B,QAEMtuC,CAFc0yC,CAEd1yC,CAAAA,CAAN,CALU,CAV0C,CAyJxD2yC,QAASA,EAAmB,CAACF,CAAD,CAASC,CAAT,CAAmB,CAC7CxgC,CAAA0gC,WAAA,CAAsB,wBAAtB,CAAgDhhC,CAAAihC,OAAA,EAAhD,CAAoEJ,CAApE,CACE7gC,CAAA08B,QADF,CACqBoE,CADrB,CAD6C,CA3LmB,IAC9D9gC,CAD8D,CAE9DkhC,CACA/tB,EAAAA,CAAWrV,CAAAqV,SAAA,EAHmD,KAI9DguB,EAAarjC,CAAAqT,IAAA,EAJiD,CAK9D0tB,CAEJ,IAAId,CAAAplB,QAAJ,CAAuB,CACrB,GAAKxF,CAAAA,CAAL,EAAiB4qB,CAAAwC,YAAjB,CACE,KAAMtC,GAAA,CAAgB,QAAhB,CAAN,CAGFY,CAAA,CAAqBsC,CAxuBlBzyC,UAAA,CAAc,CAAd,CAwuBkByyC,CAxuBDh4C,QAAA,CAAY,GAAZ,CAwuBCg4C,CAxuBgBh4C,QAAA,CAAY,IAAZ,CAAjB,CAAqC,CAArC,CAAjB,CAwuBH,EAAoCgqB,CAApC,EAAgD,GAAhD,CACA+tB,EAAA,CAAelgC,CAAAsQ,QAAA,CAAmBstB,EAAnB,CAAsCuB,EANhC,CAAvB,IAQEtB,EACA,CADUrsB,EAAA,CAAU2uB,CAAV,CACV,CAAAD,CAAA,CAAerB,EAEjB,KAAIf,EAA0BD,CAnvBzBpsB,OAAA,CAAW,CAAX,CAAcD,EAAA,CAmvBWqsB,CAnvBX,CAAAuC,YAAA,CAA2B,GAA3B,CAAd,CAAgD,CAAhD,CAqvBLphC,EAAA,CAAY,IAAIkhC,CAAJ,CAAiBrC,CAAjB,CAA0BC,CAA1B,CAAyC,GAAzC,CAA+CgB,CAA/C,CACZ9/B,EAAAu/B,eAAA,CAAyB4B,CAAzB,CAAqCA,CAArC,CAEAnhC,EAAA08B,QAAA,CAAoB5+B,CAAAqU,MAAA,EAEpB,KAAIkvB,EAAoB,2BA4BxB5jB;CAAA7qB,GAAA,CAAgB,OAAhB,CAAyB,QAAQ,CAAC2V,CAAD,CAAQ,CACvC,IAAIi4B,EAAezC,CAAAyC,aAInB,IAAKA,CAAL,EAAqBc,CAAA/4B,CAAA+4B,QAArB,EAAsCC,CAAAh5B,CAAAg5B,QAAtC,EAAuDC,CAAAj5B,CAAAi5B,SAAvD,EAAyF,CAAzF,GAAyEj5B,CAAAk5B,MAAzE,EAA+G,CAA/G,GAA8Fl5B,CAAAm5B,OAA9F,CAAA,CAKA,IAHA,IAAI9xB,EAAM9rB,CAAA,CAAOykB,CAAAkB,OAAP,CAGV,CAA6B,GAA7B,GAAO5gB,EAAA,CAAU+mB,CAAA,CAAI,CAAJ,CAAV,CAAP,CAAA,CAEE,GAAIA,CAAA,CAAI,CAAJ,CAAJ,GAAe6N,CAAA,CAAa,CAAb,CAAf,EAAmC,CAAA,CAAC7N,CAAD,CAAOA,CAAA7oB,OAAA,EAAP,EAAqB,CAArB,CAAnC,CAA4D,MAG9D,IAAI,CAAAlD,CAAA,CAAS28C,CAAT,CAAJ,EAA8B,CAAA/4C,CAAA,CAAYmoB,CAAApnB,KAAA,CAASg4C,CAAT,CAAZ,CAA9B,CAAA,CAEImB,IAAAA,EAAU/xB,CAAArnB,KAAA,CAAS,MAAT,CAAVo5C,CAGAlC,EAAU7vB,CAAApnB,KAAA,CAAS,MAAT,CAAVi3C,EAA8B7vB,CAAApnB,KAAA,CAAS,YAAT,CAE9B1F,EAAA,CAAS6+C,CAAT,CAAJ,EAAgD,4BAAhD,GAAyBA,CAAAn6C,SAAA,EAAzB,GAGEm6C,CAHF,CAGYrvB,EAAA,CAAWqvB,CAAAhhB,QAAX,CAAA1O,KAHZ,CAOIovB,EAAAh5C,KAAA,CAAuBs5C,CAAvB,CAAJ,EAEIA,CAAAA,CAFJ,EAEgB/xB,CAAApnB,KAAA,CAAS,QAAT,CAFhB,EAEuC+f,CAAAC,mBAAA,EAFvC,EAGM,CAAAxI,CAAAu/B,eAAA,CAAyBoC,CAAzB,CAAkClC,CAAlC,CAHN,GAOIl3B,CAAAq5B,eAAA,EAEA,CAAI5hC,CAAAihC,OAAA,EAAJ,GAA2BnjC,CAAAqT,IAAA,EAA3B,EACE7Q,CAAArP,OAAA,EAVN,CAdA,CAVA,CALuC,CAAzC,CA+CI+O,EAAAihC,OAAA,EAAJ;AAA2BE,CAA3B,EACErjC,CAAAqT,IAAA,CAAanR,CAAAihC,OAAA,EAAb,CAAiC,CAAA,CAAjC,CAGF,KAAIY,EAAe,CAAA,CAGnB/jC,EAAA8U,YAAA,CAAqB,QAAQ,CAACkvB,CAAD,CAASC,CAAT,CAAmB,CAEzCtD,EAAA,CAAWqD,CAAX,CAAmBhD,CAAnB,CAAL,EAMAx+B,CAAArY,WAAA,CAAsB,QAAQ,EAAG,CAC/B,IAAI44C,EAAS7gC,CAAAihC,OAAA,EAAb,CACIH,EAAW9gC,CAAA08B,QADf,CAEIh0B,CACJ1I,EAAAi/B,QAAA,CAAkB6C,CAAlB,CACA9hC,EAAA08B,QAAA,CAAoBqF,CAEpBr5B,EAAA,CAAmBpI,CAAA0gC,WAAA,CAAsB,sBAAtB,CAA8Cc,CAA9C,CAAsDjB,CAAtD,CACfkB,CADe,CACLjB,CADK,CAAAp4B,iBAKf1I,EAAAihC,OAAA,EAAJ,GAA2Ba,CAA3B,GAEIp5B,CAAJ,EACE1I,CAAAi/B,QAAA,CAAkB4B,CAAlB,CAEA,CADA7gC,CAAA08B,QACA,CADoBoE,CACpB,CAAAF,CAAA,CAA0BC,CAA1B,CAAkC,CAAA,CAAlC,CAAyCC,CAAzC,CAHF,GAKEe,CACA,CADe,CAAA,CACf,CAAAd,CAAA,CAAoBF,CAApB,CAA4BC,CAA5B,CANF,CAFA,CAZ+B,CAAjC,CAuBA,CAAKxgC,CAAAs1B,QAAL,EAAyBt1B,CAAA0hC,QAAA,EA7BzB,EAEEpgC,CAAAjQ,SAAAsgB,KAFF,CAE0B6vB,CAJoB,CAAhD,CAmCAxhC,EAAApY,OAAA,CAAkB+5C,QAAuB,EAAG,CAC1C,GAAIJ,CAAJ,EAAoB7hC,CAAAkiC,uBAApB,CAAsD,CACpDliC,CAAAkiC,uBAAA,CAAmC,CAAA,CAEnC,KAAIrB,EAAS/iC,CAAAqT,IAAA,EAAb,CACI2wB,EAAS9hC,CAAAihC,OAAA,EADb,CAEIH,EAAWhjC,CAAAqU,MAAA,EAFf,CAGIgwB,EAAiBniC,CAAAoiC,UAHrB,CAIIC,EAAoB,CAAC1B,CAAA,CAAUE,CAAV,CAAkBiB,CAAlB,CAArBO,EACDriC,CAAAg/B,QADCqD,EACoBrhC,CAAAsQ,QADpB+wB,EACwCvB,CADxCuB;AACqDriC,CAAA08B,QAEzD,IAAImF,CAAJ,EAAoBQ,CAApB,CACER,CAEA,CAFe,CAAA,CAEf,CAAAvhC,CAAArY,WAAA,CAAsB,QAAQ,EAAG,CAC/B,IAAI65C,EAAS9hC,CAAAihC,OAAA,EAAb,CACIv4B,EAAmBpI,CAAA0gC,WAAA,CAAsB,sBAAtB,CAA8Cc,CAA9C,CAAsDjB,CAAtD,CACnB7gC,CAAA08B,QADmB,CACAoE,CADA,CAAAp4B,iBAKnB1I,EAAAihC,OAAA,EAAJ,GAA2Ba,CAA3B,GAEIp5B,CAAJ,EACE1I,CAAAi/B,QAAA,CAAkB4B,CAAlB,CACA,CAAA7gC,CAAA08B,QAAA,CAAoBoE,CAFtB,GAIMuB,CAIJ,EAHEzB,CAAA,CAA0BkB,CAA1B,CAAkCK,CAAlC,CAC0BrB,CAAA,GAAa9gC,CAAA08B,QAAb,CAAiC,IAAjC,CAAwC18B,CAAA08B,QADlE,CAGF,CAAAqE,CAAA,CAAoBF,CAApB,CAA4BC,CAA5B,CARF,CAFA,CAP+B,CAAjC,CAbkD,CAoCtD9gC,CAAAoiC,UAAA,CAAsB,CAAA,CArCoB,CAA5C,CA2CA,OAAOpiC,EAzL2D,CADxD,CA/Ge,CAwW7BG,QAASA,GAAY,EAAG,CAAA,IAClBmiC,EAAQ,CAAA,CADU,CAElBz2C,EAAO,IASX,KAAA02C,aAAA,CAAoBC,QAAQ,CAACC,CAAD,CAAO,CACjC,MAAI1/C,EAAA,CAAU0/C,CAAV,CAAJ,EACEH,CACO,CADCG,CACD,CAAA,IAFT,EAISH,CALwB,CASnC,KAAAz4B,KAAA,CAAY,CAAC,SAAD,CAAY,QAAQ,CAACjI,CAAD,CAAU,CAiExC8gC,QAASA,EAAW,CAAC7uC,CAAD,CAAM,CACpBhM,EAAA,CAAQgM,CAAR,CAAJ,GACMA,CAAA2Y,MAAJ,EAAiBm2B,CAAjB,CACE9uC,CADF,CACSA,CAAA0Y,QAAD,EAAoD,EAApD,GAAgB1Y,CAAA2Y,MAAArjB,QAAA,CAAkB0K,CAAA0Y,QAAlB,CAAhB,CACA,SADA,CACY1Y,CAAA0Y,QADZ,CAC0B,IAD1B,CACiC1Y,CAAA2Y,MADjC,CAEA3Y,CAAA2Y,MAHR,CAIW3Y,CAAA+uC,UAJX;CAKE/uC,CALF,CAKQA,CAAA0Y,QALR,CAKsB,IALtB,CAK6B1Y,CAAA+uC,UAL7B,CAK6C,GAL7C,CAKmD/uC,CAAAg+B,KALnD,CADF,CASA,OAAOh+B,EAViB,CAa1BgvC,QAASA,EAAU,CAACj4C,CAAD,CAAO,CAAA,IACpBsF,EAAU0R,CAAA1R,QAAVA,EAA6B,EADT,CAEpB4yC,EAAQ5yC,CAAA,CAAQtF,CAAR,CAARk4C,EAAyB5yC,CAAA6yC,IAAzBD,EAAwC57C,CAE5C,OAAO,SAAQ,EAAG,CAChB,IAAIikB,EAAO,EACXjnB,EAAA,CAAQuC,SAAR,CAAmB,QAAQ,CAACoN,CAAD,CAAM,CAC/BsX,CAAA1hB,KAAA,CAAUi5C,CAAA,CAAY7uC,CAAZ,CAAV,CAD+B,CAAjC,CAMA,OAAOgX,SAAAC,UAAA7e,MAAAzH,KAAA,CAA8Bs+C,CAA9B,CAAqC5yC,CAArC,CAA8Cib,CAA9C,CARS,CAJM,CAtE1B,IAAIw3B,EAAmBj/B,EAAnBi/B,EAA2B,UAAAt6C,KAAA,CAAgBuZ,CAAAohC,UAAhB,EAAqCphC,CAAAohC,UAAAC,UAArC,CAE/B,OAAO,CAQLF,IAAKF,CAAA,CAAW,KAAX,CARA,CAiBL1tC,KAAM0tC,CAAA,CAAW,MAAX,CAjBD,CA0BLK,KAAML,CAAA,CAAW,MAAX,CA1BD,CAmCL1yC,MAAO0yC,CAAA,CAAW,OAAX,CAnCF,CA4CLP,MAAQ,QAAQ,EAAG,CACjB,IAAIx2C,EAAK+2C,CAAA,CAAW,OAAX,CAET,OAAO,SAAQ,EAAG,CACZP,CAAJ,EACEx2C,CAAAG,MAAA,CAASJ,CAAT,CAAepF,SAAf,CAFc,CAHD,CAAZ,EA5CF,CAViC,CAA9B,CApBU,CAkJxB08C,QAASA,GAAc,CAACvzC,CAAD,CAAO,CAe5B,MAAOA,EAAP,CAAc,EAfc,CAikB9BwzC,QAASA,GAAS,CAACppB,CAAD,CAAIwY,CAAJ,CAAO,CACvB,MAAoB,WAAb,GAAA,MAAOxY,EAAP,CAA2BA,CAA3B;AAA+BwY,CADf,CAIzB6Q,QAASA,GAAM,CAAC/nB,CAAD,CAAIgoB,CAAJ,CAAO,CACpB,MAAiB,WAAjB,GAAI,MAAOhoB,EAAX,CAAqCgoB,CAArC,CACiB,WAAjB,GAAI,MAAOA,EAAX,CAAqChoB,CAArC,CACOA,CADP,CACWgoB,CAHS,CAetBC,QAASA,GAAM,CAACj7C,CAAD,CAAOk7C,CAAP,CAAqB,CAClC,OAAQl7C,CAAAsC,KAAR,EAEE,KAAK64C,CAAAC,iBAAL,CACE,GAAIp7C,CAAAq7C,SAAJ,CACE,MAAO,CAAA,CAET,MAGF,MAAKF,CAAAG,gBAAL,CACE,MAfgBC,EAkBlB,MAAKJ,CAAAK,iBAAL,CACE,MAAyB,GAAlB,GAAAx7C,CAAAy7C,SAAA,CAnBSF,CAmBT,CAA0C,CAAA,CAGnD,MAAKJ,CAAAO,eAAL,CACE,MAAO,CAAA,CAlBX,CAqBA,MAAQh6C,KAAAA,EAAD,GAAew5C,CAAf,CAA+BS,EAA/B,CAAiDT,CAtBtB,CAyBpCU,QAASA,EAA+B,CAACC,CAAD,CAAMzlC,CAAN,CAAe8kC,CAAf,CAA6B,CACnE,IAAIY,CAAJ,CACIC,CADJ,CAIIC,EAAYH,CAAAZ,OAAZe,CAAyBf,EAAA,CAAOY,CAAP,CAAYX,CAAZ,CAE7B,QAAQW,CAAAv5C,KAAR,EACA,KAAK64C,CAAAc,QAAL,CACEH,CAAA,CAAe,CAAA,CACflgD,EAAA,CAAQigD,CAAAlM,KAAR,CAAkB,QAAQ,CAACuM,CAAD,CAAO,CAC/BN,CAAA,CAAgCM,CAAAzU,WAAhC,CAAiDrxB,CAAjD,CAA0D4lC,CAA1D,CACAF,EAAA,CAAeA,CAAf,EAA+BI,CAAAzU,WAAA15B,SAFA,CAAjC,CAIA8tC,EAAA9tC,SAAA,CAAe+tC,CACf,MACF,MAAKX,CAAAgB,QAAL,CACEN,CAAA9tC,SAAA,CAAe,CAAA,CACf8tC,EAAAO,QAAA;AAAc,EACd,MACF,MAAKjB,CAAAG,gBAAL,CACEM,CAAA,CAAgCC,CAAAQ,SAAhC,CAA8CjmC,CAA9C,CAAuD4lC,CAAvD,CACAH,EAAA9tC,SAAA,CAAe8tC,CAAAQ,SAAAtuC,SACf8tC,EAAAO,QAAA,CAAcP,CAAAQ,SAAAD,QACd,MACF,MAAKjB,CAAAK,iBAAL,CACEI,CAAA,CAAgCC,CAAAS,KAAhC,CAA0ClmC,CAA1C,CAAmD4lC,CAAnD,CACAJ,EAAA,CAAgCC,CAAAU,MAAhC,CAA2CnmC,CAA3C,CAAoD4lC,CAApD,CACAH,EAAA9tC,SAAA,CAAe8tC,CAAAS,KAAAvuC,SAAf,EAAoC8tC,CAAAU,MAAAxuC,SACpC8tC,EAAAO,QAAA,CAAcP,CAAAS,KAAAF,QAAAj5C,OAAA,CAAwB04C,CAAAU,MAAAH,QAAxB,CACd,MACF,MAAKjB,CAAAqB,kBAAL,CACEZ,CAAA,CAAgCC,CAAAS,KAAhC,CAA0ClmC,CAA1C,CAAmD4lC,CAAnD,CACAJ,EAAA,CAAgCC,CAAAU,MAAhC,CAA2CnmC,CAA3C,CAAoD4lC,CAApD,CACAH,EAAA9tC,SAAA,CAAe8tC,CAAAS,KAAAvuC,SAAf,EAAoC8tC,CAAAU,MAAAxuC,SACpC8tC,EAAAO,QAAA,CAAcP,CAAA9tC,SAAA,CAAe,EAAf,CAAoB,CAAC8tC,CAAD,CAClC,MACF,MAAKV,CAAAsB,sBAAL,CACEb,CAAA,CAAgCC,CAAA97C,KAAhC,CAA0CqW,CAA1C,CAAmD4lC,CAAnD,CACAJ,EAAA,CAAgCC,CAAAa,UAAhC,CAA+CtmC,CAA/C,CAAwD4lC,CAAxD,CACAJ,EAAA,CAAgCC,CAAAc,WAAhC,CAAgDvmC,CAAhD,CAAyD4lC,CAAzD,CACAH,EAAA9tC,SAAA,CAAe8tC,CAAA97C,KAAAgO,SAAf;AAAoC8tC,CAAAa,UAAA3uC,SAApC,EAA8D8tC,CAAAc,WAAA5uC,SAC9D8tC,EAAAO,QAAA,CAAcP,CAAA9tC,SAAA,CAAe,EAAf,CAAoB,CAAC8tC,CAAD,CAClC,MACF,MAAKV,CAAAyB,WAAL,CACEf,CAAA9tC,SAAA,CAAe,CAAA,CACf8tC,EAAAO,QAAA,CAAc,CAACP,CAAD,CACd,MACF,MAAKV,CAAAC,iBAAL,CACEQ,CAAA,CAAgCC,CAAAgB,OAAhC,CAA4CzmC,CAA5C,CAAqD4lC,CAArD,CACIH,EAAAR,SAAJ,EACEO,CAAA,CAAgCC,CAAApd,SAAhC,CAA8CroB,CAA9C,CAAuD4lC,CAAvD,CAEFH,EAAA9tC,SAAA,CAAe8tC,CAAAgB,OAAA9uC,SAAf,GAAuC,CAAC8tC,CAAAR,SAAxC,EAAwDQ,CAAApd,SAAA1wB,SAAxD,CACA8tC,EAAAO,QAAA,CAAcP,CAAA9tC,SAAA,CAAe,EAAf,CAAoB,CAAC8tC,CAAD,CAClC,MACF,MAAKV,CAAAO,eAAL,CAEEI,CAAA,CADAgB,CACA,CADoBjB,CAAA3tC,OAAA,CAzFf,CAyFwCkI,CA1FtC5S,CA0F+Cq4C,CAAAkB,OAAAz1C,KA1F/C9D,CACDqhC,UAyFc,CAAqD,CAAA,CAEzEkX,EAAA,CAAc,EACdngD,EAAA,CAAQigD,CAAA19C,UAAR,CAAuB,QAAQ,CAAC+9C,CAAD,CAAO,CACpCN,CAAA,CAAgCM,CAAhC,CAAsC9lC,CAAtC,CAA+C4lC,CAA/C,CACAF,EAAA,CAAeA,CAAf,EAA+BI,CAAAnuC,SAC/BguC,EAAA56C,KAAAwC,MAAA,CAAuBo4C,CAAvB,CAAoCG,CAAAE,QAApC,CAHoC,CAAtC,CAKAP,EAAA9tC,SAAA,CAAe+tC,CACfD,EAAAO,QAAA,CAAcU,CAAA,CAAoBf,CAApB,CAAkC,CAACF,CAAD,CAChD,MACF,MAAKV,CAAA6B,qBAAL,CACEpB,CAAA,CAAgCC,CAAAS,KAAhC;AAA0ClmC,CAA1C,CAAmD4lC,CAAnD,CACAJ,EAAA,CAAgCC,CAAAU,MAAhC,CAA2CnmC,CAA3C,CAAoD4lC,CAApD,CACAH,EAAA9tC,SAAA,CAAe8tC,CAAAS,KAAAvuC,SAAf,EAAoC8tC,CAAAU,MAAAxuC,SACpC8tC,EAAAO,QAAA,CAAc,CAACP,CAAD,CACd,MACF,MAAKV,CAAA8B,gBAAL,CACEnB,CAAA,CAAe,CAAA,CACfC,EAAA,CAAc,EACdngD,EAAA,CAAQigD,CAAAr9B,SAAR,CAAsB,QAAQ,CAAC09B,CAAD,CAAO,CACnCN,CAAA,CAAgCM,CAAhC,CAAsC9lC,CAAtC,CAA+C4lC,CAA/C,CACAF,EAAA,CAAeA,CAAf,EAA+BI,CAAAnuC,SAC/BguC,EAAA56C,KAAAwC,MAAA,CAAuBo4C,CAAvB,CAAoCG,CAAAE,QAApC,CAHmC,CAArC,CAKAP,EAAA9tC,SAAA,CAAe+tC,CACfD,EAAAO,QAAA,CAAcL,CACd,MACF,MAAKZ,CAAA+B,iBAAL,CACEpB,CAAA,CAAe,CAAA,CACfC,EAAA,CAAc,EACdngD,EAAA,CAAQigD,CAAAsB,WAAR,CAAwB,QAAQ,CAAC1e,CAAD,CAAW,CACzCmd,CAAA,CAAgCnd,CAAA9hC,MAAhC,CAAgDyZ,CAAhD,CAAyD4lC,CAAzD,CACAF,EAAA,CAAeA,CAAf,EAA+Brd,CAAA9hC,MAAAoR,SAC/BguC,EAAA56C,KAAAwC,MAAA,CAAuBo4C,CAAvB,CAAoCtd,CAAA9hC,MAAAy/C,QAApC,CACI3d,EAAA4c,SAAJ,GAEEO,CAAA,CAAgCnd,CAAA1iC,IAAhC,CAA8Cqa,CAA9C,CAAwE,CAAA,CAAxE,CAEA,CADA0lC,CACA,CADeA,CACf,EAD+Brd,CAAA1iC,IAAAgS,SAC/B,CAAAguC,CAAA56C,KAAAwC,MAAA,CAAuBo4C,CAAvB,CAAoCtd,CAAA1iC,IAAAqgD,QAApC,CAJF,CAJyC,CAA3C,CAWAP,EAAA9tC,SAAA,CAAe+tC,CACfD,EAAAO,QAAA,CAAcL,CACd,MACF,MAAKZ,CAAAiC,eAAL,CACEvB,CAAA9tC,SAAA;AAAe,CAAA,CACf8tC,EAAAO,QAAA,CAAc,EACd,MACF,MAAKjB,CAAAkC,iBAAL,CACExB,CAAA9tC,SACA,CADe,CAAA,CACf,CAAA8tC,CAAAO,QAAA,CAAc,EArGhB,CAPmE,CAiHrEkB,QAASA,GAAS,CAAC3N,CAAD,CAAO,CACvB,GAAoB,CAApB,GAAIA,CAAAl0C,OAAJ,CAAA,CACI8hD,CAAAA,CAAiB5N,CAAA,CAAK,CAAL,CAAAlI,WACrB,KAAIjgC,EAAY+1C,CAAAnB,QAChB,OAAyB,EAAzB,GAAI50C,CAAA/L,OAAJ,CAAmC+L,CAAnC,CACOA,CAAA,CAAU,CAAV,CAAA,GAAiB+1C,CAAjB,CAAkC/1C,CAAlC,CAA8C9F,IAAAA,EAJrD,CADuB,CAQzB87C,QAASA,GAAY,CAAC3B,CAAD,CAAM,CACzB,MAAOA,EAAAv5C,KAAP,GAAoB64C,CAAAyB,WAApB,EAAsCf,CAAAv5C,KAAtC,GAAmD64C,CAAAC,iBAD1B,CAI3BqC,QAASA,GAAa,CAAC5B,CAAD,CAAM,CAC1B,GAAwB,CAAxB,GAAIA,CAAAlM,KAAAl0C,OAAJ,EAA6B+hD,EAAA,CAAa3B,CAAAlM,KAAA,CAAS,CAAT,CAAAlI,WAAb,CAA7B,CACE,MAAO,CAACnlC,KAAM64C,CAAA6B,qBAAP,CAAiCV,KAAMT,CAAAlM,KAAA,CAAS,CAAT,CAAAlI,WAAvC,CAA+D8U,MAAO,CAACj6C,KAAM64C,CAAAuC,iBAAP,CAAtE,CAAoGjC,SAAU,GAA9G,CAFiB,CAkB5BkC,QAASA,GAAW,CAACvnC,CAAD,CAAU,CAC5B,IAAAA,QAAA,CAAeA,CADa,CAkd9BwnC,QAASA,GAAc,CAACxnC,CAAD,CAAU,CAC/B,IAAAA,QAAA,CAAeA,CADgB,CAsXjCynC,QAASA,GAAM,CAACC,CAAD,CAAQ1nC,CAAR,CAAiB6R,CAAjB,CAA0B,CACvC,IAAA4zB,IAAA;AAAW,IAAIV,CAAJ,CAAQ2C,CAAR,CAAe71B,CAAf,CACX,KAAA81B,YAAA,CAAmB91B,CAAApZ,IAAA,CAAc,IAAI+uC,EAAJ,CAAmBxnC,CAAnB,CAAd,CACc,IAAIunC,EAAJ,CAAgBvnC,CAAhB,CAHM,CAiCzC4nC,QAASA,GAAU,CAACrhD,CAAD,CAAQ,CACzB,MAAOX,EAAA,CAAWW,CAAAe,QAAX,CAAA,CAA4Bf,CAAAe,QAAA,EAA5B,CAA8CugD,EAAA/hD,KAAA,CAAmBS,CAAnB,CAD5B,CAwD3Bob,QAASA,GAAc,EAAG,CACxB,IAAIqM,EAAQnhB,CAAA,EAAZ,CACIi7C,EAAW,CACb,OAAQ,CAAA,CADK,CAEb,QAAS,CAAA,CAFI,CAGb,OAAQ,IAHK,CAIb,UAAax8C,IAAAA,EAJA,CADf,CAOIy8C,CAPJ,CAOgBC,CAahB,KAAAC,WAAA,CAAkBC,QAAQ,CAACC,CAAD,CAAcC,CAAd,CAA4B,CACpDN,CAAA,CAASK,CAAT,CAAA,CAAwBC,CAD4B,CA4BtD,KAAAC,iBAAA,CAAwBC,QAAQ,CAACC,CAAD,CAAkBC,CAAlB,CAAsC,CACpET,CAAA,CAAaQ,CACbP,EAAA,CAAgBQ,CAChB,OAAO,KAH6D,CAMtE,KAAAr9B,KAAA,CAAY,CAAC,SAAD,CAAY,QAAQ,CAACnL,CAAD,CAAU,CAWxC0B,QAASA,EAAM,CAACw6B,CAAD,CAAMuM,CAAN,CAAqB,CAAA,IAC9BC,CAD8B,CACZC,CAEtB,QAAQ,MAAOzM,EAAf,EACE,KAAK,QAAL,CAaE,MAXAyM,EAWO,CAZPzM,CAYO,CAZDA,CAAAv2B,KAAA,EAYC,CATP+iC,CASO,CATY16B,CAAA,CAAM26B,CAAN,CASZ,CAPFD,CAOE,GANDhB,CAIJ,CAJY,IAAIkB,EAAJ,CAAUC,CAAV,CAIZ,CAFAH,CAEA,CAFmBz6C,CADN66C,IAAIrB,EAAJqB,CAAWpB,CAAXoB,CAAkB9oC,CAAlB8oC,CAA2BD,CAA3BC,CACM76C,OAAA,CAAaiuC,CAAb,CAEnB,CAAAluB,CAAA,CAAM26B,CAAN,CAAA,CAAkBI,CAAA,CAAiBL,CAAjB,CAEb,EAAAM,CAAA,CAAeN,CAAf,CAAiCD,CAAjC,CAET,MAAK,UAAL,CACE,MAAOO,EAAA,CAAe9M,CAAf,CAAoBuM,CAApB,CAET,SACE,MAAOO,EAAA,CAAexgD,CAAf;AAAqBigD,CAArB,CApBX,CAHkC,CAiCpCQ,QAASA,EAAyB,CAAC1c,CAAD,CAAW2c,CAAX,CAA4BC,CAA5B,CAAmD,CAEnF,MAAgB,KAAhB,EAAI5c,CAAJ,EAA2C,IAA3C,EAAwB2c,CAAxB,CACS3c,CADT,GACsB2c,CADtB,CAIwB,QAAxB,GAAI,MAAO3c,EAAX,GAKEA,CAEI,CAFOqb,EAAA,CAAWrb,CAAX,CAEP,CAAoB,QAApB,GAAA,MAAOA,EAAP,EAAiC4c,CAPvC,EAiBO5c,CAjBP,GAiBoB2c,CAjBpB,EAiBwC3c,CAjBxC,GAiBqDA,CAjBrD,EAiBiE2c,CAjBjE,GAiBqFA,CAjBrF,CASW,CAAA,CAfwE,CA0BrFE,QAASA,EAAmB,CAAC/2C,CAAD,CAAQsgB,CAAR,CAAkB8oB,CAAlB,CAAkCiN,CAAlC,CAAoDW,CAApD,CAA2E,CACrG,IAAIC,EAAmBZ,CAAAa,OAAvB,CACIC,CAEJ,IAAgC,CAAhC,GAAIF,CAAAjkD,OAAJ,CAAmC,CACjC,IAAIokD,EAAkBR,CAAtB,CACAK,EAAmBA,CAAA,CAAiB,CAAjB,CACnB,OAAOj3C,EAAA7I,OAAA,CAAakgD,QAA6B,CAACr3C,CAAD,CAAQ,CACvD,IAAIs3C,EAAgBL,CAAA,CAAiBj3C,CAAjB,CACf42C,EAAA,CAA0BU,CAA1B,CAAyCF,CAAzC,CAA0DH,CAAAzE,OAA1D,CAAL,GACE2E,CACA,CADad,CAAA,CAAiBr2C,CAAjB,CAAwB/G,IAAAA,EAAxB,CAAmCA,IAAAA,EAAnC,CAA8C,CAACq+C,CAAD,CAA9C,CACb,CAAAF,CAAA,CAAkBE,CAAlB,EAAmC/B,EAAA,CAAW+B,CAAX,CAFrC,CAIA,OAAOH,EANgD,CAAlD,CAOJ72B,CAPI,CAOM8oB,CAPN,CAOsB4N,CAPtB,CAH0B,CAenC,IAFA,IAAIO,EAAwB,EAA5B,CACIC,EAAiB,EADrB,CAESzjD,EAAI,CAFb,CAEgBY,EAAKsiD,CAAAjkD,OAArB,CAA8Ce,CAA9C,CAAkDY,CAAlD,CAAsDZ,CAAA,EAAtD,CACEwjD,CAAA,CAAsBxjD,CAAtB,CACA,CAD2B6iD,CAC3B,CAAAY,CAAA,CAAezjD,CAAf,CAAA,CAAoB,IAGtB,OAAOiM,EAAA7I,OAAA,CAAasgD,QAA8B,CAACz3C,CAAD,CAAQ,CAGxD,IAFA,IAAI03C,EAAU,CAAA,CAAd,CAES3jD,EAAI,CAFb,CAEgBY,EAAKsiD,CAAAjkD,OAArB,CAA8Ce,CAA9C,CAAkDY,CAAlD,CAAsDZ,CAAA,EAAtD,CAA2D,CACzD,IAAIujD,EAAgBL,CAAA,CAAiBljD,CAAjB,CAAA,CAAoBiM,CAApB,CACpB,IAAI03C,CAAJ,GAAgBA,CAAhB,CAA0B,CAACd,CAAA,CAA0BU,CAA1B,CAAyCC,CAAA,CAAsBxjD,CAAtB,CAAzC,CAAmEkjD,CAAA,CAAiBljD,CAAjB,CAAAy+C,OAAnE,CAA3B,EACEgF,CAAA,CAAezjD,CAAf,CACA,CADoBujD,CACpB,CAAAC,CAAA,CAAsBxjD,CAAtB,CAAA,CAA2BujD,CAA3B,EAA4C/B,EAAA,CAAW+B,CAAX,CAJW,CAQvDI,CAAJ;CACEP,CADF,CACed,CAAA,CAAiBr2C,CAAjB,CAAwB/G,IAAAA,EAAxB,CAAmCA,IAAAA,EAAnC,CAA8Cu+C,CAA9C,CADf,CAIA,OAAOL,EAfiD,CAAnD,CAgBJ72B,CAhBI,CAgBM8oB,CAhBN,CAgBsB4N,CAhBtB,CAxB8F,CA2CvGW,QAASA,EAAoB,CAAC33C,CAAD,CAAQsgB,CAAR,CAAkB8oB,CAAlB,CAAkCiN,CAAlC,CAAoDW,CAApD,CAA2E,CAsBtGY,QAASA,EAAa,EAAG,CACnBC,CAAA,CAAOpc,CAAP,CAAJ,EACE6N,CAAA,EAFqB,CAMzBwO,QAASA,EAAY,CAAC93C,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACnDzb,CAAA,CAAYsc,CAAA,EAAab,CAAb,CAAsBA,CAAA,CAAO,CAAP,CAAtB,CAAkCrN,CAAA,CAAI7pC,CAAJ,CAAWmc,CAAX,CAAmB8f,CAAnB,CAA2Bib,CAA3B,CAC1CW,EAAA,CAAOpc,CAAP,CAAJ,EACEz7B,CAAAm7B,aAAA,CAAmByc,CAAnB,CAEF,OAAOxmB,EAAA,CAAKqK,CAAL,CAL4C,CA3BrD,IAAIoc,EAASxB,CAAAra,QAAA,CAA2Bgc,CAA3B,CAA0ChmD,CAAvD,CACIs3C,CADJ,CACa7N,CADb,CAGIoO,EAAMwM,CAAA4B,cAANpO,EAAwCwM,CAH5C,CAIIjlB,EAAOilB,CAAA6B,cAAP9mB,EAAyCh7B,EAJ7C,CAMI2hD,EAAY1B,CAAAa,OAAZa,EAAuC,CAAClO,CAAAqN,OAI5CY,EAAA9b,QAAA,CAAuBqa,CAAAra,QACvB8b,EAAAxyC,SAAA,CAAwB+wC,CAAA/wC,SACxBwyC,EAAAZ,OAAA,CAAsBb,CAAAa,OAGtBR,EAAA,CAAiBoB,CAAjB,CAIA,OAFAxO,EAEA,CAFUtpC,CAAA7I,OAAA,CAAa2gD,CAAb,CAA2Bx3B,CAA3B,CAAqC8oB,CAArC,CAAqD4N,CAArD,CAlB4F,CAqCxGgB,QAASA,EAAY,CAAC9jD,CAAD,CAAQ,CAC3B,IAAIikD,EAAa,CAAA,CACjBhlD,EAAA,CAAQe,CAAR,CAAe,QAAQ,CAACkH,CAAD,CAAM,CACtBpJ,CAAA,CAAUoJ,CAAV,CAAL,GAAqB+8C,CAArB,CAAkC,CAAA,CAAlC,CAD2B,CAA7B,CAGA,OAAOA,EALoB,CAQ7BhP,QAASA,EAAqB,CAACnpC,CAAD,CAAQsgB,CAAR,CAAkB8oB,CAAlB,CAAkCiN,CAAlC,CAAoD,CAChF,IAAI/M,EAAUtpC,CAAA7I,OAAA,CAAaihD,QAAsB,CAACp4C,CAAD,CAAQ,CACvDspC,CAAA,EACA,OAAO+M,EAAA,CAAiBr2C,CAAjB,CAFgD,CAA3C,CAGXsgB,CAHW,CAGD8oB,CAHC,CAId,OAAOE,EALyE,CAQlFoN,QAASA,EAAgB,CAACL,CAAD,CAAmB,CACtCA,CAAA/wC,SAAJ;AACE+wC,CAAAvM,gBADF,CACqCX,CADrC,CAEWkN,CAAAgC,QAAJ,CACLhC,CAAAvM,gBADK,CAC8B6N,CAD9B,CAEItB,CAAAa,OAFJ,GAGLb,CAAAvM,gBAHK,CAG8BiN,CAH9B,CAMP,OAAOV,EATmC,CAY5C7T,QAASA,EAAiB,CAAC8V,CAAD,CAAQC,CAAR,CAAgB,CACxCC,QAASA,EAAkB,CAACtkD,CAAD,CAAQ,CACjC,MAAOqkD,EAAA,CAAOD,CAAA,CAAMpkD,CAAN,CAAP,CAD0B,CAGnCskD,CAAApc,UAAA,CAA+Bkc,CAAAlc,UAA/B,EAAkDmc,CAAAnc,UAClDoc,EAAAC,OAAA,CAA4BH,CAAAG,OAA5B,EAA4CF,CAAAE,OAE5C,OAAOD,EAPiC,CAU1C7B,QAASA,EAAc,CAACN,CAAD,CAAmBD,CAAnB,CAAkC,CACvD,GAAKA,CAAAA,CAAL,CAAoB,MAAOC,EAIvBA,EAAA6B,cAAJ,GACE9B,CACA,CADgB5T,CAAA,CAAkB6T,CAAA6B,cAAlB,CAAkD9B,CAAlD,CAChB,CAAAC,CAAA,CAAmBA,CAAA4B,cAFrB,CAKA,KAAIF,EAAY,CAAA,CAAhB,CAEIh9C,EAAKA,QAA8B,CAACiF,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACjEhjD,CAAAA,CAAQ6jD,CAAA,EAAab,CAAb,CAAsBA,CAAA,CAAO,CAAP,CAAtB,CAAkCb,CAAA,CAAiBr2C,CAAjB,CAAwBmc,CAAxB,CAAgC8f,CAAhC,CAAwCib,CAAxC,CAC9C,OAAOd,EAAA,CAAcliD,CAAd,CAF8D,CAMvE6G,EAAAk9C,cAAA,CAAmB5B,CACnBt7C,EAAAm9C,cAAA,CAAmB9B,CAGnBr7C,EAAAihC,QAAA,CAAaqa,CAAAra,QACbjhC,EAAAs9C,QAAA,CAAahC,CAAAgC,QACbt9C,EAAAuK,SAAA,CAAc+wC,CAAA/wC,SAKT8wC,EAAAha,UAAL,GACE2b,CAGA,CAHY,CAAC1B,CAAAa,OAGb,CAFAn8C,CAAAm8C,OAEA,CAFYb,CAAAa,OAAA;AAA0Bb,CAAAa,OAA1B,CAAoD,CAACb,CAAD,CAEhE,CAAKD,CAAAqC,OAAL,GACE19C,CAAAm8C,OADF,CACcn8C,CAAAm8C,OAAA5M,IAAA,CAAc,QAAQ,CAACjtC,CAAD,CAAI,CAGlC,MAAIA,EAAAm1C,OAAJ,GAAiBU,EAAjB,CACSwF,QAAmB,CAACC,CAAD,CAAI,CAAE,MAAOt7C,EAAA,CAAEs7C,CAAF,CAAT,CADhC,CAGOt7C,CAN2B,CAA1B,CADd,CAJF,CAgBA,OAAOq5C,EAAA,CAAiB37C,CAAjB,CA7CgD,CA1LzD,IAAIy7C,EAAgB,CACdpwC,IAFaA,EAAA,EAAAwyC,aACC,CAEdnD,SAAUn9C,EAAA,CAAKm9C,CAAL,CAFI,CAGdoD,kBAAmBtlD,CAAA,CAAWmiD,CAAX,CAAnBmD,EAA6CnD,CAH/B,CAIdoD,qBAAsBvlD,CAAA,CAAWoiD,CAAX,CAAtBmD,EAAmDnD,CAJrC,CAMpBtmC,EAAA0pC,SAAA,CA8BAA,QAAiB,CAAClP,CAAD,CAAM,CACrB,IAAIwL,EAAQ,IAAIkB,EAAJ,CAAUC,CAAV,CAEZ,OAAOwC,CADMvC,IAAIrB,EAAJqB,CAAWpB,CAAXoB,CAAkB9oC,CAAlB8oC,CAA2BD,CAA3BC,CACNuC,QAAA,CAAcnP,CAAd,CAAAuJ,IAHc,CA7BvB,OAAO/jC,EATiC,CAA9B,CAvDY,CAqgB1BK,QAASA,GAAU,EAAG,CACpB,IAAIupC,EAA6B,CAAA,CACjC,KAAAngC,KAAA,CAAY,CAAC,YAAD,CAAe,mBAAf,CAAoC,QAAQ,CAACvJ,CAAD,CAAa9B,CAAb,CAAgC,CACtF,MAAOyrC,GAAA,CAAS,QAAQ,CAACn3B,CAAD,CAAW,CACjCxS,CAAArY,WAAA,CAAsB6qB,CAAtB,CADiC,CAA5B,CAEJtU,CAFI,CAEewrC,CAFf,CAD+E,CAA5E,CAmBZ,KAAAA,2BAAA,CAAkCE,QAAQ,CAACjlD,CAAD,CAAQ,CAChD,MAAIlC,EAAA,CAAUkC,CAAV,CAAJ,EACE+kD,CACO,CADsB/kD,CACtB,CAAA,IAFT;AAIS+kD,CALuC,CArB9B,CAgCtBrpC,QAASA,GAAW,EAAG,CACrB,IAAIqpC,EAA6B,CAAA,CACjC,KAAAngC,KAAA,CAAY,CAAC,UAAD,CAAa,mBAAb,CAAkC,QAAQ,CAAC/L,CAAD,CAAWU,CAAX,CAA8B,CAClF,MAAOyrC,GAAA,CAAS,QAAQ,CAACn3B,CAAD,CAAW,CACjChV,CAAAuV,MAAA,CAAeP,CAAf,CADiC,CAA5B,CAEJtU,CAFI,CAEewrC,CAFf,CAD2E,CAAxE,CAMZ,KAAAA,2BAAA,CAAkCE,QAAQ,CAACjlD,CAAD,CAAQ,CAChD,MAAIlC,EAAA,CAAUkC,CAAV,CAAJ,EACE+kD,CACO,CADsB/kD,CACtB,CAAA,IAFT,EAIS+kD,CALuC,CAR7B,CA4BvBC,QAASA,GAAQ,CAACE,CAAD,CAAWC,CAAX,CAA6BJ,CAA7B,CAAyD,CAexE32B,QAASA,EAAK,EAAG,CACf,MAAO,KAAIg3B,CADI,CAIjBA,QAASA,EAAQ,EAAG,CAClB,IAAI7W,EAAU,IAAAA,QAAVA,CAAyB,IAAI8W,CAEjC,KAAA3V,QAAA,CAAe4V,QAAQ,CAACp+C,CAAD,CAAM,CAAE+pC,CAAA,CAAe1C,CAAf,CAAwBrnC,CAAxB,CAAF,CAC7B,KAAA+nC,OAAA,CAAcsW,QAAQ,CAAC12C,CAAD,CAAS,CAAE22C,CAAA,CAAcjX,CAAd,CAAuB1/B,CAAvB,CAAF,CAC/B,KAAAqpC,OAAA,CAAcuN,QAAQ,CAACC,CAAD,CAAW,CAAEC,CAAA,CAAcpX,CAAd,CAAuBmX,CAAvB,CAAF,CALf,CASpBL,QAASA,EAAO,EAAG,CACjB,IAAA5N,QAAA,CAAe,CAAEvK,OAAQ,CAAV,CADE,CAkEnB0Y,QAASA,EAAa,EAAG,CAEvB,IAAA,CAAQC,CAAAA,CAAR,EAAqBC,CAAAhnD,OAArB,CAAA,CAAwC,CACtC,IAAIinD,EAAUD,CAAA/9B,MAAA,EACd,IAuSK2vB,CAvSwBqO,CAuSxBrO,IAvSL,CAAuC,CACVqO,CAySjCrO,IAAA,CAAY,CAAA,CAxS8D13C,KAAAA,EAAA+lD,CAAA/lD,MAAAA,CAAhEgmD,EAAe,gCAAfA;CAzieS,UAAnB,GAAI,MAAOvnD,EAAX,CACSA,CAAA8D,SAAA,EAAAuF,QAAA,CAAuB,aAAvB,CAAsC,EAAtC,CADT,CAEWtF,CAAA,CAAY/D,CAAZ,CAAJ,CACE,WADF,CAEmB,QAAnB,GAAI,MAAOA,EAAX,CACEoT,EAAA,CAAgBpT,CAAhB,CAoiemDJ,IAAA,EApienD,CADF,CAGAI,CAkieGunD,CACApjD,GAAA,CAAQmjD,CAAA/lD,MAAR,CAAJ,CACEmlD,CAAA,CAAiBY,CAAA/lD,MAAjB,CAAgCgmD,CAAhC,CADF,CAGEb,CAAA,CAAiBa,CAAjB,CANmC,CAFD,CAFjB,CAgBzBC,QAASA,EAAoB,CAAC/4B,CAAD,CAAQ,CAC/B63B,CAAAA,CAAJ,EAAmC73B,CAAAg5B,QAAnC,EAAqE,CAArE,GAAoDh5B,CAAAggB,OAApD,EAAmGhgB,CA0R5FwqB,IA1RP,GACoB,CAGlB,GAHImO,CAGJ,EAH6C,CAG7C,GAHuBC,CAAAhnD,OAGvB,EAFEomD,CAAA,CAASU,CAAT,CAEF,CAAAE,CAAAthD,KAAA,CAAgB0oB,CAAhB,CAJF,CAMIi5B,EAAAj5B,CAAAi5B,iBAAJ,EAA+Bj5B,CAAAg5B,QAA/B,GACAh5B,CAAAi5B,iBAEA,CAFyB,CAAA,CAEzB,CADA,EAAEN,CACF,CAAAX,CAAA,CAAS,QAAQ,EAAG,CA7DO,IACvBr+C,CADuB,CACnB0nC,CADmB,CACV2X,CAEjBA,EAAA,CA0DmCh5B,CA1DzBg5B,QA0DyBh5B,EAzDnCi5B,iBAAA,CAAyB,CAAA,CAyDUj5B,EAxDnCg5B,QAAA,CAAgBnhD,IAAAA,EAChB,IAAI,CACF,IADE,IACOlF,EAAI,CADX,CACcY,EAAKylD,CAAApnD,OAArB,CAAqCe,CAArC,CAAyCY,CAAzC,CAA6C,EAAEZ,CAA/C,CAAkD,CAsDjBqtB,CAoRrCwqB,IAAA,CAAY,CAAA,CAxUNnJ,EAAA,CAAU2X,CAAA,CAAQrmD,CAAR,CAAA,CAAW,CAAX,CACVgH,EAAA,CAAKq/C,CAAA,CAAQrmD,CAAR,CAAA,CAmD0BqtB,CAnDfggB,OAAX,CACL,IAAI,CACE7tC,CAAA,CAAWwH,CAAX,CAAJ,CACEoqC,CAAA,CAAe1C,CAAf,CAAwB1nC,CAAA,CAgDGqmB,CAhDAltB,MAAH,CAAxB,CADF,CAE4B,CAArB,GA+CsBktB,CA/ClBggB,OAAJ,CACL+D,CAAA,CAAe1C,CAAf,CA8C2BrhB,CA9CHltB,MAAxB,CADK,CAGLwlD,CAAA,CAAcjX,CAAd,CA4C2BrhB,CA5CJltB,MAAvB,CANA,CAQF,MAAOmJ,CAAP,CAAU,CACVq8C,CAAA,CAAcjX,CAAd;AAAuBplC,CAAvB,CAEA,CAAIA,CAAJ,EAAwC,CAAA,CAAxC,GAASA,CAAAi9C,yBAAT,EACEjB,CAAA,CAAiBh8C,CAAjB,CAJQ,CAZoC,CADhD,CAAJ,OAqBU,CACR,EAAE08C,CACF,CAAId,CAAJ,EAAgD,CAAhD,GAAkCc,CAAlC,EACEX,CAAA,CAASU,CAAT,CAHM,CAkCU,CAApB,CAHA,CAPmC,CAarC3U,QAASA,EAAc,CAAC1C,CAAD,CAAUrnC,CAAV,CAAe,CAChCqnC,CAAAkJ,QAAAvK,OAAJ,GACIhmC,CAAJ,GAAYqnC,CAAZ,CACE8X,CAAA,CAAS9X,CAAT,CAAkB+X,CAAA,CAChB,QADgB,CAGhBp/C,CAHgB,CAAlB,CADF,CAMEq/C,CAAA,CAAUhY,CAAV,CAAmBrnC,CAAnB,CAPF,CADoC,CAatCq/C,QAASA,EAAS,CAAChY,CAAD,CAAUrnC,CAAV,CAAe,CAiB/Bs/C,QAASA,EAAS,CAACt/C,CAAD,CAAM,CAClB0pC,CAAJ,GACAA,CACA,CADO,CAAA,CACP,CAAA2V,CAAA,CAAUhY,CAAV,CAAmBrnC,CAAnB,CAFA,CADsB,CAKxBu/C,QAASA,EAAQ,CAACv/C,CAAD,CAAM,CACjB0pC,CAAJ,GACAA,CACA,CADO,CAAA,CACP,CAAAyV,CAAA,CAAS9X,CAAT,CAAkBrnC,CAAlB,CAFA,CADqB,CAKvBw/C,QAASA,EAAQ,CAAChB,CAAD,CAAW,CAC1BC,CAAA,CAAcpX,CAAd,CAAuBmX,CAAvB,CAD0B,CA1B5B,IAAI1iB,CAAJ,CACI4N,EAAO,CAAA,CACX,IAAI,CACF,GAAI/yC,CAAA,CAASqJ,CAAT,CAAJ,EAAqB7H,CAAA,CAAW6H,CAAX,CAArB,CAAsC87B,CAAA,CAAO97B,CAAA87B,KACzC3jC,EAAA,CAAW2jC,CAAX,CAAJ,EACEuL,CAAAkJ,QAAAvK,OACA,CAD0B,EAC1B,CAAAlK,CAAAzjC,KAAA,CAAU2H,CAAV,CAAes/C,CAAf,CAA0BC,CAA1B,CAAoCC,CAApC,CAFF,GAIEnY,CAAAkJ,QAAAz3C,MAEA,CAFwBkH,CAExB,CADAqnC,CAAAkJ,QAAAvK,OACA,CADyB,CACzB,CAAA+Y,CAAA,CAAqB1X,CAAAkJ,QAArB,CANF,CAFE,CAUF,MAAOtuC,CAAP,CAAU,CACVs9C,CAAA,CAASt9C,CAAT,CADU,CAbmB,CAgCjCq8C,QAASA,EAAa,CAACjX,CAAD,CAAU1/B,CAAV,CAAkB,CAClC0/B,CAAAkJ,QAAAvK,OAAJ,EACAmZ,CAAA,CAAS9X,CAAT,CAAkB1/B,CAAlB,CAFsC,CAKxCw3C,QAASA,EAAQ,CAAC9X,CAAD,CAAU1/B,CAAV,CAAkB,CACjC0/B,CAAAkJ,QAAAz3C,MAAA,CAAwB6O,CACxB0/B,EAAAkJ,QAAAvK,OAAA,CAAyB,CACzB+Y,EAAA,CAAqB1X,CAAAkJ,QAArB,CAHiC,CAMnCkO,QAASA,EAAa,CAACpX,CAAD;AAAUmX,CAAV,CAAoB,CACxC,IAAI/S,EAAYpE,CAAAkJ,QAAAyO,QAEe,EAA/B,EAAK3X,CAAAkJ,QAAAvK,OAAL,EAAqCyF,CAArC,EAAkDA,CAAA7zC,OAAlD,EACEomD,CAAA,CAAS,QAAQ,EAAG,CAElB,IAFkB,IACdr3B,CADc,CACJhH,CADI,CAEThnB,EAAI,CAFK,CAEFY,EAAKkyC,CAAA7zC,OAArB,CAAuCe,CAAvC,CAA2CY,CAA3C,CAA+CZ,CAAA,EAA/C,CAAoD,CAClDgnB,CAAA,CAAS8rB,CAAA,CAAU9yC,CAAV,CAAA,CAAa,CAAb,CACTguB,EAAA,CAAW8kB,CAAA,CAAU9yC,CAAV,CAAA,CAAa,CAAb,CACX,IAAI,CACF8lD,CAAA,CAAc9+B,CAAd,CAAsBxnB,CAAA,CAAWwuB,CAAX,CAAA,CAAuBA,CAAA,CAAS63B,CAAT,CAAvB,CAA4CA,CAAlE,CADE,CAEF,MAAOv8C,CAAP,CAAU,CACVg8C,CAAA,CAAiBh8C,CAAjB,CADU,CALsC,CAFlC,CAApB,CAJsC,CAuD1C8lC,QAASA,EAAM,CAACpgC,CAAD,CAAS,CACtB,IAAIgY,EAAS,IAAIw+B,CACjBG,EAAA,CAAc3+B,CAAd,CAAsBhY,CAAtB,CACA,OAAOgY,EAHe,CAMxB8/B,QAASA,EAAc,CAAC3mD,CAAD,CAAQ4mD,CAAR,CAAkB/4B,CAAlB,CAA4B,CACjD,IAAIg5B,EAAiB,IACrB,IAAI,CACExnD,CAAA,CAAWwuB,CAAX,CAAJ,GAA0Bg5B,CAA1B,CAA2Ch5B,CAAA,EAA3C,CADE,CAEF,MAAO1kB,CAAP,CAAU,CACV,MAAO8lC,EAAA,CAAO9lC,CAAP,CADG,CAGZ,MAAkB09C,EAAlB,EA3/hBYxnD,CAAA,CA2/hBMwnD,CA3/hBK7jB,KAAX,CA2/hBZ,CACS6jB,CAAA7jB,KAAA,CAAoB,QAAQ,EAAG,CACpC,MAAO4jB,EAAA,CAAS5mD,CAAT,CAD6B,CAA/B,CAEJivC,CAFI,CADT,CAKS2X,CAAA,CAAS5mD,CAAT,CAZwC,CAkCnD8mD,QAASA,EAAI,CAAC9mD,CAAD,CAAQ6tB,CAAR,CAAkBk5B,CAAlB,CAA2BC,CAA3B,CAAyC,CACpD,IAAIngC,EAAS,IAAIw+B,CACjBpU,EAAA,CAAepqB,CAAf,CAAuB7mB,CAAvB,CACA,OAAO6mB,EAAAmc,KAAA,CAAYnV,CAAZ,CAAsBk5B,CAAtB,CAA+BC,CAA/B,CAH6C,CAoFtDC,QAASA,EAAE,CAACL,CAAD,CAAW,CACpB,GAAK,CAAAvnD,CAAA,CAAWunD,CAAX,CAAL,CACE,KAAMN,EAAA,CAAS,SAAT,CAAwDM,CAAxD,CAAN,CAGF,IAAIrY,EAAU,IAAI8W,CAUlBuB,EAAA,CARAM,QAAkB,CAAClnD,CAAD,CAAQ,CACxBixC,CAAA,CAAe1C,CAAf,CAAwBvuC,CAAxB,CADwB,CAQ1B,CAJAyuC,QAAiB,CAAC5/B,CAAD,CAAS,CACxB22C,CAAA,CAAcjX,CAAd,CAAuB1/B,CAAvB,CADwB,CAI1B,CAEA,OAAO0/B,EAjBa,CAtWkD;AACxE,IAAI+X,EAAW/nD,CAAA,CAAO,IAAP,CAAa4oD,SAAb,CAAf,CACItB,EAAY,CADhB,CAEIC,EAAa,EA6BjBxkD,EAAA,CAAO+jD,CAAAx/B,UAAP,CAA0B,CACxBmd,KAAMA,QAAQ,CAACokB,CAAD,CAAcC,CAAd,CAA0BL,CAA1B,CAAwC,CACpD,GAAIxkD,CAAA,CAAY4kD,CAAZ,CAAJ,EAAgC5kD,CAAA,CAAY6kD,CAAZ,CAAhC,EAA2D7kD,CAAA,CAAYwkD,CAAZ,CAA3D,CACE,MAAO,KAET,KAAIngC,EAAS,IAAIw+B,CAEjB,KAAA5N,QAAAyO,QAAA,CAAuB,IAAAzO,QAAAyO,QAAvB,EAA+C,EAC/C,KAAAzO,QAAAyO,QAAA1hD,KAAA,CAA0B,CAACqiB,CAAD,CAASugC,CAAT,CAAsBC,CAAtB,CAAkCL,CAAlC,CAA1B,CAC0B,EAA1B,CAAI,IAAAvP,QAAAvK,OAAJ,EAA6B+Y,CAAA,CAAqB,IAAAxO,QAArB,CAE7B,OAAO5wB,EAV6C,CAD9B,CAcxB,QAAS0c,QAAQ,CAAC1V,CAAD,CAAW,CAC1B,MAAO,KAAAmV,KAAA,CAAU,IAAV,CAAgBnV,CAAhB,CADmB,CAdJ,CAkBxB,UAAWuiB,QAAQ,CAACviB,CAAD,CAAWm5B,CAAX,CAAyB,CAC1C,MAAO,KAAAhkB,KAAA,CAAU,QAAQ,CAAChjC,CAAD,CAAQ,CAC/B,MAAO2mD,EAAA,CAAe3mD,CAAf,CAAsB0vC,CAAtB,CAA+B7hB,CAA/B,CADwB,CAA1B,CAEJ,QAAQ,CAAC3iB,CAAD,CAAQ,CACjB,MAAOy7C,EAAA,CAAez7C,CAAf,CAAsB+jC,CAAtB,CAA8BphB,CAA9B,CADU,CAFZ,CAIJm5B,CAJI,CADmC,CAlBpB,CAA1B,CAsQA,KAAItX,EAAUoX,CAsFdG,EAAAphC,UAAA,CAAew/B,CAAAx/B,UAEfohC,EAAA74B,MAAA,CAAWA,CACX64B,EAAAhY,OAAA,CAAYA,CACZgY,EAAAH,KAAA,CAAUA,CACVG,EAAAvX,QAAA,CAAaA,CACbuX,EAAA1pC,IAAA,CA1EAA,QAAY,CAAC+pC,CAAD,CAAW,CAAA,IACjBzgC,EAAS,IAAIw+B,CADI,CAEjBkC;AAAU,CAFO,CAGjBC,EAAU7oD,CAAA,CAAQ2oD,CAAR,CAAA,CAAoB,EAApB,CAAyB,EAEvCroD,EAAA,CAAQqoD,CAAR,CAAkB,QAAQ,CAAC/Y,CAAD,CAAUnvC,CAAV,CAAe,CACvCmoD,CAAA,EACAT,EAAA,CAAKvY,CAAL,CAAAvL,KAAA,CAAmB,QAAQ,CAAChjC,CAAD,CAAQ,CACjCwnD,CAAA,CAAQpoD,CAAR,CAAA,CAAeY,CACT,GAAEunD,CAAR,EAAkBtW,CAAA,CAAepqB,CAAf,CAAuB2gC,CAAvB,CAFe,CAAnC,CAGG,QAAQ,CAAC34C,CAAD,CAAS,CAClB22C,CAAA,CAAc3+B,CAAd,CAAsBhY,CAAtB,CADkB,CAHpB,CAFuC,CAAzC,CAUgB,EAAhB,GAAI04C,CAAJ,EACEtW,CAAA,CAAepqB,CAAf,CAAuB2gC,CAAvB,CAGF,OAAO3gC,EAnBc,CA2EvBogC,EAAAQ,KAAA,CAvCAA,QAAa,CAACH,CAAD,CAAW,CACtB,IAAIpW,EAAW9iB,CAAA,EAEfnvB,EAAA,CAAQqoD,CAAR,CAAkB,QAAQ,CAAC/Y,CAAD,CAAU,CAClCuY,CAAA,CAAKvY,CAAL,CAAAvL,KAAA,CAAmBkO,CAAAxB,QAAnB,CAAqCwB,CAAAjC,OAArC,CADkC,CAApC,CAIA,OAAOiC,EAAA3C,QAPe,CAyCxB,OAAO0Y,EArYiE,CAyZ1EnqC,QAASA,GAAa,EAAG,CACvB,IAAA8H,KAAA,CAAY,CAAC,SAAD,CAAY,UAAZ,CAAwB,QAAQ,CAACjI,CAAD,CAAUF,CAAV,CAAoB,CAC9D,IAAIirC,EAAwB/qC,CAAA+qC,sBAAxBA,EACwB/qC,CAAAgrC,4BAD5B,CAGIC,EAAuBjrC,CAAAirC,qBAAvBA,EACuBjrC,CAAAkrC,2BADvBD,EAEuBjrC,CAAAmrC,kCAL3B,CAOIC,EAAe,CAAEL,CAAAA,CAPrB,CAQIM,EAAMD,CAAA,CACN,QAAQ,CAAClhD,CAAD,CAAK,CACX,IAAI8oB,EAAK+3B,CAAA,CAAsB7gD,CAAtB,CACT,OAAO,SAAQ,EAAG,CAChB+gD,CAAA,CAAqBj4B,CAArB,CADgB,CAFP,CADP;AAON,QAAQ,CAAC9oB,CAAD,CAAK,CACX,IAAIohD,EAAQxrC,CAAA,CAAS5V,CAAT,CAAa,KAAb,CAAoB,CAAA,CAApB,CACZ,OAAO,SAAQ,EAAG,CAChB4V,CAAAiS,OAAA,CAAgBu5B,CAAhB,CADgB,CAFP,CAOjBD,EAAAE,UAAA,CAAgBH,CAEhB,OAAOC,EAzBuD,CAApD,CADW,CAmGzB1sC,QAASA,GAAkB,EAAG,CAa5B6sC,QAASA,EAAqB,CAACrmD,CAAD,CAAS,CACrCsmD,QAASA,EAAU,EAAG,CACpB,IAAAC,WAAA,CAAkB,IAAAC,cAAlB,CACI,IAAAC,YADJ,CACuB,IAAAC,YADvB,CAC0C,IAC1C,KAAAC,YAAA,CAAmB,EACnB,KAAAC,gBAAA,CAAuB,EACvB,KAAAC,gBAAA,CAAuB,CACvB,KAAAC,IAAA,CArqjBG,EAAE1oD,EAsqjBL,KAAA2oD,aAAA,CAAoB,IACpB,KAAAC,YAAA,CAAmB,CAAA,CARC,CAUtBV,CAAAviC,UAAA,CAAuB/jB,CACvB,OAAOsmD,EAZ8B,CAZvC,IAAIv0B,EAAM,EAAV,CACIk1B,EAAmBxqD,CAAA,CAAO,YAAP,CADvB,CAEIyqD,EAAiB,IAFrB,CAGIC,EAAe,IAEnB,KAAAC,UAAA,CAAiBC,QAAQ,CAACnpD,CAAD,CAAQ,CAC3BwB,SAAA1C,OAAJ,GACE+0B,CADF,CACQ7zB,CADR,CAGA,OAAO6zB,EAJwB,CAsBjC,KAAAjP,KAAA,CAAY,CAAC,mBAAD,CAAsB,QAAtB,CAAgC,UAAhC;AACR,QAAQ,CAACrL,CAAD,CAAoB4B,CAApB,CAA4BtC,CAA5B,CAAsC,CAEhDuwC,QAASA,EAAiB,CAACC,CAAD,CAAS,CAC/BA,CAAAC,aAAAjmB,YAAA,CAAkC,CAAA,CADH,CAInCkmB,QAASA,EAAY,CAACvnB,CAAD,CAAS,CAGf,CAAb,GAAIvjB,EAAJ,GAMMujB,CAAAumB,YAGJ,EAFEgB,CAAA,CAAavnB,CAAAumB,YAAb,CAEF,CAAIvmB,CAAAsmB,cAAJ,EACEiB,CAAA,CAAavnB,CAAAsmB,cAAb,CAVJ,CAqBAtmB,EAAApK,QAAA,CAAiBoK,CAAAsmB,cAAjB,CAAwCtmB,CAAAwnB,cAAxC,CAA+DxnB,CAAAumB,YAA/D,CACIvmB,CAAAwmB,YADJ,CACyBxmB,CAAAynB,MADzB,CACwCznB,CAAAqmB,WADxC,CAC4D,IAzBhC,CAoE9BqB,QAASA,EAAK,EAAG,CACf,IAAAd,IAAA,CAzvjBG,EAAE1oD,EA0vjBL,KAAAywC,QAAA,CAAe,IAAA/Y,QAAf,CAA8B,IAAAywB,WAA9B,CACe,IAAAC,cADf,CACoC,IAAAkB,cADpC,CAEe,IAAAjB,YAFf,CAEkC,IAAAC,YAFlC,CAEqD,IACrD,KAAAiB,MAAA,CAAa,IAEb,KAAAX,YAAA,CADA,IAAAzlB,YACA,CADmB,CAAA,CAEnB,KAAAolB,YAAA,CAAmB,EACnB,KAAAC,gBAAA,CAAuB,EACvB,KAAAC,gBAAA;AAAuB,CACvB,KAAAtqB,kBAAA,CAAyB,IAXV,CAwvCjBsrB,QAASA,EAAU,CAACC,CAAD,CAAQ,CACzB,GAAIvuC,CAAAs1B,QAAJ,CACE,KAAMoY,EAAA,CAAiB,QAAjB,CAAsD1tC,CAAAs1B,QAAtD,CAAN,CAGFt1B,CAAAs1B,QAAA,CAAqBiZ,CALI,CAY3BC,QAASA,EAAsB,CAAC9f,CAAD,CAAU8N,CAAV,CAAiB,CAC9C,EACE9N,EAAA4e,gBAAA,EAA2B9Q,CAD7B,OAEU9N,CAFV,CAEoBA,CAAAnS,QAFpB,CAD8C,CAMhDkyB,QAASA,EAAsB,CAAC/f,CAAD,CAAU8N,CAAV,CAAiBltC,CAAjB,CAAuB,CACpD,EACEo/B,EAAA2e,gBAAA,CAAwB/9C,CAAxB,CAEA,EAFiCktC,CAEjC,CAAsC,CAAtC,GAAI9N,CAAA2e,gBAAA,CAAwB/9C,CAAxB,CAAJ,EACE,OAAOo/B,CAAA2e,gBAAA,CAAwB/9C,CAAxB,CAJX,OAMUo/B,CANV,CAMoBA,CAAAnS,QANpB,CADoD,CActDmyB,QAASA,EAAY,EAAG,EAExBC,QAASA,EAAe,EAAG,CACzB,IAAA,CAAOC,CAAAnrD,OAAP,CAAA,CACE,GAAI,CACFmrD,CAAAliC,MAAA,EAAA,EADE,CAEF,MAAO5e,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAId8/C,CAAA,CAAe,IARU,CAW3BiB,QAASA,EAAkB,EAAG,CACP,IAArB,GAAIjB,CAAJ,GACEA,CADF,CACiBpwC,CAAAuV,MAAA,CAAe,QAAQ,EAAG,CACvC/S,CAAArP,OAAA,CAAkBg+C,CAAlB,CADuC,CAA1B,CAEZ,IAFY,CAEN,aAFM,CADjB,CAD4B,CA/vC9BN,CAAA7jC,UAAA,CAAkB,CAChB7gB,YAAa0kD,CADG,CA+BhB7xB,KAAMA,QAAQ,CAACsyB,CAAD,CAAUroD,CAAV,CAAkB,CAC9B,IAAIsoD,CAEJtoD,EAAA,CAASA,CAAT,EAAmB,IAEfqoD,EAAJ,EACEC,CACA,CADQ,IAAIV,CACZ;AAAAU,CAAAX,MAAA,CAAc,IAAAA,MAFhB,GAMO,IAAAZ,aAGL,GAFE,IAAAA,aAEF,CAFsBV,CAAA,CAAsB,IAAtB,CAEtB,EAAAiC,CAAA,CAAQ,IAAI,IAAAvB,aATd,CAWAuB,EAAAxyB,QAAA,CAAgB91B,CAChBsoD,EAAAZ,cAAA,CAAsB1nD,CAAA0mD,YAClB1mD,EAAAymD,YAAJ,EACEzmD,CAAA0mD,YAAAF,cACA,CADmC8B,CACnC,CAAAtoD,CAAA0mD,YAAA,CAAqB4B,CAFvB,EAIEtoD,CAAAymD,YAJF,CAIuBzmD,CAAA0mD,YAJvB,CAI4C4B,CAQ5C,EAAID,CAAJ,EAAeroD,CAAf,GAA0B,IAA1B,GAAgCsoD,CAAA3rB,IAAA,CAAU,UAAV,CAAsB2qB,CAAtB,CAEhC,OAAOgB,EAhCuB,CA/BhB,CAwLhBnnD,OAAQA,QAAQ,CAAConD,CAAD,CAAWj+B,CAAX,CAAqB8oB,CAArB,CAAqC4N,CAArC,CAA4D,CAC1E,IAAIh2C,EAAMqO,CAAA,CAAOkvC,CAAP,CACNxjD,EAAAA,CAAKxH,CAAA,CAAW+sB,CAAX,CAAA,CAAuBA,CAAvB,CAAkCnqB,CAE3C,IAAI6K,CAAA8oC,gBAAJ,CACE,MAAO9oC,EAAA8oC,gBAAA,CAAoB,IAApB,CAA0B/uC,CAA1B,CAA8BquC,CAA9B,CAA8CpoC,CAA9C,CAAmDu9C,CAAnD,CALiE,KAOtEv+C,EAAQ,IAP8D,CAQtE9H,EAAQ8H,CAAAu8C,WAR8D,CAStEiC,EAAU,CACRzjD,GAAIA,CADI,CAER0jD,KAAMR,CAFE,CAGRj9C,IAAKA,CAHG,CAIR6oC,IAAKmN,CAALnN,EAA8B0U,CAJtB,CAKRG,GAAI,CAAEtV,CAAAA,CALE,CAQd8T,EAAA,CAAiB,IAEZhlD,EAAL,GACEA,CACA,CADQ8H,CAAAu8C,WACR,CAD2B,EAC3B,CAAArkD,CAAAymD,mBAAA,CAA4B,EAF9B,CAMAzmD,EAAAuH,QAAA,CAAc++C,CAAd,CACAtmD;CAAAymD,mBAAA,EACAZ,EAAA,CAAuB,IAAvB,CAA6B,CAA7B,CAEA,OAAOa,SAAwB,EAAG,CAChC,IAAIzmD,EAAQF,EAAA,CAAYC,CAAZ,CAAmBsmD,CAAnB,CACC,EAAb,EAAIrmD,CAAJ,GACE4lD,CAAA,CAAuB/9C,CAAvB,CAA+B,EAA/B,CACA,CAAI7H,CAAJ,CAAYD,CAAAymD,mBAAZ,EACEzmD,CAAAymD,mBAAA,EAHJ,CAMAzB,EAAA,CAAiB,IARe,CA7BwC,CAxL5D,CA0PhBxS,YAAaA,QAAQ,CAACmU,CAAD,CAAmBv+B,CAAnB,CAA6B,CAuChDw+B,QAASA,EAAgB,EAAG,CAC1BC,CAAA,CAA0B,CAAA,CAE1B,IAAI,CACEC,CAAJ,EACEA,CACA,CADW,CAAA,CACX,CAAA1+B,CAAA,CAAS2+B,CAAT,CAAoBA,CAApB,CAA+BnkD,CAA/B,CAFF,EAIEwlB,CAAA,CAAS2+B,CAAT,CAAoBrU,CAApB,CAA+B9vC,CAA/B,CALA,CAAJ,OAOU,CACR,IAAS,IAAA/G,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8qD,CAAA7rD,OAApB,CAA6Ce,CAAA,EAA7C,CACE62C,CAAA,CAAU72C,CAAV,CAAA,CAAekrD,CAAA,CAAUlrD,CAAV,CAFT,CAVgB,CAtC5B,IAAI62C,EAAgB/zC,KAAJ,CAAUgoD,CAAA7rD,OAAV,CAAhB,CACIisD,EAAgBpoD,KAAJ,CAAUgoD,CAAA7rD,OAAV,CADhB,CAEIksD,EAAgB,EAFpB,CAGIpkD,EAAO,IAHX,CAIIikD,EAA0B,CAAA,CAJ9B,CAKIC,EAAW,CAAA,CAEf,IAAKhsD,CAAA6rD,CAAA7rD,OAAL,CAA8B,CAE5B,IAAImsD,EAAa,CAAA,CACjBrkD,EAAA5D,WAAA,CAAgB,QAAQ,EAAG,CACrBioD,CAAJ,EAAgB7+B,CAAA,CAAS2+B,CAAT,CAAoBA,CAApB,CAA+BnkD,CAA/B,CADS,CAA3B,CAGA,OAAOskD,SAA6B,EAAG,CACrCD,CAAA,CAAa,CAAA,CADwB,CANX,CAW9B,GAAgC,CAAhC,GAAIN,CAAA7rD,OAAJ,CAEE,MAAO,KAAAmE,OAAA,CAAY0nD,CAAA,CAAiB,CAAjB,CAAZ,CAAiCC,QAAyB,CAAC5qD,CAAD,CAAQmmC,CAAR,CAAkBr6B,CAAlB,CAAyB,CACxFi/C,CAAA,CAAU,CAAV,CAAA,CAAe/qD,CACf02C,EAAA,CAAU,CAAV,CAAA,CAAevQ,CACf/Z,EAAA,CAAS2+B,CAAT,CAAqB/qD,CAAD,GAAWmmC,CAAX,CAAuB4kB,CAAvB,CAAmCrU,CAAvD,CAAkE5qC,CAAlE,CAHwF,CAAnF,CAOT7M,EAAA,CAAQ0rD,CAAR,CAA0B,QAAQ,CAACpL,CAAD;AAAO1/C,CAAP,CAAU,CAC1C,IAAIsrD,EAAYvkD,CAAA3D,OAAA,CAAYs8C,CAAZ,CAAkB6L,QAA4B,CAACprD,CAAD,CAAQ,CACpE+qD,CAAA,CAAUlrD,CAAV,CAAA,CAAeG,CACV6qD,EAAL,GACEA,CACA,CAD0B,CAAA,CAC1B,CAAAjkD,CAAA5D,WAAA,CAAgB4nD,CAAhB,CAFF,CAFoE,CAAtD,CAOhBI,EAAAxmD,KAAA,CAAmB2mD,CAAnB,CAR0C,CAA5C,CA4BA,OAAOD,SAA6B,EAAG,CACrC,IAAA,CAAOF,CAAAlsD,OAAP,CAAA,CACEksD,CAAAjjC,MAAA,EAAA,EAFmC,CAxDS,CA1PlC,CAiXhBogB,iBAAkBA,QAAQ,CAAC1pC,CAAD,CAAM2tB,CAAN,CAAgB,CAwBxCi/B,QAASA,EAA2B,CAACC,CAAD,CAAS,CAC3CtlB,CAAA,CAAWslB,CADgC,KAE5BlsD,CAF4B,CAEvBmsD,CAFuB,CAEdC,CAFc,CAELC,CAGtC,IAAI,CAAAjpD,CAAA,CAAYwjC,CAAZ,CAAJ,CAAA,CAEA,GAAKnoC,CAAA,CAASmoC,CAAT,CAAL,CAKO,GAAIxnC,EAAA,CAAYwnC,CAAZ,CAAJ,CAgBL,IAfIG,CAeKtmC,GAfQ6rD,CAeR7rD,GAbPsmC,CAEA,CAFWulB,CAEX,CADAC,CACA,CADYxlB,CAAArnC,OACZ,CAD8B,CAC9B,CAAA8sD,CAAA,EAWO/rD,EARTgsD,CAQShsD,CARGmmC,CAAAlnC,OAQHe,CANL8rD,CAMK9rD,GANSgsD,CAMThsD,GAJP+rD,CAAA,EACA,CAAAzlB,CAAArnC,OAAA,CAAkB6sD,CAAlB,CAA8BE,CAGvBhsD,EAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBgsD,CAApB,CAA+BhsD,CAAA,EAA/B,CACE4rD,CAKA,CALUtlB,CAAA,CAAStmC,CAAT,CAKV,CAJA2rD,CAIA,CAJUxlB,CAAA,CAASnmC,CAAT,CAIV,CADA0rD,CACA,CADWE,CACX,GADuBA,CACvB,EADoCD,CACpC,GADgDA,CAChD,CAAKD,CAAL,EAAiBE,CAAjB,GAA6BD,CAA7B,GACEI,CAAA,EACA,CAAAzlB,CAAA,CAAStmC,CAAT,CAAA,CAAc2rD,CAFhB,CAtBG,KA2BA,CACDrlB,CAAJ,GAAiB2lB,CAAjB,GAEE3lB,CAEA,CAFW2lB,CAEX,CAF4B,EAE5B,CADAH,CACA,CADY,CACZ,CAAAC,CAAA,EAJF,CAOAC,EAAA,CAAY,CACZ,KAAKzsD,CAAL,GAAY4mC,EAAZ,CACM1mC,EAAAC,KAAA,CAAoBymC,CAApB,CAA8B5mC,CAA9B,CAAJ,GACEysD,CAAA,EAIA,CAHAL,CAGA,CAHUxlB,CAAA,CAAS5mC,CAAT,CAGV,CAFAqsD,CAEA,CAFUtlB,CAAA,CAAS/mC,CAAT,CAEV,CAAIA,CAAJ,GAAW+mC,EAAX,EAEEolB,CACA,CADWE,CACX,GADuBA,CACvB,EADoCD,CACpC,GADgDA,CAChD,CAAKD,CAAL,EAAiBE,CAAjB,GAA6BD,CAA7B,GACEI,CAAA,EACA,CAAAzlB,CAAA,CAAS/mC,CAAT,CAAA,CAAgBosD,CAFlB,CAHF,GAQEG,CAAA,EAEA,CADAxlB,CAAA,CAAS/mC,CAAT,CACA,CADgBosD,CAChB,CAAAI,CAAA,EAVF,CALF,CAmBF,IAAID,CAAJ,CAAgBE,CAAhB,CAGE,IAAKzsD,CAAL,GADAwsD,EAAA,EACYzlB;AAAAA,CAAZ,CACO7mC,EAAAC,KAAA,CAAoBymC,CAApB,CAA8B5mC,CAA9B,CAAL,GACEusD,CAAA,EACA,CAAA,OAAOxlB,CAAA,CAAS/mC,CAAT,CAFT,CAjCC,CAhCP,IACM+mC,EAAJ,GAAiBH,CAAjB,GACEG,CACA,CADWH,CACX,CAAA4lB,CAAA,EAFF,CAuEF,OAAOA,EA1EP,CAL2C,CArB7CP,CAAA9G,OAAA,CAAqCppC,CAAA,CAAO1c,CAAP,CAAAqpC,QAErCujB,EAAAnjB,UAAA,CAAwC,CAACmjB,CAAA9G,OAEzC,KAAI39C,EAAO,IAAX,CAEIo/B,CAFJ,CAKIG,CALJ,CAOI4lB,CAPJ,CASIC,EAAuC,CAAvCA,CAAqB5/B,CAAAttB,OATzB,CAUI8sD,EAAiB,CAVrB,CAWIK,EAAiB9wC,CAAA,CAAO1c,CAAP,CAAY4sD,CAAZ,CAXrB,CAYIK,EAAgB,EAZpB,CAaII,EAAiB,EAbrB,CAcII,EAAU,CAAA,CAdd,CAeIP,EAAY,CAiHhB,OAAO,KAAA1oD,OAAA,CAAYgpD,CAAZ,CA7BPE,QAA+B,EAAG,CAC5BD,CAAJ,EACEA,CACA,CADU,CAAA,CACV,CAAA9/B,CAAA,CAAS4Z,CAAT,CAAmBA,CAAnB,CAA6Bp/B,CAA7B,CAFF,EAIEwlB,CAAA,CAAS4Z,CAAT,CAAmB+lB,CAAnB,CAAiCnlD,CAAjC,CAIF,IAAIolD,CAAJ,CACE,GAAKnuD,CAAA,CAASmoC,CAAT,CAAL,CAGO,GAAIxnC,EAAA,CAAYwnC,CAAZ,CAAJ,CAA2B,CAChC+lB,CAAA,CAAmBppD,KAAJ,CAAUqjC,CAAAlnC,OAAV,CACf,KAAS,IAAAe,EAAI,CAAb,CAAgBA,CAAhB,CAAoBmmC,CAAAlnC,OAApB,CAAqCe,CAAA,EAArC,CACEksD,CAAA,CAAalsD,CAAb,CAAA,CAAkBmmC,CAAA,CAASnmC,CAAT,CAHY,CAA3B,IAOL,KAAST,CAAT,GADA2sD,EACgB/lB,CADD,EACCA,CAAAA,CAAhB,CACM1mC,EAAAC,KAAA,CAAoBymC,CAApB,CAA8B5mC,CAA9B,CAAJ,GACE2sD,CAAA,CAAa3sD,CAAb,CADF,CACsB4mC,CAAA,CAAS5mC,CAAT,CADtB,CAXJ,KAEE2sD,EAAA,CAAe/lB,CAZa,CA6B3B,CAvIiC,CAjX1B,CA8iBhB+W,QAASA,QAAQ,EAAG,CAAA,IACdqP,CADc,CACPpsD,CADO,CACAuqD,CADA,CACM1jD,CADN,CACUiG,CADV,CAEdu/C,CAFc,CAGdC,CAHc,CAGPC,EAAM14B,CAHC,CAIRkW,CAJQ,CAICvlB,EAASgoC,CAAA1tD,OAAA,CAAoBuc,CAApB,CAAiC,IAJ3C,CAKdoxC,EAAW,EALG,CAMdC,CANc,CAMNC,CAEZhD,EAAA,CAAW,SAAX,CAEA9wC,EAAAoV,iBAAA,EAEI,KAAJ,GAAa5S,CAAb,EAA4C,IAA5C,GAA2B4tC,CAA3B,GAGEpwC,CAAAuV,MAAAM,OAAA,CAAsBu6B,CAAtB,CACA;AAAAe,CAAA,EAJF,CAOAhB,EAAA,CAAiB,IAEjB,GAAG,CACDsD,CAAA,CAAQ,CAAA,CACRviB,EAAA,CAAUvlB,CAKV,KAASooC,CAAT,CAA8B,CAA9B,CAAiCA,CAAjC,CAAsDJ,CAAA1tD,OAAtD,CAAyE8tD,CAAA,EAAzE,CAA+F,CAC7F,GAAI,CACFD,CAEA,CAFYH,CAAA,CAAWI,CAAX,CAEZ,CADA/lD,CACA,CADK8lD,CAAA9lD,GACL,CAAAA,CAAA,CAAG8lD,CAAA7gD,MAAH,CAAoB6gD,CAAA1kC,OAApB,CAHE,CAIF,MAAO9e,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAGZ6/C,CAAA,CAAiB,IAR4E,CAU/FwD,CAAA1tD,OAAA,CAAoB,CAEpB,EAAA,CACA,EAAG,CACD,GAAKutD,CAAL,CAAgB,CAACtiB,CAAA+e,YAAjB,EAAwC/e,CAAAse,WAAxC,CAGE,IADAgE,CAAA5B,mBACA,CAD8B4B,CAAAvtD,OAC9B,CAAOutD,CAAA5B,mBAAA,EAAP,CAAA,CACE,GAAI,CAIF,GAHA2B,CAGA,CAHQC,CAAA,CAASA,CAAA5B,mBAAT,CAGR,CAEE,GADA39C,CACI,CADEs/C,CAAAt/C,IACF,EAAC9M,CAAD,CAAS8M,CAAA,CAAIi9B,CAAJ,CAAT,KAA4BwgB,CAA5B,CAAmC6B,CAAA7B,KAAnC,GACE,EAAA6B,CAAA5B,GAAA,CACIzkD,EAAA,CAAO/F,CAAP,CAAcuqD,CAAd,CADJ,CAEKtiD,CAAA,CAAYjI,CAAZ,CAFL,EAE2BiI,CAAA,CAAYsiD,CAAZ,CAF3B,CADN,CAIE+B,CAKA,CALQ,CAAA,CAKR,CAJAtD,CAIA,CAJiBoD,CAIjB,CAHAA,CAAA7B,KAGA,CAHa6B,CAAA5B,GAAA,CAAWpmD,EAAA,CAAKpE,CAAL,CAAY,IAAZ,CAAX,CAA+BA,CAG5C,CAFA6G,CAEA,CAFKulD,CAAAvlD,GAEL,CADAA,CAAA,CAAG7G,CAAH,CAAYuqD,CAAD,GAAUR,CAAV,CAA0B/pD,CAA1B,CAAkCuqD,CAA7C,CAAoDxgB,CAApD,CACA,CAAU,CAAV,CAAIwiB,CAAJ,GACEG,CAEA,CAFS,CAET,CAFaH,CAEb,CADKE,CAAA,CAASC,CAAT,CACL,GADuBD,CAAA,CAASC,CAAT,CACvB,CAD0C,EAC1C,EAAAD,CAAA,CAASC,CAAT,CAAAloD,KAAA,CAAsB,CACpBqoD,IAAKxtD,CAAA,CAAW+sD,CAAAzW,IAAX,CAAA,CAAwB,MAAxB,EAAkCyW,CAAAzW,IAAAhrC,KAAlC,EAAoDyhD,CAAAzW,IAAApzC,SAAA,EAApD,EAA4E6pD,CAAAzW,IAD7D,CAEpB3qB,OAAQhrB,CAFY,CAGpBirB,OAAQs/B,CAHY,CAAtB,CAHF,CATF,KAkBO,IAAI6B,CAAJ,GAAcpD,CAAd,CAA8B,CAGnCsD,CAAA;AAAQ,CAAA,CACR,OAAM,CAJ6B,CAxBrC,CA+BF,MAAOnjD,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAWhB,GAAM,EAAA2jD,CAAA,CAAS,CAAC/iB,CAAA+e,YAAV,EAAiC/e,CAAA4e,gBAAjC,EAA4D5e,CAAAwe,YAA5D,EACDxe,CADC,GACWvlB,CADX,EACqBulB,CAAAue,cADrB,CAAN,CAEE,IAAA,CAAOve,CAAP,GAAmBvlB,CAAnB,EAA+B,EAAAsoC,CAAA,CAAO/iB,CAAAue,cAAP,CAA/B,CAAA,CACEve,CAAA,CAAUA,CAAAnS,QAlDb,CAAH,MAqDUmS,CArDV,CAqDoB+iB,CArDpB,CAyDA,KAAKR,CAAL,EAAcE,CAAA1tD,OAAd,GAAsC,CAAAytD,CAAA,EAAtC,CAEE,KAykBNlxC,EAAAs1B,QAzkBY,CAykBS,IAzkBT,CAAAoY,CAAA,CAAiB,QAAjB,CAGFl1B,CAHE,CAGG44B,CAHH,CAAN,CA/ED,CAAH,MAqFSH,CArFT,EAqFkBE,CAAA1tD,OArFlB,CA0FA,KA8jBFuc,CAAAs1B,QA9jBE,CA8jBmB,IA9jBnB,CAAOoc,CAAP,CAAiCC,CAAAluD,OAAjC,CAAA,CACE,GAAI,CACFkuD,CAAA,CAAgBD,CAAA,EAAhB,CAAA,EADE,CAEF,MAAO5jD,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAId6jD,CAAAluD,OAAA,CAAyBiuD,CAAzB,CAAmD,CAInDl0C,EAAAoV,iBAAA,EA1HkB,CA9iBJ,CAstBhBg/B,SAAUA,QAAQ,EAAG,CACnB,IAAAnE,YAAA,CAAmB,CAAA,CADA,CAttBL,CAmvBhBoE,aAAcA,QAAQ,EAAG,CACvB,MAAO,KAAApE,YADgB,CAnvBT,CAiwBhBqE,QAASA,QAAQ,EAAG,CAClB,IAAArE,YAAA,CAAmB,CAAA,CADD,CAjwBJ,CAuyBhBv6C,SAAUA,QAAQ,EAAG,CAEnB,GAAI80B,CAAA,IAAAA,YAAJ,CAAA,CACA,IAAIvhC;AAAS,IAAA81B,QAEb,KAAAmkB,WAAA,CAAgB,UAAhB,CACA,KAAA1Y,YAAA,CAAmB,CAAA,CAEf,KAAJ,GAAahoB,CAAb,EAEExC,CAAAiV,uBAAA,EAGF+7B,EAAA,CAAuB,IAAvB,CAA6B,CAAC,IAAAlB,gBAA9B,CACA,KAASyE,IAAAA,CAAT,GAAsB,KAAA1E,gBAAtB,CACEoB,CAAA,CAAuB,IAAvB,CAA6B,IAAApB,gBAAA,CAAqB0E,CAArB,CAA7B,CAA8DA,CAA9D,CAKEtrD,EAAJ,EAAcA,CAAAymD,YAAd,GAAqC,IAArC,GAA2CzmD,CAAAymD,YAA3C,CAAgE,IAAAD,cAAhE,CACIxmD,EAAJ,EAAcA,CAAA0mD,YAAd,GAAqC,IAArC,GAA2C1mD,CAAA0mD,YAA3C,CAAgE,IAAAgB,cAAhE,CACI,KAAAA,cAAJ,GAAwB,IAAAA,cAAAlB,cAAxB,CAA2D,IAAAA,cAA3D,CACI,KAAAA,cAAJ,GAAwB,IAAAA,cAAAkB,cAAxB,CAA2D,IAAAA,cAA3D,CAGA,KAAAj7C,SAAA,CAAgB,IAAAwuC,QAAhB,CAA+B,IAAA/wC,OAA/B;AAA6C,IAAAhJ,WAA7C,CAA+D,IAAA0tC,YAA/D,CAAkFzuC,CAClF,KAAAw8B,IAAA,CAAW,IAAAx7B,OAAX,CAAyB,IAAAuzC,YAAzB,CAA4C6W,QAAQ,EAAG,CAAE,MAAOprD,EAAT,CACvD,KAAAwmD,YAAA,CAAmB,EAGnB,KAAAH,cAAA,CAAqB,IACrBiB,EAAA,CAAa,IAAb,CA9BA,CAFmB,CAvyBL,CAs2BhB+D,MAAOA,QAAQ,CAAC/N,CAAD,CAAOt3B,CAAP,CAAe,CAC5B,MAAO9M,EAAA,CAAOokC,CAAP,CAAA,CAAa,IAAb,CAAmBt3B,CAAnB,CADqB,CAt2Bd,CAw4BhBjlB,WAAYA,QAAQ,CAACu8C,CAAD,CAAOt3B,CAAP,CAAe,CAG5B5M,CAAAs1B,QAAL,EAA4B6b,CAAA1tD,OAA5B,EACE+Z,CAAAuV,MAAA,CAAe,QAAQ,EAAG,CACpBo+B,CAAA1tD,OAAJ,EACEuc,CAAA0hC,QAAA,EAFsB,CAA1B,CAIG,IAJH,CAIS,YAJT,CAOFyP,EAAAhoD,KAAA,CAAgB,CAACsH,MAAO,IAAR,CAAcjF,GAAIsU,CAAA,CAAOokC,CAAP,CAAlB,CAAgCt3B,OAAQA,CAAxC,CAAhB,CAXiC,CAx4BnB,CAs5BhBgf,aAAcA,QAAQ,CAACpgC,CAAD,CAAK,CACzBmmD,CAAAxoD,KAAA,CAAqBqC,CAArB,CADyB,CAt5BX,CAs8BhBmF,OAAQA,QAAQ,CAACuzC,CAAD,CAAO,CACrB,GAAI,CACFoK,CAAA,CAAW,QAAX,CACA,IAAI,CACF,MAAO,KAAA2D,MAAA,CAAW/N,CAAX,CADL,CAAJ,OAEU,CAgRdlkC,CAAAs1B,QAAA,CAAqB,IAhRP,CAJR,CAOF,MAAOxnC,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CAPZ,OASU,CACR,GAAI,CACFkS,CAAA0hC,QAAA,EADE,CAEF,MAAO5zC,CAAP,CAAU,CAGV,KAFAoQ,EAAA,CAAkBpQ,CAAlB,CAEMA;AAAAA,CAAN,CAHU,CAHJ,CAVW,CAt8BP,CA4+BhBunC,YAAaA,QAAQ,CAAC6O,CAAD,CAAO,CAQ1BgO,QAASA,EAAqB,EAAG,CAC/BzhD,CAAAwhD,MAAA,CAAY/N,CAAZ,CAD+B,CAPjC,IAAIzzC,EAAQ,IACRyzC,EAAJ,EACE0K,CAAAzlD,KAAA,CAAqB+oD,CAArB,CAEFhO,EAAA,CAAOpkC,CAAA,CAAOokC,CAAP,CACP2K,EAAA,EAN0B,CA5+BZ,CAohChBzrB,IAAKA,QAAQ,CAAC9zB,CAAD,CAAOyhB,CAAP,CAAiB,CAC5B,IAAIohC,EAAiB,IAAA/E,YAAA,CAAiB99C,CAAjB,CAChB6iD,EAAL,GACE,IAAA/E,YAAA,CAAiB99C,CAAjB,CADF,CAC2B6iD,CAD3B,CAC4C,EAD5C,CAGAA,EAAAhpD,KAAA,CAAoB4nB,CAApB,CAEA,KAAI2d,EAAU,IACd,GACOA,EAAA2e,gBAAA,CAAwB/9C,CAAxB,CAGL,GAFEo/B,CAAA2e,gBAAA,CAAwB/9C,CAAxB,CAEF,CAFkC,CAElC,EAAAo/B,CAAA2e,gBAAA,CAAwB/9C,CAAxB,CAAA,EAJF,OAKUo/B,CALV,CAKoBA,CAAAnS,QALpB,CAOA,KAAIhxB,EAAO,IACX,OAAO,SAAQ,EAAG,CAChB,IAAI6mD,EAAkBD,CAAAtpD,QAAA,CAAuBkoB,CAAvB,CACG,GAAzB,GAAIqhC,CAAJ,GAIE,OAAOD,CAAA,CAAeC,CAAf,CACP,CAAA3D,CAAA,CAAuBljD,CAAvB,CAA6B,CAA7B,CAAgC+D,CAAhC,CALF,CAFgB,CAhBU,CAphCd,CAukChB+iD,MAAOA,QAAQ,CAAC/iD,CAAD,CAAOub,CAAP,CAAa,CAAA,IACtBrd,EAAQ,EADc,CAEtB2kD,CAFsB,CAGtB1hD,EAAQ,IAHc,CAItBkY,EAAkB,CAAA,CAJI,CAKtBV,EAAQ,CACN3Y,KAAMA,CADA,CAENgjD,YAAa7hD,CAFP,CAGNkY,gBAAiBA,QAAQ,EAAG,CAACA,CAAA,CAAkB,CAAA,CAAnB,CAHtB,CAIN24B,eAAgBA,QAAQ,EAAG,CACzBr5B,CAAAG,iBAAA;AAAyB,CAAA,CADA,CAJrB,CAONA,iBAAkB,CAAA,CAPZ,CALc,CActBmqC,EAAepnD,EAAA,CAAO,CAAC8c,CAAD,CAAP,CAAgB9hB,SAAhB,CAA2B,CAA3B,CAdO,CAetB3B,CAfsB,CAenBf,CAEP,GAAG,CACD0uD,CAAA,CAAiB1hD,CAAA28C,YAAA,CAAkB99C,CAAlB,CAAjB,EAA4C9B,CAC5Cya,EAAAgmC,aAAA,CAAqBx9C,CAChBjM,EAAA,CAAI,CAAT,KAAYf,CAAZ,CAAqB0uD,CAAA1uD,OAArB,CAA4Ce,CAA5C,CAAgDf,CAAhD,CAAwDe,CAAA,EAAxD,CAGE,GAAK2tD,CAAA,CAAe3tD,CAAf,CAAL,CAMA,GAAI,CAEF2tD,CAAA,CAAe3tD,CAAf,CAAAmH,MAAA,CAAwB,IAAxB,CAA8B4mD,CAA9B,CAFE,CAGF,MAAOzkD,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CATZ,IACEqkD,EAAArpD,OAAA,CAAsBtE,CAAtB,CAAyB,CAAzB,CAEA,CADAA,CAAA,EACA,CAAAf,CAAA,EAWJ,IAAIklB,CAAJ,CACE,KAGFlY,EAAA,CAAQA,CAAA8rB,QAxBP,CAAH,MAyBS9rB,CAzBT,CA2BAwX,EAAAgmC,aAAA,CAAqB,IAErB,OAAOhmC,EA9CmB,CAvkCZ,CA8oChBy4B,WAAYA,QAAQ,CAACpxC,CAAD,CAAOub,CAAP,CAAa,CAAA,IAE3B6jB,EADSvlB,IADkB,CAG3BsoC,EAFStoC,IADkB,CAI3BlB,EAAQ,CACN3Y,KAAMA,CADA,CAENgjD,YALOnpC,IAGD,CAGNm4B,eAAgBA,QAAQ,EAAG,CACzBr5B,CAAAG,iBAAA,CAAyB,CAAA,CADA,CAHrB,CAMNA,iBAAkB,CAAA,CANZ,CASZ,IAAK,CAZQe,IAYRkkC,gBAAA,CAAuB/9C,CAAvB,CAAL,CAAmC,MAAO2Y,EAM1C,KAnB+B,IAe3BsqC,EAAepnD,EAAA,CAAO,CAAC8c,CAAD,CAAP,CAAgB9hB,SAAhB,CAA2B,CAA3B,CAfY,CAgBhB3B,CAhBgB,CAgBbf,CAGlB,CAAQirC,CAAR,CAAkB+iB,CAAlB,CAAA,CAAyB,CACvBxpC,CAAAgmC,aAAA,CAAqBvf,CACrBV,EAAA,CAAYU,CAAA0e,YAAA,CAAoB99C,CAApB,CAAZ;AAAyC,EACpC9K,EAAA,CAAI,CAAT,KAAYf,CAAZ,CAAqBuqC,CAAAvqC,OAArB,CAAuCe,CAAvC,CAA2Cf,CAA3C,CAAmDe,CAAA,EAAnD,CAEE,GAAKwpC,CAAA,CAAUxpC,CAAV,CAAL,CAOA,GAAI,CACFwpC,CAAA,CAAUxpC,CAAV,CAAAmH,MAAA,CAAmB,IAAnB,CAAyB4mD,CAAzB,CADE,CAEF,MAAOzkD,CAAP,CAAU,CACVoQ,CAAA,CAAkBpQ,CAAlB,CADU,CATZ,IACEkgC,EAAAllC,OAAA,CAAiBtE,CAAjB,CAAoB,CAApB,CAEA,CADAA,CAAA,EACA,CAAAf,CAAA,EAgBJ,IAAM,EAAAguD,CAAA,CAAS/iB,CAAA2e,gBAAA,CAAwB/9C,CAAxB,CAAT,EAA0Co/B,CAAAwe,YAA1C,EACDxe,CADC,GA1CKvlB,IA0CL,EACqBulB,CAAAue,cADrB,CAAN,CAEE,IAAA,CAAOve,CAAP,GA5CSvlB,IA4CT,EAA+B,EAAAsoC,CAAA,CAAO/iB,CAAAue,cAAP,CAA/B,CAAA,CACEve,CAAA,CAAUA,CAAAnS,QA3BS,CAgCzBtU,CAAAgmC,aAAA,CAAqB,IACrB,OAAOhmC,EApDwB,CA9oCjB,CAssClB,KAAIjI,EAAa,IAAIquC,CAArB,CAGI8C,EAAanxC,CAAAwyC,aAAbrB,CAAuC,EAH3C,CAIIQ,EAAkB3xC,CAAAyyC,kBAAlBd,CAAiD,EAJrD,CAKI/C,EAAkB5uC,CAAA0yC,kBAAlB9D,CAAiD,EALrD,CAOI8C,EAA0B,CAE9B,OAAO1xC,EA/zCyC,CADtC,CA5BgB,CA06C9B9I,QAASA,GAAqB,EAAG,CAAA,IAE3B4gB,EAAkC,qCAFP,CAG7BI,EAAmC,4CAsBrC,KAAAJ,gCAAA,CAAuCC,QAAQ,CAACC,CAAD,CAAS,CACtD,MAAIv1B,EAAA,CAAUu1B,CAAV,CAAJ;CACEF,CACO,CAD2BE,CAC3B,CAAA,IAFT,EAIOF,CAL+C,CA+BxD,KAAAI,iCAAA,CAAwCC,QAAQ,CAACH,CAAD,CAAS,CACvD,MAAIv1B,EAAA,CAAUu1B,CAAV,CAAJ,EACEE,CACO,CAD4BF,CAC5B,CAAA,IAFT,EAIOE,CALgD,CAQzD,KAAA3O,KAAA,CAAYC,QAAQ,EAAG,CACrB,MAAOmpC,SAAoB,CAACC,CAAD,CAAMC,CAAN,CAAkB,CAE3C,IAAIC,EAAQD,CAAA,CAAa36B,CAAb,CAAgDJ,CAA5D,CACIi7B,EAAgB/gC,EAAA,CAAW4gC,CAAX,EAAkBA,CAAA7uC,KAAA,EAAlB,CAAA4N,KACpB,OAAsB,EAAtB,GAAIohC,CAAJ,EAA6BA,CAAA3oD,MAAA,CAAoB0oD,CAApB,CAA7B,CAGOF,CAHP,CACS,SADT,CACqBG,CALsB,CADxB,CAhEQ,CA6HjCC,QAASA,GAAa,CAACC,CAAD,CAAU,CAC9B,GAAgB,MAAhB,GAAIA,CAAJ,CACE,MAAOA,EACF,IAAI1vD,CAAA,CAAS0vD,CAAT,CAAJ,CAAuB,CAK5B,GAA8B,EAA9B,CAAIA,CAAApqD,QAAA,CAAgB,KAAhB,CAAJ,CACE,KAAMqqD,GAAA,CAAW,QAAX,CACsDD,CADtD,CAAN,CAGFA,CAAA,CAAUE,EAAA,CAAgBF,CAAhB,CAAAxmD,QAAA,CACY,WADZ,CACyB,IADzB,CAAAA,QAAA,CAEY,OAFZ,CAEqB,YAFrB,CAGV,OAAO,KAAI7G,MAAJ,CAAW,GAAX,CAAiBqtD,CAAjB,CAA2B,GAA3B,CAZqB,CAavB,GAAIttD,EAAA,CAASstD,CAAT,CAAJ,CAIL,MAAO,KAAIrtD,MAAJ,CAAW,GAAX,CAAiBqtD,CAAAjqD,OAAjB,CAAkC,GAAlC,CAEP,MAAMkqD,GAAA,CAAW,UAAX,CAAN,CAtB4B,CA4BhCE,QAASA,GAAc,CAACC,CAAD,CAAW,CAChC,IAAIC,EAAmB,EACnB7wD,EAAA,CAAU4wD,CAAV,CAAJ,EACEzvD,CAAA,CAAQyvD,CAAR,CAAkB,QAAQ,CAACJ,CAAD,CAAU,CAClCK,CAAAnqD,KAAA,CAAsB6pD,EAAA,CAAcC,CAAd,CAAtB,CADkC,CAApC,CAIF;MAAOK,EAPyB,CAsGlC7yC,QAASA,GAAoB,EAAG,CAC9B,IAAAkZ,aAAA,CAAoBA,CADU,KAI1B45B,EAAyB,CAAC,MAAD,CAJC,CAK1BC,EAAwB,EA0B5B,KAAAD,uBAAA,CAA8BE,QAAQ,CAAC9uD,CAAD,CAAQ,CACxCwB,SAAA1C,OAAJ,GACE8vD,CADF,CAC2BH,EAAA,CAAezuD,CAAf,CAD3B,CAGA,OAAO4uD,EAJqC,CAkB9C7vD,OAAAu0B,eAAA,CAAsB,IAAtB,CAA4B,sBAA5B,CAAoD,CAClDxmB,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAA8hD,uBADO,CADkC,CAIlDtpD,IAAKA,QAAQ,CAACtF,CAAD,CAAQ,CACnB,IAAA4uD,uBAAA,CAA8B5uD,CADX,CAJ6B,CAApD,CAkCA,KAAA6uD,sBAAA,CAA6BE,QAAQ,CAAC/uD,CAAD,CAAQ,CACvCwB,SAAA1C,OAAJ,GACE+vD,CADF,CAC0BJ,EAAA,CAAezuD,CAAf,CAD1B,CAGA,OAAO6uD,EAJoC,CAkB7C9vD,OAAAu0B,eAAA,CAAsB,IAAtB,CAA4B,sBAA5B,CAAoD,CAClDxmB,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAA+hD,sBADO,CADkC,CAIlDvpD,IAAKA,QAAQ,CAACtF,CAAD,CAAQ,CACnB,IAAA6uD,sBAAA;AAA6B7uD,CADV,CAJ6B,CAApD,CASA,KAAA4kB,KAAA,CAAY,CAAC,WAAD,CAAc,eAAd,CAA+B,QAAQ,CAAC+D,CAAD,CAAYrW,CAAZ,CAA2B,CAW5E08C,QAASA,EAAQ,CAACV,CAAD,CAAUhW,CAAV,CAAqB,CACpC,IAAA,CAAgB,OAAhB,GAAIgW,CAAJ,EACS,CADT,CACS,EAAA,CAAA,CAAA,CAAA,EAAA,CADT,IA0nDA5wD,CAAAyJ,SAAA8nD,QAAJ,CACE,CADF,CACSvxD,CAAAyJ,SAAA8nD,QADT,EAKKC,EAQL,GAPEA,EAKA,CALqBxxD,CAAAyJ,SAAAkX,cAAA,CAA8B,GAA9B,CAKrB,CAJA6wC,EAAAliC,KAIA,CAJ0B,GAI1B,CAAAkiC,EAAA,CAAqBA,EAAA/tD,UAAA,CAA6B,CAAA,CAA7B,CAEvB,EAAA,CAAA,CAAO+tD,EAAAliC,KAbP,CAznDa,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CADT,EAIS,CAJT,CAIS,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAJT,OAAA,EADoC,CA+BtCmiC,QAASA,EAAkB,CAACC,CAAD,CAAO,CAChC,IAAIC,EAAaA,QAA+B,CAACC,CAAD,CAAe,CAC7D,IAAAC,qBAAA,CAA4BC,QAAQ,EAAG,CACrC,MAAOF,EAD8B,CADsB,CAK3DF,EAAJ,GACEC,CAAAxpC,UADF,CACyB,IAAIupC,CAD7B,CAGAC,EAAAxpC,UAAA9kB,QAAA,CAA+B0uD,QAAmB,EAAG,CACnD,MAAO,KAAAF,qBAAA,EAD4C,CAGrDF,EAAAxpC,UAAAtjB,SAAA,CAAgCmtD,QAAoB,EAAG,CACrD,MAAO,KAAAH,qBAAA,EAAAhtD,SAAA,EAD8C,CAGvD;MAAO8sD,EAfyB,CAxClC,IAAIM,EAAgBA,QAAsB,CAAC3mD,CAAD,CAAO,CAC/C,KAAMulD,GAAA,CAAW,QAAX,CAAN,CAD+C,CAI7C5lC,EAAAF,IAAA,CAAc,WAAd,CAAJ,GACEknC,CADF,CACkBhnC,CAAA7b,IAAA,CAAc,WAAd,CADlB,CAN4E,KA4DxE8iD,EAAyBT,CAAA,EA5D+C,CA6DxEU,EAAS,EAEbA,EAAA,CAAO76B,CAAAC,KAAP,CAAA,CAA4Bk6B,CAAA,CAAmBS,CAAnB,CAC5BC,EAAA,CAAO76B,CAAAE,IAAP,CAAA,CAA2Bi6B,CAAA,CAAmBS,CAAnB,CAC3BC,EAAA,CAAO76B,CAAAI,UAAP,CAAA,CAAiC+5B,CAAA,CAAmBS,CAAnB,CACjCC,EAAA,CAAO76B,CAAAG,IAAP,CAAA,CAA2Bg6B,CAAA,CAAmBU,CAAA,CAAO76B,CAAAI,UAAP,CAAnB,CAC3By6B,EAAA,CAAO76B,CAAA86B,GAAP,CAAA,CAA0BX,CAAA,CAAmBS,CAAnB,CAC1BC,EAAA,CAAO76B,CAAAK,aAAP,CAAA,CAAoC85B,CAAA,CAAmBU,CAAA,CAAO76B,CAAAG,IAAP,CAAnB,CA8IpC,OAAO,CAAE46B,QApHTA,QAAgB,CAACpqD,CAAD,CAAO2pD,CAAP,CAAqB,CACnC,IAAIU,EAAeH,CAAAvwD,eAAA,CAAsBqG,CAAtB,CAAA,CAA8BkqD,CAAA,CAAOlqD,CAAP,CAA9B,CAA6C,IAChE,IAAKqqD,CAAAA,CAAL,CACE,KAAMzB,GAAA,CAAW,UAAX,CAEF5oD,CAFE,CAEI2pD,CAFJ,CAAN,CAIF,GAAqB,IAArB,GAAIA,CAAJ,EAA6B9sD,CAAA,CAAY8sD,CAAZ,CAA7B,EAA2E,EAA3E,GAA0DA,CAA1D,CACE,MAAOA,EAIT,IAA4B,QAA5B,GAAI,MAAOA,EAAX,CACE,KAAMf,GAAA,CAAW,OAAX,CAEF5oD,CAFE,CAAN,CAIF,MAAO,KAAIqqD,CAAJ,CAAgBV,CAAhB,CAjB4B,CAoH9B,CACEnqB,WAtCTA,QAAmB,CAACx/B,CAAD,CAAOsqD,CAAP,CAAqB,CACtC,GAAqB,IAArB,GAAIA,CAAJ,EAA6BztD,CAAA,CAAYytD,CAAZ,CAA7B,EAA2E,EAA3E,GAA0DA,CAA1D,CACE,MAAOA,EAET,KAAIjrD,EAAe6qD,CAAAvwD,eAAA,CAAsBqG,CAAtB,CAAA;AAA8BkqD,CAAA,CAAOlqD,CAAP,CAA9B,CAA6C,IAGhE,IAAIX,CAAJ,EAAmBirD,CAAnB,WAA2CjrD,EAA3C,CACE,MAAOirD,EAAAV,qBAAA,EAKLlwD,EAAA,CAAW4wD,CAAAV,qBAAX,CAAJ,GACEU,CADF,CACiBA,CAAAV,qBAAA,EADjB,CAKA,IAAI5pD,CAAJ,GAAaqvB,CAAAI,UAAb,EAAuCzvB,CAAvC,GAAgDqvB,CAAAG,IAAhD,CAEE,MAAO7iB,EAAA,CAAc29C,CAAA1tD,SAAA,EAAd,CAAuCoD,CAAvC,GAAgDqvB,CAAAI,UAAhD,CACF,IAAIzvB,CAAJ,GAAaqvB,CAAAK,aAAb,CAAwC,CA7K3CijB,IAAAA,EAAYjrB,EAAA,CA8KmB4iC,CA9KR1tD,SAAA,EAAX,CAAZ+1C,CACAz4C,CADAy4C,CACGnpB,CADHmpB,CACM4X,EAAU,CAAA,CAEfrwD,EAAA,CAAI,CAAT,KAAYsvB,CAAZ,CAAgBy/B,CAAA9vD,OAAhB,CAA+Ce,CAA/C,CAAmDsvB,CAAnD,CAAsDtvB,CAAA,EAAtD,CACE,GAAImvD,CAAA,CAASJ,CAAA,CAAuB/uD,CAAvB,CAAT,CAAoCy4C,CAApC,CAAJ,CAAoD,CAClD4X,CAAA,CAAU,CAAA,CACV,MAFkD,CAKtD,GAAIA,CAAJ,CAEE,IAAKrwD,CAAO,CAAH,CAAG,CAAAsvB,CAAA,CAAI0/B,CAAA/vD,OAAhB,CAA8Ce,CAA9C,CAAkDsvB,CAAlD,CAAqDtvB,CAAA,EAArD,CACE,GAAImvD,CAAA,CAASH,CAAA,CAAsBhvD,CAAtB,CAAT,CAAmCy4C,CAAnC,CAAJ,CAAmD,CACjD4X,CAAA,CAAU,CAAA,CACV,MAFiD,CAkKrD,GA5JKA,CA4JL,CACE,MAAOD,EAEP,MAAM1B,GAAA,CAAW,UAAX,CAEF0B,CAAA1tD,SAAA,EAFE,CAAN,CAJ2C,CAQxC,GAAIoD,CAAJ,GAAaqvB,CAAAC,KAAb,CAEL,MAAO06B,EAAA,CAAcM,CAAd,CAGT,MAAM1B,GAAA,CAAW,QAAX,CAAN,CAlCsC,CAqCjC,CAEExtD,QAhFTA,QAAgB,CAACkvD,CAAD,CAAe,CAC7B,MAAIA,EAAJ,WAA4BL,EAA5B,CACSK,CAAAV,qBAAA,EADT;AAGSU,CAJoB,CA8ExB,CAlNqE,CAAlE,CA9GkB,CA4nBhCr0C,QAASA,GAAY,EAAG,CACtB,IAAI8X,EAAU,CAAA,CAad,KAAAA,QAAA,CAAey8B,QAAQ,CAACnwD,CAAD,CAAQ,CACzBwB,SAAA1C,OAAJ,GACE40B,CADF,CACY,CAAE1zB,CAAAA,CADd,CAGA,OAAO0zB,EAJsB,CAsD/B,KAAA9O,KAAA,CAAY,CAAC,QAAD,CAAW,cAAX,CAA2B,QAAQ,CACjCzJ,CADiC,CACvBU,CADuB,CACT,CAIpC,GAAI6X,CAAJ,EAAsB,CAAtB,CAAejV,EAAf,CACE,KAAM8vC,GAAA,CAAW,UAAX,CAAN,CAMF,IAAI6B,EAAMx+C,EAAA,CAAYojB,CAAZ,CAaVo7B,EAAAC,UAAA,CAAgBC,QAAQ,EAAG,CACzB,MAAO58B,EADkB,CAG3B08B,EAAAL,QAAA,CAAcl0C,CAAAk0C,QACdK,EAAAjrB,WAAA,CAAiBtpB,CAAAspB,WACjBirB,EAAArvD,QAAA,CAAc8a,CAAA9a,QAET2yB,EAAL,GACE08B,CAAAL,QACA,CADcK,CAAAjrB,WACd,CAD+BorB,QAAQ,CAAC5qD,CAAD,CAAO3F,CAAP,CAAc,CAAE,MAAOA,EAAT,CACrD,CAAAowD,CAAArvD,QAAA,CAAcmB,EAFhB,CAwBAkuD,EAAAI,QAAA,CAAcC,QAAmB,CAAC9qD,CAAD,CAAO45C,CAAP,CAAa,CAC5C,IAAIjgC,EAASnE,CAAA,CAAOokC,CAAP,CACb,OAAIjgC,EAAAwoB,QAAJ,EAAsBxoB,CAAAlO,SAAtB,CACSkO,CADT,CAGSnE,CAAA,CAAOokC,CAAP,CAAa,QAAQ,CAACv/C,CAAD,CAAQ,CAClC,MAAOowD,EAAAjrB,WAAA,CAAex/B,CAAf,CAAqB3F,CAArB,CAD2B,CAA7B,CALmC,CAvDV,KA+ThC0H,EAAQ0oD,CAAAI,QA/TwB,CAgUhCrrB,EAAairB,CAAAjrB,WAhUmB,CAiUhC4qB,EAAUK,CAAAL,QAEd9wD,EAAA,CAAQ+1B,CAAR;AAAsB,QAAQ,CAAC07B,CAAD,CAAY/lD,CAAZ,CAAkB,CAC9C,IAAIgmD,EAAQ7sD,CAAA,CAAU6G,CAAV,CACZylD,EAAA,CA5oCGtoD,CA4oCc,WA5oCdA,CA4oC4B6oD,CA5oC5B7oD,SAAA,CACI8oD,EADJ,CACiCtzC,EADjC,CA4oCH,CAAA,CAAyC,QAAQ,CAACiiC,CAAD,CAAO,CACtD,MAAO73C,EAAA,CAAMgpD,CAAN,CAAiBnR,CAAjB,CAD+C,CAGxD6Q,EAAA,CA/oCGtoD,CA+oCc,cA/oCdA,CA+oC+B6oD,CA/oC/B7oD,SAAA,CACI8oD,EADJ,CACiCtzC,EADjC,CA+oCH,CAAA,CAA4C,QAAQ,CAACtd,CAAD,CAAQ,CAC1D,MAAOmlC,EAAA,CAAWurB,CAAX,CAAsB1wD,CAAtB,CADmD,CAG5DowD,EAAA,CAlpCGtoD,CAkpCc,WAlpCdA,CAkpC4B6oD,CAlpC5B7oD,SAAA,CACI8oD,EADJ,CACiCtzC,EADjC,CAkpCH,CAAA,CAAyC,QAAQ,CAACtd,CAAD,CAAQ,CACvD,MAAO+vD,EAAA,CAAQW,CAAR,CAAmB1wD,CAAnB,CADgD,CARX,CAAhD,CAaA,OAAOowD,EAhV6B,CAD1B,CApEU,CA0axBp0C,QAASA,GAAgB,EAAG,CAC1B,IAAA4I,KAAA,CAAY,CAAC,SAAD,CAAY,WAAZ,CAAyB,QAAQ,CAACjI,CAAD,CAAUxD,CAAV,CAAqB,CAAA,IAC5D03C,EAAe,EAD6C,CAc5DC,EAAsB,GANfC,CAAAp0C,CAAAo0C,GAMe,EANDC,CAAAr0C,CAAAo0C,GAAAC,QAMC,GAHlBr0C,CAAAs0C,OAGkB,GAFjBt0C,CAAAs0C,OAAAC,IAEiB,EAFKv0C,CAAAs0C,OAAAC,IAAAC,QAEL,EADbD,CAAAv0C,CAAAs0C,OAAAC,IACa,EADSv0C,CAAAs0C,OAAAE,QACT,EADmCx0C,CAAAs0C,OAAAE,QAAAxhC,GACnC,EAAtBmhC,EAA8Cn0C,CAAA0P,QAA9CykC,EAAiEn0C,CAAA0P,QAAA+kC,UAdL,CAe5DC,EACE3vD,EAAA,CAAM,CAAC,eAAA6c,KAAA,CAAqBza,CAAA,CAAUk6C,CAACrhC,CAAAohC,UAADC,EAAsB,EAAtBA,WAAV,CAArB,CAAD;AAAyE,EAAzE,EAA6E,CAA7E,CAAN,CAhB0D,CAiB5DsT,EAAQ,QAAAluD,KAAA,CAAc46C,CAACrhC,CAAAohC,UAADC,EAAsB,EAAtBA,WAAd,CAjBoD,CAkB5D72C,EAAWgS,CAAA,CAAU,CAAV,CAAXhS,EAA2B,EAlBiC,CAmB5DoqD,EAAYpqD,CAAA6rC,KAAZue,EAA6BpqD,CAAA6rC,KAAA7oB,MAnB+B,CAoB5DqnC,EAAc,CAAA,CApB8C,CAqB5DC,EAAa,CAAA,CAEbF,EAAJ,GAGEC,CACA,CADc,CAAG,EAAA,YAAA,EAAgBD,EAAhB,EAA6B,kBAA7B,EAAmDA,EAAnD,CACjB,CAAAE,CAAA,CAAa,CAAG,EAAA,WAAA,EAAeF,EAAf,EAA4B,iBAA5B,EAAiDA,EAAjD,CAJlB,CAQA,OAAO,CASLllC,QAAS,EAAGykC,CAAAA,CAAH,EAAsC,CAAtC,CAA4BO,CAA5B,EAA6CC,CAA7C,CATJ,CAULI,SAAUA,QAAQ,CAACpuC,CAAD,CAAQ,CAOxB,GAAc,OAAd,GAAIA,CAAJ,EAAyB7E,EAAzB,CAA+B,MAAO,CAAA,CAEtC,IAAIjc,CAAA,CAAYquD,CAAA,CAAavtC,CAAb,CAAZ,CAAJ,CAAsC,CACpC,IAAIquC,EAASxqD,CAAAkX,cAAA,CAAuB,KAAvB,CACbwyC,EAAA,CAAavtC,CAAb,CAAA,CAAsB,IAAtB,CAA6BA,CAA7B,GAAsCquC,EAFF,CAKtC,MAAOd,EAAA,CAAavtC,CAAb,CAdiB,CAVrB,CA0BLpR,IAAKA,EAAA,EA1BA,CA2BLs/C,YAAaA,CA3BR,CA4BLC,WAAYA,CA5BP,CA6BLJ,QAASA,CA7BJ,CA/ByD,CAAtD,CADc,CAiF5Bn1C,QAASA,GAA4B,EAAG,CACtC,IAAA0I,KAAA,CAAYxiB,EAAA,CAAQ,QAAQ,CAAC07C,CAAD,CAAM,CAAE,MAAO,KAAI8T,EAAJ,CAAgB9T,CAAhB,CAAT,CAAtB,CAD0B,CAIxC8T,QAASA,GAAW,CAAC9T,CAAD,CAAM,CAuExB+T,QAASA,EAAe,EAAG,CACzB,IAAIC,EAASC,CAAAC,IAAA,EACb,OAAOF,EAAP;AAAiBA,CAAAG,GAFQ,CAK3BC,QAASA,EAAsB,CAAC3jC,CAAD,CAAW,CACxC,IAAS,IAAA1uB,EAAIkyD,CAAAjzD,OAAJe,CAA2B,CAApC,CAA4C,CAA5C,EAAuCA,CAAvC,CAA+C,EAAEA,CAAjD,CAAoD,CAClD,IAAIiyD,EAASC,CAAA,CAAclyD,CAAd,CACb,IAAIiyD,CAAAnsD,KAAJ,GAAoB4oB,CAApB,CAEE,MADAwjC,EAAA5tD,OAAA,CAAqBtE,CAArB,CAAwB,CAAxB,CACOoyD,CAAAH,CAAAG,GAJyC,CADZ,CA1E1C,IAAIE,EAAa,EAAjB,CACIJ,EAAgB,EADpB,CAGIK,EAJOxrD,IAIUwrD,eAAjBA,CAAuC,SAH3C,CAII3jC,EALO7nB,IAKa6nB,kBAApBA,CAA6C,aALtC7nB,KAcX+lB,aAAA,CAqBAA,QAAqB,CAAC9lB,CAAD,CAAK0nB,CAAL,CAAe,CAClCA,CAAA,CAAWA,CAAX,EAAuBE,CAEvB,IAAI,CACF5nB,CAAA,EADE,CAAJ,OAEU,CACK0nB,IAAAA,CAsBfA,EAAA,CAtBeA,CAsBf,EAAuBE,CACnB0jC,EAAA,CAAW5jC,CAAX,CAAJ,GACE4jC,CAAA,CAAW5jC,CAAX,CAAA,EACA,CAAA4jC,CAAA,CAAWC,CAAX,CAAA,EAFF,CArBMC,EAAAA,CAAeF,CAAA,CAAW5jC,CAAX,CACnB,KAAI+jC,EAAcH,CAAA,CAAWC,CAAX,CAGlB,IAAKE,CAAAA,CAAL,EAAqBD,CAAAA,CAArB,CAIE,IAHIE,CAGJ,CAHuBD,CAAD,CAAiCJ,CAAjC,CAAeL,CAGrC,CAAQW,CAAR,CAAiBD,CAAA,CAAgBhkC,CAAhB,CAAjB,CAAA,CACE,GAAI,CACFikC,CAAA,EADE,CAEF,MAAOrpD,CAAP,CAAU,CACV20C,CAAA5yC,MAAA,CAAU/B,CAAV,CADU,CAdR,CALwB,CAnCzBvC,KAsBXimB,aAAA,CA+DAA,QAAqB,CAAC0B,CAAD,CAAW,CAC9BA,CAAA,CAAWA,CAAX,EAAuBE,CACvB0jC,EAAA,CAAW5jC,CAAX,CAAA,EAAwB4jC,CAAA,CAAW5jC,CAAX,CAAxB,EAAgD,CAAhD,EAAqD,CACrD4jC,EAAA,CAAWC,CAAX,CAAA,EAA8BD,CAAA,CAAWC,CAAX,CAA9B,EAA4D,CAA5D,EAAiE,CAHnC,CArFrBxrD,KAiCXmmB,yBAAA,CA0DAA,QAAiC,CAACc,CAAD,CAAWU,CAAX,CAAqB,CACpDA,CAAA,CAAWA,CAAX,EAAuB6jC,CAClBD,EAAA,CAAW5jC,CAAX,CAAL,CAGEwjC,CAAAvtD,KAAA,CAAmB,CAACmB,KAAM4oB,CAAP,CAAiB0jC,GAAIpkC,CAArB,CAAnB,CAHF;AACEA,CAAA,EAHkD,CA5F9B,CAmH1BvR,QAASA,GAAwB,EAAG,CAElC,IAAIm2C,CAeJ,KAAAA,YAAA,CAAmBC,QAAQ,CAACxrD,CAAD,CAAM,CAC/B,MAAIA,EAAJ,EACEurD,CACO,CADOvrD,CACP,CAAA,IAFT,EAIOurD,CALwB,CAoCjC,KAAA7tC,KAAA,CAAY,CAAC,mBAAD,CAAsB,gBAAtB,CAAwC,OAAxC,CAAiD,IAAjD,CAAuD,MAAvD,CACV,QAAQ,CAACrL,CAAD,CAAoB4C,CAApB,CAAoChC,CAApC,CAA2CoB,CAA3C,CAA+CI,CAA/C,CAAqD,CAE3Dg3C,QAASA,EAAe,CAACC,CAAD,CAAMC,CAAN,CAA0B,CAChDF,CAAAG,qBAAA,EAOA,IAAK,CAAAl0D,CAAA,CAASg0D,CAAT,CAAL,EAAsBpwD,CAAA,CAAY2Z,CAAArP,IAAA,CAAmB8lD,CAAnB,CAAZ,CAAtB,CACEA,CAAA,CAAMj3C,CAAA61B,sBAAA,CAA2BohB,CAA3B,CAGR,KAAIvlB,EAAoBlzB,CAAAizB,SAApBC,EAAsClzB,CAAAizB,SAAAC,kBAEtC1uC,EAAA,CAAQ0uC,CAAR,CAAJ,CACEA,CADF,CACsBA,CAAA97B,OAAA,CAAyB,QAAQ,CAACwhD,CAAD,CAAc,CACjE,MAAOA,EAAP,GAAuB/mB,EAD0C,CAA/C,CADtB,CAIWqB,CAJX,GAIiCrB,EAJjC,GAKEqB,CALF,CAKsB,IALtB,CAQA,OAAOlzB,EAAArN,IAAA,CAAU8lD,CAAV,CAAetxD,CAAA,CAAO,CACzBmmB,MAAOtL,CADkB,CAEzBkxB,kBAAmBA,CAFM,CAAP,CAGjBolB,CAHiB,CAAf,CAAAriB,QAAA,CAII,QAAQ,EAAG,CAClBuiB,CAAAG,qBAAA,EADkB,CAJf,CAAA9vB,KAAA,CAOC,QAAQ,CAAC+L,CAAD,CAAW,CACvB,MAAO5yB,EAAA6T,IAAA,CAAmB4iC,CAAnB,CAAwB7jB,CAAA9iC,KAAxB,CADgB,CAPpB;AAWP+mD,QAAoB,CAAChkB,CAAD,CAAO,CACpB6jB,CAAL,GACE7jB,CAIA,CAJOikB,EAAA,CAAuB,QAAvB,CAEHL,CAFG,CAEE5jB,CAAA9B,OAFF,CAEe8B,CAAA8B,WAFf,CAIP,CAAAv3B,CAAA,CAAkBy1B,CAAlB,CALF,CAQA,OAAOzzB,EAAA0zB,OAAA,CAAUD,CAAV,CATkB,CAXpB,CAtByC,CA8ClD2jB,CAAAG,qBAAA,CAAuC,CAEvC,OAAOH,EAlDoD,CADnD,CArDsB,CA8GpCn2C,QAASA,GAAqB,EAAG,CAC/B,IAAAoI,KAAA,CAAY,CAAC,YAAD,CAAe,UAAf,CAA2B,WAA3B,CACP,QAAQ,CAACvJ,CAAD,CAAexC,CAAf,CAA2BkC,CAA3B,CAAsC,CAqHjD,MA5GkBm4C,CAcN,aAAeC,QAAQ,CAACtvD,CAAD,CAAUinC,CAAV,CAAsBsoB,CAAtB,CAAsC,CACnExiC,CAAAA,CAAW/sB,CAAAwvD,uBAAA,CAA+B,YAA/B,CACf,KAAIC,EAAU,EACdr0D,EAAA,CAAQ2xB,CAAR,CAAkB,QAAQ,CAAC4Y,CAAD,CAAU,CAClC,IAAI+pB,EAAcnnD,EAAAvI,QAAA,CAAgB2lC,CAAhB,CAAAv9B,KAAA,CAA8B,UAA9B,CACdsnD,EAAJ,EACEt0D,CAAA,CAAQs0D,CAAR,CAAqB,QAAQ,CAACC,CAAD,CAAc,CACrCJ,CAAJ,CAEMhwD,CADUkrD,IAAIrtD,MAAJqtD,CAAW,SAAXA,CAAuBE,EAAA,CAAgB1jB,CAAhB,CAAvBwjB,CAAqD,aAArDA,CACVlrD,MAAA,CAAaowD,CAAb,CAFN,EAGIF,CAAA9uD,KAAA,CAAaglC,CAAb,CAHJ,CAM2C,EAN3C,GAMMgqB,CAAAtvD,QAAA,CAAoB4mC,CAApB,CANN,EAOIwoB,CAAA9uD,KAAA,CAAaglC,CAAb,CARqC,CAA3C,CAHgC,CAApC,CAiBA,OAAO8pB,EApBgE,CAdvDJ,CAiDN,WAAaO,QAAQ,CAAC5vD,CAAD,CAAUinC,CAAV,CAAsBsoB,CAAtB,CAAsC,CAErE,IADA,IAAIM,EAAW,CAAC,KAAD;AAAQ,UAAR,CAAoB,OAApB,CAAf,CACSrkC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqkC,CAAA50D,OAApB,CAAqC,EAAEuwB,CAAvC,CAA0C,CAGxC,IAAIxN,EAAWhe,CAAAgc,iBAAA,CADA,GACA,CADM6zC,CAAA,CAASrkC,CAAT,CACN,CADoB,OACpB,EAFO+jC,CAAAO,CAAiB,GAAjBA,CAAuB,IAE9B,EADgD,GAChD,CADsD7oB,CACtD,CADmE,IACnE,CACf,IAAIjpB,CAAA/iB,OAAJ,CACE,MAAO+iB,EAL+B,CAF2B,CAjDrDqxC,CAoEN,YAAcU,QAAQ,EAAG,CACnC,MAAO74C,EAAAmR,IAAA,EAD4B,CApEnBgnC,CAiFN,YAAcW,QAAQ,CAAC3nC,CAAD,CAAM,CAClCA,CAAJ,GAAYnR,CAAAmR,IAAA,EAAZ,GACEnR,CAAAmR,IAAA,CAAcA,CAAd,CACA,CAAA7Q,CAAA0hC,QAAA,EAFF,CADsC,CAjFtBmW,CAwGN,WAAaY,QAAQ,CAACjmC,CAAD,CAAW,CAC1ChV,CAAAiU,gCAAA,CAAyCe,CAAzC,CAD0C,CAxG1BqlC,CAT+B,CADvC,CADmB,CA8HjCx2C,QAASA,GAAgB,EAAG,CAC1B,IAAAkI,KAAA,CAAY,CAAC,YAAD,CAAe,UAAf,CAA2B,IAA3B,CAAiC,KAAjC,CAAwC,mBAAxC,CACP,QAAQ,CAACvJ,CAAD,CAAexC,CAAf,CAA2B0C,CAA3B,CAAiCE,CAAjC,CAAwClC,CAAxC,CAA2D,CAkCtEu4B,QAASA,EAAO,CAACjrC,CAAD,CAAKynB,CAAL,CAAYwpB,CAAZ,CAAyB,CAClCz4C,CAAA,CAAWwH,CAAX,CAAL,GACEixC,CAEA,CAFcxpB,CAEd,CADAA,CACA,CADQznB,CACR,CAAAA,CAAA,CAAK5E,CAHP,CADuC,KAOnCikB,EA96nBD3kB,EAAAhC,KAAA,CA86nBkBiC,SA96nBlB,CA86nB6BuF,CA96nB7B,CAu6nBoC,CAQnCkxC,EAAan6C,CAAA,CAAUg6C,CAAV,CAAbG,EAAuC,CAACH,CARL,CASnC5G,EAAW9iB,CAAC6pB,CAAA,CAAYx8B,CAAZ,CAAkBF,CAAnB6S,OAAA,EATwB,CAUnCmgB,EAAU2C,CAAA3C,QAVyB,CAWnC/f,CAEJA;CAAA,CAAY3V,CAAAuV,MAAA,CAAe,QAAQ,EAAG,CACpC,GAAI,CACF8iB,CAAAxB,QAAA,CAAiB7oC,CAAAG,MAAA,CAAS,IAAT,CAAekf,CAAf,CAAjB,CADE,CAEF,MAAO/c,CAAP,CAAU,CACV+nC,CAAAjC,OAAA,CAAgB9lC,CAAhB,CACA,CAAAoQ,CAAA,CAAkBpQ,CAAlB,CAFU,CAFZ,OAKU,CACR,OAAO4qD,CAAA,CAAUxlB,CAAAkG,YAAV,CADC,CAILwD,CAAL,EAAgB58B,CAAArP,OAAA,EAVoB,CAA1B,CAWTsiB,CAXS,CAWF,UAXE,CAaZigB,EAAAkG,YAAA,CAAsBjmB,CACtBulC,EAAA,CAAUvlC,CAAV,CAAA,CAAuB0iB,CAEvB,OAAO3C,EA7BgC,CAhCzC,IAAIwlB,EAAY,EA6EhBjiB,EAAApjB,OAAA,CAAiBslC,QAAQ,CAACzlB,CAAD,CAAU,CACjC,GAAKA,CAAAA,CAAL,CAAc,MAAO,CAAA,CAErB,IAAK,CAAAA,CAAAjvC,eAAA,CAAuB,aAAvB,CAAL,CACE,KAAM20D,GAAA,CAAe,SAAf,CAAN,CAIF,GAAK,CAAAF,CAAAz0D,eAAA,CAAyBivC,CAAAkG,YAAzB,CAAL,CAAoD,MAAO,CAAA,CAEvD9kB,EAAAA,CAAK4e,CAAAkG,YACT,KAAIvD,EAAW6iB,CAAA,CAAUpkC,CAAV,CAAf,CAGsB4e,EAAA2C,CAAA3C,QA30GtBiJ,EAAAC,QAAJ,GAC6BD,CAAAC,QAR7BC,IAOA,CAPY,CAAA,CAOZ,CA40GIxG,EAAAjC,OAAA,CAAgB,UAAhB,CACA,QAAO8kB,CAAA,CAAUpkC,CAAV,CAEP,OAAO9W,EAAAuV,MAAAM,OAAA,CAAsBiB,CAAtB,CAlB0B,CAqBnC,OAAOmiB,EApG+D,CAD5D,CADc,CA0K5BzkB,QAASA,GAAU,CAACnB,CAAD,CAAM,CACvB,GAAK,CAAAttB,CAAA,CAASstB,CAAT,CAAL,CAAoB,MAAOA,EAKvBzN,GAAJ,GAGEy1C,EAAA3yC,aAAA,CAA4B,MAA5B;AAAoCyL,CAApC,CACA,CAAAA,CAAA,CAAOknC,EAAAlnC,KAJT,CAOAknC,GAAA3yC,aAAA,CAA4B,MAA5B,CAAoCyL,CAApC,CAEIyrB,EAAAA,CAAWyb,EAAAzb,SAEV0b,EAAAA,EAAL,EAAgD,EAAhD,CAAuB1b,CAAAv0C,QAAA,CAAiB,GAAjB,CAAvB,GACEu0C,CADF,CACa,GADb,CACmBA,CADnB,CAC8B,GAD9B,CAIA,OAAO,CACLzrB,KAAMknC,EAAAlnC,KADD,CAELgnB,SAAUkgB,EAAAlgB,SAAA,CAA0BkgB,EAAAlgB,SAAAlsC,QAAA,CAAgC,IAAhC,CAAsC,EAAtC,CAA1B,CAAsE,EAF3E,CAGLsa,KAAM8xC,EAAA9xC,KAHD,CAILk3B,OAAQ4a,EAAA5a,OAAA,CAAwB4a,EAAA5a,OAAAxxC,QAAA,CAA8B,KAA9B,CAAqC,EAArC,CAAxB,CAAmE,EAJtE,CAKL4iB,KAAMwpC,EAAAxpC,KAAA,CAAsBwpC,EAAAxpC,KAAA5iB,QAAA,CAA4B,IAA5B,CAAkC,EAAlC,CAAtB,CAA8D,EAL/D,CAML2wC,SAAUA,CANL,CAOLE,KAAMub,EAAAvb,KAPD,CAQLQ,SAAiD,GAAvC,GAAC+a,EAAA/a,SAAA5yC,OAAA,CAA+B,CAA/B,CAAD,CACN2tD,EAAA/a,SADM,CAEN,GAFM,CAEA+a,EAAA/a,SAVL,CArBgB,CAsEzB/G,QAASA,GAAyB,CAACgiB,CAAD,CAAoB,CACpD,IAAIC,EAA0B,CAACC,EAAD,CAAA9tD,OAAA,CAAmB4tD,CAAAhe,IAAA,CAAsB/oB,EAAtB,CAAnB,CAY9B,OAAOwkB,SAA2B,CAAC0iB,CAAD,CAAa,CACzCjc,CAAAA,CAAYjrB,EAAA,CAAWknC,CAAX,CAChB,OAAOF,EAAAzqC,KAAA,CAA6B4qC,EAAA7tD,KAAA,CAAuB,IAAvB,CAA6B2xC,CAA7B,CAA7B,CAFsC,CAbK,CA6BtDkc,QAASA,GAAiB,CAACC,CAAD,CAAOC,CAAP,CAAa,CACrCD,CAAA,CAAOpnC,EAAA,CAAWonC,CAAX,CACPC,EAAA,CAAOrnC,EAAA,CAAWqnC,CAAX,CAEP,OAAQD,EAAAzgB,SAAR;AAA0B0gB,CAAA1gB,SAA1B,EACQygB,CAAAryC,KADR,GACsBsyC,CAAAtyC,KALe,CAuEvCxF,QAASA,GAAe,EAAG,CACzB,IAAAgI,KAAA,CAAYxiB,EAAA,CAAQ1E,CAAR,CADa,CAa3Bi3D,QAASA,GAAc,CAACx7C,CAAD,CAAY,CAajCy7C,QAASA,EAAsB,CAACjzD,CAAD,CAAM,CACnC,GAAI,CACF,MAAO0H,mBAAA,CAAmB1H,CAAnB,CADL,CAEF,MAAOwH,CAAP,CAAU,CACV,MAAOxH,EADG,CAHuB,CAZrC,IAAIixC,EAAcz5B,CAAA,CAAU,CAAV,CAAdy5B,EAA8B,EAAlC,CACIiiB,EAAc,EADlB,CAEIC,EAAmB,EAkBvB,OAAO,SAAQ,EAAG,CAAA,IACZC,CADY,CACCC,CADD,CACSn1D,CADT,CACYoE,CADZ,CACmB0G,CAhBnC,IAAI,CACF,CAAA,CAgBsCioC,CAhB/BoiB,OAAP,EAA6B,EAD3B,CAEF,MAAO7rD,CAAP,CAAU,CACV,CAAA,CAAO,EADG,CAiBZ,GAAI8rD,CAAJ,GAA4BH,CAA5B,CAKE,IAJAA,CAIK,CAJcG,CAId,CAHLF,CAGK,CAHSD,CAAAnxD,MAAA,CAAuB,IAAvB,CAGT,CAFLkxD,CAEK,CAFS,EAET,CAAAh1D,CAAA,CAAI,CAAT,CAAYA,CAAZ,CAAgBk1D,CAAAj2D,OAAhB,CAAoCe,CAAA,EAApC,CACEm1D,CAEA,CAFSD,CAAA,CAAYl1D,CAAZ,CAET,CADAoE,CACA,CADQ+wD,CAAA9wD,QAAA,CAAe,GAAf,CACR,CAAY,CAAZ,CAAID,CAAJ,GACE0G,CAIA,CAJOiqD,CAAA,CAAuBI,CAAAvrD,UAAA,CAAiB,CAAjB,CAAoBxF,CAApB,CAAvB,CAIP,CAAIzB,CAAA,CAAYqyD,CAAA,CAAYlqD,CAAZ,CAAZ,CAAJ,GACEkqD,CAAA,CAAYlqD,CAAZ,CADF,CACsBiqD,CAAA,CAAuBI,CAAAvrD,UAAA,CAAiBxF,CAAjB,CAAyB,CAAzB,CAAvB,CADtB,CALF,CAWJ,OAAO4wD,EAvBS,CArBe,CAmDnCz3C,QAASA,GAAsB,EAAG,CAChC,IAAAwH,KAAA,CAAY+vC,EADoB,CA+GlCj7C,QAASA,GAAe,CAAClO,CAAD,CAAW,CAmBjCk/B,QAASA,EAAQ,CAAC//B,CAAD,CAAOkF,CAAP,CAAgB,CAC/B,GAAIhS,CAAA,CAAS8M,CAAT,CAAJ,CAAoB,CAClB,IAAIuqD,EAAU,EACdj2D,EAAA,CAAQ0L,CAAR,CAAc,QAAQ,CAAC4G,CAAD,CAASnS,CAAT,CAAc,CAClC81D,CAAA,CAAQ91D,CAAR,CAAA,CAAesrC,CAAA,CAAStrC,CAAT,CAAcmS,CAAd,CADmB,CAApC,CAGA,OAAO2jD,EALW,CAOlB,MAAO1pD,EAAAqE,QAAA,CAAiBlF,CAAjB;AA1BEwqD,QA0BF,CAAgCtlD,CAAhC,CARsB,CAWjC,IAAA66B,SAAA,CAAgBA,CAEhB,KAAA9lB,KAAA,CAAY,CAAC,WAAD,CAAc,QAAQ,CAAC+D,CAAD,CAAY,CAC5C,MAAO,SAAQ,CAAChe,CAAD,CAAO,CACpB,MAAOge,EAAA7b,IAAA,CAAcnC,CAAd,CAjCEwqD,QAiCF,CADa,CADsB,CAAlC,CAoBZzqB,EAAA,CAAS,UAAT,CAAqB0qB,EAArB,CACA1qB,EAAA,CAAS,MAAT,CAAiB2qB,EAAjB,CACA3qB,EAAA,CAAS,QAAT,CAAmB4qB,EAAnB,CACA5qB,EAAA,CAAS,MAAT,CAAiB6qB,EAAjB,CACA7qB,EAAA,CAAS,SAAT,CAAoB8qB,EAApB,CACA9qB,EAAA,CAAS,WAAT,CAAsB+qB,EAAtB,CACA/qB,EAAA,CAAS,QAAT,CAAmBgrB,EAAnB,CACAhrB,EAAA,CAAS,SAAT,CAAoBirB,EAApB,CACAjrB,EAAA,CAAS,WAAT,CAAsBkrB,EAAtB,CA5DiC,CAwMnCN,QAASA,GAAY,EAAG,CACtB,MAAO,SAAQ,CAACtxD,CAAD,CAAQ8mC,CAAR,CAAoB+qB,CAApB,CAAgCC,CAAhC,CAAgD,CAC7D,GAAK,CAAAt3D,EAAA,CAAYwF,CAAZ,CAAL,CAAyB,CACvB,GAAa,IAAb,EAAIA,CAAJ,CACE,MAAOA,EAEP,MAAMzF,EAAA,CAAO,QAAP,CAAA,CAAiB,UAAjB,CAAiEyF,CAAjE,CAAN,CAJqB,CAQzB8xD,CAAA,CAAiBA,CAAjB,EAAmC,GAGnC,KAAIC,CAEJ,QAJqBC,EAAAC,CAAiBnrB,CAAjBmrB,CAIrB,EACE,KAAK,UAAL,CAEE,KACF,MAAK,SAAL,CACA,KAAK,MAAL,CACA,KAAK,QAAL,CACA,KAAK,QAAL,CACEF,CAAA,CAAsB,CAAA,CAExB,MAAK,QAAL,CACEG,CAAA,CAAcC,EAAA,CAAkBrrB,CAAlB,CAA8B+qB,CAA9B,CAA0CC,CAA1C,CAA0DC,CAA1D,CACd,MACF,SACE,MAAO/xD,EAdX,CAiBA,MAAOrB,MAAAkjB,UAAAtU,OAAAhS,KAAA,CAA4ByE,CAA5B;AAAmCkyD,CAAnC,CA/BsD,CADzC,CAqCxBC,QAASA,GAAiB,CAACrrB,CAAD,CAAa+qB,CAAb,CAAyBC,CAAzB,CAAyCC,CAAzC,CAA8D,CACtF,IAAIK,EAAwBv4D,CAAA,CAASitC,CAAT,CAAxBsrB,EAAiDN,CAAjDM,GAAmEtrB,EAGpD,EAAA,CAAnB,GAAI+qB,CAAJ,CACEA,CADF,CACe9vD,EADf,CAEY1G,CAAA,CAAWw2D,CAAX,CAFZ,GAGEA,CAHF,CAGeA,QAAQ,CAACQ,CAAD,CAASC,CAAT,CAAmB,CACtC,GAAI9zD,CAAA,CAAY6zD,CAAZ,CAAJ,CAEE,MAAO,CAAA,CAET,IAAgB,IAAhB,GAAKA,CAAL,EAAuC,IAAvC,GAA0BC,CAA1B,CAEE,MAAOD,EAAP,GAAkBC,CAEpB,IAAIz4D,CAAA,CAASy4D,CAAT,CAAJ,EAA2Bz4D,CAAA,CAASw4D,CAAT,CAA3B,EAAgD,CAAA/zD,EAAA,CAAkB+zD,CAAlB,CAAhD,CAEE,MAAO,CAAA,CAGTA,EAAA,CAASvyD,CAAA,CAAU,EAAV,CAAeuyD,CAAf,CACTC,EAAA,CAAWxyD,CAAA,CAAU,EAAV,CAAewyD,CAAf,CACX,OAAqC,EAArC,GAAOD,CAAAnyD,QAAA,CAAeoyD,CAAf,CAhB+B,CAH1C,CA8BA,OAPcJ,SAAQ,CAACl3D,CAAD,CAAO,CAC3B,MAAIo3D,EAAJ,EAA8B,CAAAv4D,CAAA,CAASmB,CAAT,CAA9B,CACSu3D,EAAA,CAAYv3D,CAAZ,CAAkB8rC,CAAA,CAAWgrB,CAAX,CAAlB,CAA8CD,CAA9C,CAA0DC,CAA1D,CAA0E,CAAA,CAA1E,CADT,CAGOS,EAAA,CAAYv3D,CAAZ,CAAkB8rC,CAAlB,CAA8B+qB,CAA9B,CAA0CC,CAA1C,CAA0DC,CAA1D,CAJoB,CA3ByD,CAqCxFQ,QAASA,GAAW,CAACF,CAAD,CAASC,CAAT,CAAmBT,CAAnB,CAA+BC,CAA/B,CAA+CC,CAA/C,CAAoES,CAApE,CAA0F,CAC5G,IAAIC,EAAaT,EAAA,CAAiBK,CAAjB,CAAjB,CACIK,EAAeV,EAAA,CAAiBM,CAAjB,CAEnB,IAAsB,QAAtB,GAAKI,CAAL,EAA2D,GAA3D,GAAoCJ,CAAA/vD,OAAA,CAAgB,CAAhB,CAApC,CACE,MAAO,CAACgwD,EAAA,CAAYF,CAAZ,CAAoBC,CAAA7sD,UAAA,CAAmB,CAAnB,CAApB,CAA2CosD,CAA3C,CAAuDC,CAAvD,CAAuEC,CAAvE,CACH,IAAIp3D,CAAA,CAAQ03D,CAAR,CAAJ,CAGL,MAAOA,EAAAzsC,KAAA,CAAY,QAAQ,CAAC5qB,CAAD,CAAO,CAChC,MAAOu3D,GAAA,CAAYv3D,CAAZ,CAAkBs3D,CAAlB,CAA4BT,CAA5B,CAAwCC,CAAxC,CAAwDC,CAAxD,CADyB,CAA3B,CAKT,QAAQU,CAAR,EACE,KAAK,QAAL,CACE,IAAIr3D,CACJ,IAAI22D,CAAJ,CAAyB,CACvB,IAAK32D,CAAL,GAAYi3D,EAAZ,CAGE,GAAIj3D,CAAAmH,OAAJ;AAAqC,GAArC,GAAmBnH,CAAAmH,OAAA,CAAW,CAAX,CAAnB,EACIgwD,EAAA,CAAYF,CAAA,CAAOj3D,CAAP,CAAZ,CAAyBk3D,CAAzB,CAAmCT,CAAnC,CAA+CC,CAA/C,CAA+D,CAAA,CAA/D,CADJ,CAEE,MAAO,CAAA,CAGX,OAAOU,EAAA,CAAuB,CAAA,CAAvB,CAA+BD,EAAA,CAAYF,CAAZ,CAAoBC,CAApB,CAA8BT,CAA9B,CAA0CC,CAA1C,CAA0D,CAAA,CAA1D,CATf,CAUlB,GAAqB,QAArB,GAAIY,CAAJ,CAA+B,CACpC,IAAKt3D,CAAL,GAAYk3D,EAAZ,CAEE,GADIK,CACA,CADcL,CAAA,CAASl3D,CAAT,CACd,CAAA,CAAAC,CAAA,CAAWs3D,CAAX,CAAA,EAA2B,CAAAn0D,CAAA,CAAYm0D,CAAZ,CAA3B,GAIAC,CAEC,CAFkBx3D,CAElB,GAF0B02D,CAE1B,CAAA,CAAAS,EAAA,CADWK,CAAAC,CAAmBR,CAAnBQ,CAA4BR,CAAA,CAAOj3D,CAAP,CACvC,CAAuBu3D,CAAvB,CAAoCd,CAApC,CAAgDC,CAAhD,CAAgEc,CAAhE,CAAkFA,CAAlF,CAND,CAAJ,CAOE,MAAO,CAAA,CAGX,OAAO,CAAA,CAb6B,CAepC,MAAOf,EAAA,CAAWQ,CAAX,CAAmBC,CAAnB,CAEX,MAAK,UAAL,CACE,MAAO,CAAA,CACT,SACE,MAAOT,EAAA,CAAWQ,CAAX,CAAmBC,CAAnB,CAjCX,CAd4G,CAoD9GN,QAASA,GAAgB,CAAC9uD,CAAD,CAAM,CAC7B,MAAgB,KAAT,GAACA,CAAD,CAAiB,MAAjB,CAA0B,MAAOA,EADX,CA6D/BkuD,QAASA,GAAc,CAAC0B,CAAD,CAAU,CAC/B,IAAIC,EAAUD,CAAAE,eACd,OAAO,SAAQ,CAACC,CAAD,CAASC,CAAT,CAAyBC,CAAzB,CAAuC,CAChD30D,CAAA,CAAY00D,CAAZ,CAAJ,GACEA,CADF,CACmBH,CAAAK,aADnB,CAII50D,EAAA,CAAY20D,CAAZ,CAAJ,GACEA,CADF,CACiBJ,CAAAM,SAAA,CAAiB,CAAjB,CAAAC,QADjB,CAKA,KAAIC,EAAoBL,CAAD,CAAoC,SAApC,CAAkB,eAGzC,OAAkB,KAAX,EAACD,CAAD,CACDA,CADC,CAEDO,EAAA,CAAaP,CAAb,CAAqBF,CAAAM,SAAA,CAAiB,CAAjB,CAArB,CAA0CN,CAAAU,UAA1C,CAA6DV,CAAAW,YAA7D,CAAkFP,CAAlF,CAAArvD,QAAA,CACUyvD,CADV;AAC4BL,CAD5B,CAf8C,CAFvB,CA6EjCxB,QAASA,GAAY,CAACoB,CAAD,CAAU,CAC7B,IAAIC,EAAUD,CAAAE,eACd,OAAO,SAAQ,CAACW,CAAD,CAASR,CAAT,CAAuB,CAGpC,MAAkB,KAAX,EAACQ,CAAD,CACDA,CADC,CAEDH,EAAA,CAAaG,CAAb,CAAqBZ,CAAAM,SAAA,CAAiB,CAAjB,CAArB,CAA0CN,CAAAU,UAA1C,CAA6DV,CAAAW,YAA7D,CACaP,CADb,CAL8B,CAFT,CAyB/BzvD,QAASA,GAAK,CAACkwD,CAAD,CAAS,CAAA,IACjBC,EAAW,CADM,CACHC,CADG,CACKC,CADL,CAEjBl4D,CAFiB,CAEda,CAFc,CAEXs3D,CAGmD,GAA7D,EAAKD,CAAL,CAA6BH,CAAA1zD,QAAA,CAAewzD,EAAf,CAA7B,IACEE,CADF,CACWA,CAAA9vD,QAAA,CAAe4vD,EAAf,CAA4B,EAA5B,CADX,CAKgC,EAAhC,EAAK73D,CAAL,CAAS+3D,CAAAte,OAAA,CAAc,IAAd,CAAT,GAE8B,CAE5B,CAFIye,CAEJ,GAF+BA,CAE/B,CAFuDl4D,CAEvD,EADAk4D,CACA,EADyB,CAACH,CAAAr2D,MAAA,CAAa1B,CAAb,CAAiB,CAAjB,CAC1B,CAAA+3D,CAAA,CAASA,CAAAnuD,UAAA,CAAiB,CAAjB,CAAoB5J,CAApB,CAJX,EAKmC,CALnC,CAKWk4D,CALX,GAOEA,CAPF,CAO0BH,CAAA94D,OAP1B,CAWA,KAAKe,CAAL,CAAS,CAAT,CAAY+3D,CAAArxD,OAAA,CAAc1G,CAAd,CAAZ,GAAiCo4D,EAAjC,CAA4Cp4D,CAAA,EAA5C,EAEA,GAAIA,CAAJ,IAAWm4D,CAAX,CAAmBJ,CAAA94D,OAAnB,EAEEg5D,CACA,CADS,CAAC,CAAD,CACT,CAAAC,CAAA,CAAwB,CAH1B,KAIO,CAGL,IADAC,CAAA,EACA,CAAOJ,CAAArxD,OAAA,CAAcyxD,CAAd,CAAP,GAAgCC,EAAhC,CAAA,CAA2CD,CAAA,EAG3CD,EAAA,EAAyBl4D,CACzBi4D,EAAA,CAAS,EAET,KAAKp3D,CAAL,CAAS,CAAT,CAAYb,CAAZ,EAAiBm4D,CAAjB,CAAwBn4D,CAAA,EAAA,CAAKa,CAAA,EAA7B,CACEo3D,CAAA,CAAOp3D,CAAP,CAAA,CAAY,CAACk3D,CAAArxD,OAAA,CAAc1G,CAAd,CAVV,CAeHk4D,CAAJ,CAA4BG,EAA5B,GACEJ,CAEA,CAFSA,CAAA3zD,OAAA,CAAc,CAAd,CAAiB+zD,EAAjB,CAA8B,CAA9B,CAET,CADAL,CACA,CADWE,CACX,CADmC,CACnC,CAAAA,CAAA,CAAwB,CAH1B,CAMA,OAAO,CAAExqB,EAAGuqB,CAAL,CAAa3uD,EAAG0uD,CAAhB,CAA0Bh4D,EAAGk4D,CAA7B,CAhDc,CAuDvBI,QAASA,GAAW,CAACC,CAAD;AAAejB,CAAf,CAA6BkB,CAA7B,CAAsCf,CAAtC,CAA+C,CAC/D,IAAIQ,EAASM,CAAA7qB,EAAb,CACI+qB,EAAcR,CAAAh5D,OAAdw5D,CAA8BF,CAAAv4D,EAGlCs3D,EAAA,CAAgB30D,CAAA,CAAY20D,CAAZ,CAAD,CAA8BrhC,IAAAyiC,IAAA,CAASziC,IAAA6L,IAAA,CAAS02B,CAAT,CAAkBC,CAAlB,CAAT,CAAyChB,CAAzC,CAA9B,CAAkF,CAACH,CAG9FqB,EAAAA,CAAUrB,CAAVqB,CAAyBJ,CAAAv4D,EACzB44D,EAAAA,CAAQX,CAAA,CAAOU,CAAP,CAEZ,IAAc,CAAd,CAAIA,CAAJ,CAAiB,CAEfV,CAAA3zD,OAAA,CAAc2xB,IAAA6L,IAAA,CAASy2B,CAAAv4D,EAAT,CAAyB24D,CAAzB,CAAd,CAGA,KAAS,IAAA93D,EAAI83D,CAAb,CAAsB93D,CAAtB,CAA0Bo3D,CAAAh5D,OAA1B,CAAyC4B,CAAA,EAAzC,CACEo3D,CAAA,CAAOp3D,CAAP,CAAA,CAAY,CANC,CAAjB,IAcE,KAJA43D,CAISz4D,CAJKi2B,IAAA6L,IAAA,CAAS,CAAT,CAAY22B,CAAZ,CAILz4D,CAHTu4D,CAAAv4D,EAGSA,CAHQ,CAGRA,CAFTi4D,CAAAh5D,OAESe,CAFOi2B,IAAA6L,IAAA,CAAS,CAAT,CAAY62B,CAAZ,CAAsBrB,CAAtB,CAAqC,CAArC,CAEPt3D,CADTi4D,CAAA,CAAO,CAAP,CACSj4D,CADG,CACHA,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoB24D,CAApB,CAA6B34D,CAAA,EAA7B,CAAkCi4D,CAAA,CAAOj4D,CAAP,CAAA,CAAY,CAGhD,IAAa,CAAb,EAAI44D,CAAJ,CACE,GAAkB,CAAlB,CAAID,CAAJ,CAAc,CAAd,CAAqB,CACnB,IAASE,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBF,CAApB,CAA6BE,CAAA,EAA7B,CACEZ,CAAAvsD,QAAA,CAAe,CAAf,CACA,CAAA6sD,CAAAv4D,EAAA,EAEFi4D,EAAAvsD,QAAA,CAAe,CAAf,CACA6sD,EAAAv4D,EAAA,EANmB,CAArB,IAQEi4D,EAAA,CAAOU,CAAP,CAAiB,CAAjB,CAAA,EAKJ,KAAA,CAAOF,CAAP,CAAqBxiC,IAAA6L,IAAA,CAAS,CAAT,CAAYw1B,CAAZ,CAArB,CAAgDmB,CAAA,EAAhD,CAA+DR,CAAAtzD,KAAA,CAAY,CAAZ,CAS/D,IALIm0D,CAKJ,CALYb,CAAAc,YAAA,CAAmB,QAAQ,CAACD,CAAD,CAAQprB,CAAR,CAAW1tC,CAAX,CAAci4D,CAAd,CAAsB,CAC3DvqB,CAAA,EAAQorB,CACRb,EAAA,CAAOj4D,CAAP,CAAA,CAAY0tC,CAAZ,CAAgB,EAChB,OAAOzX,KAAAC,MAAA,CAAWwX,CAAX,CAAe,EAAf,CAHoD,CAAjD,CAIT,CAJS,CAKZ,CACEuqB,CAAAvsD,QAAA,CAAeotD,CAAf,CACA,CAAAP,CAAAv4D,EAAA,EArD6D,CA2EnE23D,QAASA,GAAY,CAACG,CAAD,CAAShhD,CAAT,CAAkBkiD,CAAlB,CAA4BC,CAA5B,CAAwC3B,CAAxC,CAAsD,CAEzE,GAAM,CAAAv4D,CAAA,CAAS+4D,CAAT,CAAN,EAA0B,CAAAr5D,CAAA,CAASq5D,CAAT,CAA1B,EAA+CoB,KAAA,CAAMpB,CAAN,CAA/C,CAA8D,MAAO,EAErE;IAAIqB,EAAa,CAACC,QAAA,CAAStB,CAAT,CAAlB,CACIuB,EAAS,CAAA,CADb,CAEItB,EAAS9hC,IAAAqjC,IAAA,CAASxB,CAAT,CAATC,CAA4B,EAFhC,CAGIwB,EAAgB,EAGpB,IAAIJ,CAAJ,CACEI,CAAA,CAAgB,QADlB,KAEO,CACLhB,CAAA,CAAe1wD,EAAA,CAAMkwD,CAAN,CAEfO,GAAA,CAAYC,CAAZ,CAA0BjB,CAA1B,CAAwCxgD,CAAA0hD,QAAxC,CAAyD1hD,CAAA2gD,QAAzD,CAEIQ,EAAAA,CAASM,CAAA7qB,EACT8rB,EAAAA,CAAajB,CAAAv4D,EACbg4D,EAAAA,CAAWO,CAAAjvD,EACXmwD,EAAAA,CAAW,EAIf,KAHAJ,CAGA,CAHSpB,CAAAyB,OAAA,CAAc,QAAQ,CAACL,CAAD,CAAS3rB,CAAT,CAAY,CAAE,MAAO2rB,EAAP,EAAiB,CAAC3rB,CAApB,CAAlC,CAA4D,CAAA,CAA5D,CAGT,CAAoB,CAApB,CAAO8rB,CAAP,CAAA,CACEvB,CAAAvsD,QAAA,CAAe,CAAf,CACA,CAAA8tD,CAAA,EAIe,EAAjB,CAAIA,CAAJ,CACEC,CADF,CACaxB,CAAA3zD,OAAA,CAAck1D,CAAd,CAA0BvB,CAAAh5D,OAA1B,CADb,EAGEw6D,CACA,CADWxB,CACX,CAAAA,CAAA,CAAS,CAAC,CAAD,CAJX,CAQI0B,EAAAA,CAAS,EAIb,KAHI1B,CAAAh5D,OAGJ,EAHqB6X,CAAA8iD,OAGrB,EAFED,CAAAjuD,QAAA,CAAeusD,CAAA3zD,OAAA,CAAc,CAACwS,CAAA8iD,OAAf,CAA+B3B,CAAAh5D,OAA/B,CAAAgL,KAAA,CAAmD,EAAnD,CAAf,CAEF,CAAOguD,CAAAh5D,OAAP,CAAuB6X,CAAA+iD,MAAvB,CAAA,CACEF,CAAAjuD,QAAA,CAAeusD,CAAA3zD,OAAA,CAAc,CAACwS,CAAA+iD,MAAf,CAA8B5B,CAAAh5D,OAA9B,CAAAgL,KAAA,CAAkD,EAAlD,CAAf,CAEEguD,EAAAh5D,OAAJ,EACE06D,CAAAjuD,QAAA,CAAeusD,CAAAhuD,KAAA,CAAY,EAAZ,CAAf,CAEFsvD,EAAA,CAAgBI,CAAA1vD,KAAA,CAAY+uD,CAAZ,CAGZS,EAAAx6D,OAAJ,GACEs6D,CADF,EACmBN,CADnB,CACgCQ,CAAAxvD,KAAA,CAAc,EAAd,CADhC,CAII+tD,EAAJ,GACEuB,CADF,EACmB,IADnB,CAC0BvB,CAD1B,CA3CK,CA+CP,MAAa,EAAb,CAAIF,CAAJ,EAAmBuB,CAAAA,CAAnB,CACSviD,CAAAgjD,OADT,CAC0BP,CAD1B,CAC0CziD,CAAAijD,OAD1C,CAGSjjD,CAAAkjD,OAHT;AAG0BT,CAH1B,CAG0CziD,CAAAmjD,OA9D+B,CAkE3EC,QAASA,GAAS,CAACC,CAAD,CAAMlC,CAAN,CAAc14C,CAAd,CAAoB66C,CAApB,CAA6B,CAC7C,IAAIC,EAAM,EACV,IAAU,CAAV,CAAIF,CAAJ,EAAgBC,CAAhB,EAAkC,CAAlC,EAA2BD,CAA3B,CACMC,CAAJ,CACED,CADF,CACQ,CAACA,CADT,CACe,CADf,EAGEA,CACA,CADM,CAACA,CACP,CAAAE,CAAA,CAAM,GAJR,CAQF,KADAF,CACA,CADM,EACN,CADWA,CACX,CAAOA,CAAAl7D,OAAP,CAAoBg5D,CAApB,CAAA,CAA4BkC,CAAA,CAAM/B,EAAN,CAAkB+B,CAC1C56C,EAAJ,GACE46C,CADF,CACQA,CAAAxsC,OAAA,CAAWwsC,CAAAl7D,OAAX,CAAwBg5D,CAAxB,CADR,CAGA,OAAOoC,EAAP,CAAaF,CAfgC,CAmB/CG,QAASA,GAAU,CAACxvD,CAAD,CAAO8kB,CAAP,CAAa1F,CAAb,CAAqB3K,CAArB,CAA2B66C,CAA3B,CAAoC,CACrDlwC,CAAA,CAASA,CAAT,EAAmB,CACnB,OAAO,SAAQ,CAAC5hB,CAAD,CAAO,CAChBnI,CAAAA,CAAQmI,CAAA,CAAK,KAAL,CAAawC,CAAb,CAAA,EACZ,IAAa,CAAb,CAAIof,CAAJ,EAAkB/pB,CAAlB,CAA0B,CAAC+pB,CAA3B,CACE/pB,CAAA,EAAS+pB,CAEG,EAAd,GAAI/pB,CAAJ,EAA+B,GAA/B,GAAmB+pB,CAAnB,GAAmC/pB,CAAnC,CAA2C,EAA3C,CACA,OAAO+5D,GAAA,CAAU/5D,CAAV,CAAiByvB,CAAjB,CAAuBrQ,CAAvB,CAA6B66C,CAA7B,CANa,CAF+B,CAYvDG,QAASA,GAAa,CAACzvD,CAAD,CAAO0vD,CAAP,CAAkBC,CAAlB,CAA8B,CAClD,MAAO,SAAQ,CAACnyD,CAAD,CAAO4uD,CAAP,CAAgB,CAC7B,IAAI/2D,EAAQmI,CAAA,CAAK,KAAL,CAAawC,CAAb,CAAA,EAAZ,CAEImC,EAAMqF,EAAA,EADQmoD,CAAA,CAAa,YAAb,CAA4B,EACpC,GAD2CD,CAAA,CAAY,OAAZ,CAAsB,EACjE,EAAuB1vD,CAAvB,CAEV,OAAOosD,EAAA,CAAQjqD,CAAR,CAAA,CAAa9M,CAAb,CALsB,CADmB,CAoBpDu6D,QAASA,GAAsB,CAACC,CAAD,CAAO,CAElC,IAAIC,EAAmBC,CAAC,IAAI55D,IAAJ,CAAS05D,CAAT,CAAe,CAAf,CAAkB,CAAlB,CAADE,QAAA,EAGvB,OAAO,KAAI55D,IAAJ,CAAS05D,CAAT,CAAe,CAAf,EAAwC,CAArB,EAACC,CAAD,CAA0B,CAA1B,CAA8B,EAAjD,EAAuDA,CAAvD,CAL2B,CActCE,QAASA,GAAU,CAAClrC,CAAD,CAAO,CACvB,MAAO,SAAQ,CAACtnB,CAAD,CAAO,CAAA,IACfyyD;AAAaL,EAAA,CAAuBpyD,CAAA0yD,YAAA,EAAvB,CAGbn3B,EAAAA,CAAO,CAVNo3B,IAAIh6D,IAAJg6D,CAQ8B3yD,CARrB0yD,YAAA,EAATC,CAQ8B3yD,CARG4yD,SAAA,EAAjCD,CAQ8B3yD,CANnC6yD,QAAA,EAFKF,EAEiB,CAFjBA,CAQ8B3yD,CANTuyD,OAAA,EAFrBI,EAUDp3B,CAAoB,CAACk3B,CACtB/zC,EAAAA,CAAS,CAATA,CAAaiP,IAAAmlC,MAAA,CAAWv3B,CAAX,CAAkB,MAAlB,CAEhB,OAAOq2B,GAAA,CAAUlzC,CAAV,CAAkB4I,CAAlB,CAPY,CADC,CAgB1ByrC,QAASA,GAAS,CAAC/yD,CAAD,CAAO4uD,CAAP,CAAgB,CAChC,MAA6B,EAAtB,EAAA5uD,CAAA0yD,YAAA,EAAA,CAA0B9D,CAAAoE,KAAA,CAAa,CAAb,CAA1B,CAA4CpE,CAAAoE,KAAA,CAAa,CAAb,CADnB,CA8IlC9F,QAASA,GAAU,CAACyB,CAAD,CAAU,CAK3BsE,QAASA,EAAgB,CAACC,CAAD,CAAS,CAChC,IAAI51D,CACJ,IAAKA,CAAL,CAAa41D,CAAA51D,MAAA,CAAa61D,CAAb,CAAb,CAA2C,CACrCnzD,CAAAA,CAAO,IAAIrH,IAAJ,CAAS,CAAT,CAD8B,KAErCy6D,EAAS,CAF4B,CAGrCC,EAAS,CAH4B,CAIrCC,EAAah2D,CAAA,CAAM,CAAN,CAAA,CAAW0C,CAAAuzD,eAAX,CAAiCvzD,CAAAwzD,YAJT,CAKrCC,EAAan2D,CAAA,CAAM,CAAN,CAAA,CAAW0C,CAAA0zD,YAAX,CAA8B1zD,CAAA2zD,SAE3Cr2D,EAAA,CAAM,CAAN,CAAJ,GACE81D,CACA,CADS75D,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,CAAiBA,CAAA,CAAM,EAAN,CAAjB,CACT,CAAA+1D,CAAA,CAAQ95D,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,CAAiBA,CAAA,CAAM,EAAN,CAAjB,CAFV,CAIAg2D,EAAAl8D,KAAA,CAAgB4I,CAAhB,CAAsBzG,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,CAAtB,CAAuC/D,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,CAAvC,CAAyD,CAAzD,CAA4D/D,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,CAA5D,CACIlF,EAAAA,CAAImB,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,EAAkB,CAAlB,CAAJlF,CAA2Bg7D,CAC3BQ,EAAAA,CAAIr6D,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,EAAkB,CAAlB,CAAJs2D,CAA2BP,CAC3B/W,EAAAA,CAAI/iD,EAAA,CAAM+D,CAAA,CAAM,CAAN,CAAN,EAAkB,CAAlB,CACJu2D,EAAAA,CAAKlmC,IAAAmlC,MAAA,CAAgD,GAAhD,CAAWgB,UAAA,CAAW,IAAX;CAAmBx2D,CAAA,CAAM,CAAN,CAAnB,EAA+B,CAA/B,EAAX,CACTm2D,EAAAr8D,KAAA,CAAgB4I,CAAhB,CAAsB5H,CAAtB,CAAyBw7D,CAAzB,CAA4BtX,CAA5B,CAA+BuX,CAA/B,CAhByC,CAmB3C,MAAOX,EArByB,CAFlC,IAAIC,EAAgB,sGA2BpB,OAAO,SAAQ,CAACnzD,CAAD,CAAO+zD,CAAP,CAAet0D,CAAf,CAAyB,CAAA,IAClCm8B,EAAO,EAD2B,CAElCp6B,EAAQ,EAF0B,CAGlC9C,CAHkC,CAG9BpB,CAERy2D,EAAA,CAASA,CAAT,EAAmB,YACnBA,EAAA,CAASpF,CAAAqF,iBAAA,CAAyBD,CAAzB,CAAT,EAA6CA,CACzCt9D,EAAA,CAASuJ,CAAT,CAAJ,GACEA,CADF,CACSi0D,EAAAh5D,KAAA,CAAmB+E,CAAnB,CAAA,CAA2BzG,EAAA,CAAMyG,CAAN,CAA3B,CAAyCizD,CAAA,CAAiBjzD,CAAjB,CADlD,CAII7J,EAAA,CAAS6J,CAAT,CAAJ,GACEA,CADF,CACS,IAAIrH,IAAJ,CAASqH,CAAT,CADT,CAIA,IAAK,CAAAtH,EAAA,CAAOsH,CAAP,CAAL,EAAsB,CAAA8wD,QAAA,CAAS9wD,CAAA/B,QAAA,EAAT,CAAtB,CACE,MAAO+B,EAGT,KAAA,CAAO+zD,CAAP,CAAA,CAEE,CADAz2D,CACA,CADQ42D,EAAA99C,KAAA,CAAwB29C,CAAxB,CACR,GACEvyD,CACA,CADQnD,EAAA,CAAOmD,CAAP,CAAclE,CAAd,CAAqB,CAArB,CACR,CAAAy2D,CAAA,CAASvyD,CAAAqoD,IAAA,EAFX,GAIEroD,CAAAnF,KAAA,CAAW03D,CAAX,CACA,CAAAA,CAAA,CAAS,IALX,CASF,KAAIzzD,EAAqBN,CAAAO,kBAAA,EACrBd,EAAJ,GACEa,CACA,CADqBd,EAAA,CAAiBC,CAAjB,CAA2Ba,CAA3B,CACrB,CAAAN,CAAA,CAAOI,EAAA,CAAuBJ,CAAvB,CAA6BP,CAA7B,CAAuC,CAAA,CAAvC,CAFT,CAIA3I,EAAA,CAAQ0K,CAAR,CAAe,QAAQ,CAAC3J,CAAD,CAAQ,CAC7B6G,CAAA,CAAKy1D,EAAA,CAAat8D,CAAb,CACL+jC,EAAA,EAAQl9B,CAAA,CAAKA,CAAA,CAAGsB,CAAH,CAAS2uD,CAAAqF,iBAAT;AAAmC1zD,CAAnC,CAAL,CACe,IAAV,GAAAzI,CAAA,CAAmB,GAAnB,CAA0BA,CAAA8H,QAAA,CAAc,UAAd,CAA0B,EAA1B,CAAAA,QAAA,CAAsC,KAAtC,CAA6C,GAA7C,CAHV,CAA/B,CAMA,OAAOi8B,EAzC+B,CA9Bb,CA2G7BwxB,QAASA,GAAU,EAAG,CACpB,MAAO,SAAQ,CAACrV,CAAD,CAASqc,CAAT,CAAkB,CAC3B/5D,CAAA,CAAY+5D,CAAZ,CAAJ,GACIA,CADJ,CACc,CADd,CAGA,OAAOn1D,GAAA,CAAO84C,CAAP,CAAeqc,CAAf,CAJwB,CADb,CAqJtB/G,QAASA,GAAa,EAAG,CACvB,MAAO,SAAQ,CAAC9iD,CAAD,CAAQ8pD,CAAR,CAAeC,CAAf,CAAsB,CAEjCD,CAAA,CAD8BE,QAAhC,GAAI5mC,IAAAqjC,IAAA,CAAStpC,MAAA,CAAO2sC,CAAP,CAAT,CAAJ,CACU3sC,MAAA,CAAO2sC,CAAP,CADV,CAGU96D,EAAA,CAAM86D,CAAN,CAEV,IAAIv0D,CAAA,CAAYu0D,CAAZ,CAAJ,CAAwB,MAAO9pD,EAE3BpU,EAAA,CAASoU,CAAT,CAAJ,GAAqBA,CAArB,CAA6BA,CAAAnQ,SAAA,EAA7B,CACA,IAAK,CAAA/D,EAAA,CAAYkU,CAAZ,CAAL,CAAyB,MAAOA,EAEhC+pD,EAAA,CAAUA,CAAAA,CAAF,EAAW1D,KAAA,CAAM0D,CAAN,CAAX,CAA2B,CAA3B,CAA+B/6D,EAAA,CAAM+6D,CAAN,CACvCA,EAAA,CAAiB,CAAT,CAACA,CAAD,CAAc3mC,IAAA6L,IAAA,CAAS,CAAT,CAAYjvB,CAAA5T,OAAZ,CAA2B29D,CAA3B,CAAd,CAAkDA,CAE1D,OAAa,EAAb,EAAID,CAAJ,CACSG,EAAA,CAAQjqD,CAAR,CAAe+pD,CAAf,CAAsBA,CAAtB,CAA8BD,CAA9B,CADT,CAGgB,CAAd,GAAIC,CAAJ,CACSE,EAAA,CAAQjqD,CAAR,CAAe8pD,CAAf,CAAsB9pD,CAAA5T,OAAtB,CADT,CAGS69D,EAAA,CAAQjqD,CAAR,CAAeojB,IAAA6L,IAAA,CAAS,CAAT,CAAY86B,CAAZ,CAAoBD,CAApB,CAAf,CAA2CC,CAA3C,CApBwB,CADd,CA2BzBE,QAASA,GAAO,CAACjqD,CAAD,CAAQ+pD,CAAR,CAAeG,CAAf,CAAoB,CAClC,MAAIh+D,EAAA,CAAS8T,CAAT,CAAJ,CAA4BA,CAAAnR,MAAA,CAAYk7D,CAAZ,CAAmBG,CAAnB,CAA5B,CAEOr7D,EAAAhC,KAAA,CAAWmT,CAAX,CAAkB+pD,CAAlB,CAAyBG,CAAzB,CAH2B,CAsjBpCjH,QAASA,GAAa,CAACx6C,CAAD,CAAS,CAoD7B0hD,QAASA,EAAiB,CAACC,CAAD,CAAiB,CACzC,MAAOA,EAAA1mB,IAAA,CAAmB,QAAQ,CAAC2mB,CAAD,CAAY,CAAA,IACxCC;AAAa,CAD2B,CACxBlwD,EAAM5K,EAE1B,IAAI7C,CAAA,CAAW09D,CAAX,CAAJ,CACEjwD,CAAA,CAAMiwD,CADR,KAEO,IAAIn+D,CAAA,CAASm+D,CAAT,CAAJ,CAAyB,CAC9B,GAA6B,GAA7B,GAAKA,CAAAx2D,OAAA,CAAiB,CAAjB,CAAL,EAA4D,GAA5D,GAAoCw2D,CAAAx2D,OAAA,CAAiB,CAAjB,CAApC,CACEy2D,CACA,CADqC,GAAxB,GAAAD,CAAAx2D,OAAA,CAAiB,CAAjB,CAAA,CAA+B,EAA/B,CAAmC,CAChD,CAAAw2D,CAAA,CAAYA,CAAAtzD,UAAA,CAAoB,CAApB,CAEd,IAAkB,EAAlB,GAAIszD,CAAJ,GACEjwD,CACIsE,CADE+J,CAAA,CAAO4hD,CAAP,CACF3rD,CAAAtE,CAAAsE,SAFN,EAGI,IAAIhS,EAAM0N,CAAA,EAAV,CACAA,EAAMA,QAAQ,CAAC9M,CAAD,CAAQ,CAAE,MAAOA,EAAA,CAAMZ,CAAN,CAAT,CATI,CAahC,MAAO,CAAC0N,IAAKA,CAAN,CAAWkwD,WAAYA,CAAvB,CAlBqC,CAAvC,CADkC,CAuB3Cx9D,QAASA,EAAW,CAACQ,CAAD,CAAQ,CAC1B,OAAQ,MAAOA,EAAf,EACE,KAAK,QAAL,CACA,KAAK,SAAL,CACA,KAAK,QAAL,CACE,MAAO,CAAA,CACT,SACE,MAAO,CAAA,CANX,CAD0B,CAoC5Bi9D,QAASA,EAAc,CAACC,CAAD,CAAKC,CAAL,CAAS,CAC9B,IAAIt2C,EAAS,CAAb,CACIu2C,EAAQF,CAAAv3D,KADZ,CAEI03D,EAAQF,CAAAx3D,KAEZ,IAAIy3D,CAAJ,GAAcC,CAAd,CAAqB,CACfC,IAAAA,EAASJ,CAAAl9D,MAATs9D,CACAC,EAASJ,CAAAn9D,MAEC,SAAd,GAAIo9D,CAAJ,EAEEE,CACA,CADSA,CAAAlwD,YAAA,EACT,CAAAmwD,CAAA,CAASA,CAAAnwD,YAAA,EAHX,EAIqB,QAJrB,GAIWgwD,CAJX,GAOMv/D,CAAA,CAASy/D,CAAT,CACJ,GADsBA,CACtB,CAD+BJ,CAAAj5D,MAC/B,EAAIpG,CAAA,CAAS0/D,CAAT,CAAJ,GAAsBA,CAAtB,CAA+BJ,CAAAl5D,MAA/B,CARF,CAWIq5D,EAAJ,GAAeC,CAAf,GACE12C,CADF;AACWy2C,CAAA,CAASC,CAAT,CAAmB,EAAnB,CAAuB,CADlC,CAfmB,CAArB,IAmBE12C,EAAA,CAAoB,WAAX,GAACu2C,CAAD,CAA0B,CAA1B,CACI,WAAX,GAACC,CAAD,CAA2B,EAA3B,CACW,MAAX,GAACD,CAAD,CAAqB,CAArB,CACW,MAAX,GAACC,CAAD,CAAsB,EAAtB,CACCD,CAAD,CAASC,CAAT,CAAmB,EAAnB,CAAuB,CAG3B,OAAOx2C,EA/BuB,CA9GhC,MAAO,SAAQ,CAAC7iB,CAAD,CAAQw5D,CAAR,CAAuBC,CAAvB,CAAqCC,CAArC,CAAgD,CAE7D,GAAa,IAAb,EAAI15D,CAAJ,CAAmB,MAAOA,EAC1B,IAAK,CAAAxF,EAAA,CAAYwF,CAAZ,CAAL,CACE,KAAMzF,EAAA,CAAO,SAAP,CAAA,CAAkB,UAAlB,CAAkEyF,CAAlE,CAAN,CAGGrF,CAAA,CAAQ6+D,CAAR,CAAL,GAA+BA,CAA/B,CAA+C,CAACA,CAAD,CAA/C,CAC6B,EAA7B,GAAIA,CAAA1+D,OAAJ,GAAkC0+D,CAAlC,CAAkD,CAAC,GAAD,CAAlD,CAEA,KAAIG,EAAad,CAAA,CAAkBW,CAAlB,CAAjB,CAEIR,EAAaS,CAAA,CAAgB,EAAhB,CAAoB,CAFrC,CAKI/1B,EAAUroC,CAAA,CAAWq+D,CAAX,CAAA,CAAwBA,CAAxB,CAAoCT,CAK9CW,EAAAA,CAAgBj7D,KAAAkjB,UAAAuwB,IAAA72C,KAAA,CAAyByE,CAAzB,CAMpB65D,QAA4B,CAAC79D,CAAD,CAAQiE,CAAR,CAAe,CAIzC,MAAO,CACLjE,MAAOA,CADF,CAEL89D,WAAY,CAAC99D,MAAOiE,CAAR,CAAe0B,KAAM,QAArB,CAA+B1B,MAAOA,CAAtC,CAFP,CAGL85D,gBAAiBJ,CAAAvnB,IAAA,CAAe,QAAQ,CAAC2mB,CAAD,CAAY,CACzB,IAAA,EAAAA,CAAAjwD,IAAA,CAAc9M,CAAd,CAmE3B2F,EAAAA,CAAO,MAAO3F,EAClB,IAAc,IAAd,GAAIA,CAAJ,CACE2F,CAAA,CAAO,MADT,KAEO,IAAa,QAAb,GAAIA,CAAJ,CAnBmB,CAAA,CAAA,CAE1B,GAAItG,CAAA,CAAWW,CAAAe,QAAX,CAAJ,GACEf,CACI,CADIA,CAAAe,QAAA,EACJ,CAAAvB,CAAA,CAAYQ,CAAZ,CAFN,EAE0B,MAAA,CAGtBsC;EAAA,CAAkBtC,CAAlB,CAAJ,GACEA,CACI,CADIA,CAAAuC,SAAA,EACJ,CAAA/C,CAAA,CAAYQ,CAAZ,CAFN,CAP0B,CAnDpB,MAyEC,CAACA,MAAOA,CAAR,CAAe2F,KAAMA,CAArB,CAA2B1B,MAzEmBA,CAyE9C,CA1EiD,CAAnC,CAHZ,CAJkC,CANvB,CACpB25D,EAAAh+D,KAAA,CAkBAo+D,QAAqB,CAACd,CAAD,CAAKC,CAAL,CAAS,CAC5B,IAD4B,IACnBt9D,EAAI,CADe,CACZY,EAAKk9D,CAAA7+D,OAArB,CAAwCe,CAAxC,CAA4CY,CAA5C,CAAgDZ,CAAA,EAAhD,CAAqD,CACnD,IAAIgnB,EAAS6gB,CAAA,CAAQw1B,CAAAa,gBAAA,CAAmBl+D,CAAnB,CAAR,CAA+Bs9D,CAAAY,gBAAA,CAAmBl+D,CAAnB,CAA/B,CACb,IAAIgnB,CAAJ,CACE,MAAOA,EAAP,CAAgB82C,CAAA,CAAW99D,CAAX,CAAAm9D,WAAhB,CAA2CA,CAHM,CAOrD,OAAQt1B,CAAA,CAAQw1B,CAAAY,WAAR,CAAuBX,CAAAW,WAAvB,CAAR,EAAiDb,CAAA,CAAeC,CAAAY,WAAf,CAA8BX,CAAAW,WAA9B,CAAjD,EAAiGd,CARrE,CAlB9B,CAGA,OAFAh5D,EAEA,CAFQ45D,CAAAxnB,IAAA,CAAkB,QAAQ,CAACp3C,CAAD,CAAO,CAAE,MAAOA,EAAAgB,MAAT,CAAjC,CAtBqD,CADlC,CAkJ/Bi+D,QAASA,GAAW,CAACzsD,CAAD,CAAY,CAC1BnS,CAAA,CAAWmS,CAAX,CAAJ,GACEA,CADF,CACc,CACV4d,KAAM5d,CADI,CADd,CAKAA,EAAA4gB,SAAA,CAAqB5gB,CAAA4gB,SAArB,EAA2C,IAC3C,OAAOhwB,GAAA,CAAQoP,CAAR,CAPuB,CAgjBhC0sD,QAASA,GAAc,CAACxrC,CAAD,CAAWC,CAAX,CAAmBqP,CAAnB,CAA2B/pB,CAA3B,CAAqC4B,CAArC,CAAmD,CACxE,IAAAskD,WAAA,CAAkB,EAGlB,KAAAC,OAAA,CAAc,EACd,KAAAC,UAAA,CAAiB,EACjB,KAAAC,SAAA,CAAgBv5D,IAAAA,EAChB,KAAAw5D,MAAA,CAAa1kD,CAAA,CAAa8Y,CAAAhoB,KAAb;AAA4BgoB,CAAAte,OAA5B,EAA6C,EAA7C,CAAA,CAAiD2tB,CAAjD,CACb,KAAAw8B,OAAA,CAAc,CAAA,CAEd,KAAAC,OAAA,CADA,IAAAC,UACA,CADiB,CAAA,CAGjB,KAAAC,WAAA,CADA,IAAAC,SACA,CADgB,CAAA,CAEhB,KAAAC,aAAA,CAAoBC,EAEpB,KAAAvoC,UAAA,CAAiB7D,CACjB,KAAAqsC,UAAA,CAAiB9mD,CAEjB+mD,GAAA,CAAc,IAAd,CAlBwE,CA0iB1EA,QAASA,GAAa,CAAC3mC,CAAD,CAAW,CAC/BA,CAAA4mC,aAAA,CAAwB,EACxB5mC,EAAA4mC,aAAA,CAAsBC,EAAtB,CAAA,CAAuC,EAAE7mC,CAAA4mC,aAAA,CAAsBE,EAAtB,CAAF,CAAuC9mC,CAAA9B,UAAAzR,SAAA,CAA4Bq6C,EAA5B,CAAvC,CAFR,CAIjCC,QAASA,GAAoB,CAACjgE,CAAD,CAAU,CAqErCkgE,QAASA,EAAiB,CAACC,CAAD,CAAOvoC,CAAP,CAAkBwoC,CAAlB,CAA+B,CACnDA,CAAJ,EAAoB,CAAAD,CAAAL,aAAA,CAAkBloC,CAAlB,CAApB,EACEuoC,CAAAP,UAAA/5C,SAAA,CAAwBs6C,CAAA/oC,UAAxB,CAAwCQ,CAAxC,CACA,CAAAuoC,CAAAL,aAAA,CAAkBloC,CAAlB,CAAA,CAA+B,CAAA,CAFjC,EAGYwoC,CAAAA,CAHZ,EAG2BD,CAAAL,aAAA,CAAkBloC,CAAlB,CAH3B,GAIEuoC,CAAAP,UAAA95C,YAAA,CAA2Bq6C,CAAA/oC,UAA3B,CAA2CQ,CAA3C,CACA,CAAAuoC,CAAAL,aAAA,CAAkBloC,CAAlB,CAAA,CAA+B,CAAA,CALjC,CADuD,CAUzDyoC,QAASA,EAAmB,CAACF,CAAD,CAAOG,CAAP,CAA2BC,CAA3B,CAAoC,CAC9DD,CAAA,CAAqBA,CAAA,CAAqB,GAArB,CAA2B1yD,EAAA,CAAW0yD,CAAX,CAA+B,GAA/B,CAA3B,CAAiE,EAEtFJ,EAAA,CAAkBC,CAAlB,CAAwBH,EAAxB;AAAsCM,CAAtC,CAAsE,CAAA,CAAtE,GAA0DC,CAA1D,CACAL,EAAA,CAAkBC,CAAlB,CAAwBJ,EAAxB,CAAwCO,CAAxC,CAAwE,CAAA,CAAxE,GAA4DC,CAA5D,CAJ8D,CA/E3B,IAEjCp6D,EAAMnG,CAAAmG,IAF2B,CAGjCq6D,EAAQxgE,CAAAwgE,MAFAxgE,EAAAygE,MAIZ/5C,UAAAg6C,aAAA,CAA+BC,QAAQ,CAACL,CAAD,CAAqBvyC,CAArB,CAA4Bpf,CAA5B,CAAwC,CACzEtL,CAAA,CAAY0qB,CAAZ,CAAJ,EACeoyC,IA+CV,SAGL,GAlDeA,IAgDb,SAEF,CAFe,EAEf,EAAAh6D,CAAA,CAlDeg6D,IAkDX,SAAJ,CAlDiCG,CAkDjC,CAlDqD3xD,CAkDrD,CAnDA,GAGkBwxD,IAoDd,SAGJ,EAFEK,CAAA,CArDgBL,IAqDV,SAAN,CArDkCG,CAqDlC,CArDsD3xD,CAqDtD,CAEF,CAAIiyD,EAAA,CAvDcT,IAuDA,SAAd,CAAJ,GAvDkBA,IAwDhB,SADF,CACev6D,IAAAA,EADf,CA1DA,CAKK3G,GAAA,CAAU8uB,CAAV,CAAL,CAIMA,CAAJ,EACEyyC,CAAA,CAAM,IAAAvB,OAAN,CAAmBqB,CAAnB,CAAuC3xD,CAAvC,CACA,CAAAxI,CAAA,CAAI,IAAA+4D,UAAJ,CAAoBoB,CAApB,CAAwC3xD,CAAxC,CAFF,GAIExI,CAAA,CAAI,IAAA84D,OAAJ,CAAiBqB,CAAjB,CAAqC3xD,CAArC,CACA,CAAA6xD,CAAA,CAAM,IAAAtB,UAAN,CAAsBoB,CAAtB,CAA0C3xD,CAA1C,CALF,CAJF,EACE6xD,CAAA,CAAM,IAAAvB,OAAN,CAAmBqB,CAAnB,CAAuC3xD,CAAvC,CACA,CAAA6xD,CAAA,CAAM,IAAAtB,UAAN,CAAsBoB,CAAtB,CAA0C3xD,CAA1C,CAFF,CAYI,KAAAwwD,SAAJ,EACEe,CAAA,CAAkB,IAAlB,CA/nBUW,YA+nBV,CAAuC,CAAA,CAAvC,CAEA,CADA,IAAAvB,OACA,CADc,IAAAG,SACd,CAD8B75D,IAAAA,EAC9B,CAAAy6D,CAAA,CAAoB,IAApB,CAA0B,EAA1B,CAA8B,IAA9B,CAHF,GAKEH,CAAA,CAAkB,IAAlB,CAnoBUW,YAmoBV,CAAuC,CAAA,CAAvC,CAGA,CAFA,IAAAvB,OAEA;AAFcsB,EAAA,CAAc,IAAA3B,OAAd,CAEd,CADA,IAAAQ,SACA,CADgB,CAAC,IAAAH,OACjB,CAAAe,CAAA,CAAoB,IAApB,CAA0B,EAA1B,CAA8B,IAAAf,OAA9B,CARF,CAiBEwB,EAAA,CADE,IAAA3B,SAAJ,EAAqB,IAAAA,SAAA,CAAcmB,CAAd,CAArB,CACkB16D,IAAAA,EADlB,CAEW,IAAAq5D,OAAA,CAAYqB,CAAZ,CAAJ,CACW,CAAA,CADX,CAEI,IAAApB,UAAA,CAAeoB,CAAf,CAAJ,CACW,CAAA,CADX,CAGW,IAGlBD,EAAA,CAAoB,IAApB,CAA0BC,CAA1B,CAA8CQ,CAA9C,CACA,KAAApB,aAAAgB,aAAA,CAA+BJ,CAA/B,CAAmDQ,CAAnD,CAAkE,IAAlE,CA7C6E,CAL1C,CAuFvCF,QAASA,GAAa,CAACthE,CAAD,CAAM,CAC1B,GAAIA,CAAJ,CACE,IAAS6E,IAAAA,CAAT,GAAiB7E,EAAjB,CACE,GAAIA,CAAAa,eAAA,CAAmBgE,CAAnB,CAAJ,CACE,MAAO,CAAA,CAIb,OAAO,CAAA,CARmB,CAwwC5B48D,QAASA,GAAoB,CAACZ,CAAD,CAAO,CAClCA,CAAAa,YAAA37D,KAAA,CAAsB,QAAQ,CAACxE,CAAD,CAAQ,CACpC,MAAOs/D,EAAAc,SAAA,CAAcpgE,CAAd,CAAA,CAAuBA,CAAvB,CAA+BA,CAAAuC,SAAA,EADF,CAAtC,CADkC,CAWpC89D,QAASA,GAAa,CAACv0D,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiD,CACrE,IAAIlT,EAAO7B,CAAA,CAAUD,CAAA,CAAQ,CAAR,CAAA8B,KAAV,CAKX,IAAK0rD,CAAAt1C,CAAAs1C,QAAL,CAAuB,CACrB,IAAIiP,EAAY,CAAA,CAEhBz8D,EAAA8J,GAAA,CAAW,kBAAX,CAA+B,QAAQ,EAAG,CACxC2yD,CAAA,CAAY,CAAA,CAD4B,CAA1C,CAKAz8D,EAAA8J,GAAA,CAAW,mBAAX;AAAgC,QAAQ,CAAC4yD,CAAD,CAAK,CAI3C,GAAI/9D,CAAA,CAAY+9D,CAAAt0D,KAAZ,CAAJ,EAAwC,EAAxC,GAA4Bs0D,CAAAt0D,KAA5B,CACEq0D,CAAA,CAAY,CAAA,CAL6B,CAA7C,CASAz8D,EAAA8J,GAAA,CAAW,gBAAX,CAA6B,QAAQ,EAAG,CACtC2yD,CAAA,CAAY,CAAA,CACZl0C,EAAA,EAFsC,CAAxC,CAjBqB,CAuBvB,IAAI0lB,CAAJ,CAEI1lB,EAAWA,QAAQ,CAACm0C,CAAD,CAAK,CACtBzuB,CAAJ,GACEj5B,CAAAuV,MAAAM,OAAA,CAAsBojB,CAAtB,CACA,CAAAA,CAAA,CAAU,IAFZ,CAIA,IAAIwuB,CAAAA,CAAJ,CAAA,CAL0B,IAMtBtgE,EAAQ6D,CAAAqD,IAAA,EACRoc,EAAAA,CAAQi9C,CAARj9C,EAAci9C,CAAA56D,KAKL,WAAb,GAAIA,CAAJ,EAA6BpC,CAAAi9D,OAA7B,EAA4D,OAA5D,GAA4Cj9D,CAAAi9D,OAA5C,GACExgE,CADF,CACUof,CAAA,CAAKpf,CAAL,CADV,CAOA,EAAIs/D,CAAAmB,WAAJ,GAAwBzgE,CAAxB,EAA4C,EAA5C,GAAkCA,CAAlC,EAAkDs/D,CAAAoB,sBAAlD,GACEpB,CAAAqB,cAAA,CAAmB3gE,CAAnB,CAA0BsjB,CAA1B,CAfF,CAL0B,CA0B5B,IAAIvH,CAAA21C,SAAA,CAAkB,OAAlB,CAAJ,CACE7tD,CAAA8J,GAAA,CAAW,OAAX,CAAoBye,CAApB,CADF,KAEO,CACL,IAAIw0C,EAAgBA,QAAQ,CAACL,CAAD,CAAK7tD,CAAL,CAAYmuD,CAAZ,CAAuB,CAC5C/uB,CAAL,GACEA,CADF,CACYj5B,CAAAuV,MAAA,CAAe,QAAQ,EAAG,CAClC0jB,CAAA,CAAU,IACLp/B,EAAL,EAAcA,CAAA1S,MAAd,GAA8B6gE,CAA9B,EACEz0C,CAAA,CAASm0C,CAAT,CAHgC,CAA1B,CADZ,CADiD,CAWnD18D,EAAA8J,GAAA,CAAW,SAAX,CAAmC,QAAQ,CAAC2V,CAAD,CAAQ,CACjD,IAAIlkB,EAAMkkB,CAAAw9C,QAIE,GAAZ,GAAI1hE,CAAJ,EAAmB,EAAnB,CAAwBA,CAAxB,EAAqC,EAArC,CAA+BA,CAA/B,EAA6C,EAA7C,EAAmDA,CAAnD,EAAiE,EAAjE,EAA0DA,CAA1D;AAEAwhE,CAAA,CAAct9C,CAAd,CAAqB,IAArB,CAA2B,IAAAtjB,MAA3B,CAPiD,CAAnD,CAWA,IAAI+b,CAAA21C,SAAA,CAAkB,OAAlB,CAAJ,CACE7tD,CAAA8J,GAAA,CAAW,gBAAX,CAA6BizD,CAA7B,CAxBG,CA8BP/8D,CAAA8J,GAAA,CAAW,QAAX,CAAqBye,CAArB,CAMA,IAAI20C,EAAA,CAAyBp7D,CAAzB,CAAJ,EAAsC25D,CAAAoB,sBAAtC,EAAoE/6D,CAApE,GAA6EpC,CAAAoC,KAA7E,CACE9B,CAAA8J,GAAA,CAx0C4BqzD,yBAw0C5B,CAAmD,QAAQ,CAACT,CAAD,CAAK,CAC9D,GAAKzuB,CAAAA,CAAL,CAAc,CACZ,IAAImvB,EAAW,IAAA,SAAf,CACIC,EAAeD,CAAAE,SADnB,CAEIC,EAAmBH,CAAAI,aACvBvvB,EAAA,CAAUj5B,CAAAuV,MAAA,CAAe,QAAQ,EAAG,CAClC0jB,CAAA,CAAU,IACNmvB,EAAAE,SAAJ,GAA0BD,CAA1B,EAA0CD,CAAAI,aAA1C,GAAoED,CAApE,EACEh1C,CAAA,CAASm0C,CAAT,CAHgC,CAA1B,CAJE,CADgD,CAAhE,CAeFjB,EAAAgC,QAAA,CAAeC,QAAQ,EAAG,CAExB,IAAIvhE,EAAQs/D,CAAAc,SAAA,CAAcd,CAAAmB,WAAd,CAAA,CAAiC,EAAjC,CAAsCnB,CAAAmB,WAC9C58D,EAAAqD,IAAA,EAAJ,GAAsBlH,CAAtB,EACE6D,CAAAqD,IAAA,CAAYlH,CAAZ,CAJsB,CA/G2C,CAwJvEwhE,QAASA,GAAgB,CAACnuC,CAAD,CAASouC,CAAT,CAAkB,CACzC,MAAO,SAAQ,CAACC,CAAD,CAAMC,CAAN,CAAoB,CAAA,IAC7Bh4D,CAD6B,CACtBysC,CAEX,IAAIv1C,EAAA,CAAO6gE,CAAP,CAAJ,CACE,MAAOA,EAGT,IAAI9iE,CAAA,CAAS8iE,CAAT,CAAJ,CAAmB,CAIK,GAAtB,GAAIA,CAAAn7D,OAAA,CAAW,CAAX,CAAJ,EAA4D,GAA5D,GAA6Bm7D,CAAAn7D,OAAA,CAAWm7D,CAAA5iE,OAAX;AAAwB,CAAxB,CAA7B,GACE4iE,CADF,CACQA,CAAAj4D,UAAA,CAAc,CAAd,CAAiBi4D,CAAA5iE,OAAjB,CAA8B,CAA9B,CADR,CAGA,IAAI8iE,EAAAx+D,KAAA,CAAqBs+D,CAArB,CAAJ,CACE,MAAO,KAAI5gE,IAAJ,CAAS4gE,CAAT,CAETruC,EAAA3tB,UAAA,CAAmB,CAGnB,IAFAiE,CAEA,CAFQ0pB,CAAA9U,KAAA,CAAYmjD,CAAZ,CAER,CA6BE,MA5BA/3D,EAAAoe,MAAA,EA4BO5f,CA1BLiuC,CA0BKjuC,CA3BHw5D,CAAJ,CACQ,CACJE,KAAMF,CAAA9G,YAAA,EADF,CAEJiH,GAAIH,CAAA5G,SAAA,EAAJ+G,CAA8B,CAF1B,CAGJC,GAAIJ,CAAA3G,QAAA,EAHA,CAIJgH,GAAIL,CAAAM,SAAA,EAJA,CAKJC,GAAIP,CAAAr5D,WAAA,EALA,CAMJ65D,GAAIR,CAAAS,WAAA,EANA,CAOJC,IAAKV,CAAAW,gBAAA,EAALD,CAAsC,GAPlC,CADR,CAWQ,CAAER,KAAM,IAAR,CAAcC,GAAI,CAAlB,CAAqBC,GAAI,CAAzB,CAA4BC,GAAI,CAAhC,CAAmCE,GAAI,CAAvC,CAA0CC,GAAI,CAA9C,CAAiDE,IAAK,CAAtD,CAgBDl6D,CAbPlJ,CAAA,CAAQ0K,CAAR,CAAe,QAAQ,CAAC44D,CAAD,CAAOt+D,CAAP,CAAc,CAC/BA,CAAJ,CAAYw9D,CAAA3iE,OAAZ,GACEs3C,CAAA,CAAIqrB,CAAA,CAAQx9D,CAAR,CAAJ,CADF,CACwB,CAACs+D,CADzB,CADmC,CAArC,CAaOp6D,CAPHA,CAOGA,CAPI,IAAIrH,IAAJ,CAASs1C,CAAAyrB,KAAT,CAAmBzrB,CAAA0rB,GAAnB,CAA4B,CAA5B,CAA+B1rB,CAAA2rB,GAA/B,CAAuC3rB,CAAA4rB,GAAvC,CAA+C5rB,CAAA8rB,GAA/C,CAAuD9rB,CAAA+rB,GAAvD,EAAiE,CAAjE,CAA8E,GAA9E,CAAoE/rB,CAAAisB,IAApE,EAAsF,CAAtF,CAOJl6D,CANQ,GAMRA,CANHiuC,CAAAyrB,KAMG15D,EAHLA,CAAAwzD,YAAA,CAAiBvlB,CAAAyrB,KAAjB,CAGK15D,CAAAA,CA1CQ,CA8CnB,MAAOjK,IArD0B,CADM,CA0D3CskE,QAASA,GAAmB,CAAC78D,CAAD,CAAO0tB,CAAP,CAAeovC,CAAf,CAA0BvG,CAA1B,CAAkC,CAC5D,MAAOwG,SAA6B,CAAC52D,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiDY,CAAjD;AAA0D0B,CAA1D,CAAkE,CA0EpGwnD,QAASA,EAAW,CAAC3iE,CAAD,CAAQ,CAE1B,MAAOA,EAAP,EAAgB,EAAEA,CAAAoG,QAAF,EAAmBpG,CAAAoG,QAAA,EAAnB,GAAuCpG,CAAAoG,QAAA,EAAvC,CAFU,CAK5Bw8D,QAASA,EAAsB,CAAC17D,CAAD,CAAM,CACnC,MAAOpJ,EAAA,CAAUoJ,CAAV,CAAA,EAAmB,CAAArG,EAAA,CAAOqG,CAAP,CAAnB,CAAiC27D,CAAA,CAAmC37D,CAAnC,CAAjC,EAA4EnC,IAAAA,EAA5E,CAAwFmC,CAD5D,CAIrC27D,QAASA,EAAkC,CAAC7iE,CAAD,CAAQ2hE,CAAR,CAAsB,CAC/D,IAAI/5D,EAAW03D,CAAAwD,SAAAC,UAAA,CAAwB,UAAxB,CAEXC,EAAJ,EAAwBA,CAAxB,GAA6Cp7D,CAA7C,GAGE+5D,CAHF,CAGiBz5D,EAAA,CAAey5D,CAAf,CAA6Bh6D,EAAA,CAAiBq7D,CAAjB,CAA7B,CAHjB,CAMA,KAAIC,EAAaR,CAAA,CAAUziE,CAAV,CAAiB2hE,CAAjB,CAEZ,EAAA5I,KAAA,CAAMkK,CAAN,CAAL,EAA0Br7D,CAA1B,GACEq7D,CADF,CACe16D,EAAA,CAAuB06D,CAAvB,CAAmCr7D,CAAnC,CADf,CAGA,OAAOq7D,EAdwD,CAlFjEC,EAAA,CAAgBp3D,CAAhB,CAAuBjI,CAAvB,CAAgCN,CAAhC,CAAsC+7D,CAAtC,CAA4C35D,CAA5C,CACA06D,GAAA,CAAcv0D,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CAEA,KAAIsqD,EAAsB,MAAtBA,GAAax9D,CAAbw9D,EAAyC,eAAzCA,GAAgCx9D,CAApC,CACIg8D,CADJ,CAEIqB,CAEJ1D,EAAA8D,SAAA5+D,KAAA,CAAmB,QAAQ,CAACxE,CAAD,CAAQ,CACjC,GAAIs/D,CAAAc,SAAA,CAAcpgE,CAAd,CAAJ,CAA0B,MAAO,KAEjC,IAAIqzB,CAAAjwB,KAAA,CAAYpD,CAAZ,CAAJ,CAIE,MAAO6iE,EAAA,CAAmC7iE,CAAnC,CAA0C2hE,CAA1C,CAETrC,EAAA+D,aAAA,CAAoB19D,CATa,CAAnC,CAaA25D,EAAAa,YAAA37D,KAAA,CAAsB,QAAQ,CAACxE,CAAD,CAAQ,CACpC,GAAIA,CAAJ,EAAc,CAAAa,EAAA,CAAOb,CAAP,CAAd,CACE,KAAMsjE,GAAA,CAAc,SAAd,CAAwDtjE,CAAxD,CAAN,CAEF,GAAI2iE,CAAA,CAAY3iE,CAAZ,CAAJ,CAAwB,CACtB2hE,CAAA,CAAe3hE,CACf,KAAI4H;AAAW03D,CAAAwD,SAAAC,UAAA,CAAwB,UAAxB,CAEXn7D,EAAJ,GACEo7D,CACA,CADmBp7D,CACnB,CAAA+5D,CAAA,CAAep5D,EAAA,CAAuBo5D,CAAvB,CAAqC/5D,CAArC,CAA+C,CAAA,CAA/C,CAFjB,CAwEF,KAAI27D,EAAerH,CAEfiH,EAAJ,EAAkBvkE,CAAA,CAAS0gE,CAAAwD,SAAAC,UAAA,CAAwB,mBAAxB,CAAT,CAAlB,GACEQ,CADF,CACiBrH,CAAAp0D,QAAA,CACJ,QADI,CACMw3D,CAAAwD,SAAAC,UAAA,CAAwB,mBAAxB,CADN,CAAAj7D,QAAA,CAEJ,IAFI,CAEE,EAFF,CADjB,CAMI07D,EAAAA,CAAa/pD,CAAA,CAAQ,MAAR,CAAA,CA3EEzZ,CA2EF,CAAuBujE,CAAvB,CA3ES37D,CA2ET,CAEbu7D,EAAJ,EAAkB7D,CAAAwD,SAAAC,UAAA,CAAwB,sBAAxB,CAAlB,GACES,CADF,CACcA,CAAA17D,QAAA,CAAkB,qBAAlB,CAAyC,EAAzC,CADd,CA7EE,OAiFK07D,EA1FiB,CAYtBR,CAAA,CADArB,CACA,CADe,IAEf,OAAO,EAjB2B,CAAtC,CAqBA,IAAI7jE,CAAA,CAAUyF,CAAAg1D,IAAV,CAAJ,EAA2Bh1D,CAAAkgE,MAA3B,CAAuC,CACrC,IAAIC,EAASngE,CAAAg1D,IAATmL,EAAqBvoD,CAAA,CAAO5X,CAAAkgE,MAAP,CAAA,CAAmB33D,CAAnB,CAAzB,CACI63D,EAAef,CAAA,CAAuBc,CAAvB,CAEnBpE,EAAAsE,YAAArL,IAAA,CAAuBsL,QAAQ,CAAC7jE,CAAD,CAAQ,CACrC,MAAO,CAAC2iE,CAAA,CAAY3iE,CAAZ,CAAR,EAA8BwC,CAAA,CAAYmhE,CAAZ,CAA9B,EAA2DlB,CAAA,CAAUziE,CAAV,CAA3D,EAA+E2jE,CAD1C,CAGvCpgE,EAAAqkC,SAAA,CAAc,KAAd,CAAqB,QAAQ,CAAC1gC,CAAD,CAAM,CAC7BA,CAAJ,GAAYw8D,CAAZ,GACEC,CAEA,CAFef,CAAA,CAAuB17D,CAAvB,CAEf,CADAw8D,CACA,CADSx8D,CACT,CAAAo4D,CAAAwE,UAAA,EAHF,CADiC,CAAnC,CAPqC,CAgBvC,GAAIhmE,CAAA,CAAUyF,CAAAo+B,IAAV,CAAJ;AAA2Bp+B,CAAAwgE,MAA3B,CAAuC,CACrC,IAAIC,EAASzgE,CAAAo+B,IAATqiC,EAAqB7oD,CAAA,CAAO5X,CAAAwgE,MAAP,CAAA,CAAmBj4D,CAAnB,CAAzB,CACIm4D,EAAerB,CAAA,CAAuBoB,CAAvB,CAEnB1E,EAAAsE,YAAAjiC,IAAA,CAAuBuiC,QAAQ,CAAClkE,CAAD,CAAQ,CACrC,MAAO,CAAC2iE,CAAA,CAAY3iE,CAAZ,CAAR,EAA8BwC,CAAA,CAAYyhE,CAAZ,CAA9B,EAA2DxB,CAAA,CAAUziE,CAAV,CAA3D,EAA+EikE,CAD1C,CAGvC1gE,EAAAqkC,SAAA,CAAc,KAAd,CAAqB,QAAQ,CAAC1gC,CAAD,CAAM,CAC7BA,CAAJ,GAAY88D,CAAZ,GACEC,CAEA,CAFerB,CAAA,CAAuB17D,CAAvB,CAEf,CADA88D,CACA,CADS98D,CACT,CAAAo4D,CAAAwE,UAAA,EAHF,CADiC,CAAnC,CAPqC,CA1D6D,CAD1C,CAyH9DZ,QAASA,GAAe,CAACp3D,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6B6E,CAA7B,CAAyC,CAG/D,CADuB7E,CAAAoB,sBACvB,CADoD7iE,CAAA,CADzCgG,CAAAR,CAAQ,CAARA,CACkD49D,SAAT,CACpD,GACE3B,CAAA8D,SAAA5+D,KAAA,CAAmB,QAAQ,CAACxE,CAAD,CAAQ,CACjC,IAAIihE,EAAWp9D,CAAAP,KAAA,CAnl0BS8gE,UAml0BT,CAAXnD,EAAoD,EACxD,IAAIA,CAAAE,SAAJ,EAAyBF,CAAAI,aAAzB,CACE/B,CAAA+D,aAAA,CAAoBc,CADtB,KAKA,OAAOnkE,EAP0B,CAAnC,CAJ6D,CAgBjEqkE,QAASA,GAAqB,CAAC/E,CAAD,CAAO,CACnCA,CAAA8D,SAAA5+D,KAAA,CAAmB,QAAQ,CAACxE,CAAD,CAAQ,CACjC,GAAIs/D,CAAAc,SAAA,CAAcpgE,CAAd,CAAJ,CAA+B,MAAO,KACtC,IAAIskE,EAAAlhE,KAAA,CAAmBpD,CAAnB,CAAJ,CAA+B,MAAOi8D,WAAA,CAAWj8D,CAAX,CAEtCs/D,EAAA+D,aAAA,CAAoB,QAJa,CAAnC,CAQA/D,EAAAa,YAAA37D,KAAA,CAAsB,QAAQ,CAACxE,CAAD,CAAQ,CACpC,GAAK,CAAAs/D,CAAAc,SAAA,CAAcpgE,CAAd,CAAL,CAA2B,CACzB,GAAK,CAAA1B,CAAA,CAAS0B,CAAT,CAAL,CACE,KAAMsjE,GAAA,CAAc,QAAd;AAAyDtjE,CAAzD,CAAN,CAEFA,CAAA,CAAQA,CAAAuC,SAAA,EAJiB,CAM3B,MAAOvC,EAP6B,CAAtC,CATmC,CAoBrCukE,QAASA,GAAkB,CAACr9D,CAAD,CAAM,CAC3BpJ,CAAA,CAAUoJ,CAAV,CAAJ,EAAuB,CAAA5I,CAAA,CAAS4I,CAAT,CAAvB,GACEA,CADF,CACQ+0D,UAAA,CAAW/0D,CAAX,CADR,CAGA,OAAQe,EAAA,CAAYf,CAAZ,CAAD,CAA0BnC,IAAAA,EAA1B,CAAoBmC,CAJI,CAejCs9D,QAASA,GAAa,CAACxK,CAAD,CAAM,CAC1B,IAAIyK,EAAYzK,CAAAz3D,SAAA,EAAhB,CACImiE,EAAqBD,CAAAvgE,QAAA,CAAkB,GAAlB,CAEzB,OAA4B,EAA5B,GAAIwgE,CAAJ,CACO,EAAL,CAAS1K,CAAT,EAAsB,CAAtB,CAAgBA,CAAhB,GAEMv0D,CAFN,CAEc,UAAA8Y,KAAA,CAAgBkmD,CAAhB,CAFd,EAKW50C,MAAA,CAAOpqB,CAAA,CAAM,CAAN,CAAP,CALX,CASO,CAVT,CAaOg/D,CAAA3lE,OAbP,CAa0B4lE,CAb1B,CAa+C,CAjBrB,CAoB5BC,QAASA,GAAc,CAACC,CAAD,CAAYC,CAAZ,CAAsBC,CAAtB,CAA4B,CAG7C9kE,CAAAA,CAAQ6vB,MAAA,CAAO+0C,CAAP,CAEZ,KAAIG,GAAqC/kE,CAArC+kE,CA5BU,CA4BVA,IAAqC/kE,CAAzC,CACIglE,GAAwCH,CAAxCG,CA7BU,CA6BVA,IAAwCH,CAD5C,CAEII,GAAoCH,CAApCG,CA9BU,CA8BVA,IAAoCH,CAIxC,IAAIC,CAAJ,EAAyBC,CAAzB,EAAiDC,CAAjD,CAAmE,CACjE,IAAIC,EAAgBH,CAAA,CAAoBP,EAAA,CAAcxkE,CAAd,CAApB,CAA2C,CAA/D,CACImlE,EAAmBH,CAAA,CAAuBR,EAAA,CAAcK,CAAd,CAAvB,CAAiD,CADxE,CAEIO,EAAeH,CAAA,CAAmBT,EAAA,CAAcM,CAAd,CAAnB,CAAyC,CAF5D,CAIIO,EAAevvC,IAAA6L,IAAA,CAASujC,CAAT,CAAwBC,CAAxB,CAA0CC,CAA1C,CAJnB,CAKIE,EAAaxvC,IAAAyvC,IAAA,CAAS,EAAT,CAAaF,CAAb,CAEjBrlE,EAAA,EAAgBslE,CAChBT,EAAA,EAAsBS,CACtBR,EAAA,EAAcQ,CAEVP,EAAJ,GAAuB/kE,CAAvB,CAA+B81B,IAAAmlC,MAAA,CAAWj7D,CAAX,CAA/B,CACIglE,EAAJ,GAA0BH,CAA1B,CAAqC/uC,IAAAmlC,MAAA,CAAW4J,CAAX,CAArC,CACII,EAAJ,GAAsBH,CAAtB,CAA6BhvC,IAAAmlC,MAAA,CAAW6J,CAAX,CAA7B,CAdiE,CAiBnE,MAAqC,EAArC,IAAQ9kE,CAAR,CAAgB6kE,CAAhB,EAA4BC,CA5BqB,CAySnDU,QAASA,GAAiB,CAACrqD,CAAD,CAAShc,CAAT,CAAkBwL,CAAlB,CAAwBmgC,CAAxB,CAAoCjjC,CAApC,CAA8C,CAEtE,GAAI/J,CAAA,CAAUgtC,CAAV,CAAJ,CAA2B,CACzB26B,CAAA;AAAUtqD,CAAA,CAAO2vB,CAAP,CACV,IAAK15B,CAAAq0D,CAAAr0D,SAAL,CACE,KAAMkyD,GAAA,CAAc,WAAd,CACiC34D,CADjC,CACuCmgC,CADvC,CAAN,CAGF,MAAO26B,EAAA,CAAQtmE,CAAR,CANkB,CAQ3B,MAAO0I,EAV+D,CAmqBxE69D,QAASA,GAAc,CAAC/6D,CAAD,CAAOyW,CAAP,CAAiB,CAgGtCukD,QAASA,EAAe,CAACx7B,CAAD,CAAUC,CAAV,CAAmB,CACzC,GAAKD,CAAAA,CAAL,EAAiBrrC,CAAAqrC,CAAArrC,OAAjB,CAAiC,MAAO,EACxC,IAAKsrC,CAAAA,CAAL,EAAiBtrC,CAAAsrC,CAAAtrC,OAAjB,CAAiC,MAAOqrC,EAExC,KAAIrV,EAAS,EAAb,CAGSj1B,EAAI,CADb,EAAA,CACA,IAAA,CAAgBA,CAAhB,CAAoBsqC,CAAArrC,OAApB,CAAoCe,CAAA,EAApC,CAAyC,CAEvC,IADA,IAAIwqC,EAAQF,CAAA,CAAQtqC,CAAR,CAAZ,CACSa,EAAI,CAAb,CAAgBA,CAAhB,CAAoB0pC,CAAAtrC,OAApB,CAAoC4B,CAAA,EAApC,CACE,GAAI2pC,CAAJ,GAAcD,CAAA,CAAQ1pC,CAAR,CAAd,CAA0B,SAAS,CAErCo0B,EAAAtwB,KAAA,CAAY6lC,CAAZ,CALuC,CAQzC,MAAOvV,EAfkC,CAsB3C8wC,QAASA,EAAa,CAACC,CAAD,CAAa,CACjC,GAAKA,CAAAA,CAAL,CAAiB,MAAOA,EAExB,KAAIC,EAAcD,CAEdlnE,EAAA,CAAQknE,CAAR,CAAJ,CACEC,CADF,CACgBD,CAAAzvB,IAAA,CAAewvB,CAAf,CAAA97D,KAAA,CAAmC,GAAnC,CADhB,CAEWjM,CAAA,CAASgoE,CAAT,CAAJ,CACLC,CADK,CACS/mE,MAAAY,KAAA,CAAYkmE,CAAZ,CAAAt0D,OAAA,CACL,QAAQ,CAACnS,CAAD,CAAM,CAAE,MAAOymE,EAAA,CAAWzmE,CAAX,CAAT,CADT,CAAA0K,KAAA,CAEP,GAFO,CADT,CAIKlL,CAAA,CAASinE,CAAT,CAJL,GAKLC,CALK,CAKSD,CALT,CAKsB,EALtB,CAQP,OAAOC,EAf0B,CArHnCn7D,CAAA,CAAO,SAAP,CAAmBA,CACnB,KAAIo7D,CAEJ,OAAO,CAAC,QAAD,CAAW,QAAQ,CAAC5qD,CAAD,CAAS,CACjC,MAAO,CACLiX,SAAU,IADL,CAELhD,KAAMA,QAAQ,CAACtjB,CAAD;AAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAiDnCyiE,QAASA,EAAiB,CAACC,CAAD,CAAapuB,CAAb,CAAoB,CAC5C,IAAIquB,EAAkB,EAEtBjnE,EAAA,CAAQgnE,CAAR,CAAoB,QAAQ,CAAClvC,CAAD,CAAY,CACtC,GAAY,CAAZ,CAAI8gB,CAAJ,EAAiBsuB,CAAA,CAAYpvC,CAAZ,CAAjB,CACEovC,CAAA,CAAYpvC,CAAZ,CACA,EAD0BovC,CAAA,CAAYpvC,CAAZ,CAC1B,EADoD,CACpD,EADyD8gB,CACzD,CAAIsuB,CAAA,CAAYpvC,CAAZ,CAAJ,GAA+B,EAAU,CAAV,CAAE8gB,CAAF,CAA/B,EACEquB,CAAA1hE,KAAA,CAAqBuyB,CAArB,CAJkC,CAAxC,CASA,OAAOmvC,EAAAp8D,KAAA,CAAqB,GAArB,CAZqC,CAe9Cs8D,QAASA,EAAuB,CAACC,CAAD,CAAY,CAI1C,GAAIA,CAAJ,GAAkBjlD,CAAlB,CAA4B,CACfklD,IAAAA,EAAAA,CAAAA,CA3CbR,EAAcE,CAAA,CAAwBF,CAAxB,EAAwBA,CAkFtBniE,MAAA,CAAkB,GAAlB,CAlFF,CAAsC,CAAtC,CACdJ,EAAAklC,UAAA,CAAeq9B,CAAf,CAyC4B,CAA5B,IAGgBQ,EAvChB,CAuCgBA,CAvChB,CADAR,CACA,CADcE,CAAA,CAAwBF,CAAxB,EAAwBA,CA6EtBniE,MAAA,CAAkB,GAAlB,CA7EF,CAAuC,EAAvC,CACd,CAAAJ,CAAAolC,aAAA,CAAkBm9B,CAAlB,CA0CAS,EAAA,CAAYF,CAV8B,CA/D5C,IAAIF,EAActiE,CAAAoI,KAAA,CAAa,cAAb,CAAlB,CACIs6D,EAAY,CAAA,CADhB,CAEID,CAECH,EAAL,GAGEA,CACA,CADc7/D,CAAA,EACd,CAAAzC,CAAAoI,KAAA,CAAa,cAAb,CAA6Bk6D,CAA7B,CAJF,CAOa,UAAb,GAAIx7D,CAAJ,GACOo7D,CAOL,GANEA,CAMF,CANyB5qD,CAAA,CAAO,QAAP,CAAiBqrD,QAAkB,CAACC,CAAD,CAAS,CAEjE,MAAOA,EAAP,CAAgB,CAFiD,CAA5C,CAMzB,EAAA36D,CAAA7I,OAAA,CAAa8iE,CAAb,CAAmCK,CAAnC,CARF,CAWAt6D,EAAA7I,OAAA,CAAakY,CAAA,CAAO5X,CAAA,CAAKoH,CAAL,CAAP,CAAmBi7D,CAAnB,CAAb,CAsDAc,QAA2B,CAACC,CAAD,CAAiB,CAC1C,GAAIJ,CAAJ,GAAkBnlD,CAAlB,CAA4B,CA1C5B,IAAIwlD,EA2CYN,CA3CZM,EA2CYN,CA6BA3iE,MAAA,CAAkB,GAAlB,CAxEhB,CACIkjE,EA0C4BF,CA1C5BE,EA0C4BF,CA6BhBhjE,MAAA,CAAkB,GAAlB,CAxEhB,CAGImjE,EAAgBnB,CAAA,CAAgBiB,CAAhB,CAA+BC,CAA/B,CAHpB,CAIIE,EAAapB,CAAA,CAAgBkB,CAAhB,CAA+BD,CAA/B,CAJjB,CAMII,EAAiBhB,CAAA,CAAkBc,CAAlB,CAAkC,EAAlC,CANrB;AAOIG,EAAcjB,CAAA,CAAkBe,CAAlB,CAA8B,CAA9B,CAElBxjE,EAAAklC,UAAA,CAAew+B,CAAf,CACA1jE,EAAAolC,aAAA,CAAkBq+B,CAAlB,CAgC4B,CAI5BV,CAAA,CAAiBK,CALyB,CAtD5C,CAvBmC,CAFhC,CAD0B,CAA5B,CAJ+B,CA6kCxCnrC,QAASA,GAAoB,CAACrgB,CAAD,CAASE,CAAT,CAAqB9B,CAArB,CAAwCkX,CAAxC,CAAuD28B,CAAvD,CAAkE8Z,CAAlE,CAA8E,CACzG,MAAO,CACL90C,SAAU,GADL,CAELrmB,QAASA,QAAQ,CAAC2mB,CAAD,CAAWnvB,CAAX,CAAiB,CAKhC,IAAIsD,EAAKsU,CAAA,CAAO5X,CAAA,CAAKktB,CAAL,CAAP,CACT,OAAO02C,SAAuB,CAACr7D,CAAD,CAAQjI,CAAR,CAAiB,CAC7CA,CAAA8J,GAAA,CAAWy/C,CAAX,CAAsB,QAAQ,CAAC9pC,CAAD,CAAQ,CACpC,IAAIuK,EAAWA,QAAQ,EAAG,CACxBhnB,CAAA,CAAGiF,CAAH,CAAU,CAACu9C,OAAQ/lC,CAAT,CAAV,CADwB,CAI1B,IAAKjI,CAAAs1B,QAAL,CAEO,GAAIu2B,CAAJ,CACLp7D,CAAA9I,WAAA,CAAiB6qB,CAAjB,CADK,KAGL,IAAI,CACFA,CAAA,EADE,CAEF,MAAO3iB,CAAP,CAAc,CACdqO,CAAA,CAAkBrO,CAAlB,CADc,CAPlB,IACEY,EAAAE,OAAA,CAAa6hB,CAAb,CANkC,CAAtC,CAD6C,CANf,CAF7B,CADkG,CA+zC3Gu5C,QAASA,GAAiB,CAACplC,CAAD,CAASzoB,CAAT,CAA4B+c,CAA5B,CAAmC5D,CAAnC,CAA6CvX,CAA7C,CAAqDlD,CAArD,CAA+DwE,CAA/D,CAAyElB,CAAzE,CAA6E1B,CAA7E,CAA2F,CAEnH,IAAAwtD,YAAA,CADA,IAAA5G,WACA,CADkB5wC,MAAA3xB,IAElB,KAAAopE,gBAAA,CAAuBviE,IAAAA,EACvB,KAAA6+D,YAAA,CAAmB,EACnB,KAAA2D,iBAAA,CAAwB,EACxB,KAAAnE,SAAA,CAAgB,EAChB,KAAAjD,YAAA,CAAmB,EACnB,KAAAqH,qBAAA;AAA4B,EAC5B,KAAAC,WAAA,CAAkB,CAAA,CAClB,KAAAC,SAAA,CAAgB,CAAA,CAChB,KAAAhJ,UAAA,CAAiB,CAAA,CACjB,KAAAF,OAAA,CAAc,CAAA,CACd,KAAAC,OAAA,CAAc,CAAA,CACd,KAAAG,SAAA,CAAgB,CAAA,CAChB,KAAAR,OAAA,CAAc,EACd,KAAAC,UAAA,CAAiB,EACjB,KAAAC,SAAA,CAAgBv5D,IAAAA,EAChB,KAAAw5D,MAAA,CAAa1kD,CAAA,CAAayc,CAAA3rB,KAAb,EAA2B,EAA3B,CAA+B,CAAA,CAA/B,CAAA,CAAsCq3B,CAAtC,CACb,KAAA68B,aAAA,CAAoBC,EACpB,KAAAgE,SAAA,CAAgB6E,EAChB,KAAAC,eAAA,CAAsB,EAEtB,KAAAC,qBAAA,CAA4B,IAAAA,qBAAAlhE,KAAA,CAA+B,IAA/B,CAE5B,KAAAmhE,gBAAA,CAAuB3sD,CAAA,CAAOmb,CAAAjgB,QAAP,CACvB,KAAA0xD,sBAAA,CAA6B,IAAAD,gBAAA//B,OAC7B,KAAAigC,aAAA,CAAoB,IAAAF,gBACpB,KAAAG,aAAA,CAAoB,IAAAF,sBACpB,KAAAG,kBAAA;AAAyB,IACzB,KAAAC,cAAA,CAAqBpjE,IAAAA,EACrB,KAAAs+D,aAAA,CAAoB,OAEpB,KAAA+E,yBAAA,CAAgC,CAEhC,KAAAliC,QAAA,CAAelE,CACf,KAAAqmC,YAAA,CAAmBrmC,CAAAynB,MACnB,KAAA6e,OAAA,CAAchyC,CACd,KAAAC,UAAA,CAAiB7D,CACjB,KAAAqsC,UAAA,CAAiB9mD,CACjB,KAAAswD,UAAA,CAAiB9rD,CACjB,KAAAu9B,QAAA,CAAe7+B,CACf,KAAAM,IAAA,CAAWF,CACX,KAAAitD,mBAAA,CAA0BjvD,CAE1BylD,GAAA,CAAc,IAAd,CACAyJ,GAAA,CAAkB,IAAlB,CA9CmH,CAqzBrHA,QAASA,GAAiB,CAACnJ,CAAD,CAAO,CAS/BA,CAAAp5B,QAAAjjC,OAAA,CAAoBylE,QAAqB,CAAC58D,CAAD,CAAQ,CAC3C68D,CAAAA,CAAarJ,CAAA0I,aAAA,CAAkBl8D,CAAlB,CAKb68D,EAAJ,GAAmBrJ,CAAA+H,YAAnB,EAGG/H,CAAA+H,YAHH,GAGwB/H,CAAA+H,YAHxB,EAG4CsB,CAH5C,GAG2DA,CAH3D,EAKErJ,CAAAsJ,gBAAA,CAAqBD,CAArB,CAGF,OAAOA,EAdwC,CAAjD,CAT+B,CA+TjCE,QAASA,GAAY,CAACv9C,CAAD,CAAU,CAC7B,IAAAw9C,UAAA,CAAiBx9C,CADY,CAijB/B8hB,QAASA,GAAQ,CAAChtC,CAAD,CAAMQ,CAAN,CAAW,CAC1B3B,CAAA,CAAQ2B,CAAR,CAAa,QAAQ,CAACZ,CAAD,CAAQZ,CAAR,CAAa,CAC3BtB,CAAA,CAAUsC,CAAA,CAAIhB,CAAJ,CAAV,CAAL,GACEgB,CAAA,CAAIhB,CAAJ,CADF,CACaY,CADb,CADgC,CAAlC,CAD0B,CAr5+BV;AA4xkClB+oE,QAASA,GAAuB,CAACC,CAAD,CAAWhpE,CAAX,CAAkB,CAChDgpE,CAAA1lE,KAAA,CAAc,UAAd,CAA0BtD,CAA1B,CAQAgpE,EAAAzlE,KAAA,CAAc,UAAd,CAA0BvD,CAA1B,CATgD,CA8xClDipE,QAASA,GAAgB,CAAC9a,CAAD,CAAQ+a,CAAR,CAAoBv+C,CAApB,CAAyB,CAChD,GAAKwjC,CAAL,CAAA,CAEIvvD,CAAA,CAASuvD,CAAT,CAAJ,GACEA,CADF,CACU,IAAIltD,MAAJ,CAAW,GAAX,CAAiBktD,CAAjB,CAAyB,GAAzB,CADV,CAIA,IAAK/qD,CAAA+qD,CAAA/qD,KAAL,CACE,KAAM7E,EAAA,CAAO,WAAP,CAAA,CAAoB,UAApB,CACqD2qE,CADrD,CAEJ/a,CAFI,CAEGvlD,EAAA,CAAY+hB,CAAZ,CAFH,CAAN,CAKF,MAAOwjC,EAZP,CADgD,CAgBlDgb,QAASA,GAAW,CAACjiE,CAAD,CAAM,CACpBkiE,CAAAA,CAAS1nE,EAAA,CAAMwF,CAAN,CACb,OAAOe,EAAA,CAAYmhE,CAAZ,CAAA,CAAuB,EAAvB,CAA2BA,CAFV,CAlknC1B,IAAIprE,GAAe,CACjBD,eAAgB,CADC,CAEjBI,sBAAuB,CAAA,CAFN,CAAnB,CAuPIkrE,GAAsB,oBAvP1B,CA8PI/pE,GAAiBP,MAAA8mB,UAAAvmB,eA9PrB,CAuQIwE,EAAYA,QAAQ,CAACu3D,CAAD,CAAS,CAAC,MAAOz8D,EAAA,CAASy8D,CAAT,CAAA,CAAmBA,CAAAjuD,YAAA,EAAnB,CAA0CiuD,CAAlD,CAvQjC,CAgRIlpD,GAAYA,QAAQ,CAACkpD,CAAD,CAAS,CAAC,MAAOz8D,EAAA,CAASy8D,CAAT,CAAA,CAAmBA,CAAA79C,YAAA,EAAnB,CAA0C69C,CAAlD,CAhRjC,CAoRI58C,EApRJ,CAqRI5f,CArRJ,CAsRI6O,EAtRJ,CAuRInM,GAAoB,EAAAA,MAvRxB,CAwRI4C,GAAoB,EAAAA,OAxRxB,CAyRIK,GAAoB,EAAAA,KAzRxB,CA0RIjC,GAAoBxD,MAAA8mB,UAAAtjB,SA1RxB,CA2RIE,GAAoB1D,MAAA0D,eA3RxB;AA4RImC,GAAoBrG,CAAA,CAAO,IAAP,CA5RxB,CA+RI6N,GAAoB1O,CAAA0O,QAApBA,GAAuC1O,CAAA0O,QAAvCA,CAAwD,EAAxDA,CA/RJ,CAgSIgG,EAhSJ,CAiSIlS,GAAoB,CAOxBue,GAAA,CAAO/gB,CAAAyJ,SAAAmiE,aAiQP,KAAIrhE,EAAc4nB,MAAAkpC,MAAd9wD,EAA8BA,QAAoB,CAAC+xD,CAAD,CAAM,CAE1D,MAAOA,EAAP,GAAeA,CAF2C,CA2B5D/3D,EAAAimB,QAAA,CAAe,EAgCfhmB,GAAAgmB,QAAA,CAAmB,EAiOnB,KAAI/kB,GAAqB,wFAAzB,CAUIic,EAAOA,QAAQ,CAACpf,CAAD,CAAQ,CACzB,MAAOpB,EAAA,CAASoB,CAAT,CAAA,CAAkBA,CAAAof,KAAA,EAAlB,CAAiCpf,CADf,CAV3B,CAiBIwuD,GAAkBA,QAAQ,CAAC/J,CAAD,CAAI,CAChC,MAAOA,EAAA38C,QAAA,CACI,6BADJ,CACmC,MADnC,CAAAA,QAAA,CAGI,OAHJ,CAGa,OAHb,CADyB,CAjBlC,CA8ZIoK,GAAMA,QAAQ,EAAG,CACnB,GAAK,CAAApU,CAAA,CAAUoU,EAAAq3D,MAAV,CAAL,CAA2B,CAGzB,IAAIC,EAAgB9rE,CAAAyJ,SAAA2D,cAAA,CAA8B,UAA9B,CAAhB0+D,EACY9rE,CAAAyJ,SAAA2D,cAAA,CAA8B,eAA9B,CAEhB,IAAI0+D,CAAJ,CAAkB,CAChB,IAAIC;AAAiBD,CAAAn/D,aAAA,CAA0B,QAA1B,CAAjBo/D,EACUD,CAAAn/D,aAAA,CAA0B,aAA1B,CACd6H,GAAAq3D,MAAA,CAAY,CACV7kB,aAAc,CAAC+kB,CAAf/kB,EAAgF,EAAhFA,GAAkC+kB,CAAAvlE,QAAA,CAAuB,gBAAvB,CADxB,CAEVwlE,cAAe,CAACD,CAAhBC,EAAkF,EAAlFA,GAAmCD,CAAAvlE,QAAA,CAAuB,iBAAvB,CAFzB,CAHI,CAAlB,IAOO,CACLgO,CAAAA,CAAAA,EAUF,IAAI,CAEF,IAAI0T,QAAJ,CAAa,EAAb,CACA,CAAA,CAAA,CAAO,CAAA,CAHL,CAIF,MAAOzc,CAAP,CAAU,CACV,CAAA,CAAO,CAAA,CADG,CAdV+I,CAAAq3D,MAAA,CAAY,CACV7kB,aAAc,CADJ,CAEVglB,cAAe,CAAA,CAFL,CADP,CAbkB,CAqB3B,MAAOx3D,GAAAq3D,MAtBY,CA9ZrB,CAueI97D,GAAKA,QAAQ,EAAG,CAClB,GAAI3P,CAAA,CAAU2P,EAAAk8D,MAAV,CAAJ,CAAyB,MAAOl8D,GAAAk8D,MAChC,KAAIC,CAAJ,CACI/pE,CADJ,CACOY,EAAK2J,EAAAtL,OADZ,CACmC4L,CADnC,CAC2CC,CAC3C,KAAK9K,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBY,CAAhB,CAAoB,EAAEZ,CAAtB,CAGE,GAFA6K,CACAk/D,CADSx/D,EAAA,CAAevK,CAAf,CACT+pE,CAAAA,CAAAA,CAAKlsE,CAAAyJ,SAAA2D,cAAA,CAA8B,GAA9B,CAAoCJ,CAAA5C,QAAA,CAAe,GAAf,CAAoB,KAApB,CAApC,CAAiE,KAAjE,CACL,CAAQ,CACN6C,CAAA,CAAOi/D,CAAAv/D,aAAA,CAAgBK,CAAhB,CAAyB,IAAzB,CACP,MAFM,CAMV,MAAQ+C,GAAAk8D,MAAR,CAAmBh/D,CAbD,CAvepB,CAunBI5C,GAAa,IAvnBjB,CA6wBIqC,GAAiB,CAAC,KAAD;AAAQ,UAAR,CAAoB,KAApB,CAA2B,OAA3B,CA7wBrB,CA40BIW,GAlDJ8+D,QAA2B,CAAC1iE,CAAD,CAAW,CACpC,IAAI4L,EAAS5L,CAAA2iE,cAEb,IAAK/2D,CAAAA,CAAL,CAGE,MAAO,CAAA,CAIT,IAAM,EAAAA,CAAA,WAAkBrV,EAAAqsE,kBAAlB,EAA8Ch3D,CAA9C,WAAgErV,EAAAssE,iBAAhE,CAAN,CACE,MAAO,CAAA,CAGLtzC,EAAAA,CAAa3jB,CAAA2jB,WAGjB,OAFWuzC,CAACvzC,CAAAwzC,aAAA,CAAwB,KAAxB,CAADD,CAAiCvzC,CAAAwzC,aAAA,CAAwB,MAAxB,CAAjCD,CAAkEvzC,CAAAwzC,aAAA,CAAwB,YAAxB,CAAlED,CAEJE,MAAA,CAAW,QAAQ,CAACvpE,CAAD,CAAM,CAC9B,GAAKA,CAAAA,CAAL,CACE,MAAO,CAAA,CAET,IAAKZ,CAAAY,CAAAZ,MAAL,CACE,MAAO,CAAA,CAGT,KAAIovB,EAAOjoB,CAAAkX,cAAA,CAAuB,GAAvB,CACX+Q,EAAApC,KAAA,CAAYpsB,CAAAZ,MAEZ,IAAImH,CAAAuF,SAAA09D,OAAJ,GAAiCh7C,CAAAg7C,OAAjC,CAEE,MAAO,CAAA,CAKT,QAAQh7C,CAAA4kB,SAAR,EACE,KAAK,OAAL,CACA,KAAK,QAAL,CACA,KAAK,MAAL,CACA,KAAK,OAAL,CACA,KAAK,OAAL,CACA,KAAK,OAAL,CACE,MAAO,CAAA,CACT,SACE,MAAO,CAAA,CATX,CAlB8B,CAAzB,CAjB6B,CAkDT,CAAmBt2C,CAAAyJ,SAAnB,CA50B7B;AA6pCI8F,GAAoB,QA7pCxB,CAqqCIM,GAAkB,CAAA,CArqCtB,CAq2CIrE,GAAiB,CAr2CrB,CAy7DI8I,GAAU,CAGZq4D,KAAM,OAHM,CAIZC,MAAO,CAJK,CAKZC,MAAO,CALK,CAMZC,IAAK,CANO,CAOZC,SAAU,mBAPE,CAoSdz8D,EAAA08D,QAAA,CAAiB,OA1iGC,KA4iGdvqD,GAAUnS,CAAAyZ,MAAVtH,CAAyB,EA5iGX,CA6iGdW,GAAO,CAKX9S,EAAAM,MAAA,CAAeq8D,QAAQ,CAACtnE,CAAD,CAAO,CAE5B,MAAO,KAAAokB,MAAA,CAAWpkB,CAAA,CAAK,IAAAqnE,QAAL,CAAX,CAAP,EAAyC,EAFb,CAQ9B,KAAIhtD,GAAwB,WAA5B,CACIktD,GAAiB,OADrB,CAEIjqD,GAAkB,CAAEkqD,WAAY,UAAd,CAA0BC,WAAY,WAAtC,CAFtB,CAGIzrD,GAAe9gB,CAAA,CAAO,QAAP,CAHnB,CA2BIghB,GAAoB,+BA3BxB,CA4BIpB,GAAc,WA5BlB,CA6BIG,GAAkB,YA7BtB,CA8BIE,GAAmB,0EA9BvB,CAqCIO,GAAU,CACZgsD,MAAO,CAAC,OAAD,CADK,CAEZC,IAAK,CAAC,UAAD,CAAa,OAAb,CAFO,CAGZC,GAAI,CAAC,OAAD,CAAU,OAAV,CAHQ,CAIZC,GAAI,CAAC,IAAD;AAAO,OAAP,CAAgB,OAAhB,CAJQ,CAOdnsD,GAAAosD,MAAA,CAAgBpsD,EAAAqsD,MAAhB,CAAgCrsD,EAAAssD,SAAhC,CAAmDtsD,EAAAusD,QAAnD,CAAqEvsD,EAAAgsD,MACrEhsD,GAAAwsD,GAAA,CAAaxsD,EAAAmsD,GAKb,KAAIvsD,GAAa,CACfxL,OAAQ,CAAC,CAAD,CAAI,8BAAJ,CAAoC,WAApC,CADO,CAEfyL,SAAU,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAFK,CAAjB,CAKSxf,EAAT,KAASA,EAAT,GAAgB2f,GAAhB,CAAyB,CACvB,IAAIysD,GAAsBzsD,EAAA,CAAQ3f,EAAR,CAA1B,CACIqsE,GAAeD,EAAAjqE,MAAA,EAAAiH,QAAA,EACnBmW,GAAA,CAAWvf,EAAX,CAAA,CAAkB,CAACqsE,EAAA3sE,OAAD,CAAsB,GAAtB,CAA4B2sE,EAAA3hE,KAAA,CAAkB,IAAlB,CAA5B,CAAsD,GAAtD,CAA2D,IAA3D,CAAkE0hE,EAAA1hE,KAAA,CAAyB,KAAzB,CAAlE,CAAoG,GAApG,CAHK,CAMzB6U,EAAA+sD,SAAA,CAAsB/sD,EAAAxL,OAqGtB,KAAIwR,GAAiBjnB,CAAAiuE,KAAA9lD,UAAA+lD,SAAjBjnD,EAAgE,QAAQ,CAAC/V,CAAD,CAAM,CAEhF,MAAO,CAAG,EAAA,IAAAi9D,wBAAA,CAA6Bj9D,CAA7B,CAAA,CAAoC,EAApC,CAFsE,CAAlF,CAqTIhB,GAAkBI,CAAA6X,UAAlBjY,CAAqC,CACvCk+D,MAAOrsD,EADgC,CAEvCld,SAAUA,QAAQ,EAAG,CACnB,IAAIvC,EAAQ,EACZf,EAAA,CAAQ,IAAR,CAAc,QAAQ,CAACkK,CAAD,CAAI,CAAEnJ,CAAAwE,KAAA,CAAW,EAAX,CAAgB2E,CAAhB,CAAF,CAA1B,CACA,OAAO,GAAP,CAAanJ,CAAA8J,KAAA,CAAW,IAAX,CAAb;AAAgC,GAHb,CAFkB,CAQvC0gD,GAAIA,QAAQ,CAACvmD,CAAD,CAAQ,CAChB,MAAiB,EAAV,EAACA,CAAD,CAAepF,CAAA,CAAO,IAAA,CAAKoF,CAAL,CAAP,CAAf,CAAqCpF,CAAA,CAAO,IAAA,CAAK,IAAAC,OAAL,CAAmBmF,CAAnB,CAAP,CAD5B,CARmB,CAYvCnF,OAAQ,CAZ+B,CAavC0F,KAAMA,EAbiC,CAcvC5E,KAAM,EAAAA,KAdiC,CAevCuE,OAAQ,EAAAA,OAf+B,CArTzC,CA4UI+e,GAAe,EACnBjkB,EAAA,CAAQ,2DAAA,MAAA,CAAA,GAAA,CAAR,CAAgF,QAAQ,CAACe,CAAD,CAAQ,CAC9FkjB,EAAA,CAAapf,CAAA,CAAU9D,CAAV,CAAb,CAAA,CAAiCA,CAD6D,CAAhG,CAGA,KAAImjB,GAAmB,EACvBlkB,EAAA,CAAQ,kDAAA,MAAA,CAAA,GAAA,CAAR,CAAuE,QAAQ,CAACe,CAAD,CAAQ,CACrFmjB,EAAA,CAAiBnjB,CAAjB,CAAA,CAA0B,CAAA,CAD2D,CAAvF,CAGA,KAAIkpC,GAAe,CACjB,YAAe,WADE,CAEjB,YAAe,WAFE,CAGjB,MAAS,KAHQ,CAIjB,MAAS,KAJQ,CAKjB,UAAa,SALI,CAMjB,OAAU,MANO,CAqBnBjqC,EAAA,CAAQ,CACNgN,KAAM8U,EADA,CAENgrD,WAAYnrD,EAFN,CAGN+lB,QApcFqlC,QAAsB,CAAC3oE,CAAD,CAAO,CAC3B,IAASjE,IAAAA,CAAT,GAAgB+gB,GAAA,CAAQ9c,CAAA4c,MAAR,CAAhB,CACE,MAAO,CAAA,CAET;MAAO,CAAA,CAJoB,CAicrB,CAINhS,UAAWg+D,QAAwB,CAAC18D,CAAD,CAAQ,CACzC,IADyC,IAChC1P,EAAI,CAD4B,CACzBY,EAAK8O,CAAAzQ,OAArB,CAAmCe,CAAnC,CAAuCY,CAAvC,CAA2CZ,CAAA,EAA3C,CACE+gB,EAAA,CAAiBrR,CAAA,CAAM1P,CAAN,CAAjB,CACA,CAAAugB,EAAA,CAAU7Q,CAAA,CAAM1P,CAAN,CAAV,CAHuC,CAJrC,CAAR,CAUG,QAAQ,CAACgH,CAAD,CAAK8D,CAAL,CAAW,CACpBqD,CAAA,CAAOrD,CAAP,CAAA,CAAe9D,CADK,CAVtB,CAcA5H,EAAA,CAAQ,CACNgN,KAAM8U,EADA,CAENhT,cAAegU,EAFT,CAINjW,MAAOA,QAAQ,CAACjI,CAAD,CAAU,CAEvB,MAAOhF,EAAAoN,KAAA,CAAYpI,CAAZ,CAAqB,QAArB,CAAP,EAAyCke,EAAA,CAAoBle,CAAAqe,WAApB,EAA0Cre,CAA1C,CAAmD,CAAC,eAAD,CAAkB,QAAlB,CAAnD,CAFlB,CAJnB,CASNgK,aAAcA,QAAQ,CAAChK,CAAD,CAAU,CAE9B,MAAOhF,EAAAoN,KAAA,CAAYpI,CAAZ,CAAqB,eAArB,CAAP,EAAgDhF,CAAAoN,KAAA,CAAYpI,CAAZ,CAAqB,yBAArB,CAFlB,CAT1B,CAcNiK,WAAYgU,EAdN,CAgBNxW,SAAUA,QAAQ,CAACzH,CAAD,CAAU,CAC1B,MAAOke,GAAA,CAAoBle,CAApB,CAA6B,WAA7B,CADmB,CAhBtB,CAoBNulC,WAAYA,QAAQ,CAACvlC,CAAD,CAAU8G,CAAV,CAAgB,CAClC9G,CAAAqoE,gBAAA,CAAwBvhE,CAAxB,CADkC,CApB9B,CAwBNma,SAAU3D,EAxBJ,CA0BNgrD,IAAKA,QAAQ,CAACtoE,CAAD,CAAU8G,CAAV,CAAgB3K,CAAhB,CAAuB,CAClC2K,CAAA,CAziBO8S,EAAA,CAyiBgB9S,CAziBH7C,QAAA,CAAa8iE,EAAb,CAA6B,KAA7B,CAAb,CA2iBP,IAAI9sE,CAAA,CAAUkC,CAAV,CAAJ,CACE6D,CAAAsmB,MAAA,CAAcxf,CAAd,CAAA;AAAsB3K,CADxB,KAGE,OAAO6D,EAAAsmB,MAAA,CAAcxf,CAAd,CANyB,CA1B9B,CAoCNpH,KAAMA,QAAQ,CAACM,CAAD,CAAU8G,CAAV,CAAgB3K,CAAhB,CAAuB,CAEnC,IAAIiJ,EAAWpF,CAAAoF,SACf,IAAIA,CAAJ,GAAiBC,EAAjB,EAz8CsBkjE,CAy8CtB,GAAmCnjE,CAAnC,EAv8CoB2yB,CAu8CpB,GAAuE3yB,CAAvE,EACGpF,CAAAwG,aADH,CAAA,CAKIgiE,IAAAA,EAAiBvoE,CAAA,CAAU6G,CAAV,CAAjB0hE,CACAC,EAAgBppD,EAAA,CAAampD,CAAb,CAEpB,IAAIvuE,CAAA,CAAUkC,CAAV,CAAJ,CAGgB,IAAd,GAAIA,CAAJ,EAAiC,CAAA,CAAjC,GAAuBA,CAAvB,EAA0CssE,CAA1C,CACEzoE,CAAAqoE,gBAAA,CAAwBvhE,CAAxB,CADF,CAGE9G,CAAA0d,aAAA,CAAqB5W,CAArB,CAA2B2hE,CAAA,CAAgBD,CAAhB,CAAiCrsE,CAA5D,CANJ,KAiBE,OANAusE,EAMO,CAND1oE,CAAAwG,aAAA,CAAqBM,CAArB,CAMC,CAJH2hE,CAIG,EAJsB,IAItB,GAJcC,CAId,GAHLA,CAGK,CAHCF,CAGD,EAAQ,IAAR,GAAAE,CAAA,CAAexnE,IAAAA,EAAf,CAA2BwnE,CAzBpC,CAHmC,CApC/B,CAoENjpE,KAAMA,QAAQ,CAACO,CAAD,CAAU8G,CAAV,CAAgB3K,CAAhB,CAAuB,CACnC,GAAIlC,CAAA,CAAUkC,CAAV,CAAJ,CACE6D,CAAA,CAAQ8G,CAAR,CAAA,CAAgB3K,CADlB,KAGE,OAAO6D,EAAA,CAAQ8G,CAAR,CAJ0B,CApE/B,CA4ENo5B,KAAO,QAAQ,EAAG,CAIhByoC,QAASA,EAAO,CAAC3oE,CAAD,CAAU7D,CAAV,CAAiB,CAC/B,GAAIwC,CAAA,CAAYxC,CAAZ,CAAJ,CAAwB,CACtB,IAAIiJ,EAAWpF,CAAAoF,SACf,OAt/CgB2U,EAs/CT,GAAC3U,CAAD,EAAmCA,CAAnC,GAAgDC,EAAhD,CAAkErF,CAAAob,YAAlE,CAAwF,EAFzE,CAIxBpb,CAAAob,YAAA,CAAsBjf,CALS,CAHjCwsE,CAAAC,IAAA,CAAc,EACd,OAAOD,EAFS,CAAZ,EA5EA,CAyFNtlE,IAAKA,QAAQ,CAACrD,CAAD,CAAU7D,CAAV,CAAiB,CAC5B,GAAIwC,CAAA,CAAYxC,CAAZ,CAAJ,CAAwB,CACtB,GAAI6D,CAAA6oE,SAAJ,EAA+C,QAA/C;AAAwB9oE,EAAA,CAAUC,CAAV,CAAxB,CAAyD,CACvD,IAAIgjB,EAAS,EACb5nB,EAAA,CAAQ4E,CAAAynB,QAAR,CAAyB,QAAQ,CAACnY,CAAD,CAAS,CACpCA,CAAAw5D,SAAJ,EACE9lD,CAAAriB,KAAA,CAAY2O,CAAAnT,MAAZ,EAA4BmT,CAAA4wB,KAA5B,CAFsC,CAA1C,CAKA,OAAOld,EAPgD,CASzD,MAAOhjB,EAAA7D,MAVe,CAYxB6D,CAAA7D,MAAA,CAAgBA,CAbY,CAzFxB,CAyGNgJ,KAAMA,QAAQ,CAACnF,CAAD,CAAU7D,CAAV,CAAiB,CAC7B,GAAIwC,CAAA,CAAYxC,CAAZ,CAAJ,CACE,MAAO6D,EAAAgb,UAETc,GAAA,CAAa9b,CAAb,CAAsB,CAAA,CAAtB,CACAA,EAAAgb,UAAA,CAAoB7e,CALS,CAzGzB,CAiHN6I,MAAOwZ,EAjHD,CAAR,CAkHG,QAAQ,CAACxb,CAAD,CAAK8D,CAAL,CAAW,CAIpBqD,CAAA6X,UAAA,CAAiBlb,CAAjB,CAAA,CAAyB,QAAQ,CAACiiE,CAAD,CAAOC,CAAP,CAAa,CAAA,IACxChtE,CADwC,CACrCT,CADqC,CAExC0tE,EAAY,IAAAhuE,OAKhB,IAAI+H,CAAJ,GAAWwb,EAAX,EACK7f,CAAA,CAA2B,CAAf,GAACqE,CAAA/H,OAAD,EAAqB+H,CAArB,GAA4Bsa,EAA5B,EAA8Cta,CAA9C,GAAqDib,EAArD,CAA0E8qD,CAA1E,CAAiFC,CAA7F,CADL,CAC0G,CACxG,GAAIhvE,CAAA,CAAS+uE,CAAT,CAAJ,CAAoB,CAGlB,IAAK/sE,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBitE,CAAhB,CAA2BjtE,CAAA,EAA3B,CACE,GAAIgH,CAAJ,GAAWka,EAAX,CAEEla,CAAA,CAAG,IAAA,CAAKhH,CAAL,CAAH,CAAY+sE,CAAZ,CAFF,KAIE,KAAKxtE,CAAL,GAAYwtE,EAAZ,CACE/lE,CAAA,CAAG,IAAA,CAAKhH,CAAL,CAAH,CAAYT,CAAZ,CAAiBwtE,CAAA,CAAKxtE,CAAL,CAAjB,CAKN,OAAO,KAdW,CAkBdY,CAAAA,CAAQ6G,CAAA4lE,IAER9rE,EAAAA,CAAM6B,CAAA,CAAYxC,CAAZ,CAAD,CAAuB81B,IAAAyiC,IAAA,CAASuU,CAAT,CAAoB,CAApB,CAAvB,CAAgDA,CACzD,KAASpsE,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBC,CAApB,CAAwBD,CAAA,EAAxB,CAA6B,CAC3B,IAAIk5B,EAAY/yB,CAAA,CAAG,IAAA,CAAKnG,CAAL,CAAH,CAAYksE,CAAZ,CAAkBC,CAAlB,CAChB7sE,EAAA,CAAQA,CAAA,CAAQA,CAAR,CAAgB45B,CAAhB,CAA4BA,CAFT,CAI7B,MAAO55B,EA1B+F,CA8BxG,IAAKH,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBitE,CAAhB,CAA2BjtE,CAAA,EAA3B,CACEgH,CAAA,CAAG,IAAA,CAAKhH,CAAL,CAAH;AAAY+sE,CAAZ,CAAkBC,CAAlB,CAGF,OAAO,KA1CmC,CAJ1B,CAlHtB,CA8OA5tE,EAAA,CAAQ,CACN8sE,WAAYnrD,EADN,CAGNjT,GAAIo/D,QAAiB,CAAClpE,CAAD,CAAU8B,CAAV,CAAgBkB,CAAhB,CAAoBwZ,CAApB,CAAiC,CACpD,GAAIviB,CAAA,CAAUuiB,CAAV,CAAJ,CAA4B,KAAMhB,GAAA,CAAa,QAAb,CAAN,CAG5B,GAAK1B,EAAA,CAAkB9Z,CAAlB,CAAL,CAAA,CAIIqc,CAAAA,CAAeI,EAAA,CAAmBzc,CAAnB,CAA4B,CAAA,CAA5B,CACnB,KAAIuK,EAAS8R,CAAA9R,OAAb,CACImS,EAASL,CAAAK,OAERA,EAAL,GACEA,CADF,CACWL,CAAAK,OADX,CACiC6C,EAAA,CAAmBvf,CAAnB,CAA4BuK,CAA5B,CADjC,CAKI4+D,EAAAA,CAA6B,CAArB,EAAArnE,CAAAzB,QAAA,CAAa,GAAb,CAAA,CAAyByB,CAAAhC,MAAA,CAAW,GAAX,CAAzB,CAA2C,CAACgC,CAAD,CAiBvD,KAhBA,IAAI9F,EAAImtE,CAAAluE,OAAR,CAEImuE,EAAaA,QAAQ,CAACtnE,CAAD,CAAOye,CAAP,CAA8B8oD,CAA9B,CAA+C,CACtE,IAAIxpD,EAAWtV,CAAA,CAAOzI,CAAP,CAEV+d,EAAL,GACEA,CAEA,CAFWtV,CAAA,CAAOzI,CAAP,CAEX,CAF0B,EAE1B,CADA+d,CAAAU,sBACA,CADiCA,CACjC,CAAa,UAAb,GAAIze,CAAJ,EAA4BunE,CAA5B,EACErpE,CAAAkf,iBAAA,CAAyBpd,CAAzB,CAA+B4a,CAA/B,CAJJ,CAQAmD,EAAAlf,KAAA,CAAcqC,CAAd,CAXsE,CAcxE,CAAOhH,CAAA,EAAP,CAAA,CACE8F,CACA,CADOqnE,CAAA,CAAMntE,CAAN,CACP,CAAI8gB,EAAA,CAAgBhb,CAAhB,CAAJ,EACEsnE,CAAA,CAAWtsD,EAAA,CAAgBhb,CAAhB,CAAX,CAAkC4e,EAAlC,CACA,CAAA0oD,CAAA,CAAWtnE,CAAX,CAAiBZ,IAAAA,EAAjB,CAA4B,CAAA,CAA5B,CAFF,EAIEkoE,CAAA,CAAWtnE,CAAX,CApCJ,CAJoD,CAHhD,CAgDNqoB,IAAK5N,EAhDC,CAkDN+sD,IAAKA,QAAQ,CAACtpE,CAAD,CAAU8B,CAAV,CAAgBkB,CAAhB,CAAoB,CAC/BhD,CAAA,CAAUhF,CAAA,CAAOgF,CAAP,CAKVA,EAAA8J,GAAA,CAAWhI,CAAX,CAAiBynE,QAASA,EAAI,EAAG,CAC/BvpE,CAAAmqB,IAAA,CAAYroB,CAAZ,CAAkBkB,CAAlB,CACAhD,EAAAmqB,IAAA,CAAYroB,CAAZ,CAAkBynE,CAAlB,CAF+B,CAAjC,CAIAvpE,EAAA8J,GAAA,CAAWhI,CAAX,CAAiBkB,CAAjB,CAV+B,CAlD3B,CA+DN25B,YAAaA,QAAQ,CAAC38B,CAAD;AAAUwpE,CAAV,CAAuB,CAAA,IACtCppE,CADsC,CAC/BnC,EAAS+B,CAAAqe,WACpBvC,GAAA,CAAa9b,CAAb,CACA5E,EAAA,CAAQ,IAAI+O,CAAJ,CAAWq/D,CAAX,CAAR,CAAiC,QAAQ,CAAChqE,CAAD,CAAO,CAC1CY,CAAJ,CACEnC,CAAAwrE,aAAA,CAAoBjqE,CAApB,CAA0BY,CAAAyL,YAA1B,CADF,CAGE5N,CAAA4kC,aAAA,CAAoBrjC,CAApB,CAA0BQ,CAA1B,CAEFI,EAAA,CAAQZ,CANsC,CAAhD,CAH0C,CA/DtC,CA4ENkqE,SAAUA,QAAQ,CAAC1pE,CAAD,CAAU,CAC1B,IAAI0pE,EAAW,EACftuE,EAAA,CAAQ4E,CAAAmb,WAAR,CAA4B,QAAQ,CAACnb,CAAD,CAAU,CA/tD1B+Z,CAguDlB,GAAI/Z,CAAAoF,SAAJ,EACEskE,CAAA/oE,KAAA,CAAcX,CAAd,CAF0C,CAA9C,CAKA,OAAO0pE,EAPmB,CA5EtB,CAsFNzsC,SAAUA,QAAQ,CAACj9B,CAAD,CAAU,CAC1B,MAAOA,EAAA2pE,gBAAP,EAAkC3pE,CAAAmb,WAAlC,EAAwD,EAD9B,CAtFtB,CA0FNjW,OAAQA,QAAQ,CAAClF,CAAD,CAAUR,CAAV,CAAgB,CAC9B,IAAI4F,EAAWpF,CAAAoF,SACf,IA7uDoB2U,CA6uDpB,GAAI3U,CAAJ,EAxuD8BkZ,EAwuD9B,GAAsClZ,CAAtC,CAAA,CAEA5F,CAAA,CAAO,IAAI2K,CAAJ,CAAW3K,CAAX,CAEP,KAASxD,IAAAA,EAAI,CAAJA,CAAOY,EAAK4C,CAAAvE,OAArB,CAAkCe,CAAlC,CAAsCY,CAAtC,CAA0CZ,CAAA,EAA1C,CAEEgE,CAAAua,YAAA,CADY/a,CAAA+mD,CAAKvqD,CAALuqD,CACZ,CANF,CAF8B,CA1F1B,CAsGNqjB,QAASA,QAAQ,CAAC5pE,CAAD,CAAUR,CAAV,CAAgB,CAC/B,GAxvDoBua,CAwvDpB,GAAI/Z,CAAAoF,SAAJ,CAA4C,CAC1C,IAAIhF,EAAQJ,CAAAib,WACZ7f,EAAA,CAAQ,IAAI+O,CAAJ,CAAW3K,CAAX,CAAR,CAA0B,QAAQ,CAAC+mD,CAAD,CAAQ,CACxCvmD,CAAAypE,aAAA,CAAqBljB,CAArB,CAA4BnmD,CAA5B,CADwC,CAA1C,CAF0C,CADb,CAtG3B;AA+GNya,KAAMA,QAAQ,CAAC7a,CAAD,CAAU6pE,CAAV,CAAoB,CACR,IAAA,EAAA7uE,CAAA,CAAO6uE,CAAP,CAAAljB,GAAA,CAAoB,CAApB,CAAAnpD,MAAA,EAAA,CAA+B,CAA/B,CAAA,CAhuBtBS,EAguBa+B,CAhuBJqe,WAETpgB,EAAJ,EACEA,CAAA4kC,aAAA,CAAoBhC,CAApB,CA6tBe7gC,CA7tBf,CAGF6gC,EAAAtmB,YAAA,CA0tBiBva,CA1tBjB,CAytBkC,CA/G5B,CAmHNqsB,OAAQ3N,EAnHF,CAqHNorD,OAAQA,QAAQ,CAAC9pE,CAAD,CAAU,CACxB0e,EAAA,CAAa1e,CAAb,CAAsB,CAAA,CAAtB,CADwB,CArHpB,CAyHN+pE,MAAOA,QAAQ,CAAC/pE,CAAD,CAAUgqE,CAAV,CAAsB,CAAA,IAC/B5pE,EAAQJ,CADuB,CACd/B,EAAS+B,CAAAqe,WAE9B,IAAIpgB,CAAJ,CAAY,CACV+rE,CAAA,CAAa,IAAI7/D,CAAJ,CAAW6/D,CAAX,CAEb,KAHU,IAGDhuE,EAAI,CAHH,CAGMY,EAAKotE,CAAA/uE,OAArB,CAAwCe,CAAxC,CAA4CY,CAA5C,CAAgDZ,CAAA,EAAhD,CAAqD,CACnD,IAAIwD,EAAOwqE,CAAA,CAAWhuE,CAAX,CACXiC,EAAAwrE,aAAA,CAAoBjqE,CAApB,CAA0BY,CAAAyL,YAA1B,CACAzL,EAAA,CAAQZ,CAH2C,CAH3C,CAHuB,CAzH/B,CAuIN2hB,SAAUrD,EAvIJ,CAwINsD,YAAa5D,EAxIP,CA0INysD,YAAaA,QAAQ,CAACjqE,CAAD,CAAUud,CAAV,CAAoB2sD,CAApB,CAA+B,CAC9C3sD,CAAJ,EACEniB,CAAA,CAAQmiB,CAAAzd,MAAA,CAAe,GAAf,CAAR,CAA6B,QAAQ,CAACozB,CAAD,CAAY,CAC/C,IAAIi3C,EAAiBD,CACjBvrE,EAAA,CAAYwrE,CAAZ,CAAJ,GACEA,CADF,CACmB,CAAC7sD,EAAA,CAAetd,CAAf,CAAwBkzB,CAAxB,CADpB,CAGA,EAACi3C,CAAA,CAAiBrsD,EAAjB,CAAkCN,EAAnC,EAAsDxd,CAAtD,CAA+DkzB,CAA/D,CAL+C,CAAjD,CAFgD,CA1I9C,CAsJNj1B,OAAQA,QAAQ,CAAC+B,CAAD,CAAU,CAExB,MAAO,CADH/B,CACG,CADM+B,CAAAqe,WACN,GApyDuBC,EAoyDvB,GAAUrgB,CAAAmH,SAAV,CAA4DnH,CAA5D,CAAqE,IAFpD,CAtJpB,CA2JNgrD,KAAMA,QAAQ,CAACjpD,CAAD,CAAU,CACtB,MAAOA,EAAAoqE,mBADe,CA3JlB;AA+JNzqE,KAAMA,QAAQ,CAACK,CAAD,CAAUud,CAAV,CAAoB,CAChC,MAAIvd,EAAAqqE,qBAAJ,CACSrqE,CAAAqqE,qBAAA,CAA6B9sD,CAA7B,CADT,CAGS,EAJuB,CA/J5B,CAuKN/f,MAAOqe,EAvKD,CAyKNlR,eAAgBA,QAAQ,CAAC3K,CAAD,CAAUyf,CAAV,CAAiB6qD,CAAjB,CAAkC,CAAA,IAEpDC,CAFoD,CAE1BC,CAF0B,CAGpDjhB,EAAY9pC,CAAA3d,KAAZynD,EAA0B9pC,CAH0B,CAIpDpD,EAAeI,EAAA,CAAmBzc,CAAnB,CAInB,IAFI6f,CAEJ,EAHItV,CAGJ,CAHa8R,CAGb,EAH6BA,CAAA9R,OAG7B,GAFyBA,CAAA,CAAOg/C,CAAP,CAEzB,CAEEghB,CAmBA,CAnBa,CACXzxB,eAAgBA,QAAQ,EAAG,CAAE,IAAAl5B,iBAAA,CAAwB,CAAA,CAA1B,CADhB,CAEXF,mBAAoBA,QAAQ,EAAG,CAAE,MAAiC,CAAA,CAAjC,GAAO,IAAAE,iBAAT,CAFpB,CAGXK,yBAA0BA,QAAQ,EAAG,CAAE,IAAAF,4BAAA,CAAmC,CAAA,CAArC,CAH1B,CAIXK,8BAA+BA,QAAQ,EAAG,CAAE,MAA4C,CAAA,CAA5C,GAAO,IAAAL,4BAAT,CAJ/B,CAKXI,gBAAiB/hB,CALN,CAMX0D,KAAMynD,CANK,CAOX5oC,OAAQ3gB,CAPG,CAmBb,CARIyf,CAAA3d,KAQJ,GAPEyoE,CAOF,CAPe9sE,CAAA,CAAO8sE,CAAP;AAAmB9qD,CAAnB,CAOf,EAHAgrD,CAGA,CAHe18D,EAAA,CAAY8R,CAAZ,CAGf,CAFA2qD,CAEA,CAFcF,CAAA,CAAkB,CAACC,CAAD,CAAA5nE,OAAA,CAAoB2nE,CAApB,CAAlB,CAAyD,CAACC,CAAD,CAEvE,CAAAnvE,CAAA,CAAQqvE,CAAR,CAAsB,QAAQ,CAACznE,CAAD,CAAK,CAC5BunE,CAAAnqD,8BAAA,EAAL,EACEpd,CAAAG,MAAA,CAASnD,CAAT,CAAkBwqE,CAAlB,CAF+B,CAAnC,CA7BsD,CAzKpD,CAAR,CA6MG,QAAQ,CAACxnE,CAAD,CAAK8D,CAAL,CAAW,CAIpBqD,CAAA6X,UAAA,CAAiBlb,CAAjB,CAAA,CAAyB,QAAQ,CAACiiE,CAAD,CAAOC,CAAP,CAAa0B,CAAb,CAAmB,CAGlD,IAFA,IAAIvuE,CAAJ,CAESH,EAAI,CAFb,CAEgBY,EAAK,IAAA3B,OAArB,CAAkCe,CAAlC,CAAsCY,CAAtC,CAA0CZ,CAAA,EAA1C,CACM2C,CAAA,CAAYxC,CAAZ,CAAJ,EACEA,CACA,CADQ6G,CAAA,CAAG,IAAA,CAAKhH,CAAL,CAAH,CAAY+sE,CAAZ,CAAkBC,CAAlB,CAAwB0B,CAAxB,CACR,CAAIzwE,CAAA,CAAUkC,CAAV,CAAJ,GAEEA,CAFF,CAEUnB,CAAA,CAAOmB,CAAP,CAFV,CAFF,EAOEwf,EAAA,CAAexf,CAAf,CAAsB6G,CAAA,CAAG,IAAA,CAAKhH,CAAL,CAAH,CAAY+sE,CAAZ,CAAkBC,CAAlB,CAAwB0B,CAAxB,CAAtB,CAGJ,OAAOzwE,EAAA,CAAUkC,CAAV,CAAA,CAAmBA,CAAnB,CAA2B,IAdgB,CAJhC,CA7MtB,CAoOAgO,EAAA6X,UAAAlf,KAAA,CAAwBqH,CAAA6X,UAAAlY,GACxBK,EAAA6X,UAAA2oD,OAAA,CAA0BxgE,CAAA6X,UAAAmI,IA4D1B,KAAIygD,GAAS1vE,MAAAiD,OAAA,CAAc,IAAd,CAObqjB,GAAAQ,UAAA,CAAsB,CACpB6oD,KAAMA,QAAQ,CAACtvE,CAAD,CAAM,CACdA,CAAJ,GAAY,IAAAomB,SAAZ,GACE,IAAAA,SACA,CADgBpmB,CAChB,CAAA,IAAAqmB,WAAA,CAAkB,IAAAH,MAAAphB,QAAA,CAAmB9E,CAAnB,CAFpB,CAIA,OAAO,KAAAqmB,WALW,CADA,CAQpBkpD,cAAeA,QAAQ,CAACvvE,CAAD,CAAM,CAC3B,MAAO6I,EAAA,CAAY7I,CAAZ,CAAA;AAAmBqvE,EAAnB,CAA4BrvE,CADR,CART,CAWpB0N,IAAKA,QAAQ,CAAC1N,CAAD,CAAM,CACjBA,CAAA,CAAM,IAAAuvE,cAAA,CAAmBvvE,CAAnB,CACF25B,EAAAA,CAAM,IAAA21C,KAAA,CAAUtvE,CAAV,CACV,IAAa,EAAb,GAAI25B,CAAJ,CACE,MAAO,KAAAxT,QAAA,CAAawT,CAAb,CAJQ,CAXC,CAkBpBtQ,IAAKA,QAAQ,CAACrpB,CAAD,CAAM,CACjBA,CAAA,CAAM,IAAAuvE,cAAA,CAAmBvvE,CAAnB,CAEN,OAAgB,EAAhB,GADU,IAAAsvE,KAAA31C,CAAU35B,CAAV25B,CAFO,CAlBC,CAuBpBzzB,IAAKA,QAAQ,CAAClG,CAAD,CAAMY,CAAN,CAAa,CACxBZ,CAAA,CAAM,IAAAuvE,cAAA,CAAmBvvE,CAAnB,CACN,KAAI25B,EAAM,IAAA21C,KAAA,CAAUtvE,CAAV,CACG,GAAb,GAAI25B,CAAJ,GACEA,CADF,CACQ,IAAAtT,WADR,CAC0B,IAAAH,MAAAxmB,OAD1B,CAGA,KAAAwmB,MAAA,CAAWyT,CAAX,CAAA,CAAkB35B,CAClB,KAAAmmB,QAAA,CAAawT,CAAb,CAAA,CAAoB/4B,CAPI,CAvBN,CAmCpB4uE,OAAQA,QAAQ,CAACxvE,CAAD,CAAM,CACpBA,CAAA,CAAM,IAAAuvE,cAAA,CAAmBvvE,CAAnB,CACF25B,EAAAA,CAAM,IAAA21C,KAAA,CAAUtvE,CAAV,CACV,IAAa,EAAb,GAAI25B,CAAJ,CACE,MAAO,CAAA,CAET,KAAAzT,MAAAnhB,OAAA,CAAkB40B,CAAlB,CAAuB,CAAvB,CACA,KAAAxT,QAAAphB,OAAA,CAAoB40B,CAApB,CAAyB,CAAzB,CACA,KAAAvT,SAAA,CAAgBtnB,GAChB,KAAAunB,WAAA,CAAmB,EACnB,OAAO,CAAA,CAVa,CAnCF,CAoDtB,KAAIiD,GAAQrD,EAAZ,CAEInI,GAAgB,CAAa,QAAQ,EAAG,CAC1C,IAAA0H,KAAA;AAAY,CAAC,QAAQ,EAAG,CACtB,MAAO8D,GADe,CAAZ,CAD8B,CAAxB,CAFpB,CAuEI3C,GAAY,aAvEhB,CAwEIC,GAAU,uBAxEd,CAyEI6oD,GAAe,GAzEnB,CA0EIC,GAAS,sBA1Eb,CA2EIhpD,GAAiB,kCA3ErB,CA4EIhW,GAAkBvR,CAAA,CAAO,WAAP,CAw4BtBoN,GAAAwc,WAAA,CAl3BAK,QAAiB,CAAC3hB,CAAD,CAAKmE,CAAL,CAAeL,CAAf,CAAqB,CAAA,IAChCud,CAIJ,IAAkB,UAAlB,GAAI,MAAOrhB,EAAX,CACE,IAAM,EAAAqhB,CAAA,CAAUrhB,CAAAqhB,QAAV,CAAN,CAA6B,CAC3BA,CAAA,CAAU,EACV,IAAIrhB,CAAA/H,OAAJ,CAAe,CACb,GAAIkM,CAAJ,CAIE,KAHKpM,EAAA,CAAS+L,CAAT,CAGC,EAHkBA,CAGlB,GAFJA,CAEI,CAFG9D,CAAA8D,KAEH,EAFcsb,EAAA,CAAOpf,CAAP,CAEd,EAAAiJ,EAAA,CAAgB,UAAhB,CACyEnF,CADzE,CAAN,CAGFokE,CAAA,CAAUrpD,EAAA,CAAY7e,CAAZ,CACV5H,EAAA,CAAQ8vE,CAAA,CAAQ,CAAR,CAAAprE,MAAA,CAAiBkrE,EAAjB,CAAR,CAAwC,QAAQ,CAACjgE,CAAD,CAAM,CACpDA,CAAA9G,QAAA,CAAYgnE,EAAZ,CAAoB,QAAQ,CAACvxD,CAAD,CAAMyxD,CAAN,CAAkBrkE,CAAlB,CAAwB,CAClDud,CAAA1jB,KAAA,CAAamG,CAAb,CADkD,CAApD,CADoD,CAAtD,CATa,CAef9D,CAAAqhB,QAAA,CAAaA,CAjBc,CAA7B,CADF,IAoBWvpB,EAAA,CAAQkI,CAAR,CAAJ,EACL0jD,CAEA,CAFO1jD,CAAA/H,OAEP,CAFmB,CAEnB,CADAgQ,EAAA,CAAYjI,CAAA,CAAG0jD,CAAH,CAAZ,CAAsB,IAAtB,CACA,CAAAriC,CAAA,CAAUrhB,CAAAtF,MAAA,CAAS,CAAT,CAAYgpD,CAAZ,CAHL,EAKLz7C,EAAA,CAAYjI,CAAZ,CAAgB,IAAhB,CAAsB,CAAA,CAAtB,CAEF,OAAOqhB,EAhC6B,CAqoCtC,KAAI+mD,GAAiB1wE,CAAA,CAAO,UAAP,CAArB;AAqDI+Z,GAAuCA,QAAQ,EAAG,CACpD,IAAAsM,KAAA,CAAY3iB,CADwC,CArDtD,CA2DIuW,GAA0CA,QAAQ,EAAG,CACvD,IAAIw0C,EAAkB,IAAItkC,EAA1B,CACIwmD,EAAqB,EAEzB,KAAAtqD,KAAA,CAAY,CAAC,iBAAD,CAAoB,YAApB,CACP,QAAQ,CAACnM,CAAD,CAAoB4C,CAApB,CAAgC,CAkC3C8zD,QAASA,EAAU,CAACljE,CAAD,CAAO8Y,CAAP,CAAgB/kB,CAAhB,CAAuB,CACxC,IAAIwjD,EAAU,CAAA,CACVz+B,EAAJ,GACEA,CAEA,CAFUnmB,CAAA,CAASmmB,CAAT,CAAA,CAAoBA,CAAAphB,MAAA,CAAc,GAAd,CAApB,CACAhF,CAAA,CAAQomB,CAAR,CAAA,CAAmBA,CAAnB,CAA6B,EACvC,CAAA9lB,CAAA,CAAQ8lB,CAAR,CAAiB,QAAQ,CAACgS,CAAD,CAAY,CAC/BA,CAAJ,GACEysB,CACA,CADU,CAAA,CACV,CAAAv3C,CAAA,CAAK8qB,CAAL,CAAA,CAAkB/2B,CAFpB,CADmC,CAArC,CAHF,CAUA,OAAOwjD,EAZiC,CAe1C4rB,QAASA,EAAqB,EAAG,CAC/BnwE,CAAA,CAAQiwE,CAAR,CAA4B,QAAQ,CAACrrE,CAAD,CAAU,CAC5C,IAAIoI,EAAO+gD,CAAAlgD,IAAA,CAAoBjJ,CAApB,CACX,IAAIoI,CAAJ,CAAU,CACR,IAAIojE,EAAWlkD,EAAA,CAAatnB,CAAAN,KAAA,CAAa,OAAb,CAAb,CAAf,CACIqlC,EAAQ,EADZ,CAEIE,EAAW,EACf7pC,EAAA,CAAQgN,CAAR,CAAc,QAAQ,CAACihC,CAAD,CAASnW,CAAT,CAAoB,CAEpCmW,CAAJ,GADepoB,CAAE,CAAAuqD,CAAA,CAASt4C,CAAT,CACjB,GACMmW,CAAJ,CACEtE,CADF,GACYA,CAAA9pC,OAAA,CAAe,GAAf,CAAqB,EADjC,EACuCi4B,CADvC,CAGE+R,CAHF,GAGeA,CAAAhqC,OAAA,CAAkB,GAAlB,CAAwB,EAHvC,EAG6Ci4B,CAJ/C,CAFwC,CAA1C,CAWA93B,EAAA,CAAQ4E,CAAR,CAAiB,QAAQ,CAAC8mB,CAAD,CAAM,CACzBie,CAAJ,EACEjnB,EAAA,CAAegJ,CAAf,CAAoBie,CAApB,CAEEE,EAAJ,EACEznB,EAAA,CAAkBsJ,CAAlB,CAAuBme,CAAvB,CAL2B,CAA/B,CAQAkkB,EAAA4hB,OAAA,CAAuB/qE,CAAvB,CAvBQ,CAFkC,CAA9C,CA4BAqrE,EAAApwE,OAAA,CAA4B,CA7BG,CAhDjC,MAAO,CACL40B,QAASzxB,CADJ,CAEL0L,GAAI1L,CAFC,CAGL+rB,IAAK/rB,CAHA,CAILqtE,IAAKrtE,CAJA,CAMLuC,KAAMA,QAAQ,CAACX,CAAD;AAAUyf,CAAV,CAAiBgI,CAAjB,CAA0BikD,CAA1B,CAAwC,CAChDA,CAAJ,EACEA,CAAA,EAGFjkD,EAAA,CAAUA,CAAV,EAAqB,EACjBA,EAAAkkD,KAAJ,EACE3rE,CAAAsoE,IAAA,CAAY7gD,CAAAkkD,KAAZ,CAEElkD,EAAAmkD,GAAJ,EACE5rE,CAAAsoE,IAAA,CAAY7gD,CAAAmkD,GAAZ,CAGF,IAAInkD,CAAAtG,SAAJ,EAAwBsG,CAAArG,YAAxB,CAoEF,GAnEwCD,CAmEpC,CAnEoCsG,CAAAtG,SAmEpC,CAnEsDC,CAmEtD,CAnEsDqG,CAAArG,YAmEtD,CALAhZ,CAKA,CALO+gD,CAAAlgD,IAAA,CA9DoBjJ,CA8DpB,CAKP,EALuC,EAKvC,CAHA6rE,CAGA,CAHeP,CAAA,CAAWljE,CAAX,CAAiB0jE,CAAjB,CAAsB,CAAA,CAAtB,CAGf,CAFAC,CAEA,CAFiBT,CAAA,CAAWljE,CAAX,CAAiBikB,CAAjB,CAAyB,CAAA,CAAzB,CAEjB,CAAAw/C,CAAA,EAAgBE,CAApB,CAEE5iB,CAAA1nD,IAAA,CArE6BzB,CAqE7B,CAA6BoI,CAA7B,CAGA,CAFAijE,CAAA1qE,KAAA,CAtE6BX,CAsE7B,CAEA,CAAkC,CAAlC,GAAIqrE,CAAApwE,OAAJ,EACEuc,CAAA4rB,aAAA,CAAwBmoC,CAAxB,CAtEES,EAAAA,CAAS,IAAIp3D,CAIjBo3D,EAAAC,SAAA,EACA,OAAOD,EAtB6C,CANjD,CADoC,CADjC,CAJ2C,CA3DzD,CAiLI33D,GAAmB,CAAC,UAAD,CAA0B,QAAQ,CAAC1M,CAAD,CAAW,CAClE,IAAI4E,EAAW,IAAf,CACI2/D,EAAkB,IADtB,CAEIC,EAAe,IAEnB,KAAAC,uBAAA,CAA8BlxE,MAAAiD,OAAA,CAAc,IAAd,CAyC9B,KAAA0oC,SAAA,CAAgBC,QAAQ,CAAChgC,CAAD,CAAOkF,CAAP,CAAgB,CACtC,GAAIlF,CAAJ,EAA+B,GAA/B,GAAYA,CAAApE,OAAA,CAAY,CAAZ,CAAZ,CACE,KAAM0oE,GAAA,CAAe,SAAf,CAAuFtkE,CAAvF,CAAN,CAGF,IAAIvL,EAAMuL,CAANvL,CAAa,YACjBgR,EAAA6/D,uBAAA,CAAgCtlE,CAAA6iB,OAAA,CAAY,CAAZ,CAAhC,CAAA,CAAkDpuB,CAClDoM,EAAAqE,QAAA,CAAiBzQ,CAAjB;AAAsByQ,CAAtB,CAPsC,CA+CxC,KAAAmgE,aAAA,CAAoBE,QAAQ,CAACC,CAAD,CAAW,CACZ,CAAzB,GAAI3uE,SAAA1C,OAAJ,GACEkxE,CADF,CACiB3wE,CAAA,CAAW8wE,CAAX,CAAA,CAAuBA,CAAvB,CAAkC,IADnD,CAIA,OAAOH,EAL8B,CA2BvC,KAAAD,gBAAA,CAAuBK,QAAQ,CAACtlC,CAAD,CAAa,CAC1C,GAAyB,CAAzB,GAAItpC,SAAA1C,OAAJ,GACEixE,CADF,CACqBjlC,CAAD,WAAuB7pC,OAAvB,CAAiC6pC,CAAjC,CAA8C,IADlE,GAGwBulC,8BAChBjtE,KAAA,CAAmB2sE,CAAAxtE,SAAA,EAAnB,CAJR,CAMM,KADAwtE,EACM,CADY,IACZ,CAAAd,EAAA,CAAe,SAAf,CA9SWqB,YA8SX,CAAN,CAIN,MAAOP,EAXmC,CAc5C,KAAAnrD,KAAA,CAAY,CAAC,gBAAD,CAAmB,QAAQ,CAACrM,CAAD,CAAiB,CACtDg4D,QAASA,EAAS,CAAC1sE,CAAD,CAAU2sE,CAAV,CAAyBC,CAAzB,CAAuC,CAIvD,GAAIA,CAAJ,CAAkB,CAChB,IAAIC,CAhTyB,EAAA,CAAA,CACnC,IAAS7wE,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CA+SyC4wE,CA/SrB3xE,OAApB,CAAoCe,CAAA,EAApC,CAAyC,CACvC,IAAI8qB,EA8SmC8lD,CA9S7B,CAAQ5wE,CAAR,CACV,IAfe8wE,CAef,GAAIhmD,CAAA1hB,SAAJ,CAAmC,CACjC,CAAA,CAAO0hB,CAAP,OAAA,CADiC,CAFI,CADN,CAAA,CAAA,IAAA,EAAA,CAiTzB+lD,CAAAA,CAAJ,EAAkBA,CAAAxuD,WAAlB,EAA2CwuD,CAAAE,uBAA3C,GACEH,CADF,CACiB,IADjB,CAFgB,CAMdA,CAAJ,CACEA,CAAA7C,MAAA,CAAmB/pE,CAAnB,CADF,CAGE2sE,CAAA/C,QAAA,CAAsB5pE,CAAtB,CAbqD,CAoCzD,MAAO,CAuDL8J,GAAI4K,CAAA5K,GAvDC;AAsFLqgB,IAAKzV,CAAAyV,IAtFA,CAwGLshD,IAAK/2D,CAAA+2D,IAxGA,CAuIL57C,QAASnb,CAAAmb,QAvIJ,CAiNLhF,OAAQA,QAAQ,CAACmhD,CAAD,CAAS,CACnBA,CAAAnhD,OAAJ,EACEmhD,CAAAnhD,OAAA,EAFqB,CAjNpB,CA+OLmiD,MAAOA,QAAQ,CAAChtE,CAAD,CAAU/B,CAAV,CAAkB8rE,CAAlB,CAAyBtiD,CAAzB,CAAkC,CAC/CxpB,CAAA,CAASA,CAAT,EAAmBjD,CAAA,CAAOiD,CAAP,CACnB8rE,EAAA,CAAQA,CAAR,EAAiB/uE,CAAA,CAAO+uE,CAAP,CACjB9rE,EAAA,CAASA,CAAT,EAAmB8rE,CAAA9rE,OAAA,EACnByuE,EAAA,CAAU1sE,CAAV,CAAmB/B,CAAnB,CAA2B8rE,CAA3B,CACA,OAAOr1D,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,OAA7B,CAAsCwnB,EAAA,CAAsBC,CAAtB,CAAtC,CALwC,CA/O5C,CA+QLwlD,KAAMA,QAAQ,CAACjtE,CAAD,CAAU/B,CAAV,CAAkB8rE,CAAlB,CAAyBtiD,CAAzB,CAAkC,CAC9CxpB,CAAA,CAASA,CAAT,EAAmBjD,CAAA,CAAOiD,CAAP,CACnB8rE,EAAA,CAAQA,CAAR,EAAiB/uE,CAAA,CAAO+uE,CAAP,CACjB9rE,EAAA,CAASA,CAAT,EAAmB8rE,CAAA9rE,OAAA,EACnByuE,EAAA,CAAU1sE,CAAV,CAAmB/B,CAAnB,CAA2B8rE,CAA3B,CACA,OAAOr1D,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,MAA7B,CAAqCwnB,EAAA,CAAsBC,CAAtB,CAArC,CALuC,CA/Q3C,CA0SLylD,MAAOA,QAAQ,CAACltE,CAAD,CAAUynB,CAAV,CAAmB,CAChC,MAAO/S,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,OAA7B,CAAsCwnB,EAAA,CAAsBC,CAAtB,CAAtC,CAAsE,QAAQ,EAAG,CACtFznB,CAAAqsB,OAAA,EADsF,CAAjF,CADyB,CA1S7B,CAuULlL,SAAUA,QAAQ,CAACnhB,CAAD,CAAUkzB,CAAV,CAAqBzL,CAArB,CAA8B,CAC9CA,CAAA,CAAUD,EAAA,CAAsBC,CAAtB,CACVA,EAAAtG,SAAA,CAAmBkG,EAAA,CAAaI,CAAA0lD,SAAb,CAA+Bj6C,CAA/B,CACnB,OAAOxe,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,UAA7B,CAAyCynB,CAAzC,CAHuC,CAvU3C,CAoWLrG,YAAaA,QAAQ,CAACphB,CAAD,CAAUkzB,CAAV,CAAqBzL,CAArB,CAA8B,CACjDA,CAAA,CAAUD,EAAA,CAAsBC,CAAtB,CACVA,EAAArG,YAAA,CAAsBiG,EAAA,CAAaI,CAAArG,YAAb;AAAkC8R,CAAlC,CACtB,OAAOxe,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,aAA7B,CAA4CynB,CAA5C,CAH0C,CApW9C,CAmYL2lD,SAAUA,QAAQ,CAACptE,CAAD,CAAU8rE,CAAV,CAAez/C,CAAf,CAAuB5E,CAAvB,CAAgC,CAChDA,CAAA,CAAUD,EAAA,CAAsBC,CAAtB,CACVA,EAAAtG,SAAA,CAAmBkG,EAAA,CAAaI,CAAAtG,SAAb,CAA+B2qD,CAA/B,CACnBrkD,EAAArG,YAAA,CAAsBiG,EAAA,CAAaI,CAAArG,YAAb,CAAkCiL,CAAlC,CACtB,OAAO3X,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,UAA7B,CAAyCynB,CAAzC,CAJyC,CAnY7C,CAkbL4lD,QAASA,QAAQ,CAACrtE,CAAD,CAAU2rE,CAAV,CAAgBC,CAAhB,CAAoB14C,CAApB,CAA+BzL,CAA/B,CAAwC,CACvDA,CAAA,CAAUD,EAAA,CAAsBC,CAAtB,CACVA,EAAAkkD,KAAA,CAAelkD,CAAAkkD,KAAA,CAAeluE,CAAA,CAAOgqB,CAAAkkD,KAAP,CAAqBA,CAArB,CAAf,CAA4CA,CAC3DlkD,EAAAmkD,GAAA,CAAenkD,CAAAmkD,GAAA,CAAenuE,CAAA,CAAOgqB,CAAAmkD,GAAP,CAAmBA,CAAnB,CAAf,CAA4CA,CAG3DnkD,EAAA6lD,YAAA,CAAsBjmD,EAAA,CAAaI,CAAA6lD,YAAb,CADVp6C,CACU,EADG,mBACH,CACtB,OAAOxe,EAAA/T,KAAA,CAAoBX,CAApB,CAA6B,SAA7B,CAAwCynB,CAAxC,CAPgD,CAlbpD,CArC+C,CAA5C,CAtIsD,CAA7C,CAjLvB,CA2xBI1S,GAAgDA,QAAQ,EAAG,CAC7D,IAAAgM,KAAA,CAAY,CAAC,OAAD,CAAU,QAAQ,CAAC/H,CAAD,CAAQ,CAGpCu0D,QAASA,EAAW,CAACvqE,CAAD,CAAK,CACvBwqE,CAAA7sE,KAAA,CAAeqC,CAAf,CACuB,EAAvB,CAAIwqE,CAAAvyE,OAAJ,EACA+d,CAAA,CAAM,QAAQ,EAAG,CACf,IAAS,IAAAhd,EAAI,CAAb,CAAgBA,CAAhB,CAAoBwxE,CAAAvyE,OAApB,CAAsCe,CAAA,EAAtC,CACEwxE,CAAA,CAAUxxE,CAAV,CAAA,EAEFwxE,EAAA,CAAY,EAJG,CAAjB,CAHuB,CAFzB,IAAIA,EAAY,EAahB,OAAO,SAAQ,EAAG,CAChB,IAAIC;AAAS,CAAA,CACbF,EAAA,CAAY,QAAQ,EAAG,CACrBE,CAAA,CAAS,CAAA,CADY,CAAvB,CAGA,OAAO,SAAQ,CAACzjD,CAAD,CAAW,CACpByjD,CAAJ,CACEzjD,CAAA,EADF,CAGEujD,CAAA,CAAYvjD,CAAZ,CAJsB,CALV,CAdkB,CAA1B,CADiD,CA3xB/D,CA0zBInV,GAA8CA,QAAQ,EAAG,CAC3D,IAAAkM,KAAA,CAAY,CAAC,IAAD,CAAO,UAAP,CAAmB,mBAAnB,CAAwC,oBAAxC,CAA8D,UAA9D,CACP,QAAQ,CAACrJ,CAAD,CAAOQ,CAAP,CAAmBpD,CAAnB,CAAwCU,CAAxC,CAA8DoD,CAA9D,CAAwE,CA0CnF80D,QAASA,EAAa,CAACnvD,CAAD,CAAO,CAC3B,IAAAovD,QAAA,CAAapvD,CAAb,CAEA,KAAIqvD,EAAU94D,CAAA,EAKd,KAAA+4D,eAAA,CAAsB,EACtB,KAAAC,MAAA,CAAaC,QAAQ,CAAC/qE,CAAD,CAAK,CACpBwS,CAAA,EAAJ,CALAoD,CAAA,CAMc5V,CANd,CAAa,CAAb,CAAgB,CAAA,CAAhB,CAKA,CAGE4qE,CAAA,CAAQ5qE,CAAR,CAJsB,CAO1B,KAAAgrE,OAAA,CAAc,CAhBa,CApC7BN,CAAAO,MAAA,CAAsBC,QAAQ,CAACD,CAAD,CAAQjkD,CAAR,CAAkB,CAI9Ci/B,QAASA,EAAI,EAAG,CACd,GAAI7oD,CAAJ,GAAc6tE,CAAAhzE,OAAd,CACE+uB,CAAA,CAAS,CAAA,CAAT,CADF,KAKAikD,EAAA,CAAM7tE,CAAN,CAAA,CAAa,QAAQ,CAAC8qC,CAAD,CAAW,CACb,CAAA,CAAjB,GAAIA,CAAJ,CACElhB,CAAA,CAAS,CAAA,CAAT,CADF,EAIA5pB,CAAA,EACA,CAAA6oD,CAAA,EALA,CAD8B,CAAhC,CANc,CAHhB,IAAI7oD,EAAQ,CAEZ6oD,EAAA,EAH8C,CAqBhDykB,EAAAh0D,IAAA,CAAoBy0D,QAAQ,CAACC,CAAD,CAAUpkD,CAAV,CAAoB,CAO9CqkD,QAASA,EAAU,CAACnjC,CAAD,CAAW,CAC5B7B,CAAA,CAASA,CAAT,EAAmB6B,CACf,GAAE8I,CAAN,GAAgBo6B,CAAAnzE,OAAhB,EACE+uB,CAAA,CAASqf,CAAT,CAH0B,CAN9B,IAAI2K,EAAQ,CAAZ,CACI3K,EAAS,CAAA,CACbjuC,EAAA,CAAQgzE,CAAR,CAAiB,QAAQ,CAACpC,CAAD,CAAS,CAChCA,CAAAj/B,KAAA,CAAYshC,CAAZ,CADgC,CAAlC,CAH8C,CAkChDX;CAAA1rD,UAAA,CAA0B,CACxB2rD,QAASA,QAAQ,CAACpvD,CAAD,CAAO,CACtB,IAAAA,KAAA,CAAYA,CAAZ,EAAoB,EADE,CADA,CAKxBwuB,KAAMA,QAAQ,CAAC/pC,CAAD,CAAK,CA9DKsrE,CA+DtB,GAAI,IAAAN,OAAJ,CACEhrE,CAAA,EADF,CAGE,IAAA6qE,eAAAltE,KAAA,CAAyBqC,CAAzB,CAJe,CALK,CAaxB6+C,SAAUzjD,CAbc,CAexBmwE,WAAYA,QAAQ,EAAG,CACrB,GAAK7jC,CAAA,IAAAA,QAAL,CAAmB,CACjB,IAAI3nC,EAAO,IACX,KAAA2nC,QAAA,CAAehzB,CAAA,CAAG,QAAQ,CAACm0B,CAAD,CAAUT,CAAV,CAAkB,CAC1CroC,CAAAgqC,KAAA,CAAU,QAAQ,CAAC1D,CAAD,CAAS,CACV,CAAA,CAAf,GAAIA,CAAJ,CACE+B,CAAA,EADF,CAGES,CAAA,EAJuB,CAA3B,CAD0C,CAA7B,CAFE,CAYnB,MAAO,KAAAnB,QAbc,CAfC,CA+BxBvL,KAAMA,QAAQ,CAACqvC,CAAD,CAAiBC,CAAjB,CAAgC,CAC5C,MAAO,KAAAF,WAAA,EAAApvC,KAAA,CAAuBqvC,CAAvB,CAAuCC,CAAvC,CADqC,CA/BtB,CAmCxB,QAAS/uC,QAAQ,CAACjf,CAAD,CAAU,CACzB,MAAO,KAAA8tD,WAAA,EAAA,CAAkB,OAAlB,CAAA,CAA2B9tD,CAA3B,CADkB,CAnCH,CAuCxB,UAAW8rB,QAAQ,CAAC9rB,CAAD,CAAU,CAC3B,MAAO,KAAA8tD,WAAA,EAAA,CAAkB,SAAlB,CAAA,CAA6B9tD,CAA7B,CADoB,CAvCL,CA2CxBiuD,MAAOA,QAAQ,EAAG,CACZ,IAAAnwD,KAAAmwD,MAAJ,EACE,IAAAnwD,KAAAmwD,MAAA,EAFc,CA3CM,CAiDxBC,OAAQA,QAAQ,EAAG,CACb,IAAApwD,KAAAowD,OAAJ;AACE,IAAApwD,KAAAowD,OAAA,EAFe,CAjDK,CAuDxB5V,IAAKA,QAAQ,EAAG,CACV,IAAAx6C,KAAAw6C,IAAJ,EACE,IAAAx6C,KAAAw6C,IAAA,EAEF,KAAA6V,SAAA,CAAc,CAAA,CAAd,CAJc,CAvDQ,CA8DxB/jD,OAAQA,QAAQ,EAAG,CACb,IAAAtM,KAAAsM,OAAJ,EACE,IAAAtM,KAAAsM,OAAA,EAEF,KAAA+jD,SAAA,CAAc,CAAA,CAAd,CAJiB,CA9DK,CAqExB3C,SAAUA,QAAQ,CAAC/gC,CAAD,CAAW,CAC3B,IAAInoC,EAAO,IAjIK8rE,EAkIhB,GAAI9rE,CAAAirE,OAAJ,GACEjrE,CAAAirE,OACA,CAnImBc,CAmInB,CAAA/rE,CAAA+qE,MAAA,CAAW,QAAQ,EAAG,CACpB/qE,CAAA6rE,SAAA,CAAc1jC,CAAd,CADoB,CAAtB,CAFF,CAF2B,CArEL,CA+ExB0jC,SAAUA,QAAQ,CAAC1jC,CAAD,CAAW,CAxILojC,CAyItB,GAAI,IAAAN,OAAJ,GACE5yE,CAAA,CAAQ,IAAAyyE,eAAR,CAA6B,QAAQ,CAAC7qE,CAAD,CAAK,CACxCA,CAAA,CAAGkoC,CAAH,CADwC,CAA1C,CAIA,CADA,IAAA2iC,eAAA5yE,OACA,CAD6B,CAC7B,CAAA,IAAA+yE,OAAA,CA9IoBM,CAyItB,CAD2B,CA/EL,CA0F1B,OAAOZ,EAvJ4E,CADzE,CAD+C,CA1zB7D,CAq+BIn5D,GAA0BA,QAAQ,EAAG,CACvC,IAAAwM,KAAA,CAAY,CAAC,OAAD,CAAU,IAAV,CAAgB,iBAAhB,CAAmC,QAAQ,CAAC/H,CAAD,CAAQtB,CAAR,CAAY9C,CAAZ,CAA6B,CAElF,MAAO,SAAQ,CAAC5U,CAAD,CAAU+uE,CAAV,CAA0B,CA4BvClhE,QAASA,EAAG,EAAG,CACbmL,CAAA,CAAM,QAAQ,EAAG,CAWbyO,CAAAtG,SAAJ;CACEnhB,CAAAmhB,SAAA,CAAiBsG,CAAAtG,SAAjB,CACA,CAAAsG,CAAAtG,SAAA,CAAmB,IAFrB,CAIIsG,EAAArG,YAAJ,GACEphB,CAAAohB,YAAA,CAAoBqG,CAAArG,YAApB,CACA,CAAAqG,CAAArG,YAAA,CAAsB,IAFxB,CAIIqG,EAAAmkD,GAAJ,GACE5rE,CAAAsoE,IAAA,CAAY7gD,CAAAmkD,GAAZ,CACA,CAAAnkD,CAAAmkD,GAAA,CAAa,IAFf,CAjBOoD,EAAL,EACEhD,CAAAC,SAAA,EAEF+C,EAAA,CAAS,CAAA,CALM,CAAjB,CAOA,OAAOhD,EARM,CAvBf,IAAIvkD,EAAUsnD,CAAVtnD,EAA4B,EAC3BA,EAAAwnD,WAAL,GACExnD,CADF,CACYlnB,EAAA,CAAKknB,CAAL,CADZ,CAOIA,EAAAynD,cAAJ,GACEznD,CAAAkkD,KADF,CACiBlkD,CAAAmkD,GADjB,CAC8B,IAD9B,CAIInkD,EAAAkkD,KAAJ,GACE3rE,CAAAsoE,IAAA,CAAY7gD,CAAAkkD,KAAZ,CACA,CAAAlkD,CAAAkkD,KAAA,CAAe,IAFjB,CAjBuC,KAsBnCqD,CAtBmC,CAsB3BhD,EAAS,IAAIp3D,CACzB,OAAO,CACLu6D,MAAOthE,CADF,CAELkrD,IAAKlrD,CAFA,CAvBgC,CAFyC,CAAxE,CAD2B,CAr+BzC,CAumGIsf,EAAiBzyB,CAAA,CAAO,UAAP,CAvmGrB,CA0mGIspC,GAAuB,IAD3BorC,QAA4B,EAAG,EAS/BzgE,GAAA0V,QAAA,CAA2B,CAAC,UAAD,CAAa,uBAAb,CAkzF3Bkf,GAAAvhB,UAAAqtD,cAAA,CAAuCC,QAAQ,EAAG,CAAE,MAAO,KAAAnsC,cAAP,GAA8Ba,EAAhC,CAGlD,KAAIzM,GAAgB,sBAApB,CACI4O;AAAuB,aAD3B,CA6GIgB,GAAoBzsC,CAAA,CAAO,aAAP,CA7GxB,CAgHIisC,GAAY,4BAhHhB,CAwYI5wB,GAAqCA,QAAQ,EAAG,CAClD,IAAAgL,KAAA,CAAY,CAAC,WAAD,CAAc,QAAQ,CAACzL,CAAD,CAAY,CAC5C,MAAO,SAAQ,CAACi6D,CAAD,CAAU,CASnBA,CAAJ,CACOnqE,CAAAmqE,CAAAnqE,SADP,EAC2BmqE,CAD3B,WAC8Cv0E,EAD9C,GAEIu0E,CAFJ,CAEcA,CAAA,CAAQ,CAAR,CAFd,EAKEA,CALF,CAKYj6D,CAAA,CAAU,CAAV,CAAA65B,KAEZ,OAAOogC,EAAAC,YAAP,CAA6B,CAhBN,CADmB,CAAlC,CADsC,CAxYpD,CA+ZI/mC,GAAmB,kBA/ZvB,CAgaImB,GAAgC,CAAC,eAAgBnB,EAAhB,CAAmC,gBAApC,CAhapC,CAiaIE,GAAa,eAjajB,CAkaIC,GAAY,CACd,IAAK,IADS,CAEd,IAAK,IAFS,CAlahB,CAsaIN,GAAyB,aAta7B,CAuaIO,GAAcnuC,CAAA,CAAO,OAAP,CAvalB,CA2pEIi3C,GAAqBppC,EAAAopC,mBAArBA,CAAkDj3C,CAAA,CAAO,cAAP,CACtDi3C,GAAAc,cAAA,CAAmCg9B,QAAQ,CAACvvC,CAAD,CAAO,CAChD,KAAMyR,GAAA,CAAmB,UAAnB,CAGsDzR,CAHtD,CAAN,CADgD,CAOlDyR,GAAAC,OAAA,CAA4B89B,QAAQ,CAACxvC,CAAD,CAAOjc,CAAP,CAAY,CAC9C,MAAO0tB,GAAA,CAAmB,QAAnB,CAA6DzR,CAA7D,CAAmEjc,CAAAvlB,SAAA,EAAnE,CADuC,CAiZhD;IAAI+0C,GAAkB/4C,CAAA,CAAO,WAAP,CAAtB,CA4OIuc,GAAuCA,QAAQ,EAAG,CACpD,IAAA8J,KAAA,CAAYC,QAAQ,EAAG,CAIrB2uB,QAASA,EAAc,CAACggC,CAAD,CAAa,CAClC,IAAI3lD,EAAWA,QAAQ,CAAC5hB,CAAD,CAAO,CAC5B4hB,CAAA5hB,KAAA,CAAgBA,CAChB4hB,EAAA4lD,OAAA,CAAkB,CAAA,CAFU,CAI9B5lD,EAAA8B,GAAA,CAAc6jD,CACd,OAAO3lD,EAN2B,CAHpC,IAAI8kB,EAAYvmC,EAAAumC,UAAhB,CACI+gC,EAAc,EAWlB,OAAO,CAULlgC,eAAgBA,QAAQ,CAACtnB,CAAD,CAAM,CACxBsnD,CAAAA,CAAa,GAAbA,CAAmBjxE,CAACowC,CAAA1gC,UAAA,EAAD1P,UAAA,CAAiC,EAAjC,CACvB,KAAIuwC,EAAe,oBAAfA,CAAsC0gC,CAA1C,CACI3lD,EAAW2lB,CAAA,CAAeggC,CAAf,CACfE,EAAA,CAAY5gC,CAAZ,CAAA,CAA4BH,CAAA,CAAU6gC,CAAV,CAA5B,CAAoD3lD,CACpD,OAAOilB,EALqB,CAVzB,CA0BLG,UAAWA,QAAQ,CAACH,CAAD,CAAe,CAChC,MAAO4gC,EAAA,CAAY5gC,CAAZ,CAAA2gC,OADyB,CA1B7B,CAsCLhgC,YAAaA,QAAQ,CAACX,CAAD,CAAe,CAClC,MAAO4gC,EAAA,CAAY5gC,CAAZ,CAAA7mC,KAD2B,CAtC/B,CAiDLynC,eAAgBA,QAAQ,CAACZ,CAAD,CAAe,CAErC,OAAOH,CAAA,CADQ+gC,CAAA7lD,CAAYilB,CAAZjlB,CACE8B,GAAV,CACP,QAAO+jD,CAAA,CAAY5gC,CAAZ,CAH8B,CAjDlC,CAbc,CAD6B,CA5OtD,CAiUI6gC,GAAa,gCAjUjB,CAkUI/6B,GAAgB,CAAC,KAAQ,EAAT,CAAa,MAAS,GAAtB,CAA2B,IAAO,EAAlC,CAlUpB,CAmUII,GAAkBz6C,CAAA,CAAO,WAAP,CAnUtB;AAuXIw6C,GAAqB,eAvXzB,CA0oBI66B,GAAoB,CAMtBC,SAAS,EANa,CAYtB95B,QAAS,CAAA,CAZa,CAkBtBoD,UAAW,CAAA,CAlBW,CAwBtBhD,UAAWA,QAAQ,EAAG,CAlVtB,IAmV6Bf,IAAAA,EAAAA,IAAAA,OAAAA,CAA4BG,EAAAA,IAAAA,OAA5BH,CA3TzBE,EAAS5vC,EAAA,CA2T6B,IAAA2vC,SA3T7B,CA2TgBD,CA1T3B1uB,EAAOopD,CAAA,CAAY,GAAZ,CAAkB/pE,EAAA,CAAiB+pE,CAAjB,CAAlB,CAAgD,EA0T5B16B,CAtVzBF,EA6BgB66B,CA7BLpwE,MAAA,CAAW,GAAX,CAsVcy1C,CArVzBv5C,EAAIq5C,CAAAp6C,OAER,CAAOe,CAAA,EAAP,CAAA,CAEEq5C,CAAA,CAASr5C,CAAT,CAAA,CAAckK,EAAA,CAAiBmvC,CAAA,CAASr5C,CAAT,CAAAiI,QAAA,CAAoB,MAApB,CAA4B,GAA5B,CAAjB,CAiVd,KAAAksE,MAAA,CA9UK96B,CAAApvC,KAAAoF,CAAc,GAAdA,CA8UL,EAvTaoqC,CAAA,CAAS,GAAT,CAAeA,CAAf,CAAwB,EAuTrC,EAvT2C5uB,CAwT3C,KAAAmpD,SAAA,CAAgB,IAAAz5B,eAAA,CAAoB,IAAA45B,MAApB,CAChB,KAAA/2B,uBAAA,CAA8B,CAAA,CAHV,CAxBA,CAiDtBjB,OAAQb,EAAA,CAAe,UAAf,CAjDc,CAwEtBjvB,IAAKA,QAAQ,CAACA,CAAD,CAAM,CACjB,GAAI1pB,CAAA,CAAY0pB,CAAZ,CAAJ,CACE,MAAO,KAAA8nD,MAGT,KAAIvuE,EAAQkuE,EAAAp1D,KAAA,CAAgB2N,CAAhB,CACZ,EAAIzmB,CAAA,CAAM,CAAN,CAAJ,EAAwB,EAAxB,GAAgBymB,CAAhB,GAA4B,IAAAhd,KAAA,CAAU7F,kBAAA,CAAmB5D,CAAA,CAAM,CAAN,CAAnB,CAAV,CAC5B,EAAIA,CAAA,CAAM,CAAN,CAAJ,EAAgBA,CAAA,CAAM,CAAN,CAAhB,EAAoC,EAApC,GAA4BymB,CAA5B,GAAwC,IAAAotB,OAAA,CAAY7zC,CAAA,CAAM,CAAN,CAAZ;AAAwB,EAAxB,CACxC,KAAAilB,KAAA,CAAUjlB,CAAA,CAAM,CAAN,CAAV,EAAsB,EAAtB,CAEA,OAAO,KAVU,CAxEG,CAuGtBuuC,SAAUmH,EAAA,CAAe,YAAf,CAvGY,CAmItB/4B,KAAM+4B,EAAA,CAAe,QAAf,CAnIgB,CAuJtBxC,KAAMwC,EAAA,CAAe,QAAf,CAvJgB,CAiLtBjsC,KAAMksC,EAAA,CAAqB,QAArB,CAA+B,QAAQ,CAAClsC,CAAD,CAAO,CAClDA,CAAA,CAAgB,IAAT,GAAAA,CAAA,CAAgBA,CAAA3M,SAAA,EAAhB,CAAkC,EACzC,OAA0B,GAAnB,GAAA2M,CAAA3I,OAAA,CAAY,CAAZ,CAAA,CAAyB2I,CAAzB,CAAgC,GAAhC,CAAsCA,CAFK,CAA9C,CAjLgB,CAmOtBoqC,OAAQA,QAAQ,CAACA,CAAD,CAAS26B,CAAT,CAAqB,CACnC,OAAQzyE,SAAA1C,OAAR,EACE,KAAK,CAAL,CACE,MAAO,KAAAu6C,SACT,MAAK,CAAL,CACE,GAAIz6C,CAAA,CAAS06C,CAAT,CAAJ,EAAwBh7C,CAAA,CAASg7C,CAAT,CAAxB,CACEA,CACA,CADSA,CAAA/2C,SAAA,EACT,CAAA,IAAA82C,SAAA,CAAgB/vC,EAAA,CAAcgwC,CAAd,CAFlB,KAGO,IAAIz7C,CAAA,CAASy7C,CAAT,CAAJ,CACLA,CAMA,CANSl1C,EAAA,CAAKk1C,CAAL,CAAa,EAAb,CAMT,CAJAr6C,CAAA,CAAQq6C,CAAR,CAAgB,QAAQ,CAACt5C,CAAD,CAAQZ,CAAR,CAAa,CACtB,IAAb,EAAIY,CAAJ,EAAmB,OAAOs5C,CAAA,CAAOl6C,CAAP,CADS,CAArC,CAIA,CAAA,IAAAi6C,SAAA,CAAgBC,CAPX,KASL,MAAMN,GAAA,CAAgB,UAAhB,CAAN,CAGF,KACF,SACMx2C,CAAA,CAAYyxE,CAAZ,CAAJ,EAA8C,IAA9C,GAA+BA,CAA/B,CACE,OAAO,IAAA56B,SAAA,CAAcC,CAAd,CADT,CAGE,IAAAD,SAAA,CAAcC,CAAd,CAHF,CAG0B26B,CAxB9B,CA4BA,IAAA95B,UAAA,EACA;MAAO,KA9B4B,CAnOf,CAyRtBzvB,KAAM0wB,EAAA,CAAqB,QAArB,CAA+B,QAAQ,CAAC1wB,CAAD,CAAO,CAClD,MAAgB,KAAT,GAAAA,CAAA,CAAgBA,CAAAnoB,SAAA,EAAhB,CAAkC,EADS,CAA9C,CAzRgB,CAqStBuF,QAASA,QAAQ,EAAG,CAClB,IAAAq1C,UAAA,CAAiB,CAAA,CACjB,OAAO,KAFW,CArSE,CA2SxBl+C,EAAA,CAAQ,CAACi8C,EAAD,CAA6BN,EAA7B,CAAkDjB,EAAlD,CAAR,CAA6E,QAAQ,CAACu6B,CAAD,CAAW,CAC9FA,CAAAruD,UAAA,CAAqB9mB,MAAAiD,OAAA,CAAc4xE,EAAd,CAqBrBM,EAAAruD,UAAAqH,MAAA,CAA2BinD,QAAQ,CAACjnD,CAAD,CAAQ,CACzC,GAAKpuB,CAAA0C,SAAA1C,OAAL,CACE,MAAO,KAAA24C,QAGT,IAAIy8B,CAAJ,GAAiBv6B,EAAjB,EAAsCI,CAAA,IAAAA,QAAtC,CACE,KAAMf,GAAA,CAAgB,SAAhB,CAAN,CAMF,IAAAvB,QAAA,CAAej1C,CAAA,CAAY0qB,CAAZ,CAAA,CAAqB,IAArB,CAA4BA,CAC3C,KAAA+vB,uBAAA,CAA8B,CAAA,CAE9B,OAAO,KAfkC,CAtBmD,CAAhG,CAwkBA,KAAIm3B,GAAe71E,CAAA,CAAO,QAAP,CAAnB,CAEI+iD,GAAgB,EAAAt8C,YAAA6gB,UAAA9kB,QAFpB,CAsCIszE,GAAY/tE,CAAA,EAChBrH,EAAA,CAAQ,+CAAA,MAAA,CAAA,GAAA,CAAR,CAAoE,QAAQ,CAAC6/C,CAAD,CAAW,CAAEu1B,EAAA,CAAUv1B,CAAV,CAAA;AAAsB,CAAA,CAAxB,CAAvF,CACA,KAAIw1B,GAAS,CAAC,EAAI,IAAL,CAAW,EAAI,IAAf,CAAqB,EAAI,IAAzB,CAA+B,EAAI,IAAnC,CAAyC,EAAI,IAA7C,CAAmD,IAAK,GAAxD,CAA8D,IAAI,GAAlE,CAAb,CASIjyB,GAAQA,QAAc,CAAC/2B,CAAD,CAAU,CAClC,IAAAA,QAAA,CAAeA,CADmB,CAIpC+2B,GAAAx8B,UAAA,CAAkB,CAChB7gB,YAAaq9C,EADG,CAGhBkyB,IAAKA,QAAQ,CAACxwC,CAAD,CAAO,CAClB,IAAAA,KAAA,CAAYA,CACZ,KAAA9/B,MAAA,CAAa,CAGb,KAFA,IAAAuwE,OAEA,CAFc,EAEd,CAAO,IAAAvwE,MAAP,CAAoB,IAAA8/B,KAAAjlC,OAApB,CAAA,CAEE,GADI+1C,CACA,CADK,IAAA9Q,KAAAx9B,OAAA,CAAiB,IAAAtC,MAAjB,CACL,CAAO,GAAP,GAAA4wC,CAAA,EAAqB,GAArB,GAAcA,CAAlB,CACE,IAAA4/B,WAAA,CAAgB5/B,CAAhB,CADF,KAEO,IAAI,IAAAv2C,SAAA,CAAcu2C,CAAd,CAAJ,EAAgC,GAAhC,GAAyBA,CAAzB,EAAuC,IAAAv2C,SAAA,CAAc,IAAAo2E,KAAA,EAAd,CAAvC,CACL,IAAAC,WAAA,EADK,KAEA,IAAI,IAAAhwB,kBAAA,CAAuB,IAAAiwB,cAAA,EAAvB,CAAJ,CACL,IAAAC,UAAA,EADK,KAEA,IAAI,IAAAC,GAAA,CAAQjgC,CAAR,CAAY,aAAZ,CAAJ,CACL,IAAA2/B,OAAAhwE,KAAA,CAAiB,CAACP,MAAO,IAAAA,MAAR;AAAoB8/B,KAAM8Q,CAA1B,CAAjB,CACA,CAAA,IAAA5wC,MAAA,EAFK,KAGA,IAAI,IAAA8wE,aAAA,CAAkBlgC,CAAlB,CAAJ,CACL,IAAA5wC,MAAA,EADK,KAEA,CACL,IAAI+wE,EAAMngC,CAANmgC,CAAW,IAAAN,KAAA,EAAf,CACIO,EAAMD,CAANC,CAAY,IAAAP,KAAA,CAAU,CAAV,CADhB,CAGIQ,EAAMb,EAAA,CAAUW,CAAV,CAHV,CAIIG,EAAMd,EAAA,CAAUY,CAAV,CAFAZ,GAAAe,CAAUvgC,CAAVugC,CAGV,EAAWF,CAAX,EAAkBC,CAAlB,EACM9qC,CAEJ,CAFY8qC,CAAA,CAAMF,CAAN,CAAaC,CAAA,CAAMF,CAAN,CAAYngC,CAErC,CADA,IAAA2/B,OAAAhwE,KAAA,CAAiB,CAACP,MAAO,IAAAA,MAAR,CAAoB8/B,KAAMsG,CAA1B,CAAiCyU,SAAU,CAAA,CAA3C,CAAjB,CACA,CAAA,IAAA76C,MAAA,EAAcomC,CAAAvrC,OAHhB,EAKE,IAAAu2E,WAAA,CAAgB,4BAAhB,CAA8C,IAAApxE,MAA9C,CAA0D,IAAAA,MAA1D,CAAuE,CAAvE,CAXG,CAeT,MAAO,KAAAuwE,OAjCW,CAHJ,CAuChBM,GAAIA,QAAQ,CAACjgC,CAAD,CAAKygC,CAAL,CAAY,CACtB,MAA8B,EAA9B,GAAOA,CAAApxE,QAAA,CAAc2wC,CAAd,CADe,CAvCR,CA2ChB6/B,KAAMA,QAAQ,CAAC70E,CAAD,CAAI,CACZm6D,CAAAA,CAAMn6D,CAANm6D,EAAW,CACf,OAAQ,KAAA/1D,MAAD,CAAc+1D,CAAd,CAAoB,IAAAj2B,KAAAjlC,OAApB,CAAwC,IAAAilC,KAAAx9B,OAAA,CAAiB,IAAAtC,MAAjB,CAA8B+1D,CAA9B,CAAxC,CAA6E,CAAA,CAFpE,CA3CF,CAgDhB17D,SAAUA,QAAQ,CAACu2C,CAAD,CAAK,CACrB,MAAQ,GAAR,EAAeA,CAAf,EAA2B,GAA3B,EAAqBA,CAArB,EAAiD,QAAjD;AAAmC,MAAOA,EADrB,CAhDP,CAoDhBkgC,aAAcA,QAAQ,CAAClgC,CAAD,CAAK,CAEzB,MAAe,GAAf,GAAQA,CAAR,EAA6B,IAA7B,GAAsBA,CAAtB,EAA4C,IAA5C,GAAqCA,CAArC,EACe,IADf,GACQA,CADR,EAC8B,IAD9B,GACuBA,CADvB,EAC6C,QAD7C,GACsCA,CAHb,CApDX,CA0DhB8P,kBAAmBA,QAAQ,CAAC9P,CAAD,CAAK,CAC9B,MAAO,KAAAvpB,QAAAq5B,kBAAA,CACH,IAAAr5B,QAAAq5B,kBAAA,CAA+B9P,CAA/B,CAAmC,IAAA0gC,YAAA,CAAiB1gC,CAAjB,CAAnC,CADG,CAEH,IAAA2gC,uBAAA,CAA4B3gC,CAA5B,CAH0B,CA1DhB,CAgEhB2gC,uBAAwBA,QAAQ,CAAC3gC,CAAD,CAAK,CACnC,MAAQ,GAAR,EAAeA,CAAf,EAA2B,GAA3B,EAAqBA,CAArB,EACQ,GADR,EACeA,CADf,EAC2B,GAD3B,EACqBA,CADrB,EAEQ,GAFR,GAEgBA,CAFhB,EAE6B,GAF7B,GAEsBA,CAHa,CAhErB,CAsEhB+P,qBAAsBA,QAAQ,CAAC/P,CAAD,CAAK,CACjC,MAAO,KAAAvpB,QAAAs5B,qBAAA,CACH,IAAAt5B,QAAAs5B,qBAAA,CAAkC/P,CAAlC,CAAsC,IAAA0gC,YAAA,CAAiB1gC,CAAjB,CAAtC,CADG,CAEH,IAAA4gC,0BAAA,CAA+B5gC,CAA/B,CAH6B,CAtEnB;AA4EhB4gC,0BAA2BA,QAAQ,CAAC5gC,CAAD,CAAK6gC,CAAL,CAAS,CAC1C,MAAO,KAAAF,uBAAA,CAA4B3gC,CAA5B,CAAgC6gC,CAAhC,CAAP,EAA8C,IAAAp3E,SAAA,CAAcu2C,CAAd,CADJ,CA5E5B,CAgFhB0gC,YAAaA,QAAQ,CAAC1gC,CAAD,CAAK,CACxB,MAAkB,EAAlB,GAAIA,CAAA/1C,OAAJ,CAA4B+1C,CAAA8gC,WAAA,CAAc,CAAd,CAA5B,EAEQ9gC,CAAA8gC,WAAA,CAAc,CAAd,CAFR,EAE4B,EAF5B,EAEkC9gC,CAAA8gC,WAAA,CAAc,CAAd,CAFlC,CAEqD,QAH7B,CAhFV,CAsFhBf,cAAeA,QAAQ,EAAG,CACxB,IAAI//B,EAAK,IAAA9Q,KAAAx9B,OAAA,CAAiB,IAAAtC,MAAjB,CAAT,CACIywE,EAAO,IAAAA,KAAA,EACX,IAAKA,CAAAA,CAAL,CACE,MAAO7/B,EAET,KAAI+gC,EAAM/gC,CAAA8gC,WAAA,CAAc,CAAd,CAAV,CACIE,EAAMnB,CAAAiB,WAAA,CAAgB,CAAhB,CACV,OAAW,MAAX,EAAIC,CAAJ,EAA4B,KAA5B,EAAqBA,CAArB,EAA6C,KAA7C,EAAsCC,CAAtC,EAA8D,KAA9D,EAAuDA,CAAvD,CACShhC,CADT,CACc6/B,CADd,CAGO7/B,CAXiB,CAtFV,CAoGhBihC,cAAeA,QAAQ,CAACjhC,CAAD,CAAK,CAC1B,MAAe,GAAf,GAAQA,CAAR,EAA6B,GAA7B,GAAsBA,CAAtB,EAAoC,IAAAv2C,SAAA,CAAcu2C,CAAd,CADV,CApGZ,CAwGhBwgC,WAAYA,QAAQ,CAACnqE,CAAD,CAAQ8nE,CAAR,CAAepW,CAAf,CAAoB,CACtCA,CAAA,CAAMA,CAAN,EAAa,IAAA34D,MACT8xE,EAAAA;AAAUj4E,CAAA,CAAUk1E,CAAV,CAAA,CACJ,IADI,CACGA,CADH,CACY,GADZ,CACkB,IAAA/uE,MADlB,CAC+B,IAD/B,CACsC,IAAA8/B,KAAAt6B,UAAA,CAAoBupE,CAApB,CAA2BpW,CAA3B,CADtC,CACwE,GADxE,CAEJ,GAFI,CAEEA,CAChB,MAAMwX,GAAA,CAAa,QAAb,CACFlpE,CADE,CACK6qE,CADL,CACa,IAAAhyC,KADb,CAAN,CALsC,CAxGxB,CAiHhB4wC,WAAYA,QAAQ,EAAG,CAGrB,IAFA,IAAIhd,EAAS,EAAb,CACIqb,EAAQ,IAAA/uE,MACZ,CAAO,IAAAA,MAAP,CAAoB,IAAA8/B,KAAAjlC,OAApB,CAAA,CAAsC,CACpC,IAAI+1C,EAAK/wC,CAAA,CAAU,IAAAigC,KAAAx9B,OAAA,CAAiB,IAAAtC,MAAjB,CAAV,CACT,IAAW,GAAX,GAAI4wC,CAAJ,EAAkB,IAAAv2C,SAAA,CAAcu2C,CAAd,CAAlB,CACE8iB,CAAA,EAAU9iB,CADZ,KAEO,CACL,IAAImhC,EAAS,IAAAtB,KAAA,EACb,IAAW,GAAX,GAAI7/B,CAAJ,EAAkB,IAAAihC,cAAA,CAAmBE,CAAnB,CAAlB,CACEre,CAAA,EAAU9iB,CADZ,KAEO,IAAI,IAAAihC,cAAA,CAAmBjhC,CAAnB,CAAJ,EACHmhC,CADG,EACO,IAAA13E,SAAA,CAAc03E,CAAd,CADP,EAEkC,GAFlC,GAEHre,CAAApxD,OAAA,CAAcoxD,CAAA74D,OAAd,CAA8B,CAA9B,CAFG,CAGL64D,CAAA,EAAU9iB,CAHL,KAIA,IAAI,CAAA,IAAAihC,cAAA,CAAmBjhC,CAAnB,CAAJ,EACDmhC,CADC,EACU,IAAA13E,SAAA,CAAc03E,CAAd,CADV,EAEkC,GAFlC,GAEHre,CAAApxD,OAAA,CAAcoxD,CAAA74D,OAAd,CAA8B,CAA9B,CAFG,CAKL,KALK,KAGL,KAAAu2E,WAAA,CAAgB,kBAAhB,CAXG,CAgBP,IAAApxE,MAAA,EApBoC,CAsBtC,IAAAuwE,OAAAhwE,KAAA,CAAiB,CACfP,MAAO+uE,CADQ;AAEfjvC,KAAM4zB,CAFS,CAGfvmD,SAAU,CAAA,CAHK,CAIfpR,MAAO6vB,MAAA,CAAO8nC,CAAP,CAJQ,CAAjB,CAzBqB,CAjHP,CAkJhBkd,UAAWA,QAAQ,EAAG,CACpB,IAAI7B,EAAQ,IAAA/uE,MAEZ,KADA,IAAAA,MACA,EADc,IAAA2wE,cAAA,EAAA91E,OACd,CAAO,IAAAmF,MAAP,CAAoB,IAAA8/B,KAAAjlC,OAApB,CAAA,CAAsC,CACpC,IAAI+1C,EAAK,IAAA+/B,cAAA,EACT,IAAK,CAAA,IAAAhwB,qBAAA,CAA0B/P,CAA1B,CAAL,CACE,KAEF,KAAA5wC,MAAA,EAAc4wC,CAAA/1C,OALsB,CAOtC,IAAA01E,OAAAhwE,KAAA,CAAiB,CACfP,MAAO+uE,CADQ,CAEfjvC,KAAM,IAAAA,KAAAxiC,MAAA,CAAgByxE,CAAhB,CAAuB,IAAA/uE,MAAvB,CAFS,CAGf4mC,WAAY,CAAA,CAHG,CAAjB,CAVoB,CAlJN,CAmKhB4pC,WAAYA,QAAQ,CAACwB,CAAD,CAAQ,CAC1B,IAAIjD,EAAQ,IAAA/uE,MACZ,KAAAA,MAAA,EAIA,KAHA,IAAIo3D,EAAS,EAAb,CACI6a,EAAYD,CADhB,CAEIrhC,EAAS,CAAA,CACb,CAAO,IAAA3wC,MAAP,CAAoB,IAAA8/B,KAAAjlC,OAApB,CAAA,CAAsC,CACpC,IAAI+1C,EAAK,IAAA9Q,KAAAx9B,OAAA,CAAiB,IAAAtC,MAAjB,CAAT,CACAiyE,EAAAA,CAAAA,CAAarhC,CACb,IAAID,CAAJ,CACa,GAAX,GAAIC,CAAJ,EACMshC,CAKJ,CALU,IAAApyC,KAAAt6B,UAAA,CAAoB,IAAAxF,MAApB;AAAiC,CAAjC,CAAoC,IAAAA,MAApC,CAAiD,CAAjD,CAKV,CAJKkyE,CAAA1wE,MAAA,CAAU,aAAV,CAIL,EAHE,IAAA4vE,WAAA,CAAgB,6BAAhB,CAAgDc,CAAhD,CAAsD,GAAtD,CAGF,CADA,IAAAlyE,MACA,EADc,CACd,CAAAo3D,CAAA,EAAU+a,MAAAC,aAAA,CAAoBz0E,QAAA,CAASu0E,CAAT,CAAc,EAAd,CAApB,CANZ,EASE9a,CATF,EAQYiZ,EAAAgC,CAAOzhC,CAAPyhC,CARZ,EAS4BzhC,CAE5B,CAAAD,CAAA,CAAS,CAAA,CAZX,KAaO,IAAW,IAAX,GAAIC,CAAJ,CACLD,CAAA,CAAS,CAAA,CADJ,KAEA,CAAA,GAAIC,CAAJ,GAAWohC,CAAX,CAAkB,CACvB,IAAAhyE,MAAA,EACA,KAAAuwE,OAAAhwE,KAAA,CAAiB,CACfP,MAAO+uE,CADQ,CAEfjvC,KAAMmyC,CAFS,CAGf9kE,SAAU,CAAA,CAHK,CAIfpR,MAAOq7D,CAJQ,CAAjB,CAMA,OARuB,CAUvBA,CAAA,EAAUxmB,CAVL,CAYP,IAAA5wC,MAAA,EA9BoC,CAgCtC,IAAAoxE,WAAA,CAAgB,oBAAhB,CAAsCrC,CAAtC,CAtC0B,CAnKZ,CA6MlB,KAAIx0B,EAAMA,QAAY,CAAC2C,CAAD,CAAQ71B,CAAR,CAAiB,CACrC,IAAA61B,MAAA,CAAaA,CACb,KAAA71B,QAAA,CAAeA,CAFsB,CAKvCkzB,EAAAc,QAAA,CAAc,SACdd,EAAA+3B,oBAAA,CAA0B,qBAC1B/3B,EAAA6B,qBAAA,CAA2B,sBAC3B7B,EAAAsB,sBAAA;AAA4B,uBAC5BtB,EAAAqB,kBAAA,CAAwB,mBACxBrB,EAAAK,iBAAA,CAAuB,kBACvBL,EAAAG,gBAAA,CAAsB,iBACtBH,EAAAO,eAAA,CAAqB,gBACrBP,EAAAC,iBAAA,CAAuB,kBACvBD,EAAAyB,WAAA,CAAiB,YACjBzB,EAAAgB,QAAA,CAAc,SACdhB,EAAA8B,gBAAA,CAAsB,iBACtB9B,EAAAg4B,SAAA,CAAe,UACfh4B,EAAA+B,iBAAA,CAAuB,kBACvB/B,EAAAiC,eAAA,CAAqB,gBACrBjC,EAAAkC,iBAAA,CAAuB,kBAGvBlC,EAAAuC,iBAAA,CAAuB,kBAEvBvC,EAAA34B,UAAA,CAAgB,CACdq5B,IAAKA,QAAQ,CAACnb,CAAD,CAAO,CAClB,IAAAA,KAAA;AAAYA,CACZ,KAAAywC,OAAA,CAAc,IAAArzB,MAAAozB,IAAA,CAAexwC,CAAf,CAEV/jC,EAAAA,CAAQ,IAAAy2E,QAAA,EAEe,EAA3B,GAAI,IAAAjC,OAAA11E,OAAJ,EACE,IAAAu2E,WAAA,CAAgB,wBAAhB,CAA0C,IAAAb,OAAA,CAAY,CAAZ,CAA1C,CAGF,OAAOx0E,EAVW,CADN,CAcdy2E,QAASA,QAAQ,EAAG,CAElB,IADA,IAAIzjC,EAAO,EACX,CAAA,CAAA,CAGE,GAFyB,CAEpB,CAFD,IAAAwhC,OAAA11E,OAEC,EAF0B,CAAA,IAAA41E,KAAA,CAAU,GAAV,CAAe,GAAf,CAAoB,GAApB,CAAyB,GAAzB,CAE1B,EADH1hC,CAAAxuC,KAAA,CAAU,IAAAkyE,oBAAA,EAAV,CACG,CAAA,CAAA,IAAAC,OAAA,CAAY,GAAZ,CAAL,CACE,MAAO,CAAEhxE,KAAM64C,CAAAc,QAAR,CAAqBtM,KAAMA,CAA3B,CANO,CAdN,CAyBd0jC,oBAAqBA,QAAQ,EAAG,CAC9B,MAAO,CAAE/wE,KAAM64C,CAAA+3B,oBAAR,CAAiCzrC,WAAY,IAAA8rC,YAAA,EAA7C,CADuB,CAzBlB,CA6BdA,YAAaA,QAAQ,EAAG,CAEtB,IADA,IAAIj3B,EAAO,IAAA7U,WAAA,EACX,CAAO,IAAA6rC,OAAA,CAAY,GAAZ,CAAP,CAAA,CACEh3B,CAAA,CAAO,IAAApuC,OAAA,CAAYouC,CAAZ,CAET,OAAOA,EALe,CA7BV;AAqCd7U,WAAYA,QAAQ,EAAG,CACrB,MAAO,KAAA+rC,WAAA,EADc,CArCT,CAyCdA,WAAYA,QAAQ,EAAG,CACrB,IAAIhwD,EAAS,IAAAiwD,QAAA,EACb,IAAI,IAAAH,OAAA,CAAY,GAAZ,CAAJ,CAAsB,CACpB,GAAK,CAAA91B,EAAA,CAAah6B,CAAb,CAAL,CACE,KAAMutD,GAAA,CAAa,MAAb,CAAN,CAGFvtD,CAAA,CAAS,CAAElhB,KAAM64C,CAAA6B,qBAAR,CAAkCV,KAAM94B,CAAxC,CAAgD+4B,MAAO,IAAAi3B,WAAA,EAAvD,CAA0E/3B,SAAU,GAApF,CALW,CAOtB,MAAOj4B,EATc,CAzCT,CAqDdiwD,QAASA,QAAQ,EAAG,CAClB,IAAI1zE,EAAO,IAAA2zE,UAAA,EAAX,CACIh3B,CADJ,CAEIC,CACJ,OAAI,KAAA22B,OAAA,CAAY,GAAZ,CAAJ,GACE52B,CACI,CADQ,IAAAjV,WAAA,EACR,CAAA,IAAAksC,QAAA,CAAa,GAAb,CAFN,GAGIh3B,CACO,CADM,IAAAlV,WAAA,EACN,CAAA,CAAEnlC,KAAM64C,CAAAsB,sBAAR,CAAmC18C,KAAMA,CAAzC,CAA+C28C,UAAWA,CAA1D,CAAqEC,WAAYA,CAAjF,CAJX,EAOO58C,CAXW,CArDN,CAmEd2zE,UAAWA,QAAQ,EAAG,CAEpB,IADA,IAAIp3B,EAAO,IAAAs3B,WAAA,EACX,CAAO,IAAAN,OAAA,CAAY,IAAZ,CAAP,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAqB,kBAAR;AAA+Bf,SAAU,IAAzC,CAA+Ca,KAAMA,CAArD,CAA2DC,MAAO,IAAAq3B,WAAA,EAAlE,CAET,OAAOt3B,EALa,CAnER,CA2Eds3B,WAAYA,QAAQ,EAAG,CAErB,IADA,IAAIt3B,EAAO,IAAAu3B,SAAA,EACX,CAAO,IAAAP,OAAA,CAAY,IAAZ,CAAP,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAqB,kBAAR,CAA+Bf,SAAU,IAAzC,CAA+Ca,KAAMA,CAArD,CAA2DC,MAAO,IAAAs3B,SAAA,EAAlE,CAET,OAAOv3B,EALc,CA3ET,CAmFdu3B,SAAUA,QAAQ,EAAG,CAGnB,IAFA,IAAIv3B,EAAO,IAAAw3B,WAAA,EAAX,CACI9sC,CACJ,CAAQA,CAAR,CAAgB,IAAAssC,OAAA,CAAY,IAAZ,CAAiB,IAAjB,CAAsB,KAAtB,CAA4B,KAA5B,CAAhB,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAK,iBAAR,CAA8BC,SAAUzU,CAAAtG,KAAxC,CAAoD4b,KAAMA,CAA1D,CAAgEC,MAAO,IAAAu3B,WAAA,EAAvE,CAET,OAAOx3B,EANY,CAnFP,CA4Fdw3B,WAAYA,QAAQ,EAAG,CAGrB,IAFA,IAAIx3B,EAAO,IAAAy3B,SAAA,EAAX,CACI/sC,CACJ,CAAQA,CAAR,CAAgB,IAAAssC,OAAA,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,IAAtB,CAA4B,IAA5B,CAAhB,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAK,iBAAR,CAA8BC,SAAUzU,CAAAtG,KAAxC;AAAoD4b,KAAMA,CAA1D,CAAgEC,MAAO,IAAAw3B,SAAA,EAAvE,CAET,OAAOz3B,EANc,CA5FT,CAqGdy3B,SAAUA,QAAQ,EAAG,CAGnB,IAFA,IAAIz3B,EAAO,IAAA03B,eAAA,EAAX,CACIhtC,CACJ,CAAQA,CAAR,CAAgB,IAAAssC,OAAA,CAAY,GAAZ,CAAgB,GAAhB,CAAhB,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAK,iBAAR,CAA8BC,SAAUzU,CAAAtG,KAAxC,CAAoD4b,KAAMA,CAA1D,CAAgEC,MAAO,IAAAy3B,eAAA,EAAvE,CAET,OAAO13B,EANY,CArGP,CA8Gd03B,eAAgBA,QAAQ,EAAG,CAGzB,IAFA,IAAI13B,EAAO,IAAA23B,MAAA,EAAX,CACIjtC,CACJ,CAAQA,CAAR,CAAgB,IAAAssC,OAAA,CAAY,GAAZ,CAAgB,GAAhB,CAAoB,GAApB,CAAhB,CAAA,CACEh3B,CAAA,CAAO,CAAEh6C,KAAM64C,CAAAK,iBAAR,CAA8BC,SAAUzU,CAAAtG,KAAxC,CAAoD4b,KAAMA,CAA1D,CAAgEC,MAAO,IAAA03B,MAAA,EAAvE,CAET,OAAO33B,EANkB,CA9Gb,CAuHd23B,MAAOA,QAAQ,EAAG,CAChB,IAAIjtC,CACJ,OAAA,CAAKA,CAAL,CAAa,IAAAssC,OAAA,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,GAAtB,CAAb,EACS,CAAEhxE,KAAM64C,CAAAG,gBAAR,CAA6BG,SAAUzU,CAAAtG,KAAvC,CAAmDr5B,OAAQ,CAAA,CAA3D,CAAiEg1C,SAAU,IAAA43B,MAAA,EAA3E,CADT,CAGS,IAAAC,QAAA,EALO,CAvHJ;AAgIdA,QAASA,QAAQ,EAAG,CAClB,IAAIA,CACA,KAAAZ,OAAA,CAAY,GAAZ,CAAJ,EACEY,CACA,CADU,IAAAX,YAAA,EACV,CAAA,IAAAI,QAAA,CAAa,GAAb,CAFF,EAGW,IAAAL,OAAA,CAAY,GAAZ,CAAJ,CACLY,CADK,CACK,IAAAC,iBAAA,EADL,CAEI,IAAAb,OAAA,CAAY,GAAZ,CAAJ,CACLY,CADK,CACK,IAAAr3B,OAAA,EADL,CAEI,IAAAu3B,gBAAAn4E,eAAA,CAAoC,IAAAo1E,KAAA,EAAA3wC,KAApC,CAAJ,CACLwzC,CADK,CACKnzE,EAAA,CAAK,IAAAqzE,gBAAA,CAAqB,IAAAT,QAAA,EAAAjzC,KAArB,CAAL,CADL,CAEI,IAAAzY,QAAAi2B,SAAAjiD,eAAA,CAAqC,IAAAo1E,KAAA,EAAA3wC,KAArC,CAAJ,CACLwzC,CADK,CACK,CAAE5xE,KAAM64C,CAAAgB,QAAR,CAAqBx/C,MAAO,IAAAsrB,QAAAi2B,SAAA,CAAsB,IAAAy1B,QAAA,EAAAjzC,KAAtB,CAA5B,CADL,CAEI,IAAA2wC,KAAA,EAAA7pC,WAAJ,CACL0sC,CADK,CACK,IAAA1sC,WAAA,EADL,CAEI,IAAA6pC,KAAA,EAAAtjE,SAAJ,CACLmmE,CADK,CACK,IAAAnmE,SAAA,EADL,CAGL,IAAAikE,WAAA,CAAgB,0BAAhB;AAA4C,IAAAX,KAAA,EAA5C,CAIF,KADA,IAAI5nB,CACJ,CAAQA,CAAR,CAAe,IAAA6pB,OAAA,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,GAAtB,CAAf,CAAA,CACoB,GAAlB,GAAI7pB,CAAA/oB,KAAJ,EACEwzC,CACA,CADU,CAAC5xE,KAAM64C,CAAAO,eAAP,CAA2BqB,OAAQm3B,CAAnC,CAA4C/1E,UAAW,IAAAk2E,eAAA,EAAvD,CACV,CAAA,IAAAV,QAAA,CAAa,GAAb,CAFF,EAGyB,GAAlB,GAAIlqB,CAAA/oB,KAAJ,EACLwzC,CACA,CADU,CAAE5xE,KAAM64C,CAAAC,iBAAR,CAA8ByB,OAAQq3B,CAAtC,CAA+Cz1C,SAAU,IAAAgJ,WAAA,EAAzD,CAA4E4T,SAAU,CAAA,CAAtF,CACV,CAAA,IAAAs4B,QAAA,CAAa,GAAb,CAFK,EAGkB,GAAlB,GAAIlqB,CAAA/oB,KAAJ,CACLwzC,CADK,CACK,CAAE5xE,KAAM64C,CAAAC,iBAAR,CAA8ByB,OAAQq3B,CAAtC,CAA+Cz1C,SAAU,IAAA+I,WAAA,EAAzD,CAA4E6T,SAAU,CAAA,CAAtF,CADL,CAGL,IAAA22B,WAAA,CAAgB,YAAhB,CAGJ,OAAOkC,EAnCW,CAhIN,CAsKdhmE,OAAQA,QAAQ,CAAComE,CAAD,CAAiB,CAC3BzxD,CAAAA,CAAO,CAACyxD,CAAD,CAGX,KAFA,IAAI9wD,EAAS,CAAClhB,KAAM64C,CAAAO,eAAP,CAA2BqB,OAAQ,IAAAvV,WAAA,EAAnC,CAAsDrpC,UAAW0kB,CAAjE,CAAuE3U,OAAQ,CAAA,CAA/E,CAEb,CAAO,IAAAolE,OAAA,CAAY,GAAZ,CAAP,CAAA,CACEzwD,CAAA1hB,KAAA,CAAU,IAAAsmC,WAAA,EAAV,CAGF;MAAOjkB,EARwB,CAtKnB,CAiLd6wD,eAAgBA,QAAQ,EAAG,CACzB,IAAIxxD,EAAO,EACX,IAA8B,GAA9B,GAAI,IAAA0xD,UAAA,EAAA7zC,KAAJ,EACE,EACE7d,EAAA1hB,KAAA,CAAU,IAAAoyE,YAAA,EAAV,CADF,OAES,IAAAD,OAAA,CAAY,GAAZ,CAFT,CADF,CAKA,MAAOzwD,EAPkB,CAjLb,CA2Ld2kB,WAAYA,QAAQ,EAAG,CACrB,IAAIR,EAAQ,IAAA2sC,QAAA,EACP3sC,EAAAQ,WAAL,EACE,IAAAwqC,WAAA,CAAgB,2BAAhB,CAA6ChrC,CAA7C,CAEF,OAAO,CAAE1kC,KAAM64C,CAAAyB,WAAR,CAAwBt1C,KAAM0/B,CAAAtG,KAA9B,CALc,CA3LT,CAmMd3yB,SAAUA,QAAQ,EAAG,CAEnB,MAAO,CAAEzL,KAAM64C,CAAAgB,QAAR,CAAqBx/C,MAAO,IAAAg3E,QAAA,EAAAh3E,MAA5B,CAFY,CAnMP,CAwMdw3E,iBAAkBA,QAAQ,EAAG,CAC3B,IAAI31D,EAAW,EACf,IAA8B,GAA9B,GAAI,IAAA+1D,UAAA,EAAA7zC,KAAJ,EACE,EAAG,CACD,GAAI,IAAA2wC,KAAA,CAAU,GAAV,CAAJ,CAEE,KAEF7yD,EAAArd,KAAA,CAAc,IAAAsmC,WAAA,EAAd,CALC,CAAH,MAMS,IAAA6rC,OAAA,CAAY,GAAZ,CANT,CADF,CASA,IAAAK,QAAA,CAAa,GAAb,CAEA;MAAO,CAAErxE,KAAM64C,CAAA8B,gBAAR,CAA6Bz+B,SAAUA,CAAvC,CAboB,CAxMf,CAwNdq+B,OAAQA,QAAQ,EAAG,CAAA,IACbM,EAAa,EADA,CACI1e,CACrB,IAA8B,GAA9B,GAAI,IAAA81C,UAAA,EAAA7zC,KAAJ,EACE,EAAG,CACD,GAAI,IAAA2wC,KAAA,CAAU,GAAV,CAAJ,CAEE,KAEF5yC,EAAA,CAAW,CAACn8B,KAAM64C,CAAAg4B,SAAP,CAAqBqB,KAAM,MAA3B,CACP,KAAAnD,KAAA,EAAAtjE,SAAJ,EACE0wB,CAAA1iC,IAGA,CAHe,IAAAgS,SAAA,EAGf,CAFA0wB,CAAA4c,SAEA,CAFoB,CAAA,CAEpB,CADA,IAAAs4B,QAAA,CAAa,GAAb,CACA,CAAAl1C,CAAA9hC,MAAA,CAAiB,IAAA8qC,WAAA,EAJnB,EAKW,IAAA4pC,KAAA,EAAA7pC,WAAJ,EACL/I,CAAA1iC,IAEA,CAFe,IAAAyrC,WAAA,EAEf,CADA/I,CAAA4c,SACA,CADoB,CAAA,CACpB,CAAI,IAAAg2B,KAAA,CAAU,GAAV,CAAJ,EACE,IAAAsC,QAAA,CAAa,GAAb,CACA,CAAAl1C,CAAA9hC,MAAA,CAAiB,IAAA8qC,WAAA,EAFnB,EAIEhJ,CAAA9hC,MAJF,CAImB8hC,CAAA1iC,IAPd,EASI,IAAAs1E,KAAA,CAAU,GAAV,CAAJ,EACL,IAAAsC,QAAA,CAAa,GAAb,CAKA,CAJAl1C,CAAA1iC,IAIA,CAJe,IAAA0rC,WAAA,EAIf,CAHA,IAAAksC,QAAA,CAAa,GAAb,CAGA,CAFAl1C,CAAA4c,SAEA,CAFoB,CAAA,CAEpB,CADA,IAAAs4B,QAAA,CAAa,GAAb,CACA;AAAAl1C,CAAA9hC,MAAA,CAAiB,IAAA8qC,WAAA,EANZ,EAQL,IAAAuqC,WAAA,CAAgB,aAAhB,CAA+B,IAAAX,KAAA,EAA/B,CAEFl0B,EAAAh8C,KAAA,CAAgBs9B,CAAhB,CA9BC,CAAH,MA+BS,IAAA60C,OAAA,CAAY,GAAZ,CA/BT,CADF,CAkCA,IAAAK,QAAA,CAAa,GAAb,CAEA,OAAO,CAACrxE,KAAM64C,CAAA+B,iBAAP,CAA6BC,WAAYA,CAAzC,CAtCU,CAxNL,CAiQd60B,WAAYA,QAAQ,CAACxoB,CAAD,CAAMxiB,CAAN,CAAa,CAC/B,KAAM+pC,GAAA,CAAa,QAAb,CAEA/pC,CAAAtG,KAFA,CAEY8oB,CAFZ,CAEkBxiB,CAAApmC,MAFlB,CAEgC,CAFhC,CAEoC,IAAA8/B,KAFpC,CAE+C,IAAAA,KAAAt6B,UAAA,CAAoB4gC,CAAApmC,MAApB,CAF/C,CAAN,CAD+B,CAjQnB,CAuQd+yE,QAASA,QAAQ,CAACc,CAAD,CAAK,CACpB,GAA2B,CAA3B,GAAI,IAAAtD,OAAA11E,OAAJ,CACE,KAAMs1E,GAAA,CAAa,MAAb,CAA0D,IAAArwC,KAA1D,CAAN,CAGF,IAAIsG,EAAQ,IAAAssC,OAAA,CAAYmB,CAAZ,CACPztC,EAAL,EACE,IAAAgrC,WAAA,CAAgB,4BAAhB,CAA+CyC,CAA/C,CAAoD,GAApD,CAAyD,IAAApD,KAAA,EAAzD,CAEF,OAAOrqC,EATa,CAvQR,CAmRdutC,UAAWA,QAAQ,EAAG,CACpB,GAA2B,CAA3B,GAAI,IAAApD,OAAA11E,OAAJ,CACE,KAAMs1E,GAAA,CAAa,MAAb;AAA0D,IAAArwC,KAA1D,CAAN,CAEF,MAAO,KAAAywC,OAAA,CAAY,CAAZ,CAJa,CAnRR,CA0RdE,KAAMA,QAAQ,CAACoD,CAAD,CAAKC,CAAL,CAASC,CAAT,CAAaC,CAAb,CAAiB,CAC7B,MAAO,KAAAC,UAAA,CAAe,CAAf,CAAkBJ,CAAlB,CAAsBC,CAAtB,CAA0BC,CAA1B,CAA8BC,CAA9B,CADsB,CA1RjB,CA8RdC,UAAWA,QAAQ,CAACr4E,CAAD,CAAIi4E,CAAJ,CAAQC,CAAR,CAAYC,CAAZ,CAAgBC,CAAhB,CAAoB,CACrC,GAAI,IAAAzD,OAAA11E,OAAJ,CAAyBe,CAAzB,CAA4B,CACtBwqC,CAAAA,CAAQ,IAAAmqC,OAAA,CAAY30E,CAAZ,CACZ,KAAIs4E,EAAI9tC,CAAAtG,KACR,IAAIo0C,CAAJ,GAAUL,CAAV,EAAgBK,CAAhB,GAAsBJ,CAAtB,EAA4BI,CAA5B,GAAkCH,CAAlC,EAAwCG,CAAxC,GAA8CF,CAA9C,EACK,EAACH,CAAD,EAAQC,CAAR,EAAeC,CAAf,EAAsBC,CAAtB,CADL,CAEE,MAAO5tC,EALiB,CAQ5B,MAAO,CAAA,CAT8B,CA9RzB,CA0SdssC,OAAQA,QAAQ,CAACmB,CAAD,CAAKC,CAAL,CAASC,CAAT,CAAaC,CAAb,CAAiB,CAE/B,MAAA,CADI5tC,CACJ,CADY,IAAAqqC,KAAA,CAAUoD,CAAV,CAAcC,CAAd,CAAkBC,CAAlB,CAAsBC,CAAtB,CACZ,GACE,IAAAzD,OAAAzsD,MAAA,EACOsiB,CAAAA,CAFT,EAIO,CAAA,CANwB,CA1SnB,CAmTdotC,gBAAiB,CACf,OAAQ,CAAC9xE,KAAM64C,CAAAiC,eAAP,CADO,CAEf,QAAW,CAAC96C,KAAM64C,CAAAkC,iBAAP,CAFI,CAnTH,CAyUhB,KAAI1B,GAAkB,CA+KtBgC,GAAAn7B,UAAA,CAAwB,CACtB9Z,QAASA,QAAQ,CAACmzC,CAAD,CAAM,CACrB,IAAIt4C,EAAO,IACX,KAAAsmB,MAAA,CAAa,CACXkrD,OAAQ,CADG,CAEXljB,QAAS,EAFE,CAGXruD,GAAI,CAACwxE,KAAM,EAAP;AAAWrlC,KAAM,EAAjB,CAAqBslC,IAAK,EAA1B,CAHO,CAIXvwC,OAAQ,CAACswC,KAAM,EAAP,CAAWrlC,KAAM,EAAjB,CAAqBslC,IAAK,EAA1B,CAJG,CAKXt1B,OAAQ,EALG,CAOb/D,EAAA,CAAgCC,CAAhC,CAAqCt4C,CAAA6S,QAArC,CACA,KAAI1X,EAAQ,EAAZ,CACIw2E,CACJ,KAAAC,MAAA,CAAa,QACb,IAAKD,CAAL,CAAkBz3B,EAAA,CAAc5B,CAAd,CAAlB,CACE,IAAAhyB,MAAAurD,UAIA,CAJuB,QAIvB,CAHI5xD,CAGJ,CAHa,IAAAuxD,OAAA,EAGb,CAFA,IAAAM,QAAA,CAAaH,CAAb,CAAyB1xD,CAAzB,CAEA,CADA,IAAA8xD,QAAA,CAAa9xD,CAAb,CACA,CAAA9kB,CAAA,CAAQ,YAAR,CAAuB,IAAA62E,iBAAA,CAAsB,QAAtB,CAAgC,OAAhC,CAErBn5B,EAAAA,CAAUkB,EAAA,CAAUzB,CAAAlM,KAAV,CACdpsC,EAAA4xE,MAAA,CAAa,QACbv5E,EAAA,CAAQwgD,CAAR,CAAiB,QAAQ,CAAC2M,CAAD,CAAQhtD,CAAR,CAAa,CACpC,IAAIy5E,EAAQ,IAARA,CAAez5E,CACnBwH,EAAAsmB,MAAA,CAAW2rD,CAAX,CAAA,CAAoB,CAACR,KAAM,EAAP,CAAWrlC,KAAM,EAAjB,CAAqBslC,IAAK,EAA1B,CACpB1xE,EAAAsmB,MAAAurD,UAAA,CAAuBI,CACvB,KAAIC,EAASlyE,CAAAwxE,OAAA,EACbxxE,EAAA8xE,QAAA,CAAatsB,CAAb,CAAoB0sB,CAApB,CACAlyE,EAAA+xE,QAAA,CAAaG,CAAb,CACAlyE,EAAAsmB,MAAA81B,OAAAx+C,KAAA,CAAuB,CAACmG,KAAMkuE,CAAP,CAAcv6B,OAAQ8N,CAAA9N,OAAtB,CAAvB,CACA8N,EAAA2sB,QAAA,CAAgB35E,CARoB,CAAtC,CAUA,KAAA8tB,MAAAurD,UAAA,CAAuB,IACvB,KAAAD,MAAA;AAAa,MACb,KAAAE,QAAA,CAAax5B,CAAb,CACI85B,EAAAA,CAGF,GAHEA,CAGI,IAAAC,IAHJD,CAGe,GAHfA,CAGqB,IAAAE,OAHrBF,CAGmC,MAHnCA,CAIF,IAAAG,aAAA,EAJEH,CAKF,SALEA,CAKU,IAAAJ,iBAAA,CAAsB,IAAtB,CAA4B,SAA5B,CALVI,CAMFj3E,CANEi3E,CAOF,IAAAI,SAAA,EAPEJ,CAQF,YAGEnyE,EAAAA,CAAK,CAAC,IAAI+e,QAAJ,CAAa,SAAb,CACN,gBADM,CAEN,WAFM,CAGN,MAHM,CAINozD,CAJM,CAAD,EAKH,IAAAv/D,QALG,CAMHykC,EANG,CAOHC,EAPG,CAQHC,EARG,CAST,KAAAlxB,MAAA,CAAa,IAAAsrD,MAAb,CAA0BzzE,IAAAA,EAC1B,OAAO8B,EAxDc,CADD,CA4DtBoyE,IAAK,KA5DiB,CA8DtBC,OAAQ,QA9Dc,CAgEtBE,SAAUA,QAAQ,EAAG,CACnB,IAAIvyD,EAAS,EAAb,CACIm8B,EAAS,IAAA91B,MAAA81B,OADb,CAEIp8C,EAAO,IACX3H,EAAA,CAAQ+jD,CAAR,CAAgB,QAAQ,CAACtwC,CAAD,CAAQ,CAC9BmU,CAAAriB,KAAA,CAAY,MAAZ,CAAqBkO,CAAA/H,KAArB,CAAkC,GAAlC,CAAwC/D,CAAAgyE,iBAAA,CAAsBlmE,CAAA/H,KAAtB,CAAkC,GAAlC,CAAxC,CACI+H,EAAA4rC,OAAJ,EACEz3B,CAAAriB,KAAA,CAAYkO,CAAA/H,KAAZ,CAAwB,UAAxB,CAAqCrD,IAAAC,UAAA,CAAemL,CAAA4rC,OAAf,CAArC;AAAoE,GAApE,CAH4B,CAAhC,CAMI0E,EAAAlkD,OAAJ,EACE+nB,CAAAriB,KAAA,CAAY,aAAZ,CAA4Bw+C,CAAA5M,IAAA,CAAW,QAAQ,CAACv2C,CAAD,CAAI,CAAE,MAAOA,EAAA8K,KAAT,CAAvB,CAAAb,KAAA,CAAgD,GAAhD,CAA5B,CAAmF,IAAnF,CAEF,OAAO+c,EAAA/c,KAAA,CAAY,EAAZ,CAbY,CAhEC,CAgFtB8uE,iBAAkBA,QAAQ,CAACjuE,CAAD,CAAOghC,CAAP,CAAe,CACvC,MAAO,WAAP,CAAqBA,CAArB,CAA8B,IAA9B,CACI,IAAA0tC,WAAA,CAAgB1uE,CAAhB,CADJ,CAEI,IAAAqoC,KAAA,CAAUroC,CAAV,CAFJ,CAGI,IAJmC,CAhFnB,CAuFtBwuE,aAAcA,QAAQ,EAAG,CACvB,IAAIxvE,EAAQ,EAAZ,CACI/C,EAAO,IACX3H,EAAA,CAAQ,IAAAiuB,MAAAgoC,QAAR,CAA4B,QAAQ,CAACvlC,CAAD,CAAKpe,CAAL,CAAa,CAC/C5H,CAAAnF,KAAA,CAAWmrB,CAAX,CAAgB,WAAhB,CAA8B/oB,CAAAguC,OAAA,CAAYrjC,CAAZ,CAA9B,CAAoD,GAApD,CAD+C,CAAjD,CAGA,OAAI5H,EAAA7K,OAAJ,CAAyB,MAAzB,CAAkC6K,CAAAG,KAAA,CAAW,GAAX,CAAlC,CAAoD,GAApD,CACO,EAPgB,CAvFH,CAiGtBuvE,WAAYA,QAAQ,CAACC,CAAD,CAAU,CAC5B,MAAO,KAAApsD,MAAA,CAAWosD,CAAX,CAAAjB,KAAAv5E,OAAA,CAAkC,MAAlC,CAA2C,IAAAouB,MAAA,CAAWosD,CAAX,CAAAjB,KAAAvuE,KAAA,CAA8B,GAA9B,CAA3C,CAAgF,GAAhF,CAAsF,EADjE,CAjGR,CAqGtBkpC,KAAMA,QAAQ,CAACsmC,CAAD,CAAU,CACtB,MAAO,KAAApsD,MAAA,CAAWosD,CAAX,CAAAtmC,KAAAlpC,KAAA,CAA8B,EAA9B,CADe,CArGF;AAyGtB4uE,QAASA,QAAQ,CAACx5B,CAAD,CAAM45B,CAAN,CAAcS,CAAd,CAAsBC,CAAtB,CAAmCx3E,CAAnC,CAA2Cy3E,CAA3C,CAA6D,CAAA,IACxE95B,CADwE,CAClEC,CADkE,CAC3Dh5C,EAAO,IADoD,CAC9Csf,CAD8C,CACxC4kB,CADwC,CAC5B4T,CAChD86B,EAAA,CAAcA,CAAd,EAA6Bv3E,CAC7B,IAAKw3E,CAAAA,CAAL,EAAyB37E,CAAA,CAAUohD,CAAA65B,QAAV,CAAzB,CACED,CACA,CADSA,CACT,EADmB,IAAAV,OAAA,EACnB,CAAA,IAAAsB,IAAA,CAAS,GAAT,CACE,IAAAC,WAAA,CAAgBb,CAAhB,CAAwB,IAAAc,eAAA,CAAoB,GAApB,CAAyB16B,CAAA65B,QAAzB,CAAxB,CADF,CAEE,IAAAc,YAAA,CAAiB36B,CAAjB,CAAsB45B,CAAtB,CAA8BS,CAA9B,CAAsCC,CAAtC,CAAmDx3E,CAAnD,CAA2D,CAAA,CAA3D,CAFF,CAFF,KAQA,QAAQk9C,CAAAv5C,KAAR,EACA,KAAK64C,CAAAc,QAAL,CACErgD,CAAA,CAAQigD,CAAAlM,KAAR,CAAkB,QAAQ,CAAClI,CAAD,CAAa39B,CAAb,CAAkB,CAC1CvG,CAAA8xE,QAAA,CAAa5tC,CAAAA,WAAb,CAAoC/lC,IAAAA,EAApC,CAA+CA,IAAAA,EAA/C,CAA0D,QAAQ,CAACw6C,CAAD,CAAO,CAAEK,CAAA,CAAQL,CAAV,CAAzE,CACIpyC,EAAJ,GAAY+xC,CAAAlM,KAAAl0C,OAAZ,CAA8B,CAA9B,CACE8H,CAAAmjC,QAAA,EAAAiJ,KAAAxuC,KAAA,CAAyBo7C,CAAzB,CAAgC,GAAhC,CADF,CAGEh5C,CAAA+xE,QAAA,CAAa/4B,CAAb,CALwC,CAA5C,CAQA,MACF,MAAKpB,CAAAgB,QAAL,CACE1U,CAAA,CAAa,IAAA8J,OAAA,CAAYsK,CAAAl/C,MAAZ,CACb,KAAA+nC,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA0uC,EAAA,CAAYV,CAAZ,EAAsBhuC,CAAtB,CACA,MACF,MAAK0T,CAAAG,gBAAL,CACE,IAAA+5B,QAAA,CAAax5B,CAAAQ,SAAb,CAA2B36C,IAAAA,EAA3B;AAAsCA,IAAAA,EAAtC,CAAiD,QAAQ,CAACw6C,CAAD,CAAO,CAAEK,CAAA,CAAQL,CAAV,CAAhE,CACAzU,EAAA,CAAaoU,CAAAJ,SAAb,CAA4B,GAA5B,CAAkC,IAAAX,UAAA,CAAeyB,CAAf,CAAsB,CAAtB,CAAlC,CAA6D,GAC7D,KAAA7X,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA0uC,EAAA,CAAY1uC,CAAZ,CACA,MACF,MAAK0T,CAAAK,iBAAL,CACE,IAAA65B,QAAA,CAAax5B,CAAAS,KAAb,CAAuB56C,IAAAA,EAAvB,CAAkCA,IAAAA,EAAlC,CAA6C,QAAQ,CAACw6C,CAAD,CAAO,CAAEI,CAAA,CAAOJ,CAAT,CAA5D,CACA,KAAAm5B,QAAA,CAAax5B,CAAAU,MAAb,CAAwB76C,IAAAA,EAAxB,CAAmCA,IAAAA,EAAnC,CAA8C,QAAQ,CAACw6C,CAAD,CAAO,CAAEK,CAAA,CAAQL,CAAV,CAA7D,CAEEzU,EAAA,CADmB,GAArB,GAAIoU,CAAAJ,SAAJ,CACe,IAAAg7B,KAAA,CAAUn6B,CAAV,CAAgBC,CAAhB,CADf,CAE4B,GAArB,GAAIV,CAAAJ,SAAJ,CACQ,IAAAX,UAAA,CAAewB,CAAf,CAAqB,CAArB,CADR,CACkCT,CAAAJ,SADlC,CACiD,IAAAX,UAAA,CAAeyB,CAAf,CAAsB,CAAtB,CADjD,CAGQ,GAHR,CAGcD,CAHd,CAGqB,GAHrB,CAG2BT,CAAAJ,SAH3B,CAG0C,GAH1C,CAGgDc,CAHhD,CAGwD,GAE/D,KAAA7X,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA0uC,EAAA,CAAY1uC,CAAZ,CACA,MACF,MAAK0T,CAAAqB,kBAAL,CACEi5B,CAAA,CAASA,CAAT,EAAmB,IAAAV,OAAA,EACnBxxE,EAAA8xE,QAAA,CAAax5B,CAAAS,KAAb,CAAuBm5B,CAAvB,CACAlyE,EAAA8yE,IAAA,CAA0B,IAAjB,GAAAx6B,CAAAJ,SAAA,CAAwBg6B,CAAxB,CAAiClyE,CAAAmzE,IAAA,CAASjB,CAAT,CAA1C,CAA4DlyE,CAAAizE,YAAA,CAAiB36B,CAAAU,MAAjB;AAA4Bk5B,CAA5B,CAA5D,CACAU,EAAA,CAAYV,CAAZ,CACA,MACF,MAAKt6B,CAAAsB,sBAAL,CACEg5B,CAAA,CAASA,CAAT,EAAmB,IAAAV,OAAA,EACnBxxE,EAAA8xE,QAAA,CAAax5B,CAAA97C,KAAb,CAAuB01E,CAAvB,CACAlyE,EAAA8yE,IAAA,CAASZ,CAAT,CAAiBlyE,CAAAizE,YAAA,CAAiB36B,CAAAa,UAAjB,CAAgC+4B,CAAhC,CAAjB,CAA0DlyE,CAAAizE,YAAA,CAAiB36B,CAAAc,WAAjB,CAAiC84B,CAAjC,CAA1D,CACAU,EAAA,CAAYV,CAAZ,CACA,MACF,MAAKt6B,CAAAyB,WAAL,CACE64B,CAAA,CAASA,CAAT,EAAmB,IAAAV,OAAA,EACfmB,EAAJ,GACEA,CAAAp6E,QAEA,CAFgC,QAAf,GAAAyH,CAAA4xE,MAAA,CAA0B,GAA1B,CAAgC,IAAAzwC,OAAA,CAAY,IAAAqwC,OAAA,EAAZ,CAA2B,IAAA4B,kBAAA,CAAuB,GAAvB,CAA4B96B,CAAAv0C,KAA5B,CAA3B,CAAmE,MAAnE,CAEjD,CADA4uE,CAAA76B,SACA,CADkB,CAAA,CAClB,CAAA66B,CAAA5uE,KAAA,CAAcu0C,CAAAv0C,KAHhB,CAKA/D,EAAA8yE,IAAA,CAAwB,QAAxB,GAAS9yE,CAAA4xE,MAAT,EAAoC5xE,CAAAmzE,IAAA,CAASnzE,CAAAozE,kBAAA,CAAuB,GAAvB,CAA4B96B,CAAAv0C,KAA5B,CAAT,CAApC,CACE,QAAQ,EAAG,CACT/D,CAAA8yE,IAAA,CAAwB,QAAxB,GAAS9yE,CAAA4xE,MAAT,EAAoC,GAApC,CAAyC,QAAQ,EAAG,CAC9Cx2E,CAAJ,EAAyB,CAAzB,GAAcA,CAAd,EACE4E,CAAA8yE,IAAA,CACE9yE,CAAAqzE,OAAA,CAAYrzE,CAAAszE,kBAAA,CAAuB,GAAvB,CAA4Bh7B,CAAAv0C,KAA5B,CAAZ,CADF;AAEE/D,CAAA+yE,WAAA,CAAgB/yE,CAAAszE,kBAAA,CAAuB,GAAvB,CAA4Bh7B,CAAAv0C,KAA5B,CAAhB,CAAuD,IAAvD,CAFF,CAIF/D,EAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoBlyE,CAAAszE,kBAAA,CAAuB,GAAvB,CAA4Bh7B,CAAAv0C,KAA5B,CAApB,CANkD,CAApD,CADS,CADb,CAUKmuE,CAVL,EAUelyE,CAAA+yE,WAAA,CAAgBb,CAAhB,CAAwBlyE,CAAAszE,kBAAA,CAAuB,GAAvB,CAA4Bh7B,CAAAv0C,KAA5B,CAAxB,CAVf,CAYA6uE,EAAA,CAAYV,CAAZ,CACA,MACF,MAAKt6B,CAAAC,iBAAL,CACEkB,CAAA,CAAO45B,CAAP,GAAkBA,CAAAp6E,QAAlB,CAAmC,IAAAi5E,OAAA,EAAnC,GAAqD,IAAAA,OAAA,EACrDU,EAAA,CAASA,CAAT,EAAmB,IAAAV,OAAA,EACnBxxE,EAAA8xE,QAAA,CAAax5B,CAAAgB,OAAb,CAAyBP,CAAzB,CAA+B56C,IAAAA,EAA/B,CAA0C,QAAQ,EAAG,CACnD6B,CAAA8yE,IAAA,CAAS9yE,CAAAuzE,QAAA,CAAax6B,CAAb,CAAT,CAA6B,QAAQ,EAAG,CAClCT,CAAAR,SAAJ,EACEkB,CAQA,CARQh5C,CAAAwxE,OAAA,EAQR,CAPAxxE,CAAA8xE,QAAA,CAAax5B,CAAApd,SAAb,CAA2B8d,CAA3B,CAOA,CANAh5C,CAAAs3C,eAAA,CAAoB0B,CAApB,CAMA,CALI59C,CAKJ,EALyB,CAKzB,GALcA,CAKd,EAJE4E,CAAA8yE,IAAA,CAAS9yE,CAAAmzE,IAAA,CAASnzE,CAAAgzE,eAAA,CAAoBj6B,CAApB,CAA0BC,CAA1B,CAAT,CAAT,CAAqDh5C,CAAA+yE,WAAA,CAAgB/yE,CAAAgzE,eAAA,CAAoBj6B,CAApB,CAA0BC,CAA1B,CAAhB,CAAkD,IAAlD,CAArD,CAIF,CAFA9U,CAEA,CAFalkC,CAAAgzE,eAAA,CAAoBj6B,CAApB,CAA0BC,CAA1B,CAEb,CADAh5C,CAAAmhC,OAAA,CAAY+wC,CAAZ;AAAoBhuC,CAApB,CACA,CAAIyuC,CAAJ,GACEA,CAAA76B,SACA,CADkB,CAAA,CAClB,CAAA66B,CAAA5uE,KAAA,CAAci1C,CAFhB,CATF,GAcM59C,CAKJ,EALyB,CAKzB,GALcA,CAKd,EAJE4E,CAAA8yE,IAAA,CAAS9yE,CAAAqzE,OAAA,CAAYrzE,CAAAszE,kBAAA,CAAuBv6B,CAAvB,CAA6BT,CAAApd,SAAAn3B,KAA7B,CAAZ,CAAT,CAAuE/D,CAAA+yE,WAAA,CAAgB/yE,CAAAszE,kBAAA,CAAuBv6B,CAAvB,CAA6BT,CAAApd,SAAAn3B,KAA7B,CAAhB,CAAiE,IAAjE,CAAvE,CAIF,CAFAmgC,CAEA,CAFalkC,CAAAszE,kBAAA,CAAuBv6B,CAAvB,CAA6BT,CAAApd,SAAAn3B,KAA7B,CAEb,CADA/D,CAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA,CAAIyuC,CAAJ,GACEA,CAAA76B,SACA,CADkB,CAAA,CAClB,CAAA66B,CAAA5uE,KAAA,CAAcu0C,CAAApd,SAAAn3B,KAFhB,CAnBF,CADsC,CAAxC,CAyBG,QAAQ,EAAG,CACZ/D,CAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoB,WAApB,CADY,CAzBd,CA4BAU,EAAA,CAAYV,CAAZ,CA7BmD,CAArD,CA8BG,CAAE92E,CAAAA,CA9BL,CA+BA,MACF,MAAKw8C,CAAAO,eAAL,CACE+5B,CAAA,CAASA,CAAT,EAAmB,IAAAV,OAAA,EACfl5B,EAAA3tC,OAAJ,EACEquC,CASA,CATQh5C,CAAA2K,OAAA,CAAY2tC,CAAAkB,OAAAz1C,KAAZ,CASR,CARAub,CAQA,CARO,EAQP,CAPAjnB,CAAA,CAAQigD,CAAA19C,UAAR,CAAuB,QAAQ,CAAC+9C,CAAD,CAAO,CACpC,IAAIG,EAAW94C,CAAAwxE,OAAA,EACfxxE,EAAA8xE,QAAA,CAAan5B,CAAb,CAAmBG,CAAnB,CACAx5B,EAAA1hB,KAAA,CAAUk7C,CAAV,CAHoC,CAAtC,CAOA,CAFA5U,CAEA,CAFa8U,CAEb,CAFqB,GAErB,CAF2B15B,CAAApc,KAAA,CAAU,GAAV,CAE3B,CAF4C,GAE5C,CADAlD,CAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA,CAAA0uC,CAAA,CAAYV,CAAZ,CAVF;CAYEl5B,CAGA,CAHQh5C,CAAAwxE,OAAA,EAGR,CAFAz4B,CAEA,CAFO,EAEP,CADAz5B,CACA,CADO,EACP,CAAAtf,CAAA8xE,QAAA,CAAax5B,CAAAkB,OAAb,CAAyBR,CAAzB,CAAgCD,CAAhC,CAAsC,QAAQ,EAAG,CAC/C/4C,CAAA8yE,IAAA,CAAS9yE,CAAAuzE,QAAA,CAAav6B,CAAb,CAAT,CAA8B,QAAQ,EAAG,CACvC3gD,CAAA,CAAQigD,CAAA19C,UAAR,CAAuB,QAAQ,CAAC+9C,CAAD,CAAO,CACpC34C,CAAA8xE,QAAA,CAAan5B,CAAb,CAAmBL,CAAA9tC,SAAA,CAAerM,IAAAA,EAAf,CAA2B6B,CAAAwxE,OAAA,EAA9C,CAA6DrzE,IAAAA,EAA7D,CAAwE,QAAQ,CAAC26C,CAAD,CAAW,CACzFx5B,CAAA1hB,KAAA,CAAUk7C,CAAV,CADyF,CAA3F,CADoC,CAAtC,CAME5U,EAAA,CADE6U,CAAAh1C,KAAJ,CACe/D,CAAAwzE,OAAA,CAAYz6B,CAAAxgD,QAAZ,CAA0BwgD,CAAAh1C,KAA1B,CAAqCg1C,CAAAjB,SAArC,CADf,CACqE,GADrE,CAC2Ex4B,CAAApc,KAAA,CAAU,GAAV,CAD3E,CAC4F,GAD5F,CAGe81C,CAHf,CAGuB,GAHvB,CAG6B15B,CAAApc,KAAA,CAAU,GAAV,CAH7B,CAG8C,GAE9ClD,EAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CAXuC,CAAzC,CAYG,QAAQ,EAAG,CACZlkC,CAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoB,WAApB,CADY,CAZd,CAeAU,EAAA,CAAYV,CAAZ,CAhB+C,CAAjD,CAfF,CAkCA,MACF,MAAKt6B,CAAA6B,qBAAL,CACET,CAAA,CAAQ,IAAAw4B,OAAA,EACRz4B,EAAA,CAAO,EACP,KAAA+4B,QAAA,CAAax5B,CAAAS,KAAb,CAAuB56C,IAAAA,EAAvB,CAAkC46C,CAAlC,CAAwC,QAAQ,EAAG,CACjD/4C,CAAA8yE,IAAA,CAAS9yE,CAAAuzE,QAAA,CAAax6B,CAAAxgD,QAAb,CAAT,CAAqC,QAAQ,EAAG,CAC9CyH,CAAA8xE,QAAA,CAAax5B,CAAAU,MAAb,CAAwBA,CAAxB,CACA9U,EAAA,CAAalkC,CAAAwzE,OAAA,CAAYz6B,CAAAxgD,QAAZ;AAA0BwgD,CAAAh1C,KAA1B,CAAqCg1C,CAAAjB,SAArC,CAAb,CAAmEQ,CAAAJ,SAAnE,CAAkFc,CAClFh5C,EAAAmhC,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA0uC,EAAA,CAAYV,CAAZ,EAAsBhuC,CAAtB,CAJ8C,CAAhD,CADiD,CAAnD,CAOG,CAPH,CAQA,MACF,MAAK0T,CAAA8B,gBAAL,CACEp6B,CAAA,CAAO,EACPjnB,EAAA,CAAQigD,CAAAr9B,SAAR,CAAsB,QAAQ,CAAC09B,CAAD,CAAO,CACnC34C,CAAA8xE,QAAA,CAAan5B,CAAb,CAAmBL,CAAA9tC,SAAA,CAAerM,IAAAA,EAAf,CAA2B6B,CAAAwxE,OAAA,EAA9C,CAA6DrzE,IAAAA,EAA7D,CAAwE,QAAQ,CAAC26C,CAAD,CAAW,CACzFx5B,CAAA1hB,KAAA,CAAUk7C,CAAV,CADyF,CAA3F,CADmC,CAArC,CAKA5U,EAAA,CAAa,GAAb,CAAmB5kB,CAAApc,KAAA,CAAU,GAAV,CAAnB,CAAoC,GACpC,KAAAi+B,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CACA0uC,EAAA,CAAYV,CAAZ,EAAsBhuC,CAAtB,CACA,MACF,MAAK0T,CAAA+B,iBAAL,CACEr6B,CAAA,CAAO,EACPw4B,EAAA,CAAW,CAAA,CACXz/C,EAAA,CAAQigD,CAAAsB,WAAR,CAAwB,QAAQ,CAAC1e,CAAD,CAAW,CACrCA,CAAA4c,SAAJ,GACEA,CADF,CACa,CAAA,CADb,CADyC,CAA3C,CAKIA,EAAJ,EACEo6B,CAEA,CAFSA,CAET,EAFmB,IAAAV,OAAA,EAEnB,CADA,IAAArwC,OAAA,CAAY+wC,CAAZ,CAAoB,IAApB,CACA,CAAA75E,CAAA,CAAQigD,CAAAsB,WAAR,CAAwB,QAAQ,CAAC1e,CAAD,CAAW,CACrCA,CAAA4c,SAAJ,EACEiB,CACA,CADO/4C,CAAAwxE,OAAA,EACP,CAAAxxE,CAAA8xE,QAAA,CAAa52C,CAAA1iC,IAAb,CAA2BugD,CAA3B,CAFF,EAIEA,CAJF,CAIS7d,CAAA1iC,IAAAuG,KAAA,GAAsB64C,CAAAyB,WAAtB,CACIne,CAAA1iC,IAAAuL,KADJ,CAEK,EAFL,CAEUm3B,CAAA1iC,IAAAY,MAEnB4/C,EAAA,CAAQh5C,CAAAwxE,OAAA,EACRxxE;CAAA8xE,QAAA,CAAa52C,CAAA9hC,MAAb,CAA6B4/C,CAA7B,CACAh5C,EAAAmhC,OAAA,CAAYnhC,CAAAwzE,OAAA,CAAYtB,CAAZ,CAAoBn5B,CAApB,CAA0B7d,CAAA4c,SAA1B,CAAZ,CAA0DkB,CAA1D,CAXyC,CAA3C,CAHF,GAiBE3gD,CAAA,CAAQigD,CAAAsB,WAAR,CAAwB,QAAQ,CAAC1e,CAAD,CAAW,CACzCl7B,CAAA8xE,QAAA,CAAa52C,CAAA9hC,MAAb,CAA6Bk/C,CAAA9tC,SAAA,CAAerM,IAAAA,EAAf,CAA2B6B,CAAAwxE,OAAA,EAAxD,CAAuErzE,IAAAA,EAAvE,CAAkF,QAAQ,CAACw6C,CAAD,CAAO,CAC/Fr5B,CAAA1hB,KAAA,CAAUoC,CAAAguC,OAAA,CACN9S,CAAA1iC,IAAAuG,KAAA,GAAsB64C,CAAAyB,WAAtB,CAAuCne,CAAA1iC,IAAAuL,KAAvC,CACG,EADH,CACQm3B,CAAA1iC,IAAAY,MAFF,CAAV,CAGI,GAHJ,CAGUu/C,CAHV,CAD+F,CAAjG,CADyC,CAA3C,CASA,CADAzU,CACA,CADa,GACb,CADmB5kB,CAAApc,KAAA,CAAU,GAAV,CACnB,CADoC,GACpC,CAAA,IAAAi+B,OAAA,CAAY+wC,CAAZ,CAAoBhuC,CAApB,CA1BF,CA4BA0uC,EAAA,CAAYV,CAAZ,EAAsBhuC,CAAtB,CACA,MACF,MAAK0T,CAAAiC,eAAL,CACE,IAAA1Y,OAAA,CAAY+wC,CAAZ,CAAoB,GAApB,CACAU,EAAA,CAAYV,CAAZ,EAAsB,GAAtB,CACA,MACF,MAAKt6B,CAAAkC,iBAAL,CACE,IAAA3Y,OAAA,CAAY+wC,CAAZ,CAAoB,GAApB,CACAU,EAAA,CAAYV,CAAZ,EAAsB,GAAtB,CACA,MACF,MAAKt6B,CAAAuC,iBAAL,CACE,IAAAhZ,OAAA,CAAY+wC,CAAZ,CAAoB,GAApB,CACA,CAAAU,CAAA,CAAYV,CAAZ,EAAsB,GAAtB,CAnNF,CAX4E,CAzGxD,CA4UtBkB,kBAAmBA,QAAQ,CAACn2E,CAAD,CAAUi+B,CAAV,CAAoB,CAC7C,IAAI1iC,EAAMyE,CAANzE,CAAgB,GAAhBA;AAAsB0iC,CAA1B,CACIw2C,EAAM,IAAAvuC,QAAA,EAAAuuC,IACLA,EAAAh5E,eAAA,CAAmBF,CAAnB,CAAL,GACEk5E,CAAA,CAAIl5E,CAAJ,CADF,CACa,IAAAg5E,OAAA,CAAY,CAAA,CAAZ,CAAmBv0E,CAAnB,CAA6B,KAA7B,CAAqC,IAAA+wC,OAAA,CAAY9S,CAAZ,CAArC,CAA6D,MAA7D,CAAsEj+B,CAAtE,CAAgF,GAAhF,CADb,CAGA,OAAOy0E,EAAA,CAAIl5E,CAAJ,CANsC,CA5UzB,CAqVtB2oC,OAAQA,QAAQ,CAACpY,CAAD,CAAK3vB,CAAL,CAAY,CAC1B,GAAK2vB,CAAL,CAEA,MADA,KAAAoa,QAAA,EAAAiJ,KAAAxuC,KAAA,CAAyBmrB,CAAzB,CAA6B,GAA7B,CAAkC3vB,CAAlC,CAAyC,GAAzC,CACO2vB,CAAAA,CAHmB,CArVN,CA2VtBpe,OAAQA,QAAQ,CAAC8oE,CAAD,CAAa,CACtB,IAAAntD,MAAAgoC,QAAA51D,eAAA,CAAkC+6E,CAAlC,CAAL,GACE,IAAAntD,MAAAgoC,QAAA,CAAmBmlB,CAAnB,CADF,CACmC,IAAAjC,OAAA,CAAY,CAAA,CAAZ,CADnC,CAGA,OAAO,KAAAlrD,MAAAgoC,QAAA,CAAmBmlB,CAAnB,CAJoB,CA3VP,CAkWtBl8B,UAAWA,QAAQ,CAACxuB,CAAD,CAAK2qD,CAAL,CAAmB,CACpC,MAAO,YAAP,CAAsB3qD,CAAtB,CAA2B,GAA3B,CAAiC,IAAAilB,OAAA,CAAY0lC,CAAZ,CAAjC,CAA6D,GADzB,CAlWhB,CAsWtBR,KAAMA,QAAQ,CAACn6B,CAAD,CAAOC,CAAP,CAAc,CAC1B,MAAO,OAAP,CAAiBD,CAAjB,CAAwB,GAAxB,CAA8BC,CAA9B,CAAsC,GADZ,CAtWN,CA0WtB+4B,QAASA,QAAQ,CAAChpD,CAAD,CAAK,CACpB,IAAAoa,QAAA,EAAAiJ,KAAAxuC,KAAA,CAAyB,SAAzB,CAAoCmrB,CAApC,CAAwC,GAAxC,CADoB,CA1WA,CA8WtB+pD,IAAKA,QAAQ,CAACt2E,CAAD;AAAO28C,CAAP,CAAkBC,CAAlB,CAA8B,CACzC,GAAa,CAAA,CAAb,GAAI58C,CAAJ,CACE28C,CAAA,EADF,KAEO,CACL,IAAI/M,EAAO,IAAAjJ,QAAA,EAAAiJ,KACXA,EAAAxuC,KAAA,CAAU,KAAV,CAAiBpB,CAAjB,CAAuB,IAAvB,CACA28C,EAAA,EACA/M,EAAAxuC,KAAA,CAAU,GAAV,CACIw7C,EAAJ,GACEhN,CAAAxuC,KAAA,CAAU,OAAV,CAEA,CADAw7C,CAAA,EACA,CAAAhN,CAAAxuC,KAAA,CAAU,GAAV,CAHF,CALK,CAHkC,CA9WrB,CA8XtBu1E,IAAKA,QAAQ,CAACjvC,CAAD,CAAa,CACxB,MAAO,IAAP,CAAcA,CAAd,CAA2B,GADH,CA9XJ,CAkYtBmvC,OAAQA,QAAQ,CAACnvC,CAAD,CAAa,CAC3B,MAAOA,EAAP,CAAoB,QADO,CAlYP,CAsYtBqvC,QAASA,QAAQ,CAACrvC,CAAD,CAAa,CAC5B,MAAOA,EAAP,CAAoB,QADQ,CAtYR,CA0YtBovC,kBAAmBA,QAAQ,CAACv6B,CAAD,CAAOC,CAAP,CAAc,CAEvC,IAAI26B,EAAoB,iBACxB,OAFsBC,4BAElBp3E,KAAA,CAAqBw8C,CAArB,CAAJ,CACSD,CADT,CACgB,GADhB,CACsBC,CADtB,CAGSD,CAHT,CAGiB,IAHjB,CAGwBC,CAAA93C,QAAA,CAAcyyE,CAAd,CAAiC,IAAAE,eAAjC,CAHxB,CAGgF,IANzC,CA1YnB,CAoZtBb,eAAgBA,QAAQ,CAACj6B,CAAD,CAAOC,CAAP,CAAc,CACpC,MAAOD,EAAP,CAAc,GAAd,CAAoBC,CAApB,CAA4B,GADQ,CApZhB,CAwZtBw6B,OAAQA,QAAQ,CAACz6B,CAAD,CAAOC,CAAP,CAAclB,CAAd,CAAwB,CACtC,MAAIA,EAAJ,CAAqB,IAAAk7B,eAAA,CAAoBj6B,CAApB,CAA0BC,CAA1B,CAArB,CACO,IAAAs6B,kBAAA,CAAuBv6B,CAAvB;AAA6BC,CAA7B,CAF+B,CAxZlB,CA6ZtB1B,eAAgBA,QAAQ,CAACl/C,CAAD,CAAO,CAC7B,IAAA+oC,OAAA,CAAY/oC,CAAZ,CAAkB,iBAAlB,CAAsCA,CAAtC,CAA6C,GAA7C,CAD6B,CA7ZT,CAiatB66E,YAAaA,QAAQ,CAAC36B,CAAD,CAAM45B,CAAN,CAAcS,CAAd,CAAsBC,CAAtB,CAAmCx3E,CAAnC,CAA2Cy3E,CAA3C,CAA6D,CAChF,IAAI7yE,EAAO,IACX,OAAO,SAAQ,EAAG,CAChBA,CAAA8xE,QAAA,CAAax5B,CAAb,CAAkB45B,CAAlB,CAA0BS,CAA1B,CAAkCC,CAAlC,CAA+Cx3E,CAA/C,CAAuDy3E,CAAvD,CADgB,CAF8D,CAja5D,CAwatBE,WAAYA,QAAQ,CAAChqD,CAAD,CAAK3vB,CAAL,CAAY,CAC9B,IAAI4G,EAAO,IACX,OAAO,SAAQ,EAAG,CAChBA,CAAAmhC,OAAA,CAAYpY,CAAZ,CAAgB3vB,CAAhB,CADgB,CAFY,CAxaV,CA+atB06E,kBAAmB,gBA/aG,CAibtBD,eAAgBA,QAAQ,CAACE,CAAD,CAAI,CAC1B,MAAO,KAAP,CAAep5E,CAAC,MAADA,CAAUo5E,CAAAhF,WAAA,CAAa,CAAb,CAAApzE,SAAA,CAAyB,EAAzB,CAAVhB,OAAA,CAA+C,EAA/C,CADW,CAjbN,CAqbtBqzC,OAAQA,QAAQ,CAAC50C,CAAD,CAAQ,CACtB,GAAIpB,CAAA,CAASoB,CAAT,CAAJ,CAAqB,MAAO,GAAP,CAAcA,CAAA8H,QAAA,CAAc,IAAA4yE,kBAAd,CAAsC,IAAAD,eAAtC,CAAd,CAA2E,GAChG,IAAIn8E,CAAA,CAAS0B,CAAT,CAAJ,CAAqB,MAAOA,EAAAuC,SAAA,EAC5B,IAAc,CAAA,CAAd,GAAIvC,CAAJ,CAAoB,MAAO,MAC3B,IAAc,CAAA,CAAd;AAAIA,CAAJ,CAAqB,MAAO,OAC5B,IAAc,IAAd,GAAIA,CAAJ,CAAoB,MAAO,MAC3B,IAAqB,WAArB,GAAI,MAAOA,EAAX,CAAkC,MAAO,WAEzC,MAAMo0E,GAAA,CAAa,KAAb,CAAN,CARsB,CArbF,CAgctBgE,OAAQA,QAAQ,CAACwC,CAAD,CAAOC,CAAP,CAAa,CAC3B,IAAIlrD,EAAK,GAALA,CAAY,IAAAzC,MAAAkrD,OAAA,EACXwC,EAAL,EACE,IAAA7wC,QAAA,EAAAsuC,KAAA7zE,KAAA,CAAyBmrB,CAAzB,EAA+BkrD,CAAA,CAAO,GAAP,CAAaA,CAAb,CAAoB,EAAnD,EAEF,OAAOlrD,EALoB,CAhcP,CAwctBoa,QAASA,QAAQ,EAAG,CAClB,MAAO,KAAA7c,MAAA,CAAW,IAAAA,MAAAurD,UAAX,CADW,CAxcE,CAkdxBx3B,GAAAp7B,UAAA,CAA2B,CACzB9Z,QAASA,QAAQ,CAACmzC,CAAD,CAAM,CACrB,IAAIt4C,EAAO,IACXq4C,EAAA,CAAgCC,CAAhC,CAAqCt4C,CAAA6S,QAArC,CACA,KAAI8+D,CAAJ,CACIxwC,CACJ,IAAKwwC,CAAL,CAAkBz3B,EAAA,CAAc5B,CAAd,CAAlB,CACEnX,CAAA,CAAS,IAAA2wC,QAAA,CAAaH,CAAb,CAEP94B,EAAAA,CAAUkB,EAAA,CAAUzB,CAAAlM,KAAV,CACd,KAAIgQ,CACAvD,EAAJ,GACEuD,CACA,CADS,EACT,CAAA/jD,CAAA,CAAQwgD,CAAR,CAAiB,QAAQ,CAAC2M,CAAD,CAAQhtD,CAAR,CAAa,CACpC,IAAIsT,EAAQ9L,CAAA8xE,QAAA,CAAatsB,CAAb,CACZ15C,EAAA4rC,OAAA,CAAe8N,CAAA9N,OACf8N,EAAA15C,MAAA,CAAcA,CACdswC,EAAAx+C,KAAA,CAAYkO,CAAZ,CACA05C,EAAA2sB,QAAA,CAAgB35E,CALoB,CAAtC,CAFF,CAUA,KAAIolC,EAAc,EAClBvlC,EAAA,CAAQigD,CAAAlM,KAAR;AAAkB,QAAQ,CAAClI,CAAD,CAAa,CACrCtG,CAAAhgC,KAAA,CAAiBoC,CAAA8xE,QAAA,CAAa5tC,CAAAA,WAAb,CAAjB,CADqC,CAAvC,CAGIjkC,EAAAA,CAAyB,CAApB,GAAAq4C,CAAAlM,KAAAl0C,OAAA,CAAwBmD,CAAxB,CACoB,CAApB,GAAAi9C,CAAAlM,KAAAl0C,OAAA,CAAwB0lC,CAAA,CAAY,CAAZ,CAAxB,CACA,QAAQ,CAAC14B,CAAD,CAAQmc,CAAR,CAAgB,CACtB,IAAIsf,CACJtoC,EAAA,CAAQulC,CAAR,CAAqB,QAAQ,CAACmR,CAAD,CAAM,CACjCpO,CAAA,CAAYoO,CAAA,CAAI7pC,CAAJ,CAAWmc,CAAX,CADqB,CAAnC,CAGA,OAAOsf,EALe,CAO7BQ,EAAJ,GACElhC,CAAAkhC,OADF,CACc+yC,QAAQ,CAAChvE,CAAD,CAAQ9L,CAAR,CAAeioB,CAAf,CAAuB,CACzC,MAAO8f,EAAA,CAAOj8B,CAAP,CAAcmc,CAAd,CAAsBjoB,CAAtB,CADkC,CAD7C,CAKIgjD,EAAJ,GACEn8C,CAAAm8C,OADF,CACcA,CADd,CAGA,OAAOn8C,EAzCc,CADE,CA6CzB6xE,QAASA,QAAQ,CAACx5B,CAAD,CAAM//C,CAAN,CAAe6C,CAAf,CAAuB,CAAA,IAClC29C,CADkC,CAC5BC,CAD4B,CACrBh5C,EAAO,IADc,CACRsf,CAC9B,IAAIg5B,CAAAxsC,MAAJ,CACE,MAAO,KAAAswC,OAAA,CAAY9D,CAAAxsC,MAAZ,CAAuBwsC,CAAA65B,QAAvB,CAET,QAAQ75B,CAAAv5C,KAAR,EACA,KAAK64C,CAAAgB,QAAL,CACE,MAAO,KAAAx/C,MAAA,CAAWk/C,CAAAl/C,MAAX,CAAsBb,CAAtB,CACT,MAAKq/C,CAAAG,gBAAL,CAEE,MADAiB,EACO,CADC,IAAA84B,QAAA,CAAax5B,CAAAQ,SAAb,CACD,CAAA,IAAA,CAAK,OAAL,CAAeR,CAAAJ,SAAf,CAAA,CAA6Bc,CAA7B,CAAoCzgD,CAApC,CACT,MAAKq/C,CAAAK,iBAAL,CAGE,MAFAc,EAEO,CAFA,IAAA+4B,QAAA,CAAax5B,CAAAS,KAAb,CAEA;AADPC,CACO,CADC,IAAA84B,QAAA,CAAax5B,CAAAU,MAAb,CACD,CAAA,IAAA,CAAK,QAAL,CAAgBV,CAAAJ,SAAhB,CAAA,CAA8Ba,CAA9B,CAAoCC,CAApC,CAA2CzgD,CAA3C,CACT,MAAKq/C,CAAAqB,kBAAL,CAGE,MAFAF,EAEO,CAFA,IAAA+4B,QAAA,CAAax5B,CAAAS,KAAb,CAEA,CADPC,CACO,CADC,IAAA84B,QAAA,CAAax5B,CAAAU,MAAb,CACD,CAAA,IAAA,CAAK,QAAL,CAAgBV,CAAAJ,SAAhB,CAAA,CAA8Ba,CAA9B,CAAoCC,CAApC,CAA2CzgD,CAA3C,CACT,MAAKq/C,CAAAsB,sBAAL,CACE,MAAO,KAAA,CAAK,WAAL,CAAA,CACL,IAAA44B,QAAA,CAAax5B,CAAA97C,KAAb,CADK,CAEL,IAAAs1E,QAAA,CAAax5B,CAAAa,UAAb,CAFK,CAGL,IAAA24B,QAAA,CAAax5B,CAAAc,WAAb,CAHK,CAIL7gD,CAJK,CAMT,MAAKq/C,CAAAyB,WAAL,CACE,MAAOr5C,EAAAikC,WAAA,CAAgBqU,CAAAv0C,KAAhB,CAA0BxL,CAA1B,CAAmC6C,CAAnC,CACT,MAAKw8C,CAAAC,iBAAL,CAME,MALAkB,EAKO,CALA,IAAA+4B,QAAA,CAAax5B,CAAAgB,OAAb,CAAyB,CAAA,CAAzB,CAAgC,CAAEl+C,CAAAA,CAAlC,CAKA,CAJFk9C,CAAAR,SAIE,GAHLkB,CAGK,CAHGV,CAAApd,SAAAn3B,KAGH,EADHu0C,CAAAR,SACG,GADWkB,CACX,CADmB,IAAA84B,QAAA,CAAax5B,CAAApd,SAAb,CACnB,EAAAod,CAAAR,SAAA,CACL,IAAAk7B,eAAA,CAAoBj6B,CAApB;AAA0BC,CAA1B,CAAiCzgD,CAAjC,CAA0C6C,CAA1C,CADK,CAEL,IAAAk4E,kBAAA,CAAuBv6B,CAAvB,CAA6BC,CAA7B,CAAoCzgD,CAApC,CAA6C6C,CAA7C,CACJ,MAAKw8C,CAAAO,eAAL,CAOE,MANA74B,EAMO,CANA,EAMA,CALPjnB,CAAA,CAAQigD,CAAA19C,UAAR,CAAuB,QAAQ,CAAC+9C,CAAD,CAAO,CACpCr5B,CAAA1hB,KAAA,CAAUoC,CAAA8xE,QAAA,CAAan5B,CAAb,CAAV,CADoC,CAAtC,CAKO,CAFHL,CAAA3tC,OAEG,GAFSquC,CAET,CAFiB,IAAAnmC,QAAA,CAAaylC,CAAAkB,OAAAz1C,KAAb,CAEjB,EADFu0C,CAAA3tC,OACE,GADUquC,CACV,CADkB,IAAA84B,QAAA,CAAax5B,CAAAkB,OAAb,CAAyB,CAAA,CAAzB,CAClB,EAAAlB,CAAA3tC,OAAA,CACL,QAAQ,CAACzF,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAEtC,IADA,IAAIluB,EAAS,EAAb,CACSj1B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqmB,CAAApnB,OAApB,CAAiC,EAAEe,CAAnC,CACEi1B,CAAAtwB,KAAA,CAAY0hB,CAAA,CAAKrmB,CAAL,CAAA,CAAQiM,CAAR,CAAemc,CAAf,CAAuB8f,CAAvB,CAA+Bib,CAA/B,CAAZ,CAEEhjD,EAAAA,CAAQ4/C,CAAA54C,MAAA,CAAYjC,IAAAA,EAAZ,CAAuB+vB,CAAvB,CAA+BkuB,CAA/B,CACZ,OAAO7jD,EAAA,CAAU,CAACA,QAAS4F,IAAAA,EAAV,CAAqB4F,KAAM5F,IAAAA,EAA3B,CAAsC/E,MAAOA,CAA7C,CAAV,CAAgEA,CANjC,CADnC,CASL,QAAQ,CAAC8L,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACtC,IAAI+3B,EAAMn7B,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAAV,CACIhjD,CACJ,IAAiB,IAAjB,EAAI+6E,CAAA/6E,MAAJ,CAAuB,CACjB80B,CAAAA,CAAS,EACb,KAAS,IAAAj1B,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqmB,CAAApnB,OAApB,CAAiC,EAAEe,CAAnC,CACEi1B,CAAAtwB,KAAA,CAAY0hB,CAAA,CAAKrmB,CAAL,CAAA,CAAQiM,CAAR,CAAemc,CAAf,CAAuB8f,CAAvB,CAA+Bib,CAA/B,CAAZ,CAEFhjD,EAAA,CAAQ+6E,CAAA/6E,MAAAgH,MAAA,CAAgB+zE,CAAA57E,QAAhB,CAA6B21B,CAA7B,CALa,CAOvB,MAAO31B,EAAA;AAAU,CAACa,MAAOA,CAAR,CAAV,CAA2BA,CAVI,CAY5C,MAAKw+C,CAAA6B,qBAAL,CAGE,MAFAV,EAEO,CAFA,IAAA+4B,QAAA,CAAax5B,CAAAS,KAAb,CAAuB,CAAA,CAAvB,CAA6B,CAA7B,CAEA,CADPC,CACO,CADC,IAAA84B,QAAA,CAAax5B,CAAAU,MAAb,CACD,CAAA,QAAQ,CAAC9zC,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAC7C,IAAIg4B,EAAMr7B,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CACN+3B,EAAAA,CAAMn7B,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACVg4B,EAAA77E,QAAA,CAAY67E,CAAArwE,KAAZ,CAAA,CAAwBowE,CACxB,OAAO57E,EAAA,CAAU,CAACa,MAAO+6E,CAAR,CAAV,CAAyBA,CAJa,CAMjD,MAAKv8B,CAAA8B,gBAAL,CAKE,MAJAp6B,EAIO,CAJA,EAIA,CAHPjnB,CAAA,CAAQigD,CAAAr9B,SAAR,CAAsB,QAAQ,CAAC09B,CAAD,CAAO,CACnCr5B,CAAA1hB,KAAA,CAAUoC,CAAA8xE,QAAA,CAAan5B,CAAb,CAAV,CADmC,CAArC,CAGO,CAAA,QAAQ,CAACzzC,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAE7C,IADA,IAAIhjD,EAAQ,EAAZ,CACSH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqmB,CAAApnB,OAApB,CAAiC,EAAEe,CAAnC,CACEG,CAAAwE,KAAA,CAAW0hB,CAAA,CAAKrmB,CAAL,CAAA,CAAQiM,CAAR,CAAemc,CAAf,CAAuB8f,CAAvB,CAA+Bib,CAA/B,CAAX,CAEF,OAAO7jD,EAAA,CAAU,CAACa,MAAOA,CAAR,CAAV,CAA2BA,CALW,CAOjD,MAAKw+C,CAAA+B,iBAAL,CAiBE,MAhBAr6B,EAgBO,CAhBA,EAgBA,CAfPjnB,CAAA,CAAQigD,CAAAsB,WAAR,CAAwB,QAAQ,CAAC1e,CAAD,CAAW,CACrCA,CAAA4c,SAAJ,CACEx4B,CAAA1hB,KAAA,CAAU,CAACpF,IAAKwH,CAAA8xE,QAAA,CAAa52C,CAAA1iC,IAAb,CAAN,CACCs/C,SAAU,CAAA,CADX,CAEC1+C,MAAO4G,CAAA8xE,QAAA,CAAa52C,CAAA9hC,MAAb,CAFR,CAAV,CADF;AAMEkmB,CAAA1hB,KAAA,CAAU,CAACpF,IAAK0iC,CAAA1iC,IAAAuG,KAAA,GAAsB64C,CAAAyB,WAAtB,CACAne,CAAA1iC,IAAAuL,KADA,CAEC,EAFD,CAEMm3B,CAAA1iC,IAAAY,MAFZ,CAGC0+C,SAAU,CAAA,CAHX,CAIC1+C,MAAO4G,CAAA8xE,QAAA,CAAa52C,CAAA9hC,MAAb,CAJR,CAAV,CAPuC,CAA3C,CAeO,CAAA,QAAQ,CAAC8L,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAE7C,IADA,IAAIhjD,EAAQ,EAAZ,CACSH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBqmB,CAAApnB,OAApB,CAAiC,EAAEe,CAAnC,CACMqmB,CAAA,CAAKrmB,CAAL,CAAA6+C,SAAJ,CACE1+C,CAAA,CAAMkmB,CAAA,CAAKrmB,CAAL,CAAAT,IAAA,CAAY0M,CAAZ,CAAmBmc,CAAnB,CAA2B8f,CAA3B,CAAmCib,CAAnC,CAAN,CADF,CACsD98B,CAAA,CAAKrmB,CAAL,CAAAG,MAAA,CAAc8L,CAAd,CAAqBmc,CAArB,CAA6B8f,CAA7B,CAAqCib,CAArC,CADtD,CAGEhjD,CAAA,CAAMkmB,CAAA,CAAKrmB,CAAL,CAAAT,IAAN,CAHF,CAGuB8mB,CAAA,CAAKrmB,CAAL,CAAAG,MAAA,CAAc8L,CAAd,CAAqBmc,CAArB,CAA6B8f,CAA7B,CAAqCib,CAArC,CAGzB,OAAO7jD,EAAA,CAAU,CAACa,MAAOA,CAAR,CAAV,CAA2BA,CATW,CAWjD,MAAKw+C,CAAAiC,eAAL,CACE,MAAO,SAAQ,CAAC30C,CAAD,CAAQ,CACrB,MAAO3M,EAAA,CAAU,CAACa,MAAO8L,CAAR,CAAV,CAA2BA,CADb,CAGzB,MAAK0yC,CAAAkC,iBAAL,CACE,MAAO,SAAQ,CAAC50C,CAAD,CAAQmc,CAAR,CAAgB,CAC7B,MAAO9oB,EAAA,CAAU,CAACa,MAAOioB,CAAR,CAAV,CAA4BA,CADN,CAGjC,MAAKu2B,CAAAuC,iBAAL,CACE,MAAO,SAAQ,CAACj1C,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwB,CACrC,MAAO5oC,EAAA,CAAU,CAACa,MAAO+nC,CAAR,CAAV,CAA4BA,CADE,CAtHzC,CALsC,CA7Cf,CA8KzB,SAAUkzC,QAAQ,CAACv7B,CAAD,CAAWvgD,CAAX,CAAoB,CACpC,MAAO,SAAQ,CAAC2M,CAAD;AAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM8wC,CAAA,CAAS5zC,CAAT,CAAgBmc,CAAhB,CAAwB8f,CAAxB,CAAgCib,CAAhC,CAERp0C,EAAA,CADE9Q,CAAA,CAAU8Q,CAAV,CAAJ,CACQ,CAACA,CADT,CAGQ,CAER,OAAOzP,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAPa,CADX,CA9Kb,CAyLzB,SAAUssE,QAAQ,CAACx7B,CAAD,CAAWvgD,CAAX,CAAoB,CACpC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM8wC,CAAA,CAAS5zC,CAAT,CAAgBmc,CAAhB,CAAwB8f,CAAxB,CAAgCib,CAAhC,CAERp0C,EAAA,CADE9Q,CAAA,CAAU8Q,CAAV,CAAJ,CACQ,CAACA,CADT,CAGS,EAET,OAAOzP,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAPa,CADX,CAzLb,CAoMzB,SAAUusE,QAAQ,CAACz7B,CAAD,CAAWvgD,CAAX,CAAoB,CACpC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM,CAAC8wC,CAAA,CAAS5zC,CAAT,CAAgBmc,CAAhB,CAAwB8f,CAAxB,CAAgCib,CAAhC,CACX,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADX,CApMb,CA0MzB,UAAWwsE,QAAQ,CAACz7B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAC7C,IAAIg4B,EAAMr7B,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CACN+3B,EAAAA,CAAMn7B,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACNp0C,EAAAA,CAAMwvC,EAAA,CAAO48B,CAAP,CAAYD,CAAZ,CACV,OAAO57E,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAJa,CADP,CA1MjB,CAkNzB,UAAWysE,QAAQ,CAAC17B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAC7C,IAAIg4B,EAAMr7B,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CACN+3B,EAAAA,CAAMn7B,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACNp0C,EAAAA,EAAO9Q,CAAA,CAAUk9E,CAAV,CAAA,CAAiBA,CAAjB,CAAuB,CAA9BpsE,GAAoC9Q,CAAA,CAAUi9E,CAAV,CAAA,CAAiBA,CAAjB,CAAuB,CAA3DnsE,CACJ,OAAOzP,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAJa,CADP,CAlNjB,CA0NzB,UAAW0sE,QAAQ,CAAC37B,CAAD,CAAOC,CAAP;AAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,CAA4CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAChD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADP,CA1NjB,CAgOzB,UAAW2sE,QAAQ,CAAC57B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,CAA4CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAChD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADP,CAhOjB,CAsOzB,UAAW4sE,QAAQ,CAAC77B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,CAA4CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAChD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADP,CAtOjB,CA4OzB,YAAa6sE,QAAQ,CAAC97B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CAC1C,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,GAA8CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAClD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADL,CA5OnB,CAkPzB,YAAa8sE,QAAQ,CAAC/7B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CAC1C,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,GAA8CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAClD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADL,CAlPnB,CAwPzB,WAAY+sE,QAAQ,CAACh8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD;AAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAEzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAHa,CADN,CAxPlB,CA+PzB,WAAYgtE,QAAQ,CAACj8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAEzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAHa,CADN,CA/PlB,CAsQzB,UAAWitE,QAAQ,CAACl8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,CAA4CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAChD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADP,CAtQjB,CA4QzB,UAAWktE,QAAQ,CAACn8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACxC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,CAA4CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAChD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADP,CA5QjB,CAkRzB,WAAYmtE,QAAQ,CAACp8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADN,CAlRlB,CAwRzB,WAAYotE,QAAQ,CAACr8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA;AAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADN,CAxRlB,CA8RzB,WAAYqtE,QAAQ,CAACt8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADN,CA9RlB,CAoSzB,WAAYstE,QAAQ,CAACv8B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB,CACzC,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAM+wC,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAANp0C,EAA6CgxC,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CACjD,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADN,CApSlB,CA0SzB,YAAautE,QAAQ,CAAC/4E,CAAD,CAAO28C,CAAP,CAAkBC,CAAlB,CAA8B7gD,CAA9B,CAAuC,CAC1D,MAAO,SAAQ,CAAC2M,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCp0C,CAAAA,CAAMxL,CAAA,CAAK0I,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAAA,CAAsCjD,CAAA,CAAUj0C,CAAV,CAAiBmc,CAAjB,CAAyB8f,CAAzB,CAAiCib,CAAjC,CAAtC,CAAiFhD,CAAA,CAAWl0C,CAAX,CAAkBmc,CAAlB,CAA0B8f,CAA1B,CAAkCib,CAAlC,CAC3F,OAAO7jD,EAAA,CAAU,CAACa,MAAO4O,CAAR,CAAV,CAAyBA,CAFa,CADW,CA1SnC,CAgTzB5O,MAAOA,QAAQ,CAACA,CAAD,CAAQb,CAAR,CAAiB,CAC9B,MAAO,SAAQ,EAAG,CAAE,MAAOA,EAAA,CAAU,CAACA,QAAS4F,IAAAA,EAAV,CAAqB4F,KAAM5F,IAAAA,EAA3B,CAAsC/E,MAAOA,CAA7C,CAAV,CAAgEA,CAAzE,CADY,CAhTP,CAmTzB6qC,WAAYA,QAAQ,CAAClgC,CAAD,CAAOxL,CAAP,CAAgB6C,CAAhB,CAAwB,CAC1C,MAAO,SAAQ,CAAC8J,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCtJ,CAAAA;AAAOzxB,CAAA,EAAWtd,CAAX,GAAmBsd,EAAnB,CAA6BA,CAA7B,CAAsCnc,CAC7C9J,EAAJ,EAAyB,CAAzB,GAAcA,CAAd,EAA8B03C,CAA9B,EAAoD,IAApD,EAAsCA,CAAA,CAAK/uC,CAAL,CAAtC,GACE+uC,CAAA,CAAK/uC,CAAL,CADF,CACe,EADf,CAGI3K,EAAAA,CAAQ05C,CAAA,CAAOA,CAAA,CAAK/uC,CAAL,CAAP,CAAoB5F,IAAAA,EAChC,OAAI5F,EAAJ,CACS,CAACA,QAASu6C,CAAV,CAAgB/uC,KAAMA,CAAtB,CAA4B3K,MAAOA,CAAnC,CADT,CAGSA,CAToC,CADL,CAnTnB,CAiUzB45E,eAAgBA,QAAQ,CAACj6B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB6C,CAAvB,CAA+B,CACrD,MAAO,SAAQ,CAAC8J,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CAC7C,IAAIg4B,EAAMr7B,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CAAV,CACI+3B,CADJ,CAEI/6E,CACO,KAAX,EAAIg7E,CAAJ,GACED,CAOA,CAPMn7B,CAAA,CAAM9zC,CAAN,CAAamc,CAAb,CAAqB8f,CAArB,CAA6Bib,CAA7B,CAON,CANA+3B,CAMA,EAjhDQ,EAihDR,CALI/4E,CAKJ,EALyB,CAKzB,GALcA,CAKd,EAJMg5E,CAIN,EAJe,CAAAA,CAAA,CAAID,CAAJ,CAIf,GAHIC,CAAA,CAAID,CAAJ,CAGJ,CAHe,EAGf,EAAA/6E,CAAA,CAAQg7E,CAAA,CAAID,CAAJ,CARV,CAUA,OAAI57E,EAAJ,CACS,CAACA,QAAS67E,CAAV,CAAerwE,KAAMowE,CAArB,CAA0B/6E,MAAOA,CAAjC,CADT,CAGSA,CAjBoC,CADM,CAjU9B,CAuVzBk6E,kBAAmBA,QAAQ,CAACv6B,CAAD,CAAOC,CAAP,CAAczgD,CAAd,CAAuB6C,CAAvB,CAA+B,CACxD,MAAO,SAAQ,CAAC8J,CAAD,CAAQmc,CAAR,CAAgB8f,CAAhB,CAAwBib,CAAxB,CAAgC,CACzCg4B,CAAAA,CAAMr7B,CAAA,CAAK7zC,CAAL,CAAYmc,CAAZ,CAAoB8f,CAApB,CAA4Bib,CAA5B,CACNhhD,EAAJ,EAAyB,CAAzB,GAAcA,CAAd,EACMg5E,CADN,EAC2B,IAD3B,EACaA,CAAA,CAAIp7B,CAAJ,CADb,GAEIo7B,CAAA,CAAIp7B,CAAJ,CAFJ,CAEiB,EAFjB,CAKI5/C,EAAAA,CAAe,IAAP,EAAAg7E,CAAA,CAAcA,CAAA,CAAIp7B,CAAJ,CAAd,CAA2B76C,IAAAA,EACvC,OAAI5F,EAAJ,CACS,CAACA,QAAS67E,CAAV,CAAerwE,KAAMi1C,CAArB,CAA4B5/C,MAAOA,CAAnC,CADT,CAGSA,CAXoC,CADS,CAvVjC,CAuWzBgjD,OAAQA,QAAQ,CAACtwC,CAAD,CAAQqmE,CAAR,CAAiB,CAC/B,MAAO,SAAQ,CAACjtE,CAAD;AAAQ9L,CAAR,CAAeioB,CAAf,CAAuB+6B,CAAvB,CAA+B,CAC5C,MAAIA,EAAJ,CAAmBA,CAAA,CAAO+1B,CAAP,CAAnB,CACOrmE,CAAA,CAAM5G,CAAN,CAAa9L,CAAb,CAAoBioB,CAApB,CAFqC,CADf,CAvWR,CAwX3Bi5B,GAAAr7B,UAAA,CAAmB,CACjB7gB,YAAak8C,EADI,CAGjBx5C,MAAOA,QAAQ,CAACq8B,CAAD,CAAO,CAChBmb,CAAAA,CAAM,IAAA4F,OAAA,CAAY/gB,CAAZ,CACV,KAAIl9B,EAAK,IAAAu6C,YAAAr1C,QAAA,CAAyBmzC,CAAAA,IAAzB,CAAT,CACuBA,EAAAA,CAAAA,IAAvBr4C,EAAAihC,QAAA,CA/1ByB,CA+1BzB,GA/1BKoX,CAAAlM,KAAAl0C,OA+1BL,EA91BsB,CA81BtB,GA91BEogD,CAAAlM,KAAAl0C,OA81BF,GA71BEogD,CAAAlM,KAAA,CAAS,CAAT,CAAAlI,WAAAnlC,KA61BF,GA71BkC64C,CAAAgB,QA61BlC,EA51BEN,CAAAlM,KAAA,CAAS,CAAT,CAAAlI,WAAAnlC,KA41BF,GA51BkC64C,CAAA8B,gBA41BlC,EA31BEpB,CAAAlM,KAAA,CAAS,CAAT,CAAAlI,WAAAnlC,KA21BF,GA31BkC64C,CAAA+B,iBA21BlC,CACA15C,EAAAuK,SAAA,CAAyB8tC,CAAAA,IAx1BpB9tC,SAy1BLvK,EAAAs9C,QAAA,CAAajF,CAAAiF,QACb,OAAOt9C,EANa,CAHL,CAYjBi+C,OAAQA,QAAQ,CAACnP,CAAD,CAAM,CACpB,IAAIwO,EAAU,CAAA,CACdxO,EAAA,CAAMA,CAAAv2B,KAAA,EAEgB,IAAtB,GAAIu2B,CAAApvC,OAAA,CAAW,CAAX,CAAJ,EAA+C,GAA/C,GAA6BovC,CAAApvC,OAAA,CAAW,CAAX,CAA7B,GACE49C,CACA,CADU,CAAA,CACV,CAAAxO,CAAA,CAAMA,CAAAlsC,UAAA,CAAc,CAAd,CAFR,CAIA,OAAO,CACLy1C,IAAK,IAAAA,IAAAA,IAAA,CAAavJ,CAAb,CADA;AAELwO,QAASA,CAFJ,CARa,CAZL,CAopFnB,KAAIoK,GAAahwD,CAAA,CAAO,MAAP,CAAjB,CAEIy2B,EAAe,CAEjBC,KAAM,MAFW,CAKjBC,IAAK,KALY,CASjBE,UAAW,UATM,CAajBD,IAAK,KAbY,CAkBjBE,aAAc,aAlBG,CAqBjBy6B,GAAI,IArBa,CAFnB,CA4BIc,GAA8B,WA5BlC,CAs4CIqC,GAAyB10D,CAAA,CAAO,kBAAP,CAt4C7B,CA4nDI01D,GAAiB11D,CAAA,CAAO,UAAP,CA5nDrB,CAgvDI21D,GAAiBx2D,CAAAyJ,SAAAkX,cAAA,CAA8B,GAA9B,CAhvDrB,CAivDIi2C,GAAYjnC,EAAA,CAAW3vB,CAAAgP,SAAAsgB,KAAX,CAjvDhB,CAkvDIkiC,EAEJgF,GAAAlnC,KAAA,CAAsB,cAKtB,KAAImnC,GAA6C,OAA7CA,GAAiBD,EAAAzb,SAuRrBkc,GAAAzsC,QAAA,CAAyB,CAAC,WAAD,CAgHzBxO,GAAAwO,QAAA,CAA0B,CAAC,UAAD,CA4U1B,KAAIgwC,GAAa,EAAjB,CACIR,GAAc,GADlB,CAEIO,GAAY,GAsDhB7C,GAAAltC,QAAA,CAAyB,CAAC,SAAD,CA6EzBwtC,GAAAxtC,QAAA,CAAuB,CAAC,SAAD,CAuTvB,KAAIo0C,GAAe,CACjBuF,KAAM1H,EAAA,CAAW,UAAX,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAAA,CAA7B,CAAoC,CAAA,CAApC,CADW,CAEfiiB,GAAIjiB,EAAA,CAAW,UAAX,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAAA,CAA7B,CAAmC,CAAA,CAAnC,CAFW,CAGdkiB,EAAGliB,EAAA,CAAW,UAAX,CAAuB,CAAvB,CAA0B,CAA1B,CAA6B,CAAA,CAA7B,CAAoC,CAAA,CAApC,CAHW;AAIjBmiB,KAAMliB,EAAA,CAAc,OAAd,CAJW,CAKhBmiB,IAAKniB,EAAA,CAAc,OAAd,CAAuB,CAAA,CAAvB,CALW,CAMf0H,GAAI3H,EAAA,CAAW,OAAX,CAAoB,CAApB,CAAuB,CAAvB,CANW,CAOdqiB,EAAGriB,EAAA,CAAW,OAAX,CAAoB,CAApB,CAAuB,CAAvB,CAPW,CAQjBsiB,KAAMriB,EAAA,CAAc,OAAd,CAAuB,CAAA,CAAvB,CAA8B,CAAA,CAA9B,CARW,CASf2H,GAAI5H,EAAA,CAAW,MAAX,CAAmB,CAAnB,CATW,CAUd5sB,EAAG4sB,EAAA,CAAW,MAAX,CAAmB,CAAnB,CAVW,CAWf6H,GAAI7H,EAAA,CAAW,OAAX,CAAoB,CAApB,CAXW,CAYduiB,EAAGviB,EAAA,CAAW,OAAX,CAAoB,CAApB,CAZW,CAafwiB,GAAIxiB,EAAA,CAAW,OAAX,CAAoB,CAApB,CAAwB,GAAxB,CAbW,CAcd55D,EAAG45D,EAAA,CAAW,OAAX,CAAoB,CAApB,CAAwB,GAAxB,CAdW,CAef+H,GAAI/H,EAAA,CAAW,SAAX,CAAsB,CAAtB,CAfW,CAgBd4B,EAAG5B,EAAA,CAAW,SAAX,CAAsB,CAAtB,CAhBW,CAiBfgI,GAAIhI,EAAA,CAAW,SAAX,CAAsB,CAAtB,CAjBW,CAkBd1V,EAAG0V,EAAA,CAAW,SAAX,CAAsB,CAAtB,CAlBW,CAqBhBkI,IAAKlI,EAAA,CAAW,cAAX,CAA2B,CAA3B,CArBW,CAsBjByiB,KAAMxiB,EAAA,CAAc,KAAd,CAtBW,CAuBhByiB,IAAKziB,EAAA,CAAc,KAAd,CAAqB,CAAA,CAArB,CAvBW,CAwBdv0D,EApCLi3E,QAAmB,CAAC30E,CAAD,CAAO4uD,CAAP,CAAgB,CACjC,MAAyB,GAAlB,CAAA5uD,CAAA85D,SAAA,EAAA,CAAuBlL,CAAAgmB,MAAA,CAAc,CAAd,CAAvB,CAA0ChmB,CAAAgmB,MAAA,CAAc,CAAd,CADhB,CAYhB,CAyBdC,EAzELC,QAAuB,CAAC90E,CAAD,CAAO4uD,CAAP,CAAgBhtC,CAAhB,CAAwB,CACzCmzD,CAAAA,CAAQ,EAARA,CAAYnzD,CAMhB,OAHAozD,EAGA,EAL0B,CAATA,EAACD,CAADC,CAAc,GAAdA,CAAoB,EAKrC,GAHcpjB,EAAA,CAAUjkC,IAAA,CAAY,CAAP,CAAAonD,CAAA,CAAW,OAAX,CAAqB,MAA1B,CAAA,CAAkCA,CAAlC,CAAyC,EAAzC,CAAV,CAAwD,CAAxD,CAGd,CAFcnjB,EAAA,CAAUjkC,IAAAqjC,IAAA,CAAS+jB,CAAT,CAAgB,EAAhB,CAAV,CAA+B,CAA/B,CAEd,CAP6C,CAgD5B;AA0BfE,GAAIziB,EAAA,CAAW,CAAX,CA1BW,CA2Bd0iB,EAAG1iB,EAAA,CAAW,CAAX,CA3BW,CA4Bd2iB,EAAGpiB,EA5BW,CA6BdqiB,GAAIriB,EA7BU,CA8BdsiB,IAAKtiB,EA9BS,CA+BduiB,KAnCLC,QAAsB,CAACv1E,CAAD,CAAO4uD,CAAP,CAAgB,CACpC,MAA6B,EAAtB,EAAA5uD,CAAA0yD,YAAA,EAAA,CAA0B9D,CAAA4mB,SAAA,CAAiB,CAAjB,CAA1B,CAAgD5mB,CAAA4mB,SAAA,CAAiB,CAAjB,CADnB,CAInB,CAAnB,CAkCIthB,GAAqB,+FAlCzB,CAmCID,GAAgB,SAkGpB/G,GAAAntC,QAAA,CAAqB,CAAC,SAAD,CAiIrB,KAAIutC,GAAkBrzD,EAAA,CAAQ0B,CAAR,CAAtB,CA2BI8xD,GAAkBxzD,EAAA,CAAQ+P,EAAR,CAqrBtBwjD,GAAAztC,QAAA,CAAwB,CAAC,QAAD,CAwKxB,KAAIzV,GAAsBrQ,EAAA,CAAQ,CAChCgwB,SAAU,GADsB,CAEhCrmB,QAASA,QAAQ,CAAClI,CAAD,CAAUN,CAAV,CAAgB,CAC/B,GAAKypB,CAAAzpB,CAAAypB,KAAL,EAAmB4wD,CAAAr6E,CAAAq6E,UAAnB,CACE,MAAO,SAAQ,CAAC9xE,CAAD,CAAQjI,CAAR,CAAiB,CAE9B,GAA0C,GAA1C,GAAIA,CAAA,CAAQ,CAAR,CAAA3C,SAAAkM,YAAA,EAAJ,CAAA,CAGA,IAAI4f,EAA+C,4BAAxC,GAAAzqB,EAAAhD,KAAA,CAAcsE,CAAAP,KAAA,CAAa,MAAb,CAAd,CAAA,CACA,YADA,CACe,MAC1BO;CAAA8J,GAAA,CAAW,OAAX,CAAoB,QAAQ,CAAC2V,CAAD,CAAQ,CAE7Bzf,CAAAN,KAAA,CAAaypB,CAAb,CAAL,EACE1J,CAAAq5B,eAAA,EAHgC,CAApC,CALA,CAF8B,CAFH,CAFD,CAAR,CAA1B,CAgXI9kC,GAA6B,EAGjC5Y,EAAA,CAAQikB,EAAR,CAAsB,QAAQ,CAAC8hB,CAAD,CAAW5T,CAAX,CAAqB,CAIjDysD,QAASA,EAAa,CAAC/xE,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAC3CuI,CAAA7I,OAAA,CAAaM,CAAA,CAAKu6E,CAAL,CAAb,CAA+BC,QAAiC,CAAC/9E,CAAD,CAAQ,CACtEuD,CAAAk/B,KAAA,CAAUrR,CAAV,CAAoB,CAAEpxB,CAAAA,CAAtB,CADsE,CAAxE,CAD2C,CAF7C,GAAiB,UAAjB,GAAIglC,CAAJ,CAAA,CAQA,IAAI84C,EAAarjD,EAAA,CAAmB,KAAnB,CAA2BrJ,CAA3B,CAAjB,CACIgL,EAASyhD,CAEI,UAAjB,GAAI74C,CAAJ,GACE5I,CADF,CACWA,QAAQ,CAACtwB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAElCA,CAAA8S,QAAJ,GAAqB9S,CAAA,CAAKu6E,CAAL,CAArB,EACED,CAAA,CAAc/xE,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAHoC,CAD1C,CASAsU,GAAA,CAA2BimE,CAA3B,CAAA,CAAyC,QAAQ,EAAG,CAClD,MAAO,CACL1rD,SAAU,GADL,CAELD,SAAU,GAFL,CAGL/C,KAAMgN,CAHD,CAD2C,CApBpD,CAFiD,CAAnD,CAgCAn9B,EAAA,CAAQiqC,EAAR,CAAsB,QAAQ,CAAC80C,CAAD,CAAW7zE,CAAX,CAAmB,CAC/C0N,EAAA,CAA2B1N,CAA3B,CAAA,CAAqC,QAAQ,EAAG,CAC9C,MAAO,CACLgoB,SAAU,GADL,CAEL/C,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAGnC,GAAe,WAAf,GAAI4G,CAAJ,EAA2D,GAA3D,GAA8B5G,CAAAsT,UAAAtQ,OAAA,CAAsB,CAAtB,CAA9B,GACMd,CADN,CACclC,CAAAsT,UAAApR,MAAA,CAAqB4jE,EAArB,CADd,EAEa,CACT9lE,CAAAk/B,KAAA,CAAU,WAAV,CAAuB,IAAIxhC,MAAJ,CAAWwE,CAAA,CAAM,CAAN,CAAX;AAAqBA,CAAA,CAAM,CAAN,CAArB,CAAvB,CACA,OAFS,CAMbqG,CAAA7I,OAAA,CAAaM,CAAA,CAAK4G,CAAL,CAAb,CAA2B8zE,QAA+B,CAACj+E,CAAD,CAAQ,CAChEuD,CAAAk/B,KAAA,CAAUt4B,CAAV,CAAkBnK,CAAlB,CADgE,CAAlE,CAXmC,CAFhC,CADuC,CADD,CAAjD,CAwBAf,EAAA,CAAQ,CAAC,KAAD,CAAQ,QAAR,CAAkB,MAAlB,CAAR,CAAmC,QAAQ,CAACmyB,CAAD,CAAW,CACpD,IAAI0sD,EAAarjD,EAAA,CAAmB,KAAnB,CAA2BrJ,CAA3B,CACjBvZ,GAAA,CAA2BimE,CAA3B,CAAA,CAAyC,CAAC,MAAD,CAAS,QAAQ,CAACniE,CAAD,CAAO,CAC/D,MAAO,CACLwW,SAAU,EADL,CAEL/C,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAAA,IAC/ByhC,EAAW5T,CADoB,CAE/BzmB,EAAOymB,CAEM,OAAjB,GAAIA,CAAJ,EAC4C,4BAD5C,GACI7uB,EAAAhD,KAAA,CAAcsE,CAAAP,KAAA,CAAa,MAAb,CAAd,CADJ,GAEEqH,CAEA,CAFO,WAEP,CADApH,CAAA+yB,MAAA,CAAW3rB,CAAX,CACA,CADmB,YACnB,CAAAq6B,CAAA,CAAW,IAJb,CASAzhC,EAAAk/B,KAAA,CAAUq7C,CAAV,CAAsBniE,CAAAsa,mBAAA,CAAwB1yB,CAAA,CAAKu6E,CAAL,CAAxB,CAAtB,CAEAv6E,EAAAqkC,SAAA,CAAck2C,CAAd,CAA0B,QAAQ,CAAC99E,CAAD,CAAQ,CACnCA,CAAL,EAOAuD,CAAAk/B,KAAA,CAAU93B,CAAV,CAAgB3K,CAAhB,CAOA,CAAIye,EAAJ,EAAYumB,CAAZ,EAAsBnhC,CAAAP,KAAA,CAAa0hC,CAAb,CAAuBzhC,CAAA,CAAKoH,CAAL,CAAvB,CAdtB,EACmB,MADnB,GACMymB,CADN,EAEI7tB,CAAAk/B,KAAA,CAAU93B,CAAV,CAAgB,IAAhB,CAHoC,CAA1C,CAfmC,CAFhC,CADwD,CAAxB,CAFW,CAAtD,CA9/vBkB,KA0iwBdm0D,GAAe,CACjBof,YAAaj8E,CADI,CAEjBk8E,aAAc/7E,EAAA,CAAQ,EAAR,CAFG,CAGjBg8E,gBAWFC,QAA8B,CAACC,CAAD;AAAU3zE,CAAV,CAAgB,CAC5C2zE,CAAA/f,MAAA,CAAgB5zD,CAD4B,CAd3B,CAIjB4zE,eAAgBt8E,CAJC,CAKjB49D,aAAc59D,CALG,CAMjBu8E,UAAWv8E,CANM,CAOjBw8E,aAAcx8E,CAPG,CAQjBy8E,cAAez8E,CARE,CASjB08E,eAAgB18E,CATC,CAmEnBi8D,GAAAh2C,QAAA,CAAyB,CAAC,UAAD,CAAa,QAAb,CAAuB,QAAvB,CAAiC,UAAjC,CAA6C,cAA7C,CAsBzBg2C,GAAAr4C,UAAA,CAA2B,CAYzB+4D,mBAAoBA,QAAQ,EAAG,CAC7B3/E,CAAA,CAAQ,IAAAk/D,WAAR,CAAyB,QAAQ,CAACmgB,CAAD,CAAU,CACzCA,CAAAM,mBAAA,EADyC,CAA3C,CAD6B,CAZN,CA6BzBC,iBAAkBA,QAAQ,EAAG,CAC3B5/E,CAAA,CAAQ,IAAAk/D,WAAR,CAAyB,QAAQ,CAACmgB,CAAD,CAAU,CACzCA,CAAAO,iBAAA,EADyC,CAA3C,CAD2B,CA7BJ,CAwDzBX,YAAaA,QAAQ,CAACI,CAAD,CAAU,CAG7BtvE,EAAA,CAAwBsvE,CAAA/f,MAAxB,CAAuC,OAAvC,CACA,KAAAJ,WAAA35D,KAAA,CAAqB85E,CAArB,CAEIA,EAAA/f,MAAJ,GACE,IAAA,CAAK+f,CAAA/f,MAAL,CADF,CACwB+f,CADxB,CAIAA,EAAAzf,aAAA,CAAuB,IAVM,CAxDN,CAyFzBsf,aAAcA,QAAQ,EAAG,CACvB,MAAOvsE,GAAA,CAAY,IAAAusD,WAAZ,CADgB,CAzFA;AA8FzBigB,gBAAiBA,QAAQ,CAACE,CAAD,CAAUQ,CAAV,CAAmB,CAC1C,IAAIC,EAAUT,CAAA/f,MAEV,KAAA,CAAKwgB,CAAL,CAAJ,GAAsBT,CAAtB,EACE,OAAO,IAAA,CAAKS,CAAL,CAET,KAAA,CAAKD,CAAL,CAAA,CAAgBR,CAChBA,EAAA/f,MAAA,CAAgBugB,CAP0B,CA9FnB,CAwHzBP,eAAgBA,QAAQ,CAACD,CAAD,CAAU,CAC5BA,CAAA/f,MAAJ,EAAqB,IAAA,CAAK+f,CAAA/f,MAAL,CAArB,GAA6C+f,CAA7C,EACE,OAAO,IAAA,CAAKA,CAAA/f,MAAL,CAETt/D,EAAA,CAAQ,IAAAq/D,SAAR,CAAuB,QAAQ,CAACt+D,CAAD,CAAQ2K,CAAR,CAAc,CAE3C,IAAAk1D,aAAA,CAAkBl1D,CAAlB,CAAwB,IAAxB,CAA8B2zE,CAA9B,CAF2C,CAA7C,CAGG,IAHH,CAIAr/E,EAAA,CAAQ,IAAAm/D,OAAR,CAAqB,QAAQ,CAACp+D,CAAD,CAAQ2K,CAAR,CAAc,CAEzC,IAAAk1D,aAAA,CAAkBl1D,CAAlB,CAAwB,IAAxB,CAA8B2zE,CAA9B,CAFyC,CAA3C,CAGG,IAHH,CAIAr/E,EAAA,CAAQ,IAAAo/D,UAAR,CAAwB,QAAQ,CAACr+D,CAAD,CAAQ2K,CAAR,CAAc,CAE5C,IAAAk1D,aAAA,CAAkBl1D,CAAlB,CAAwB,IAAxB,CAA8B2zE,CAA9B,CAF4C,CAA9C,CAGG,IAHH,CAKAv6E,GAAA,CAAY,IAAAo6D,WAAZ,CAA6BmgB,CAA7B,CACAA,EAAAzf,aAAA,CAAuBC,EAlBS,CAxHT,CAuJzB0f,UAAWA,QAAQ,EAAG,CACpB,IAAAzf,UAAA95C,YAAA,CAA2B,IAAAsR,UAA3B,CAA2CyoD,EAA3C,CACA,KAAAjgB,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB;AAAwC0oD,EAAxC,CACA,KAAAzgB,OAAA,CAAc,CAAA,CACd,KAAAE,UAAA,CAAiB,CAAA,CACjB,KAAAG,aAAA2f,UAAA,EALoB,CAvJG,CA+KzBC,aAAcA,QAAQ,EAAG,CACvB,IAAA1f,UAAAkS,SAAA,CAAwB,IAAA16C,UAAxB,CAAwCyoD,EAAxC,CAAwDC,EAAxD,CA7PcC,eA6Pd,CACA,KAAA1gB,OAAA,CAAc,CAAA,CACd,KAAAE,UAAA,CAAiB,CAAA,CACjB,KAAAC,WAAA,CAAkB,CAAA,CAClB1/D,EAAA,CAAQ,IAAAk/D,WAAR,CAAyB,QAAQ,CAACmgB,CAAD,CAAU,CACzCA,CAAAG,aAAA,EADyC,CAA3C,CALuB,CA/KA,CAsMzBU,cAAeA,QAAQ,EAAG,CACxBlgF,CAAA,CAAQ,IAAAk/D,WAAR,CAAyB,QAAQ,CAACmgB,CAAD,CAAU,CACzCA,CAAAa,cAAA,EADyC,CAA3C,CADwB,CAtMD,CAoNzBT,cAAeA,QAAQ,EAAG,CAExB,IADA,IAAIU,EAAW,IACf,CAAOA,CAAAvgB,aAAP,EAAiCugB,CAAAvgB,aAAjC,GAA2DC,EAA3D,CAAA,CACEsgB,CAAA,CAAWA,CAAAvgB,aAEbugB,EAAAT,eAAA,EALwB,CApND,CA4NzBA,eAAgBA,QAAQ,EAAG,CACzB,IAAA5f,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB;AA1Sc2oD,cA0Sd,CACA,KAAAvgB,WAAA,CAAkB,CAAA,CAClB1/D,EAAA,CAAQ,IAAAk/D,WAAR,CAAyB,QAAQ,CAACmgB,CAAD,CAAU,CACrCA,CAAAK,eAAJ,EACEL,CAAAK,eAAA,EAFuC,CAA3C,CAHyB,CA5NF,CA+P3Bvf,GAAA,CAAqB,CACnBQ,MAAO1B,EADY,CAEnB54D,IAAKA,QAAQ,CAAC46C,CAAD,CAASpe,CAAT,CAAmBh0B,CAAnB,CAA+B,CAC1C,IAAI6b,EAAOu2B,CAAA,CAAOpe,CAAP,CACNnY,EAAL,CAIiB,EAJjB,GAGcA,CAAAzlB,QAAAD,CAAa6J,CAAb7J,CAHd,EAKI0lB,CAAAnlB,KAAA,CAAUsJ,CAAV,CALJ,CACEoyC,CAAA,CAAOpe,CAAP,CADF,CACqB,CAACh0B,CAAD,CAHqB,CAFzB,CAanB6xD,MAAOA,QAAQ,CAACzf,CAAD,CAASpe,CAAT,CAAmBh0B,CAAnB,CAA+B,CAC5C,IAAI6b,EAAOu2B,CAAA,CAAOpe,CAAP,CACNnY,EAAL,GAGA5lB,EAAA,CAAY4lB,CAAZ,CAAkB7b,CAAlB,CACA,CAAoB,CAApB,GAAI6b,CAAA7qB,OAAJ,EACE,OAAOohD,CAAA,CAAOpe,CAAP,CALT,CAF4C,CAb3B,CAArB,CA8LA,KAAIu9C,GAAuBA,QAAQ,CAACC,CAAD,CAAW,CAC5C,MAAO,CAAC,UAAD,CAAa,QAAb,CAAuB,QAAQ,CAAC7iE,CAAD,CAAWtB,CAAX,CAAmB,CAuEvDokE,QAASA,EAAS,CAACz0C,CAAD,CAAa,CAC7B,MAAmB,EAAnB,GAAIA,CAAJ,CAES3vB,CAAA,CAAO,UAAP,CAAA4sB,OAFT,CAIO5sB,CAAA,CAAO2vB,CAAP,CAAA/C,OAJP,EAIoC9lC,CALP,CAF/B,MApEoB6Q,CAClBnI,KAAM,MADYmI,CAElBsf,SAAUktD,CAAA,CAAW,KAAX,CAAmB,GAFXxsE,CAGlBye,QAAS,CAAC,MAAD,CAAS,SAAT,CAHSze,CAIlBhF,WAAYowD,EAJMprD,CAKlB/G,QAASyzE,QAAsB,CAACC,CAAD,CAAcl8E,CAAd,CAAoB,CAEjDk8E,CAAAz6D,SAAA,CAAqBg6D,EAArB,CAAAh6D,SAAA,CAA8Cm6C,EAA9C,CAEA;IAAIugB,EAAWn8E,CAAAoH,KAAA,CAAY,MAAZ,CAAsB20E,CAAA,EAAY/7E,CAAA8Q,OAAZ,CAA0B,QAA1B,CAAqC,CAAA,CAE1E,OAAO,CACL4oB,IAAK0iD,QAAsB,CAAC7zE,CAAD,CAAQ2zE,CAAR,CAAqBl8E,CAArB,CAA2Bq8E,CAA3B,CAAkC,CAC3D,IAAI9xE,EAAa8xE,CAAA,CAAM,CAAN,CAGjB,IAAM,EAAA,QAAA,EAAYr8E,EAAZ,CAAN,CAAyB,CAOvB,IAAIs8E,EAAuBA,QAAQ,CAACv8D,CAAD,CAAQ,CACzCxX,CAAAE,OAAA,CAAa,QAAQ,EAAG,CACtB8B,CAAA+wE,iBAAA,EACA/wE,EAAA4wE,cAAA,EAFsB,CAAxB,CAKAp7D,EAAAq5B,eAAA,EANyC,CAS3C8iC,EAAA,CAAY,CAAZ,CAAA18D,iBAAA,CAAgC,QAAhC,CAA0C88D,CAA1C,CAIAJ,EAAA9xE,GAAA,CAAe,UAAf,CAA2B,QAAQ,EAAG,CACpC8O,CAAA,CAAS,QAAQ,EAAG,CAClBgjE,CAAA,CAAY,CAAZ,CAAA/+D,oBAAA,CAAmC,QAAnC,CAA6Cm/D,CAA7C,CADkB,CAApB,CAEG,CAFH,CAEM,CAAA,CAFN,CADoC,CAAtC,CApBuB,CA4BzB3B,CADqB0B,CAAA,CAAM,CAAN,CACrB1B,EADiCpwE,CAAA+wD,aACjCqf,aAAA,CAA2BpwE,CAA3B,CAEA,KAAIgyE,EAASJ,CAAA,CAAWH,CAAA,CAAUzxE,CAAAywD,MAAV,CAAX,CAAyCt8D,CAElDy9E,EAAJ,GACEI,CAAA,CAAOh0E,CAAP,CAAcgC,CAAd,CACA,CAAAvK,CAAAqkC,SAAA,CAAc83C,CAAd,CAAwB,QAAQ,CAAC15C,CAAD,CAAW,CACrCl4B,CAAAywD,MAAJ,GAAyBv4B,CAAzB,GACA85C,CAAA,CAAOh0E,CAAP,CAAc/G,IAAAA,EAAd,CAGA,CAFA+I,CAAA+wD,aAAAuf,gBAAA,CAAwCtwE,CAAxC,CAAoDk4B,CAApD,CAEA,CADA85C,CACA,CADSP,CAAA,CAAUzxE,CAAAywD,MAAV,CACT,CAAAuhB,CAAA,CAAOh0E,CAAP,CAAcgC,CAAd,CAJA,CADyC,CAA3C,CAFF,CAUA2xE;CAAA9xE,GAAA,CAAe,UAAf,CAA2B,QAAQ,EAAG,CACpCG,CAAA+wD,aAAA0f,eAAA,CAAuCzwE,CAAvC,CACAgyE,EAAA,CAAOh0E,CAAP,CAAc/G,IAAAA,EAAd,CACAzD,EAAA,CAAOwM,CAAP,CAAmBgxD,EAAnB,CAHoC,CAAtC,CA9C2D,CADxD,CAN0C,CALjChsD,CADmC,CAAlD,CADqC,CAA9C,CAkFIA,GAAgBusE,EAAA,EAlFpB,CAmFI/qE,GAAkB+qE,EAAA,CAAqB,CAAA,CAArB,CAnFtB,CAuMIzd,GAAkB,+EAvMtB,CAoNIme,GAAa,qHApNjB,CAsNIC,GAAe,4LAtNnB;AAuNI1b,GAAgB,kDAvNpB,CAwNI2b,GAAc,4BAxNlB,CAyNIC,GAAuB,gEAzN3B,CA0NIC,GAAc,oBA1NlB,CA2NIC,GAAe,mBA3NnB,CA4NIC,GAAc,yCA5NlB,CA+NItf,GAA2Bz6D,CAAA,EAC/BrH,EAAA,CAAQ,CAAA,MAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAR,CAA0D,QAAQ,CAAC0G,CAAD,CAAO,CACvEo7D,EAAA,CAAyBp7D,CAAzB,CAAA,CAAiC,CAAA,CADsC,CAAzE,CAIA,KAAI26E,GAAY,CAgGd,KA6nCFC,QAAsB,CAACz0E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiD,CACrEwnD,EAAA,CAAcv0D,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CACAqnD,GAAA,CAAqBZ,CAArB,CAFqE,CA7tCvD,CAsMd,KAAQkD,EAAA,CAAoB,MAApB,CAA4Byd,EAA5B,CACDze,EAAA,CAAiBye,EAAjB,CAA8B,CAAC,MAAD,CAAS,IAAT,CAAe,IAAf,CAA9B,CADC,CAED,YAFC,CAtMM,CAgTd,iBAAkBzd,EAAA,CAAoB,eAApB,CAAqC0d,EAArC,CACd1e,EAAA,CAAiB0e,EAAjB,CAAuC,yBAAA,MAAA,CAAA,GAAA,CAAvC,CADc;AAEd,yBAFc,CAhTJ,CA4Zd,KAAQ1d,EAAA,CAAoB,MAApB,CAA4B6d,EAA5B,CACJ7e,EAAA,CAAiB6e,EAAjB,CAA8B,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,KAAnB,CAA9B,CADI,CAEL,cAFK,CA5ZM,CAwgBd,KAAQ7d,EAAA,CAAoB,MAApB,CAA4B2d,EAA5B,CAk1BVK,QAAmB,CAACC,CAAD,CAAUC,CAAV,CAAwB,CACzC,GAAI7/E,EAAA,CAAO4/E,CAAP,CAAJ,CACE,MAAOA,EAGT,IAAI7hF,CAAA,CAAS6hF,CAAT,CAAJ,CAAuB,CACrBN,EAAAz6E,UAAA,CAAwB,CACxB,KAAIiE,EAAQw2E,EAAA5hE,KAAA,CAAiBkiE,CAAjB,CACZ,IAAI92E,CAAJ,CAAW,CAAA,IACL6wD,EAAO,CAAC7wD,CAAA,CAAM,CAAN,CADH,CAELg3E,EAAO,CAACh3E,CAAA,CAAM,CAAN,CAFH,CAILvB,EADAw4E,CACAx4E,CADQ,CAHH,CAKLy4E,EAAU,CALL,CAMLC,EAAe,CANV,CAOLlmB,EAAaL,EAAA,CAAuBC,CAAvB,CAPR,CAQLumB,EAAuB,CAAvBA,EAAWJ,CAAXI,CAAkB,CAAlBA,CAEAL,EAAJ,GACEE,CAGA,CAHQF,CAAAze,SAAA,EAGR,CAFA75D,CAEA,CAFUs4E,CAAAp4E,WAAA,EAEV,CADAu4E,CACA,CADUH,CAAAte,WAAA,EACV,CAAA0e,CAAA,CAAeJ,CAAApe,gBAAA,EAJjB,CAOA,OAAO,KAAIxhE,IAAJ,CAAS05D,CAAT,CAAe,CAAf,CAAkBI,CAAAI,QAAA,EAAlB,CAAyC+lB,CAAzC,CAAkDH,CAAlD,CAAyDx4E,CAAzD,CAAkEy4E,CAAlE,CAA2EC,CAA3E,CAjBE,CAHU,CAwBvB,MAAO5iF,IA7BkC,CAl1BjC,CAAqD,UAArD,CAxgBM,CA+mBd,MAASskE,EAAA,CAAoB,OAApB,CAA6B4d,EAA7B,CACN5e,EAAA,CAAiB4e,EAAjB,CAA+B,CAAC,MAAD,CAAS,IAAT,CAA/B,CADM,CAEN,SAFM,CA/mBK,CAuvBd,OA45BFY,QAAwB,CAACl1E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiDY,CAAjD,CAA0D0B,CAA1D,CAAkE,CACxF+nD,EAAA,CAAgBp3D,CAAhB,CAAuBjI,CAAvB,CAAgCN,CAAhC,CAAsC+7D,CAAtC,CAA4C,QAA5C,CACA+E,GAAA,CAAsB/E,CAAtB,CACAe,GAAA,CAAcv0D,CAAd;AAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CAEA,KAAI8qD,CAEJ,IAAI7lE,CAAA,CAAUyF,CAAAg1D,IAAV,CAAJ,EAA2Bh1D,CAAAkgE,MAA3B,CAAuC,CACrC,IAAIC,EAASngE,CAAAg1D,IAATmL,EAAqBvoD,CAAA,CAAO5X,CAAAkgE,MAAP,CAAA,CAAmB33D,CAAnB,CACzB63D,EAAA,CAAeY,EAAA,CAAmBb,CAAnB,CAEfpE,EAAAsE,YAAArL,IAAA,CAAuBsL,QAAQ,CAAC8E,CAAD,CAAa/D,CAAb,CAAwB,CACrD,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAYmhE,CAAZ,CAAnC,EAAgEiB,CAAhE,EAA6EjB,CADxB,CAIvDpgE,EAAAqkC,SAAA,CAAc,KAAd,CAAqB,QAAQ,CAAC1gC,CAAD,CAAM,CAC7BA,CAAJ,GAAYw8D,CAAZ,GACEC,CAGA,CAHeY,EAAA,CAAmBr9D,CAAnB,CAGf,CAFAw8D,CAEA,CAFSx8D,CAET,CAAAo4D,CAAAwE,UAAA,EAJF,CADiC,CAAnC,CARqC,CAkBvC,GAAIhmE,CAAA,CAAUyF,CAAAo+B,IAAV,CAAJ,EAA2Bp+B,CAAAwgE,MAA3B,CAAuC,CACrC,IAAIC,EAASzgE,CAAAo+B,IAATqiC,EAAqB7oD,CAAA,CAAO5X,CAAAwgE,MAAP,CAAA,CAAmBj4D,CAAnB,CAAzB,CACIm4D,EAAeM,EAAA,CAAmBP,CAAnB,CAEnB1E,EAAAsE,YAAAjiC,IAAA,CAAuBuiC,QAAQ,CAACyE,CAAD,CAAa/D,CAAb,CAAwB,CACrD,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAYyhE,CAAZ,CAAnC,EAAgEW,CAAhE,EAA6EX,CADxB,CAIvD1gE,EAAAqkC,SAAA,CAAc,KAAd,CAAqB,QAAQ,CAAC1gC,CAAD,CAAM,CAC7BA,CAAJ,GAAY88D,CAAZ,GACEC,CAGA,CAHeM,EAAA,CAAmBr9D,CAAnB,CAGf,CAFA88D,CAEA,CAFS98D,CAET,CAAAo4D,CAAAwE,UAAA,EAJF,CADiC,CAAnC,CARqC,CAkBvC,GAAIhmE,CAAA,CAAUyF,CAAAuhE,KAAV,CAAJ,EAA4BvhE,CAAA09E,OAA5B,CAAyC,CACvC,IAAIC,EAAU39E,CAAAuhE,KAAVoc,EAAuB/lE,CAAA,CAAO5X,CAAA09E,OAAP,CAAA,CAAoBn1E,CAApB,CAA3B,CACIq1E,EAAgB5c,EAAA,CAAmB2c,CAAnB,CAEpB5hB,EAAAsE,YAAAkB,KAAA,CAAwBsc,QAAQ,CAACzY,CAAD,CAAa/D,CAAb,CAAwB,CACtD,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP;AAAmCpiE,CAAA,CAAY2+E,CAAZ,CAAnC,EACExc,EAAA,CAAeC,CAAf,CAA0BjB,CAA1B,EAA0C,CAA1C,CAA6Cwd,CAA7C,CAFoD,CAKxD59E,EAAAqkC,SAAA,CAAc,MAAd,CAAsB,QAAQ,CAAC1gC,CAAD,CAAM,CAE9BA,CAAJ,GAAYg6E,CAAZ,GACEC,CAEA,CAFgB5c,EAAA,CAAmBr9D,CAAnB,CAEhB,CADAg6E,CACA,CADUh6E,CACV,CAAAo4D,CAAAwE,UAAA,EAHF,CAFkC,CAApC,CATuC,CA3C+C,CAnpD1E,CA01Bd,IA4gCFud,QAAqB,CAACv1E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiD,CAGpEwnD,EAAA,CAAcv0D,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CACAqnD,GAAA,CAAqBZ,CAArB,CAEAA,EAAAsE,YAAA13C,IAAA,CAAuBo1D,QAAQ,CAAC3Y,CAAD,CAAa/D,CAAb,CAAwB,CACrD,IAAI5kE,EAAQ2oE,CAAR3oE,EAAsB4kE,CAC1B,OAAOtF,EAAAc,SAAA,CAAcpgE,CAAd,CAAP,EAA+B+/E,EAAA38E,KAAA,CAAgBpD,CAAhB,CAFsB,CANa,CAt2DtD,CA87Bd,MAo7BFuhF,QAAuB,CAACz1E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiD,CAGtEwnD,EAAA,CAAcv0D,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CACAqnD,GAAA,CAAqBZ,CAArB,CAEAA,EAAAsE,YAAA4d,MAAA,CAAyBC,QAAQ,CAAC9Y,CAAD,CAAa/D,CAAb,CAAwB,CACvD,IAAI5kE,EAAQ2oE,CAAR3oE,EAAsB4kE,CAC1B,OAAOtF,EAAAc,SAAA,CAAcpgE,CAAd,CAAP,EAA+BggF,EAAA58E,KAAA,CAAkBpD,CAAlB,CAFwB,CANa,CAl3DxD,CA8hCd,MAg2BF0hF,QAAuB,CAAC51E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6B,CAClD,IAAIqiB,EAAS,CAACp+E,CAAAi9D,OAAVmhB,EAA+C,OAA/CA,GAAyBviE,CAAA,CAAK7b,CAAAi9D,OAAL,CAEzBh+D,EAAA,CAAYe,CAAAoH,KAAZ,CAAJ,EACE9G,CAAAN,KAAA,CAAa,MAAb,CA9u0BK,EAAErD,EA8u0BP,CAcF2D,EAAA8J,GAAA,CAAW,QAAX,CAXeye,QAAQ,CAACm0C,CAAD,CAAK,CAC1B,IAAIvgE,CACA6D,EAAA,CAAQ,CAAR,CAAA+9E,QAAJ,GACE5hF,CAIA,CAJQuD,CAAAvD,MAIR,CAHI2hF,CAGJ,GAFE3hF,CAEF;AAFUof,CAAA,CAAKpf,CAAL,CAEV,EAAAs/D,CAAAqB,cAAA,CAAmB3gE,CAAnB,CAA0BugE,CAA1B,EAAgCA,CAAA56D,KAAhC,CALF,CAF0B,CAW5B,CAEA25D,EAAAgC,QAAA,CAAeC,QAAQ,EAAG,CACxB,IAAIvhE,EAAQuD,CAAAvD,MACR2hF,EAAJ,GACE3hF,CADF,CACUof,CAAA,CAAKpf,CAAL,CADV,CAGA6D,EAAA,CAAQ,CAAR,CAAA+9E,QAAA,CAAsB5hF,CAAtB,GAAgCs/D,CAAAmB,WALR,CAQ1Bl9D,EAAAqkC,SAAA,CAAc,OAAd,CAAuB03B,CAAAgC,QAAvB,CA5BkD,CA93DpC,CAqpCd,MA+jBFugB,QAAuB,CAAC/1E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiD,CAwEtEipE,QAASA,EAA0B,CAACC,CAAD,CAAeC,CAAf,CAAyB,CAI1Dn+E,CAAAN,KAAA,CAAaw+E,CAAb,CAA2Bx+E,CAAA,CAAKw+E,CAAL,CAA3B,CACA,KAAI92D,EAAS1nB,CAAA,CAAKw+E,CAAL,CACbx+E,EAAAqkC,SAAA,CAAcm6C,CAAd,CAA4BE,QAAwB,CAAC/6E,CAAD,CAAM,CACpDA,CAAJ,GAAY+jB,CAAZ,GACEA,CACA,CADS/jB,CACT,CAAA86E,CAAA,CAAS96E,CAAT,CAFF,CADwD,CAA1D,CAN0D,CAc5Dg7E,QAASA,EAAS,CAACh7E,CAAD,CAAM,CACtBw8D,CAAA,CAASa,EAAA,CAAmBr9D,CAAnB,CAELe,EAAA,CAAYq3D,CAAA+H,YAAZ,CAAJ,GAII8a,CAAJ,EACMC,CAMJ,CANYv+E,CAAAqD,IAAA,EAMZ,CAJIw8D,CAIJ,CAJa0e,CAIb,GAHEA,CACA,CADQ1e,CACR,CAAA7/D,CAAAqD,IAAA,CAAYk7E,CAAZ,CAEF,EAAA9iB,CAAAqB,cAAA,CAAmByhB,CAAnB,CAPF,EAUE9iB,CAAAwE,UAAA,EAdF,CAHsB,CAqBxBue,QAASA,EAAS,CAACn7E,CAAD,CAAM,CACtB88D,CAAA,CAASO,EAAA,CAAmBr9D,CAAnB,CAELe,EAAA,CAAYq3D,CAAA+H,YAAZ,CAAJ,GAII8a,CAAJ,EACMC,CAOJ,CAPYv+E,CAAAqD,IAAA,EAOZ,CALI88D,CAKJ,CALaoe,CAKb,GAJEv+E,CAAAqD,IAAA,CAAY88D,CAAZ,CAEA,CAAAoe,CAAA,CAAQpe,CAAA,CAASN,CAAT,CAAkBA,CAAlB,CAA2BM,CAErC,EAAA1E,CAAAqB,cAAA,CAAmByhB,CAAnB,CARF,EAWE9iB,CAAAwE,UAAA,EAfF,CAHsB,CAsBxBwe,QAASA,EAAU,CAACp7E,CAAD,CAAM,CACvBg6E,CAAA;AAAU3c,EAAA,CAAmBr9D,CAAnB,CAENe,EAAA,CAAYq3D,CAAA+H,YAAZ,CAAJ,GAKK8a,CAAL,CAGW7iB,CAAAmB,WAHX,GAG+B58D,CAAAqD,IAAA,EAH/B,EAIEo4D,CAAAqB,cAAA,CAAmB98D,CAAAqD,IAAA,EAAnB,CAJF,CAEEo4D,CAAAwE,UAAA,EAPF,CAHuB,CAhIzBZ,EAAA,CAAgBp3D,CAAhB,CAAuBjI,CAAvB,CAAgCN,CAAhC,CAAsC+7D,CAAtC,CAA4C,OAA5C,CACA+E,GAAA,CAAsB/E,CAAtB,CACAe,GAAA,CAAcv0D,CAAd,CAAqBjI,CAArB,CAA8BN,CAA9B,CAAoC+7D,CAApC,CAA0CvjD,CAA1C,CAAoDlD,CAApD,CAHsE,KAKlEspE,EAAgB7iB,CAAAoB,sBAAhByhB,EAAkE,OAAlEA,GAA8Ct+E,CAAA,CAAQ,CAAR,CAAA8B,KALoB,CAMlE+9D,EAASye,CAAA,CAAgB,CAAhB,CAAoBp9E,IAAAA,EANqC,CAOlEi/D,EAASme,CAAA,CAAgB,GAAhB,CAAsBp9E,IAAAA,EAPmC,CAQlEm8E,EAAUiB,CAAA,CAAgB,CAAhB,CAAoBp9E,IAAAA,EARoC,CASlEk8D,EAAWp9D,CAAA,CAAQ,CAAR,CAAAo9D,SACXshB,EAAAA,CAAazkF,CAAA,CAAUyF,CAAAg1D,IAAV,CACbiqB,EAAAA,CAAa1kF,CAAA,CAAUyF,CAAAo+B,IAAV,CACb8gD,EAAAA,CAAc3kF,CAAA,CAAUyF,CAAAuhE,KAAV,CAElB,KAAI4d,EAAiBpjB,CAAAgC,QAErBhC,EAAAgC,QAAA,CAAe6gB,CAAA,EAAiBrkF,CAAA,CAAUmjE,CAAA0hB,eAAV,CAAjB,EAAuD7kF,CAAA,CAAUmjE,CAAA2hB,cAAV,CAAvD,CAGbC,QAAoB,EAAG,CACrBH,CAAA,EACApjB,EAAAqB,cAAA,CAAmB98D,CAAAqD,IAAA,EAAnB,CAFqB,CAHV,CAObw7E,CAEEH,EAAJ,GACE7e,CAUA,CAVSa,EAAA,CAAmBhhE,CAAAg1D,IAAnB,CAUT,CARA+G,CAAAsE,YAAArL,IAQA,CARuB4pB,CAAA,CAErBW,QAAyB,EAAG,CAAE,MAAO,CAAA,CAAT,CAFP,CAIrBC,QAAqB,CAACpa,CAAD,CAAa/D,CAAb,CAAwB,CAC3C,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAYkhE,CAAZ,CAAnC,EAA0DkB,CAA1D,EAAuElB,CAD5B,CAI/C,CAAAoe,CAAA,CAA2B,KAA3B,CAAkCI,CAAlC,CAXF,CAcIM;CAAJ,GACExe,CAUA,CAVSO,EAAA,CAAmBhhE,CAAAo+B,IAAnB,CAUT,CARA29B,CAAAsE,YAAAjiC,IAQA,CARuBwgD,CAAA,CAErBa,QAAyB,EAAG,CAAE,MAAO,CAAA,CAAT,CAFP,CAIrBC,QAAqB,CAACta,CAAD,CAAa/D,CAAb,CAAwB,CAC3C,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAYwhE,CAAZ,CAAnC,EAA0DY,CAA1D,EAAuEZ,CAD5B,CAI/C,CAAA8d,CAAA,CAA2B,KAA3B,CAAkCO,CAAlC,CAXF,CAcII,EAAJ,GACEvB,CAeA,CAfU3c,EAAA,CAAmBhhE,CAAAuhE,KAAnB,CAeV,CAbAxF,CAAAsE,YAAAkB,KAaA,CAbwBqd,CAAA,CACtBe,QAA4B,EAAG,CAI7B,MAAO,CAACjiB,CAAAkiB,aAJqB,CADT,CAQtBC,QAAsB,CAACza,CAAD,CAAa/D,CAAb,CAAwB,CAC5C,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAY0+E,CAAZ,CAAnC,EACOvc,EAAA,CAAeC,CAAf,CAA0BlB,CAA1B,EAAoC,CAApC,CAAuCwd,CAAvC,CAFqC,CAKhD,CAAAY,CAAA,CAA2B,MAA3B,CAAmCQ,CAAnC,CAhBF,CArDsE,CAptDxD,CA8sCd,SA4tBFe,QAA0B,CAACv3E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6BvjD,CAA7B,CAAuClD,CAAvC,CAAiDY,CAAjD,CAA0D0B,CAA1D,CAAkE,CAC1F,IAAImoE,EAAY9d,EAAA,CAAkBrqD,CAAlB,CAA0BrP,CAA1B,CAAiC,aAAjC,CAAgDvI,CAAAggF,YAAhD,CAAkE,CAAA,CAAlE,CAAhB,CACIC,EAAahe,EAAA,CAAkBrqD,CAAlB,CAA0BrP,CAA1B,CAAiC,cAAjC,CAAiDvI,CAAAkgF,aAAjD,CAAoE,CAAA,CAApE,CAMjB5/E,EAAA8J,GAAA,CAAW,QAAX,CAJeye,QAAQ,CAACm0C,CAAD,CAAK,CAC1BjB,CAAAqB,cAAA,CAAmB98D,CAAA,CAAQ,CAAR,CAAA+9E,QAAnB,CAAuCrhB,CAAvC,EAA6CA,CAAA56D,KAA7C,CAD0B,CAI5B,CAEA25D,EAAAgC,QAAA,CAAeC,QAAQ,EAAG,CACxB19D,CAAA,CAAQ,CAAR,CAAA+9E,QAAA,CAAqBtiB,CAAAmB,WADG,CAO1BnB,EAAAc,SAAA;AAAgBsjB,QAAQ,CAAC1jF,CAAD,CAAQ,CAC9B,MAAiB,CAAA,CAAjB,GAAOA,CADuB,CAIhCs/D,EAAAa,YAAA37D,KAAA,CAAsB,QAAQ,CAACxE,CAAD,CAAQ,CACpC,MAAO+F,GAAA,CAAO/F,CAAP,CAAcsjF,CAAd,CAD6B,CAAtC,CAIAhkB,EAAA8D,SAAA5+D,KAAA,CAAmB,QAAQ,CAACxE,CAAD,CAAQ,CACjC,MAAOA,EAAA,CAAQsjF,CAAR,CAAoBE,CADM,CAAnC,CAzB0F,CA16D5E,CAgtCd,OAAUvhF,CAhtCI,CAitCd,OAAUA,CAjtCI,CAktCd,OAAUA,CAltCI,CAmtCd,MAASA,CAntCK,CAotCd,KAAQA,CAptCM,CAAhB,CAooEI0Q,GAAiB,CAAC,UAAD,CAAa,UAAb,CAAyB,SAAzB,CAAoC,QAApC,CACjB,QAAQ,CAACkG,CAAD,CAAWkD,CAAX,CAAqBtC,CAArB,CAA8B0B,CAA9B,CAAsC,CAChD,MAAO,CACLiX,SAAU,GADL,CAELb,QAAS,CAAC,UAAD,CAFJ,CAGLnC,KAAM,CACJ6N,IAAKA,QAAQ,CAACnxB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuBq8E,CAAvB,CAA8B,CACrCA,CAAA,CAAM,CAAN,CAAJ,EACE,CAACU,EAAA,CAAUx8E,CAAA,CAAUP,CAAAoC,KAAV,CAAV,CAAD,EAAoC26E,EAAAv8C,KAApC,EAAoDj4B,CAApD,CAA2DjI,CAA3D,CAAoEN,CAApE,CAA0Eq8E,CAAA,CAAM,CAAN,CAA1E,CAAoF7jE,CAApF,CACoDlD,CADpD,CAC8DY,CAD9D,CACuE0B,CADvE,CAFuC,CADvC,CAHD,CADyC,CAD7B,CApoErB,CAqpEIvD,GAAmCA,QAAQ,EAAG,CAChD,IAAI+rE,EAAgB,CAClBC,aAAc,CAAA,CADI,CAElBC,WAAY,CAAA,CAFM,CAGlB/2E,IAAKA,QAAQ,EAAG,CACd,MAAO,KAAAzC,aAAA,CAAkB,OAAlB,CAAP,EAAqC,EADvB,CAHE,CAMlB/E,IAAKA,QAAQ,CAAC4B,CAAD,CAAM,CACjB,IAAAqa,aAAA,CAAkB,OAAlB,CAA2Bra,CAA3B,CADiB,CAND,CAWpB;MAAO,CACLkrB,SAAU,GADL,CAELD,SAAU,GAFL,CAGLpmB,QAASA,QAAQ,CAACs5B,CAAD,CAAI9hC,CAAJ,CAAU,CACzB,GAA6B,QAA7B,GAAIO,CAAA,CAAUP,CAAAoC,KAAV,CAAJ,CAIA,MAAO,CACLs3B,IAAKA,QAAQ,CAACnxB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuBq8E,CAAvB,CAA8B,CACrCv8E,CAAAA,CAAOQ,CAAA,CAAQ,CAAR,CAIPR,EAAA6e,WAAJ,EACE7e,CAAA6e,WAAAorD,aAAA,CAA6BjqE,CAA7B,CAAmCA,CAAAqM,YAAnC,CAKE3Q,OAAAu0B,eAAJ,EACEv0B,MAAAu0B,eAAA,CAAsBjwB,CAAtB,CAA4B,OAA5B,CAAqCsgF,CAArC,CAZuC,CADtC,CALkB,CAHtB,CAZyC,CArpElD,CAgsEIG,GAAwB,oBAhsE5B,CA0vEItsE,GAAmBA,QAAQ,EAAG,CAOhCusE,QAASA,EAAkB,CAAClgF,CAAD,CAAUN,CAAV,CAAgBvD,CAAhB,CAAuB,CAGhD,IAAI2lC,EAAY7nC,CAAA,CAAUkC,CAAV,CAAA,CAAmBA,CAAnB,CAAqC,CAAV,GAACye,EAAD,CAAe,EAAf,CAAoB,IAC/D5a,EAAAP,KAAA,CAAa,OAAb,CAAsBqiC,CAAtB,CACApiC,EAAAk/B,KAAA,CAAU,OAAV,CAAmBziC,CAAnB,CALgD,CAQlD,MAAO,CACLoyB,SAAU,GADL,CAELD,SAAU,GAFL,CAGLpmB,QAASA,QAAQ,CAAC6mD,CAAD,CAAMoxB,CAAN,CAAe,CAC9B,MAAIF,GAAA1gF,KAAA,CAA2B4gF,CAAAzsE,QAA3B,CAAJ,CACS0sE,QAA4B,CAACn4E,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB,CAChDvD,CAAAA,CAAQ8L,CAAAwhD,MAAA,CAAY/pD,CAAAgU,QAAZ,CACZwsE,EAAA,CAAmBp5D,CAAnB,CAAwBpnB,CAAxB,CAA8BvD,CAA9B,CAFoD,CADxD,CAMSkkF,QAAoB,CAACp4E,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB,CAC5CuI,CAAA7I,OAAA,CAAaM,CAAAgU,QAAb;AAA2B4sE,QAAyB,CAACnkF,CAAD,CAAQ,CAC1D+jF,CAAA,CAAmBp5D,CAAnB,CAAwBpnB,CAAxB,CAA8BvD,CAA9B,CAD0D,CAA5D,CAD4C,CAPlB,CAH3B,CAfyB,CA1vElC,CAg1EIsT,GAAkB,CAAC,UAAD,CAAa,QAAQ,CAAC8wE,CAAD,CAAW,CACpD,MAAO,CACLhyD,SAAU,IADL,CAELrmB,QAASs4E,QAAsB,CAACC,CAAD,CAAkB,CAC/CF,CAAA//C,kBAAA,CAA2BigD,CAA3B,CACA,OAAOC,SAAmB,CAACz4E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAC/C6gF,CAAA7/C,iBAAA,CAA0B1gC,CAA1B,CAAmCN,CAAA8P,OAAnC,CACAxP,EAAA,CAAUA,CAAA,CAAQ,CAAR,CACViI,EAAA7I,OAAA,CAAaM,CAAA8P,OAAb,CAA0BmxE,QAA0B,CAACxkF,CAAD,CAAQ,CAC1D6D,CAAAob,YAAA,CAAsB1X,EAAA,CAAUvH,CAAV,CADoC,CAA5D,CAH+C,CAFF,CAF5C,CAD6C,CAAhC,CAh1EtB,CAo5EI0T,GAA0B,CAAC,cAAD,CAAiB,UAAjB,CAA6B,QAAQ,CAACmG,CAAD,CAAeuqE,CAAf,CAAyB,CAC1F,MAAO,CACLr4E,QAAS04E,QAA8B,CAACH,CAAD,CAAkB,CACvDF,CAAA//C,kBAAA,CAA2BigD,CAA3B,CACA,OAAOI,SAA2B,CAAC54E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CACnDygC,CAAAA,CAAgBnqB,CAAA,CAAahW,CAAAN,KAAA,CAAaA,CAAA+yB,MAAA7iB,eAAb,CAAb,CACpB2wE,EAAA7/C,iBAAA,CAA0B1gC,CAA1B,CAAmCmgC,CAAAQ,YAAnC,CACA3gC,EAAA,CAAUA,CAAA,CAAQ,CAAR,CACVN,EAAAqkC,SAAA,CAAc,gBAAd,CAAgC,QAAQ,CAAC5nC,CAAD,CAAQ,CAC9C6D,CAAAob,YAAA,CAAsBzc,CAAA,CAAYxC,CAAZ,CAAA,CAAqB,EAArB,CAA0BA,CADF,CAAhD,CAJuD,CAFF,CADpD,CADmF,CAA9D,CAp5E9B;AAo9EIwT,GAAsB,CAAC,MAAD,CAAS,QAAT,CAAmB,UAAnB,CAA+B,QAAQ,CAACmI,CAAD,CAAOR,CAAP,CAAeipE,CAAf,CAAyB,CACxF,MAAO,CACLhyD,SAAU,GADL,CAELrmB,QAAS44E,QAA0B,CAACnyD,CAAD,CAAWC,CAAX,CAAmB,CACpD,IAAImyD,EAAmBzpE,CAAA,CAAOsX,CAAAlf,WAAP,CAAvB,CACIsxE,EAAkB1pE,CAAA,CAAOsX,CAAAlf,WAAP,CAA0BiyB,QAAmB,CAACt+B,CAAD,CAAM,CAEvE,MAAOyU,EAAA5a,QAAA,CAAamG,CAAb,CAFgE,CAAnD,CAItBk9E,EAAA//C,kBAAA,CAA2B7R,CAA3B,CAEA,OAAOsyD,SAAuB,CAACh5E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CACnD6gF,CAAA7/C,iBAAA,CAA0B1gC,CAA1B,CAAmCN,CAAAgQ,WAAnC,CAEAzH,EAAA7I,OAAA,CAAa4hF,CAAb,CAA8BE,QAA8B,EAAG,CAE7D,IAAI/kF,EAAQ4kF,CAAA,CAAiB94E,CAAjB,CACZjI,EAAAmF,KAAA,CAAa2S,CAAAqpE,eAAA,CAAoBhlF,CAApB,CAAb,EAA2C,EAA3C,CAH6D,CAA/D,CAHmD,CARD,CAFjD,CADiF,CAAhE,CAp9E1B,CAgjFI0W,GAAoBtU,EAAA,CAAQ,CAC9BgwB,SAAU,GADoB,CAE9Bb,QAAS,SAFqB,CAG9BnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6B,CACzCA,CAAAkI,qBAAAhjE,KAAA,CAA+B,QAAQ,EAAG,CACxCsH,CAAAwhD,MAAA,CAAY/pD,CAAAkT,SAAZ,CADwC,CAA1C,CADyC,CAHb,CAAR,CAhjFxB,CAk4FI7C,GAAmB8xD,EAAA,CAAe,EAAf,CAAmB,CAAA,CAAnB,CAl4FvB,CAg/FI1xD,GAAsB0xD,EAAA,CAAe,KAAf,CAAsB,CAAtB,CAh/F1B,CA8lGI5xD,GAAuB4xD,EAAA,CAAe,MAAf,CAAuB,CAAvB,CA9lG3B,CAopGIxxD,GAAmB+pD,EAAA,CAAY,CACjClyD,QAASA,QAAQ,CAAClI,CAAD;AAAUN,CAAV,CAAgB,CAC/BA,CAAAk/B,KAAA,CAAU,SAAV,CAAqB19B,IAAAA,EAArB,CACAlB,EAAAohB,YAAA,CAAoB,UAApB,CAF+B,CADA,CAAZ,CAppGvB,CA23GI7Q,GAAwB,CAAC,QAAQ,EAAG,CACtC,MAAO,CACLge,SAAU,GADL,CAELtmB,MAAO,CAAA,CAFF,CAGLgC,WAAY,GAHP,CAILqkB,SAAU,GAJL,CAD+B,CAAZ,CA33G5B,CA0nHIra,GAAoB,EA1nHxB,CA+nHImtE,GAAmB,CACrB,KAAQ,CAAA,CADa,CAErB,MAAS,CAAA,CAFY,CAIvBhmF,EAAA,CACE,6IAAA,MAAA,CAAA,GAAA,CADF,CAEE,QAAQ,CAACmuD,CAAD,CAAY,CAClB,IAAI38B,EAAgBgK,EAAA,CAAmB,KAAnB,CAA2B2yB,CAA3B,CACpBt1C,GAAA,CAAkB2Y,CAAlB,CAAA,CAAmC,CAAC,QAAD,CAAW,YAAX,CAAyB,mBAAzB,CAA8C,QAAQ,CAACtV,CAAD,CAASE,CAAT,CAAqB9B,CAArB,CAAwC,CAC/H,MAAOiiB,GAAA,CAAqBrgB,CAArB,CAA6BE,CAA7B,CAAyC9B,CAAzC,CAA4DkX,CAA5D,CAA2E28B,CAA3E,CAAsF63B,EAAA,CAAiB73B,CAAjB,CAAtF,CADwH,CAA9F,CAFjB,CAFtB,CAgiBA,KAAI14C,GAAgB,CAAC,UAAD,CAAa,UAAb,CAAyB,QAAQ,CAACuD,CAAD,CAAWmsE,CAAX,CAAqB,CACxE,MAAO,CACL9hD,aAAc,CAAA,CADT;AAELrP,WAAY,SAFP,CAGLd,SAAU,GAHL,CAILuH,SAAU,CAAA,CAJL,CAKLtH,SAAU,GALL,CAMLgO,MAAO,CAAA,CANF,CAOLhR,KAAMA,QAAQ,CAAC4S,CAAD,CAAStP,CAAT,CAAmB4D,CAAnB,CAA0BgpC,CAA1B,CAAgCr9B,CAAhC,CAA6C,CAAA,IACnDtwB,CADmD,CAC5C+mB,CAD4C,CAChCwsD,CACvBljD,EAAA/+B,OAAA,CAAcqzB,CAAA7hB,KAAd,CAA0B0wE,QAAwB,CAACnlF,CAAD,CAAQ,CAEpDA,CAAJ,CACO04B,CADP,EAEIuJ,CAAA,CAAY,QAAQ,CAAC5gC,CAAD,CAAQ6gC,CAAR,CAAkB,CACpCxJ,CAAA,CAAawJ,CACb7gC,EAAA,CAAMA,CAAAvC,OAAA,EAAN,CAAA,CAAwBslF,CAAA7jD,gBAAA,CAAyB,UAAzB,CAAqCjK,CAAA7hB,KAArC,CAIxB9C,EAAA,CAAQ,CACNtQ,MAAOA,CADD,CAGR4W,EAAA44D,MAAA,CAAexvE,CAAf,CAAsBqxB,CAAA5wB,OAAA,EAAtB,CAAyC4wB,CAAzC,CAToC,CAAtC,CAFJ,EAeMwyD,CAQJ,GAPEA,CAAAh1D,OAAA,EACA,CAAAg1D,CAAA,CAAmB,IAMrB,EAJIxsD,CAIJ,GAHEA,CAAAnqB,SAAA,EACA,CAAAmqB,CAAA,CAAa,IAEf,EAAI/mB,CAAJ,GACEuzE,CAIA,CAJmB51E,EAAA,CAAcqC,CAAAtQ,MAAd,CAInB,CAHA4W,CAAA84D,MAAA,CAAemU,CAAf,CAAAt0C,KAAA,CAAsC,QAAQ,CAAC7B,CAAD,CAAW,CACtC,CAAA,CAAjB,GAAIA,CAAJ,GAAwBm2C,CAAxB,CAA2C,IAA3C,CADuD,CAAzD,CAGA,CAAAvzE,CAAA,CAAQ,IALV,CAvBF,CAFwD,CAA1D,CAFuD,CAPtD,CADiE,CAAtD,CAApB,CAwOIiD,GAAqB,CAAC,kBAAD,CAAqB,eAArB,CAAsC,UAAtC,CACP,QAAQ,CAACyH,CAAD,CAAqBtE,CAArB,CAAsCE,CAAtC,CAAgD,CACxE,MAAO,CACLma,SAAU,KADL,CAELD,SAAU,GAFL,CAGLuH,SAAU,CAAA,CAHL,CAILzG,WAAY,SAJP;AAKLnlB,WAAY1B,EAAAnK,KALP,CAML8J,QAASA,QAAQ,CAAClI,CAAD,CAAUN,CAAV,CAAgB,CAAA,IAC3B6hF,EAAS7hF,CAAAoR,UAATywE,EAA2B7hF,CAAA3C,IADA,CAE3BykF,EAAY9hF,CAAAswC,OAAZwxC,EAA2B,EAFA,CAG3BC,EAAgB/hF,CAAAgiF,WAEpB,OAAO,SAAQ,CAACz5E,CAAD,CAAQ4mB,CAAR,CAAkB4D,CAAlB,CAAyBgpC,CAAzB,CAA+Br9B,CAA/B,CAA4C,CAAA,IACrDujD,EAAgB,CADqC,CAErDl8B,CAFqD,CAGrDm8B,CAHqD,CAIrDC,CAJqD,CAMrDC,EAA4BA,QAAQ,EAAG,CACrCF,CAAJ,GACEA,CAAAv1D,OAAA,EACA,CAAAu1D,CAAA,CAAkB,IAFpB,CAIIn8B,EAAJ,GACEA,CAAA/6C,SAAA,EACA,CAAA+6C,CAAA,CAAe,IAFjB,CAIIo8B,EAAJ,GACEztE,CAAA84D,MAAA,CAAe2U,CAAf,CAAA90C,KAAA,CAAoC,QAAQ,CAAC7B,CAAD,CAAW,CACpC,CAAA,CAAjB,GAAIA,CAAJ,GAAwB02C,CAAxB,CAA0C,IAA1C,CADqD,CAAvD,CAIA,CADAA,CACA,CADkBC,CAClB,CAAAA,CAAA,CAAiB,IALnB,CATyC,CAkB3C55E,EAAA7I,OAAA,CAAamiF,CAAb,CAAqBQ,QAA6B,CAAChlF,CAAD,CAAM,CACtD,IAAIilF,EAAiBA,QAAQ,CAAC92C,CAAD,CAAW,CACrB,CAAA,CAAjB,GAAIA,CAAJ,EAA0B,CAAAjxC,CAAA,CAAUwnF,CAAV,CAA1B,EACIA,CADJ,EACqB,CAAAx5E,CAAAwhD,MAAA,CAAYg4B,CAAZ,CADrB,EAEIvtE,CAAA,EAHkC,CAAxC,CAMI+tE,EAAe,EAAEN,CAEjB5kF,EAAJ,EAGEyb,CAAA,CAAiBzb,CAAjB,CAAsB,CAAA,CAAtB,CAAAoiC,KAAA,CAAiC,QAAQ,CAAC+L,CAAD,CAAW,CAClD,GAAI1L,CAAAv3B,CAAAu3B,YAAJ,EAEIyiD,CAFJ,GAEqBN,CAFrB,CAEA,CACA,IAAItjD,EAAWp2B,CAAA+rB,KAAA,EACfynC,EAAA1sC,SAAA,CAAgBmc,CAQZ1tC,EAAAA,CAAQ4gC,CAAA,CAAYC,CAAZ,CAAsB,QAAQ,CAAC7gC,CAAD,CAAQ,CAChDskF,CAAA,EACA1tE,EAAA44D,MAAA,CAAexvE,CAAf,CAAsB,IAAtB,CAA4BqxB,CAA5B,CAAAke,KAAA,CAA2Ci1C,CAA3C,CAFgD,CAAtC,CAKZv8B,EAAA,CAAepnB,CACfwjD,EAAA,CAAiBrkF,CAEjBioD,EAAAoE,MAAA,CAAmB,uBAAnB;AAA4C9sD,CAA5C,CACAkL,EAAAwhD,MAAA,CAAY+3B,CAAZ,CAnBA,CAHkD,CAApD,CAuBG,QAAQ,EAAG,CACRv5E,CAAAu3B,YAAJ,EAEIyiD,CAFJ,GAEqBN,CAFrB,GAGEG,CAAA,EACA,CAAA75E,CAAA4hD,MAAA,CAAY,sBAAZ,CAAoC9sD,CAApC,CAJF,CADY,CAvBd,CA+BA,CAAAkL,CAAA4hD,MAAA,CAAY,0BAAZ,CAAwC9sD,CAAxC,CAlCF,GAoCE+kF,CAAA,EACA,CAAArmB,CAAA1sC,SAAA,CAAgB,IArClB,CATsD,CAAxD,CAxByD,CAL5B,CAN5B,CADiE,CADjD,CAxOzB,CAwUIjb,GAAgC,CAAC,UAAD,CAClC,QAAQ,CAACysE,CAAD,CAAW,CACjB,MAAO,CACLhyD,SAAU,KADL,CAELD,SAAW,IAFN,CAGLZ,QAAS,WAHJ,CAILnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQ4mB,CAAR,CAAkB4D,CAAlB,CAAyBgpC,CAAzB,CAA+B,CACvC/8D,EAAAhD,KAAA,CAAcmzB,CAAA,CAAS,CAAT,CAAd,CAAAjtB,MAAA,CAAiC,KAAjC,CAAJ,EAIEitB,CAAA7pB,MAAA,EACA,CAAAu7E,CAAA,CAAStmE,EAAA,CAAoBwhD,CAAA1sC,SAApB,CAAmCl1B,CAAAyJ,SAAnC,CAAA6X,WAAT,CAAA,CAAyElT,CAAzE,CACIi6E,QAA8B,CAAC1kF,CAAD,CAAQ,CACxCqxB,CAAA3pB,OAAA,CAAgB1H,CAAhB,CADwC,CAD1C,CAGG,CAAC22B,oBAAqBtF,CAAtB,CAHH,CALF,GAYAA,CAAA1pB,KAAA,CAAcs2D,CAAA1sC,SAAd,CACA,CAAAwxD,CAAA,CAAS1xD,CAAAoO,SAAA,EAAT,CAAA,CAA8Bh1B,CAA9B,CAbA,CAD2C,CAJxC,CADU,CADe,CAxUpC,CAgaIgJ,GAAkBmpD,EAAA,CAAY,CAChC9rC,SAAU,GADsB,CAEhCpmB,QAASA,QAAQ,EAAG,CAClB,MAAO,CACLkxB,IAAKA,QAAQ,CAACnxB,CAAD;AAAQjI,CAAR,CAAiBw1B,CAAjB,CAAwB,CACnCvtB,CAAAwhD,MAAA,CAAYj0B,CAAAxkB,OAAZ,CADmC,CADhC,CADW,CAFY,CAAZ,CAhatB,CAogBI2B,GAAkBA,QAAQ,EAAG,CAC/B,MAAO,CACL4b,SAAU,GADL,CAELD,SAAU,GAFL,CAGLZ,QAAS,SAHJ,CAILnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6B,CACzC,IAAI/oD,EAAShT,CAAAgT,OAATA,EAAwB,IAA5B,CACIyvE,EAA6B,OAA7BA,GAAaziF,CAAAi9D,OADjB,CAEIxzD,EAAYg5E,CAAA,CAAa5mE,CAAA,CAAK7I,CAAL,CAAb,CAA4BA,CAiB5C+oD,EAAA8D,SAAA5+D,KAAA,CAfYkD,QAAQ,CAACk9D,CAAD,CAAY,CAE9B,GAAI,CAAApiE,CAAA,CAAYoiE,CAAZ,CAAJ,CAAA,CAEA,IAAIj7C,EAAO,EAEPi7C,EAAJ,EACE3lE,CAAA,CAAQ2lE,CAAAjhE,MAAA,CAAgBqJ,CAAhB,CAAR,CAAoC,QAAQ,CAAChN,CAAD,CAAQ,CAC9CA,CAAJ,EAAW2pB,CAAAnlB,KAAA,CAAUwhF,CAAA,CAAa5mE,CAAA,CAAKpf,CAAL,CAAb,CAA2BA,CAArC,CADuC,CAApD,CAKF,OAAO2pB,EAVP,CAF8B,CAehC,CACA21C,EAAAa,YAAA37D,KAAA,CAAsB,QAAQ,CAACxE,CAAD,CAAQ,CACpC,GAAIrB,CAAA,CAAQqB,CAAR,CAAJ,CACE,MAAOA,EAAA8J,KAAA,CAAWyM,CAAX,CAF2B,CAAtC,CASA+oD,EAAAc,SAAA,CAAgBsjB,QAAQ,CAAC1jF,CAAD,CAAQ,CAC9B,MAAO,CAACA,CAAR,EAAiB,CAACA,CAAAlB,OADY,CA9BS,CAJtC,CADwB,CApgBjC,CA2jBIqgE,GAAc,UA3jBlB,CA4jBID,GAAgB,YA5jBpB,CA6jBI8f,GAAiB,aA7jBrB,CA8jBIC,GAAc,UA9jBlB,CAokBI3b,GAAgB/kE,CAAA,CAAO,SAAP,CAoOpB6oE,GAAAl/C,QAAA,CAA4B,mFAAA,MAAA,CAAA,GAAA,CAkD5Bk/C;EAAAvhD,UAAA,CAA8B,CAC5BogE,oBAAqBA,QAAQ,EAAG,CAC9B,GAAI,IAAAnjB,SAAAC,UAAA,CAAwB,cAAxB,CAAJ,CAA6C,CAAA,IACvCmjB,EAAoB,IAAAlsC,QAAA,CAAa,IAAAsuB,OAAAjyD,QAAb,CAAmC,IAAnC,CADmB,CAEvC8vE,EAAoB,IAAAnsC,QAAA,CAAa,IAAAsuB,OAAAjyD,QAAb,CAAmC,QAAnC,CAExB,KAAA2xD,aAAA,CAAoBoe,QAAQ,CAACpkD,CAAD,CAAS,CACnC,IAAI2mC,EAAa,IAAAb,gBAAA,CAAqB9lC,CAArB,CACb3iC,EAAA,CAAWspE,CAAX,CAAJ,GACEA,CADF,CACeud,CAAA,CAAkBlkD,CAAlB,CADf,CAGA,OAAO2mC,EAL4B,CAOrC,KAAAV,aAAA,CAAoBoe,QAAQ,CAACrkD,CAAD,CAASgE,CAAT,CAAmB,CACzC3mC,CAAA,CAAW,IAAAyoE,gBAAA,CAAqB9lC,CAArB,CAAX,CAAJ,CACEmkD,CAAA,CAAkBnkD,CAAlB,CAA0B,CAACskD,KAAMtgD,CAAP,CAA1B,CADF,CAGE,IAAA+hC,sBAAA,CAA2B/lC,CAA3B,CAAmCgE,CAAnC,CAJ2C,CAXJ,CAA7C,IAkBO,IAAK+B,CAAA,IAAA+/B,gBAAA//B,OAAL,CACL,KAAMu7B,GAAA,CAAc,WAAd,CACF,IAAAgF,OAAAjyD,QADE,CACmBzN,EAAA,CAAY,IAAA2tB,UAAZ,CADnB,CAAN,CApB4B,CADJ,CA+C5B+qC,QAASr/D,CA/CmB,CAmE5Bm+D,SAAUA,QAAQ,CAACpgE,CAAD,CAAQ,CAExB,MAAOwC,EAAA,CAAYxC,CAAZ,CAAP;AAAuC,EAAvC,GAA6BA,CAA7B,EAAuD,IAAvD,GAA6CA,CAA7C,EAA+DA,CAA/D,GAAyEA,CAFjD,CAnEE,CAwE5BumF,qBAAsBA,QAAQ,CAACvmF,CAAD,CAAQ,CAChC,IAAAogE,SAAA,CAAcpgE,CAAd,CAAJ,EACE,IAAA++D,UAAA95C,YAAA,CAA2B,IAAAsR,UAA3B,CAlWgBiwD,cAkWhB,CACA,CAAA,IAAAznB,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB,CApWYkwD,UAoWZ,CAFF,GAIE,IAAA1nB,UAAA95C,YAAA,CAA2B,IAAAsR,UAA3B,CAtWYkwD,UAsWZ,CACA,CAAA,IAAA1nB,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB,CAtWgBiwD,cAsWhB,CALF,CADoC,CAxEV,CA6F5B/H,aAAcA,QAAQ,EAAG,CACvB,IAAAjgB,OAAA,CAAc,CAAA,CACd,KAAAE,UAAA,CAAiB,CAAA,CACjB,KAAAK,UAAA95C,YAAA,CAA2B,IAAAsR,UAA3B,CAA2C0oD,EAA3C,CACA,KAAAlgB,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB,CAAwCyoD,EAAxC,CAJuB,CA7FG,CA+G5BR,UAAWA,QAAQ,EAAG,CACpB,IAAAhgB,OAAA,CAAc,CAAA,CACd,KAAAE,UAAA,CAAiB,CAAA,CACjB,KAAAK,UAAA95C,YAAA,CAA2B,IAAAsR,UAA3B;AAA2CyoD,EAA3C,CACA,KAAAjgB,UAAA/5C,SAAA,CAAwB,IAAAuR,UAAxB,CAAwC0oD,EAAxC,CACA,KAAApgB,aAAA2f,UAAA,EALoB,CA/GM,CAmI5BW,cAAeA,QAAQ,EAAG,CACxB,IAAAzX,SAAA,CAAgB,CAAA,CAChB,KAAAD,WAAA,CAAkB,CAAA,CAClB,KAAA1I,UAAAkS,SAAA,CAAwB,IAAA16C,UAAxB,CAjakBmwD,cAialB,CAhagBC,YAgahB,CAHwB,CAnIE,CAoJ5BC,YAAaA,QAAQ,EAAG,CACtB,IAAAlf,SAAA,CAAgB,CAAA,CAChB,KAAAD,WAAA,CAAkB,CAAA,CAClB,KAAA1I,UAAAkS,SAAA,CAAwB,IAAA16C,UAAxB,CAjbgBowD,YAibhB,CAlbkBD,cAkblB,CAHsB,CApJI,CAmP5B9H,mBAAoBA,QAAQ,EAAG,CAC7B,IAAArW,UAAA75C,OAAA,CAAsB,IAAAw5C,kBAAtB,CACA,KAAAzH,WAAA,CAAkB,IAAAomB,yBAClB,KAAAvlB,QAAA,EAH6B,CAnPH,CAqQ5BwC,UAAWA,QAAQ,EAAG,CAGpB,GAAI,CAAA77D,CAAA,CAAY,IAAAo/D,YAAZ,CAAJ,CAAA,CAIA,IAAIzC;AAAY,IAAAiiB,yBAAhB,CAKIle,EAAa,IAAArB,gBALjB,CAOIwf,EAAY,IAAAroB,OAPhB,CAQIsoB,EAAiB,IAAA1f,YARrB,CAUI2f,EAAe,IAAAlkB,SAAAC,UAAA,CAAwB,cAAxB,CAVnB,CAYIkkB,EAAO,IACX,KAAAC,gBAAA,CAAqBve,CAArB,CAAiC/D,CAAjC,CAA4C,QAAQ,CAACuiB,CAAD,CAAW,CAGxDH,CAAL,EAAqBF,CAArB,GAAmCK,CAAnC,GAKEF,CAAA5f,YAEA,CAFmB8f,CAAA,CAAWxe,CAAX,CAAwB5jE,IAAAA,EAE3C,CAAIkiF,CAAA5f,YAAJ,GAAyB0f,CAAzB,EACEE,CAAAG,oBAAA,EARJ,CAH6D,CAA/D,CAjBA,CAHoB,CArQM,CA0S5BF,gBAAiBA,QAAQ,CAACve,CAAD,CAAa/D,CAAb,CAAwByiB,CAAxB,CAAsC,CAsC7DC,QAASA,EAAqB,EAAG,CAC/B,IAAIC,EAAsB,CAAA,CAC1BtoF,EAAA,CAAQgoF,CAAArjB,YAAR,CAA0B,QAAQ,CAAC4jB,CAAD,CAAY78E,CAAZ,CAAkB,CAClD,IAAIkc,EAAS4gE,OAAA,CAAQD,CAAA,CAAU7e,CAAV,CAAsB/D,CAAtB,CAAR,CACb2iB,EAAA,CAAsBA,CAAtB,EAA6C1gE,CAC7C6gE,EAAA,CAAY/8E,CAAZ,CAAkBkc,CAAlB,CAHkD,CAApD,CAKA,OAAK0gE,EAAL,CAMO,CAAA,CANP,EACEtoF,CAAA,CAAQgoF,CAAA1f,iBAAR,CAA+B,QAAQ,CAACxyC,CAAD,CAAIpqB,CAAJ,CAAU,CAC/C+8E,CAAA,CAAY/8E,CAAZ,CAAkB,IAAlB,CAD+C,CAAjD,CAGO,CAAA,CAAA,CAJT,CAP+B,CAgBjCg9E,QAASA,EAAsB,EAAG,CAChC,IAAIC,EAAoB,EAAxB,CACIT,EAAW,CAAA,CACfloF,EAAA,CAAQgoF,CAAA1f,iBAAR,CAA+B,QAAQ,CAACigB,CAAD;AAAY78E,CAAZ,CAAkB,CACvD,IAAI4jC,EAAUi5C,CAAA,CAAU7e,CAAV,CAAsB/D,CAAtB,CACd,IAAmBr2B,CAAAA,CAAnB,EA7z6BQ,CAAAlvC,CAAA,CA6z6BWkvC,CA7z6BAvL,KAAX,CA6z6BR,CACE,KAAMsgC,GAAA,CAAc,WAAd,CAC4E/0B,CAD5E,CAAN,CAGFm5C,CAAA,CAAY/8E,CAAZ,CAAkB5F,IAAAA,EAAlB,CACA6iF,EAAApjF,KAAA,CAAuB+pC,CAAAvL,KAAA,CAAa,QAAQ,EAAG,CAC7C0kD,CAAA,CAAY/8E,CAAZ,CAAkB,CAAA,CAAlB,CAD6C,CAAxB,CAEpB,QAAQ,EAAG,CACZw8E,CAAA,CAAW,CAAA,CACXO,EAAA,CAAY/8E,CAAZ,CAAkB,CAAA,CAAlB,CAFY,CAFS,CAAvB,CAPuD,CAAzD,CAcKi9E,EAAA9oF,OAAL,CAGEmoF,CAAAxrE,IAAA8B,IAAA,CAAaqqE,CAAb,CAAA5kD,KAAA,CAAqC,QAAQ,EAAG,CAC9C6kD,CAAA,CAAeV,CAAf,CAD8C,CAAhD,CAEGllF,CAFH,CAHF,CACE4lF,CAAA,CAAe,CAAA,CAAf,CAlB8B,CA0BlCH,QAASA,EAAW,CAAC/8E,CAAD,CAAO+0D,CAAP,CAAgB,CAC9BooB,CAAJ,GAA6Bb,CAAA7e,yBAA7B,EACE6e,CAAApnB,aAAA,CAAkBl1D,CAAlB,CAAwB+0D,CAAxB,CAFgC,CAMpCmoB,QAASA,EAAc,CAACV,CAAD,CAAW,CAC5BW,CAAJ,GAA6Bb,CAAA7e,yBAA7B,EAEEif,CAAA,CAAaF,CAAb,CAH8B,CArFlC,IAAA/e,yBAAA,EACA,KAAI0f,EAAuB,IAAA1f,yBAA3B,CACI6e,EAAO,IAaXc,UAA2B,EAAG,CAC5B,IAAIC,EAAWf,CAAA5jB,aAEf,IAAI7gE,CAAA,CAAYykF,CAAA9e,cAAZ,CAAJ,CACEuf,CAAA,CAAYM,CAAZ,CAAsB,IAAtB,CADF,KAcE,OAXKf,EAAA9e,cAWEA,GAVLlpE,CAAA,CAAQgoF,CAAArjB,YAAR,CAA0B,QAAQ,CAAC7uC,CAAD;AAAIpqB,CAAJ,CAAU,CAC1C+8E,CAAA,CAAY/8E,CAAZ,CAAkB,IAAlB,CAD0C,CAA5C,CAGA,CAAA1L,CAAA,CAAQgoF,CAAA1f,iBAAR,CAA+B,QAAQ,CAACxyC,CAAD,CAAIpqB,CAAJ,CAAU,CAC/C+8E,CAAA,CAAY/8E,CAAZ,CAAkB,IAAlB,CAD+C,CAAjD,CAOKw9D,EADPuf,CAAA,CAAYM,CAAZ,CAAsBf,CAAA9e,cAAtB,CACOA,CAAA8e,CAAA9e,cAET,OAAO,CAAA,CAnBqB,CAA9B4f,CAVK,EAAL,CAIKT,CAAA,EAAL,CAIAK,CAAA,EAJA,CACEE,CAAA,CAAe,CAAA,CAAf,CALF,CACEA,CAAA,CAAe,CAAA,CAAf,CAP2D,CA1SnC,CAmZ5BhJ,iBAAkBA,QAAQ,EAAG,CAC3B,IAAIja,EAAY,IAAAnE,WAEhB,KAAA8H,UAAA75C,OAAA,CAAsB,IAAAw5C,kBAAtB,CAKA,IAAI,IAAA2e,yBAAJ,GAAsCjiB,CAAtC,EAAkE,EAAlE,GAAoDA,CAApD,EAAyE,IAAAlE,sBAAzE,CAGA,IAAA6lB,qBAAA,CAA0B3hB,CAA1B,CAOA,CANA,IAAAiiB,yBAMA,CANgCjiB,CAMhC,CAHI,IAAAlG,UAGJ,EAFE,IAAA8f,UAAA,EAEF,CAAA,IAAAyJ,mBAAA,EAlB2B,CAnZD,CAwa5BA,mBAAoBA,QAAQ,EAAG,CAE7B,IAAItf,EADY,IAAAke,yBAChB,CACII,EAAO,IAEX,KAAA9e,cAAA;AAAqB3lE,CAAA,CAAYmmE,CAAZ,CAAA,CAA0B5jE,IAAAA,EAA1B,CAAsC,CAAA,CAG3D,KAAA86D,aAAA,CAAkB,IAAAwD,aAAlB,CAAqC,IAArC,CACA,KAAAA,aAAA,CAAoB,OAEpB,IAAI,IAAA8E,cAAJ,CACE,IAAS,IAAAtoE,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAAujE,SAAAtkE,OAApB,CAA0Ce,CAAA,EAA1C,CAEE,GADA8oE,CACI,CADS,IAAAvF,SAAA,CAAcvjE,CAAd,CAAA,CAAiB8oE,CAAjB,CACT,CAAAnmE,CAAA,CAAYmmE,CAAZ,CAAJ,CAA6B,CAC3B,IAAAR,cAAA,CAAqB,CAAA,CACrB,MAF2B,CAM7BlgE,CAAA,CAAY,IAAAo/D,YAAZ,CAAJ,GAEE,IAAAA,YAFF,CAEqB,IAAAW,aAAA,CAAkB,IAAA9hC,QAAlB,CAFrB,CAIA,KAAI6gD,EAAiB,IAAA1f,YAArB,CACI2f,EAAe,IAAAlkB,SAAAC,UAAA,CAAwB,cAAxB,CACnB,KAAAuE,gBAAA,CAAuBqB,CAEnBqe,EAAJ,GACE,IAAA3f,YAkBA,CAlBmBsB,CAkBnB,CAAIse,CAAA5f,YAAJ,GAAyB0f,CAAzB,EACEE,CAAAG,oBAAA,EApBJ,CAOA,KAAAF,gBAAA,CAAqBve,CAArB,CAAiC,IAAAke,yBAAjC,CAAgE,QAAQ,CAACM,CAAD,CAAW,CAC5EH,CAAL,GAKEC,CAAA5f,YAMF;AANqB8f,CAAA,CAAWxe,CAAX,CAAwB5jE,IAAAA,EAM7C,CAAIkiF,CAAA5f,YAAJ,GAAyB0f,CAAzB,EACEE,CAAAG,oBAAA,EAZF,CADiF,CAAnF,CAnC6B,CAxaH,CA6d5BA,oBAAqBA,QAAQ,EAAG,CAC9B,IAAAnf,aAAA,CAAkB,IAAA/hC,QAAlB,CAAgC,IAAAmhC,YAAhC,CACApoE,EAAA,CAAQ,IAAAuoE,qBAAR,CAAmC,QAAQ,CAACp7C,CAAD,CAAW,CACpD,GAAI,CACFA,CAAA,EADE,CAEF,MAAOjjB,CAAP,CAAU,CAEV,IAAAq/D,mBAAA,CAAwBr/D,CAAxB,CAFU,CAHwC,CAAtD,CAOG,IAPH,CAF8B,CA7dJ,CA4hB5Bw3D,cAAeA,QAAQ,CAAC3gE,CAAD,CAAQ8iB,CAAR,CAAiB,CACtC,IAAA29C,WAAA,CAAkBzgE,CACd,KAAA8iE,SAAAC,UAAA,CAAwB,iBAAxB,CAAJ,EACE,IAAAmlB,0BAAA,CAA+BplE,CAA/B,CAHoC,CA5hBZ,CAmiB5BolE,0BAA2BA,QAAQ,CAACplE,CAAD,CAAU,CAC3C,IAAIqlE,EAAgB,IAAArlB,SAAAC,UAAA,CAAwB,UAAxB,CAEhBzkE,EAAA,CAAS6pF,CAAA,CAAcrlE,CAAd,CAAT,CAAJ,CACEqlE,CADF,CACkBA,CAAA,CAAcrlE,CAAd,CADlB,CAEWxkB,CAAA,CAAS6pF,CAAA,CAAc,SAAd,CAAT,CAAJ,EACqD,EADrD,GACL,IAAArlB,SAAAC,UAAA,CAAwB,UAAxB,CAAA7+D,QAAA,CAA4C4e,CAA5C,CADK;AAGLqlE,CAHK,CAGWA,CAAA,CAAc,SAAd,CAHX,CAII7pF,CAAA,CAAS6pF,CAAA,CAAc,GAAd,CAAT,CAJJ,GAKLA,CALK,CAKWA,CAAA,CAAc,GAAd,CALX,CAQP,KAAA5f,UAAA75C,OAAA,CAAsB,IAAAw5C,kBAAtB,CACA,KAAI+e,EAAO,IACS,EAApB,CAAIkB,CAAJ,CACE,IAAAjgB,kBADF,CAC2B,IAAAK,UAAA,CAAe,QAAQ,EAAG,CACjD0e,CAAApI,iBAAA,EADiD,CAA1B,CAEtBsJ,CAFsB,CAD3B,CAIW,IAAA9f,YAAA13B,QAAJ,CACL,IAAAkuC,iBAAA,EADK,CAGL,IAAA34C,QAAAl6B,OAAA,CAAoB,QAAQ,EAAG,CAC7Bi7E,CAAApI,iBAAA,EAD6B,CAA/B,CAtByC,CAniBjB,CA4lB5BuJ,sBAAuBA,QAAQ,CAAC98D,CAAD,CAAU,CACvC,IAAAw3C,SAAA,CAAgB,IAAAA,SAAAulB,YAAA,CAA0B/8D,CAA1B,CAChB,KAAAg9D,oBAAA,EAFuC,CA5lBb,CAgtB5BC,mBAAoBA,QAAQ,EAAG,CAC7B,IAAI3jB,EAAY,IAAA4jB,SAAA,EAEZ,KAAA/nB,WAAJ,GAAwBmE,CAAxB,GACE,IAAA2hB,qBAAA,CAA0B3hB,CAA1B,CAIA,CAHA,IAAAnE,WAGA,CAHkB,IAAAomB,yBAGlB;AAHkDjiB,CAGlD,CAFA,IAAAtD,QAAA,EAEA,CAAA,IAAA4lB,gBAAA,CAAqB,IAAA7f,YAArB,CAAuC,IAAA5G,WAAvC,CAAwDx+D,CAAxD,CALF,CAH6B,CAhtBH,CA+tB5BumF,SAAUA,QAAQ,EAAG,CAKnB,IALmB,IACfC,EAAa,IAAAtoB,YADE,CAEfpnC,EAAM0vD,CAAA3pF,OAFS,CAIf8lE,EAAY,IAAAyC,YAChB,CAAOtuC,CAAA,EAAP,CAAA,CACE6rC,CAAA,CAAY6jB,CAAA,CAAW1vD,CAAX,CAAA,CAAgB6rC,CAAhB,CAGd,OAAOA,EATY,CA/tBO,CA8uB5BgE,gBAAiBA,QAAQ,CAACD,CAAD,CAAa,CACpC,IAAAtB,YAAA,CAAmB,IAAAC,gBAAnB,CAA0CqB,CAC1C,KAAAR,cAAA,CAAqBpjE,IAAAA,EACrB,KAAAwjF,mBAAA,EAHoC,CA9uBV,CAovB5BD,oBAAqBA,QAAQ,EAAG,CAC1B,IAAA1gB,eAAJ,EACE,IAAArxC,UAAAvI,IAAA,CAAmB,IAAA45C,eAAnB,CAAwC,IAAAC,qBAAxC,CAIF,IADA,IAAAD,eACA,CADsB,IAAA9E,SAAAC,UAAA,CAAwB,UAAxB,CACtB,CACE,IAAAxsC,UAAA5oB,GAAA,CAAkB,IAAAi6D,eAAlB;AAAuC,IAAAC,qBAAvC,CAP4B,CApvBJ,CA+vB5BA,qBAAsBA,QAAQ,CAACtH,CAAD,CAAK,CACjC,IAAA2nB,0BAAA,CAA+B3nB,CAA/B,EAAqCA,CAAA56D,KAArC,CADiC,CA/vBP,CAqzB9By5D,GAAA,CAAqB,CACnBQ,MAAOwH,EADY,CAEnB9hE,IAAKA,QAAQ,CAAC46C,CAAD,CAASpe,CAAT,CAAmB,CAC9Boe,CAAA,CAAOpe,CAAP,CAAA,CAAmB,CAAA,CADW,CAFb,CAKnB69B,MAAOA,QAAQ,CAACzf,CAAD,CAASpe,CAAT,CAAmB,CAChC,OAAOoe,CAAA,CAAOpe,CAAP,CADyB,CALf,CAArB,CAuMA,KAAIxrB,GAAmB,CAAC,YAAD,CAAe,QAAQ,CAAC+E,CAAD,CAAa,CACzD,MAAO,CACL+W,SAAU,GADL,CAELb,QAAS,CAAC,SAAD,CAAY,QAAZ,CAAsB,kBAAtB,CAFJ,CAGLzjB,WAAYs5D,EAHP,CAOLj1C,SAAU,CAPL,CAQLpmB,QAAS28E,QAAuB,CAAC7kF,CAAD,CAAU,CAExCA,CAAAmhB,SAAA,CAAiBg6D,EAAjB,CAAAh6D,SAAA,CAlyCgB0hE,cAkyChB,CAAA1hE,SAAA,CAAoEm6C,EAApE,CAEA,OAAO,CACLliC,IAAK0rD,QAAuB,CAAC78E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuBq8E,CAAvB,CAA8B,CAAA,IACpDgJ,EAAYhJ,CAAA,CAAM,CAAN,CACZiJ,EAAAA,CAAWjJ,CAAA,CAAM,CAAN,CAAXiJ,EAAuBD,CAAA/pB,aAG3B,IAFIiqB,CAEJ,CAFkBlJ,CAAA,CAAM,CAAN,CAElB,CACEgJ,CAAA9lB,SAAA,CAAqBgmB,CAAAhmB,SAGvB8lB,EAAA3C,oBAAA,EAGA4C,EAAA3K,YAAA,CAAqB0K,CAArB,CAEArlF;CAAAqkC,SAAA,CAAc,MAAd,CAAsB,QAAQ,CAAC5B,CAAD,CAAW,CACnC4iD,CAAArqB,MAAJ,GAAwBv4B,CAAxB,EACE4iD,CAAA/pB,aAAAuf,gBAAA,CAAuCwK,CAAvC,CAAkD5iD,CAAlD,CAFqC,CAAzC,CAMAl6B,EAAA2yB,IAAA,CAAU,UAAV,CAAsB,QAAQ,EAAG,CAC/BmqD,CAAA/pB,aAAA0f,eAAA,CAAsCqK,CAAtC,CAD+B,CAAjC,CApBwD,CADrD,CAyBL1rD,KAAM6rD,QAAwB,CAACj9E,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuBq8E,CAAvB,CAA8B,CAI1DoJ,QAASA,EAAU,EAAG,CACpBJ,CAAAhC,YAAA,EADoB,CAHtB,IAAIgC,EAAYhJ,CAAA,CAAM,CAAN,CAChBgJ,EAAAN,oBAAA,EAMAzkF,EAAA8J,GAAA,CAAW,MAAX,CAAmB,QAAQ,EAAG,CACxBi7E,CAAAlhB,SAAJ,GAEIrsD,CAAAs1B,QAAJ,CACE7kC,CAAA9I,WAAA,CAAiBgmF,CAAjB,CADF,CAGEl9E,CAAAE,OAAA,CAAag9E,CAAb,CALF,CAD4B,CAA9B,CAR0D,CAzBvD,CAJiC,CARrC,CADkD,CAApC,CAAvB,CA8DIrhB,EA9DJ,CA+DIshB,GAAiB,uBAYrBpgB,GAAAhjD,UAAA,CAAyB,CAUvBk9C,UAAWA,QAAQ,CAACp4D,CAAD,CAAO,CACxB,MAAO,KAAAm+D,UAAA,CAAen+D,CAAf,CADiB,CAVH,CAoBvB09E,YAAaA,QAAQ,CAAC/8D,CAAD,CAAU,CAC7B,IAAI49D,EAAa,CAAA,CAGjB59D,EAAA,CAAUhqB,CAAA,CAAO,EAAP,CAAWgqB,CAAX,CAGVrsB,EAAA,CAAQqsB,CAAR,CAA8B,QAAQ,CAACnY,CAAD,CAAS/T,CAAT,CAAc,CACnC,UAAf,GAAI+T,CAAJ,CACc,GAAZ,GAAI/T,CAAJ,CACE8pF,CADF,CACe,CAAA,CADf,EAGE59D,CAAA,CAAQlsB,CAAR,CAEA;AAFe,IAAA0pE,UAAA,CAAe1pE,CAAf,CAEf,CAAY,UAAZ,GAAIA,CAAJ,GACEksB,CAAA69D,gBADF,CAC4B,IAAArgB,UAAAqgB,gBAD5B,CALF,CADF,CAWc,UAXd,GAWM/pF,CAXN,GAcIksB,CAAA69D,gBACA,CAD0B,CAAA,CAC1B,CAAA79D,CAAA,CAAQlsB,CAAR,CAAA,CAAeggB,CAAA,CAAKjM,CAAArL,QAAA,CAAemhF,EAAf,CAA+B,QAAQ,EAAG,CAC5D39D,CAAA69D,gBAAA,CAA0B,CAAA,CAC1B,OAAO,GAFqD,CAA1C,CAAL,CAfnB,CADkD,CAApD,CAsBG,IAtBH,CAwBID,EAAJ,GAEE,OAAO59D,CAAA,CAAQ,GAAR,CACP,CAAA8hB,EAAA,CAAS9hB,CAAT,CAAkB,IAAAw9C,UAAlB,CAHF,CAOA17B,GAAA,CAAS9hB,CAAT,CAAkBq8C,EAAAmB,UAAlB,CAEA,OAAO,KAAID,EAAJ,CAAiBv9C,CAAjB,CAxCsB,CApBR,CAiEzBq8C,GAAA,CAAsB,IAAIkB,EAAJ,CAAiB,CACrCugB,SAAU,EAD2B,CAErCD,gBAAiB,CAAA,CAFoB,CAGrCE,SAAU,CAH2B,CAIrCC,aAAc,CAAA,CAJuB,CAKrCtC,aAAc,CAAA,CALuB,CAMrCp/E,SAAU,IAN2B,CAAjB,CAidtB,KAAI8P,GAA0BA,QAAQ,EAAG,CAEvC6xE,QAASA,EAAwB,CAAC52D,CAAD,CAASqP,CAAT,CAAiB,CAChD,IAAAwnD,QAAA,CAAe72D,CACf,KAAAuT,QAAA,CAAelE,CAFiC,CADlDunD,CAAArhE,QAAA,CAAmC,CAAC,QAAD,CAAW,QAAX,CAKnCqhE,EAAA1jE,UAAA,CAAqC,CACnCoZ,QAASA,QAAQ,EAAG,CAClB,IAAIwqD;AAAgB,IAAAC,WAAA,CAAkB,IAAAA,WAAA5mB,SAAlB,CAA6C6E,EAAjE,CACIgiB,EAAyB,IAAAzjD,QAAAonB,MAAA,CAAmB,IAAAk8B,QAAA/xE,eAAnB,CAE7B,KAAAqrD,SAAA,CAAgB2mB,CAAApB,YAAA,CAA0BsB,CAA1B,CAJE,CADe,CASrC,OAAO,CACLv3D,SAAU,GADL,CAGLD,SAAU,EAHL,CAILZ,QAAS,CAACm4D,WAAY,mBAAb,CAJJ,CAKLx2D,iBAAkB,CAAA,CALb,CAMLplB,WAAYy7E,CANP,CAfgC,CAAzC,CAkEIv0E,GAAyBipD,EAAA,CAAY,CAAEvkC,SAAU,CAAA,CAAZ,CAAkBvH,SAAU,GAA5B,CAAZ,CAlE7B,CAwEIy3D,GAAkBrrF,CAAA,CAAO,WAAP,CAxEtB,CA+SIsrF,GAAoB,qOA/SxB;AA4TI3zE,GAAqB,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CAAoC,QAAQ,CAACkuE,CAAD,CAAWjrE,CAAX,CAAsBgC,CAAtB,CAA8B,CAEjG2uE,QAASA,EAAsB,CAACC,CAAD,CAAaC,CAAb,CAA4Bl+E,CAA5B,CAAmC,CAsDhEm+E,QAASA,EAAM,CAACC,CAAD,CAActlB,CAAd,CAAyBulB,CAAzB,CAAgCC,CAAhC,CAAuCC,CAAvC,CAAiD,CAC9D,IAAAH,YAAA,CAAmBA,CACnB,KAAAtlB,UAAA,CAAiBA,CACjB,KAAAulB,MAAA,CAAaA,CACb,KAAAC,MAAA,CAAaA,CACb,KAAAC,SAAA,CAAgBA,CAL8C,CAQhEC,QAASA,EAAmB,CAACC,CAAD,CAAe,CACzC,IAAIC,CAEJ,IAAKC,CAAAA,CAAL,EAAgBjsF,EAAA,CAAY+rF,CAAZ,CAAhB,CACEC,CAAA,CAAmBD,CADrB,KAEO,CAELC,CAAA,CAAmB,EACnB,KAASE,IAAAA,CAAT,GAAoBH,EAApB,CACMA,CAAAjrF,eAAA,CAA4BorF,CAA5B,CAAJ,EAAkE,GAAlE,GAA4CA,CAAAnkF,OAAA,CAAe,CAAf,CAA5C,EACEikF,CAAAhmF,KAAA,CAAsBkmF,CAAtB,CALC,CASP,MAAOF,EAdkC,CA5D3C,IAAI/kF,EAAQskF,CAAAtkF,MAAA,CAAiBokF,EAAjB,CACZ,IAAMpkF,CAAAA,CAAN,CACE,KAAMmkF,GAAA,CAAgB,MAAhB,CAIJG,CAJI,CAIQnhF,EAAA,CAAYohF,CAAZ,CAJR,CAAN,CAUF,IAAIW,EAAYllF,CAAA,CAAM,CAAN,CAAZklF,EAAwBllF,CAAA,CAAM,CAAN,CAA5B,CAEIglF,EAAUhlF,CAAA,CAAM,CAAN,CAGVmlF,EAAAA,CAAW,MAAAxnF,KAAA,CAAYqC,CAAA,CAAM,CAAN,CAAZ,CAAXmlF,EAAoCnlF,CAAA,CAAM,CAAN,CAExC,KAAIolF,EAAUplF,CAAA,CAAM,CAAN,CAEVrD,EAAAA,CAAU+Y,CAAA,CAAO1V,CAAA,CAAM,CAAN,CAAA,CAAWA,CAAA,CAAM,CAAN,CAAX,CAAsBklF,CAA7B,CAEd,KAAIG,EADaF,CACbE,EADyB3vE,CAAA,CAAOyvE,CAAP,CACzBE,EAA4B1oF,CAAhC,CACI2oF,EAAYF,CAAZE,EAAuB5vE,CAAA,CAAO0vE,CAAP,CAD3B,CAMIG,EAAoBH,CAAA,CACE,QAAQ,CAAC7qF,CAAD,CAAQioB,CAAR,CAAgB,CAAE,MAAO8iE,EAAA,CAAUj/E,CAAV,CAAiBmc,CAAjB,CAAT,CAD1B,CAEEgjE,QAAuB,CAACjrF,CAAD,CAAQ,CAAE,MAAOklB,GAAA,CAAQllB,CAAR,CAAT,CARzD;AASIkrF,EAAkBA,QAAQ,CAAClrF,CAAD,CAAQZ,CAAR,CAAa,CACzC,MAAO4rF,EAAA,CAAkBhrF,CAAlB,CAAyBmrF,CAAA,CAAUnrF,CAAV,CAAiBZ,CAAjB,CAAzB,CADkC,CAT3C,CAaIgsF,EAAYjwE,CAAA,CAAO1V,CAAA,CAAM,CAAN,CAAP,EAAmBA,CAAA,CAAM,CAAN,CAAnB,CAbhB,CAcI4lF,EAAYlwE,CAAA,CAAO1V,CAAA,CAAM,CAAN,CAAP,EAAmB,EAAnB,CAdhB,CAeI6lF,EAAgBnwE,CAAA,CAAO1V,CAAA,CAAM,CAAN,CAAP,EAAmB,EAAnB,CAfpB,CAgBI8lF,EAAWpwE,CAAA,CAAO1V,CAAA,CAAM,CAAN,CAAP,CAhBf,CAkBIwiB,EAAS,EAlBb,CAmBIkjE,EAAYV,CAAA,CAAU,QAAQ,CAACzqF,CAAD,CAAQZ,CAAR,CAAa,CAC7C6oB,CAAA,CAAOwiE,CAAP,CAAA,CAAkBrrF,CAClB6oB,EAAA,CAAO0iE,CAAP,CAAA,CAAoB3qF,CACpB,OAAOioB,EAHsC,CAA/B,CAIZ,QAAQ,CAACjoB,CAAD,CAAQ,CAClBioB,CAAA,CAAO0iE,CAAP,CAAA,CAAoB3qF,CACpB,OAAOioB,EAFW,CA+BpB,OAAO,CACL4iE,QAASA,CADJ,CAELK,gBAAiBA,CAFZ,CAGLM,cAAerwE,CAAA,CAAOowE,CAAP,CAAiB,QAAQ,CAAChB,CAAD,CAAe,CAIrD,IAAIkB,EAAe,EACnBlB,EAAA,CAAeA,CAAf,EAA+B,EAI/B,KAFA,IAAIC,EAAmBF,CAAA,CAAoBC,CAApB,CAAvB,CACImB,EAAqBlB,CAAA1rF,OADzB,CAESmF,EAAQ,CAAjB,CAAoBA,CAApB,CAA4BynF,CAA5B,CAAgDznF,CAAA,EAAhD,CAAyD,CACvD,IAAI7E,EAAOmrF,CAAD,GAAkBC,CAAlB,CAAsCvmF,CAAtC,CAA8CumF,CAAA,CAAiBvmF,CAAjB,CAAxD,CACIjE,EAAQuqF,CAAA,CAAanrF,CAAb,CADZ,CAGI6oB,EAASkjE,CAAA,CAAUnrF,CAAV,CAAiBZ,CAAjB,CAHb,CAII8qF,EAAcc,CAAA,CAAkBhrF,CAAlB,CAAyBioB,CAAzB,CAClBwjE,EAAAjnF,KAAA,CAAkB0lF,CAAlB,CAGA,IAAIzkF,CAAA,CAAM,CAAN,CAAJ,EAAgBA,CAAA,CAAM,CAAN,CAAhB,CACM0kF,CACJ,CADYiB,CAAA,CAAUt/E,CAAV,CAAiBmc,CAAjB,CACZ,CAAAwjE,CAAAjnF,KAAA,CAAkB2lF,CAAlB,CAIE1kF,EAAA,CAAM,CAAN,CAAJ,GACMkmF,CACJ,CADkBL,CAAA,CAAcx/E,CAAd,CAAqBmc,CAArB,CAClB,CAAAwjE,CAAAjnF,KAAA,CAAkBmnF,CAAlB,CAFF,CAfuD,CAoBzD,MAAOF,EA7B8C,CAAxC,CAHV,CAmCLG,WAAYA,QAAQ,EAAG,CAWrB,IATA,IAAIC,EAAc,EAAlB,CACIC,EAAiB,EADrB,CAKIvB,EAAegB,CAAA,CAASz/E,CAAT,CAAfy+E,EAAkC,EALtC,CAMIC,EAAmBF,CAAA,CAAoBC,CAApB,CANvB,CAOImB,EAAqBlB,CAAA1rF,OAPzB,CASSmF,EAAQ,CAAjB,CAAoBA,CAApB,CAA4BynF,CAA5B,CAAgDznF,CAAA,EAAhD,CAAyD,CACvD,IAAI7E,EAAOmrF,CAAD;AAAkBC,CAAlB,CAAsCvmF,CAAtC,CAA8CumF,CAAA,CAAiBvmF,CAAjB,CAAxD,CAEIgkB,EAASkjE,CAAA,CADDZ,CAAAvqF,CAAaZ,CAAbY,CACC,CAAiBZ,CAAjB,CAFb,CAGIwlE,EAAYkmB,CAAA,CAAYh/E,CAAZ,CAAmBmc,CAAnB,CAHhB,CAIIiiE,EAAcc,CAAA,CAAkBpmB,CAAlB,CAA6B38C,CAA7B,CAJlB,CAKIkiE,EAAQiB,CAAA,CAAUt/E,CAAV,CAAiBmc,CAAjB,CALZ,CAMImiE,EAAQiB,CAAA,CAAUv/E,CAAV,CAAiBmc,CAAjB,CANZ,CAOIoiE,EAAWiB,CAAA,CAAcx/E,CAAd,CAAqBmc,CAArB,CAPf,CAQI8jE,EAAa,IAAI9B,CAAJ,CAAWC,CAAX,CAAwBtlB,CAAxB,CAAmCulB,CAAnC,CAA0CC,CAA1C,CAAiDC,CAAjD,CAEjBwB,EAAArnF,KAAA,CAAiBunF,CAAjB,CACAD,EAAA,CAAe5B,CAAf,CAAA,CAA8B6B,CAZyB,CAezD,MAAO,CACLroF,MAAOmoF,CADF,CAELC,eAAgBA,CAFX,CAGLE,uBAAwBA,QAAQ,CAAChsF,CAAD,CAAQ,CACtC,MAAO8rF,EAAA,CAAeZ,CAAA,CAAgBlrF,CAAhB,CAAf,CAD+B,CAHnC,CAMLisF,uBAAwBA,QAAQ,CAAC94E,CAAD,CAAS,CAGvC,MAAO03E,EAAA,CAAUzmF,EAAA,CAAK+O,CAAAyxD,UAAL,CAAV,CAAmCzxD,CAAAyxD,UAHH,CANpC,CA1Bc,CAnClB,CA/EyD,CAF+B,IAkK7FsnB,EAAiBxuF,CAAAyJ,SAAAkX,cAAA,CAA8B,QAA9B,CAlK4E,CAmK7F8tE,EAAmBzuF,CAAAyJ,SAAAkX,cAAA,CAA8B,UAA9B,CAiSvB,OAAO,CACL+T,SAAU,GADL,CAELsH,SAAU,CAAA,CAFL,CAGLnI,QAAS,CAAC,QAAD,CAAW,SAAX,CAHJ,CAILnC,KAAM,CACJ6N,IAAKmvD,QAAyB,CAACtgF,CAAD,CAAQk+E,CAAR,CAAuBzmF,CAAvB,CAA6Bq8E,CAA7B,CAAoC,CAIhEA,CAAA,CAAM,CAAN,CAAAyM,eAAA,CAA0BpqF,CAJsC,CAD9D,CAOJi7B,KA1SFovD,QAA0B,CAACxgF,CAAD,CAAQk+E,CAAR,CAAuBzmF,CAAvB,CAA6Bq8E,CAA7B,CAAoC,CA+L5D2M,QAASA,EAA0B,CAAC3nB,CAAD,CAAY,CAE7C,IAAI/gE,GADAsP,CACAtP,CADSynB,CAAA0gE,uBAAA,CAA+BpnB,CAA/B,CACT/gE;AAAoBsP,CAAAtP,QAEpBA,EAAJ,EAAgB8oE,CAAA9oE,CAAA8oE,SAAhB,GAAkC9oE,CAAA8oE,SAAlC,CAAqD,CAAA,CAArD,CAEA,OAAOx5D,EANsC,CAS/Cq5E,QAASA,EAAmB,CAACr5E,CAAD,CAAStP,CAAT,CAAkB,CAC5CsP,CAAAtP,QAAA,CAAiBA,CACjBA,EAAAwmF,SAAA,CAAmBl3E,CAAAk3E,SAOfl3E,EAAAg3E,MAAJ,GAAqBtmF,CAAAsmF,MAArB,GACEtmF,CAAAsmF,MACA,CADgBh3E,CAAAg3E,MAChB,CAAAtmF,CAAAob,YAAA,CAAsB9L,CAAAg3E,MAFxB,CAIAtmF,EAAA7D,MAAA,CAAgBmT,CAAA+2E,YAb4B,CAtM9C,IAAIuC,EAAa7M,CAAA,CAAM,CAAN,CAAjB,CACI8M,EAAc9M,CAAA,CAAM,CAAN,CADlB,CAEIlT,EAAWnpE,CAAAmpE,SAIN7sE,EAAAA,CAAI,CAAb,KAR4D,IAQ5C0tE,EAAWyc,CAAAzc,SAAA,EARiC,CAQP9sE,EAAK8sE,CAAAzuE,OAA1D,CAA2Ee,CAA3E,CAA+EY,CAA/E,CAAmFZ,CAAA,EAAnF,CACE,GAA0B,EAA1B,GAAI0tE,CAAA,CAAS1tE,CAAT,CAAAG,MAAJ,CAA8B,CAC5BysF,CAAAE,eAAA,CAA4B,CAAA,CAC5BF,EAAAG,YAAA,CAAyBrf,CAAA/iB,GAAA,CAAY3qD,CAAZ,CACzB,MAH4B,CAQhCmqF,CAAAnhF,MAAA,EAEIgkF,EAAAA,CAAsB,CAAED,CAAAH,CAAAG,YAER/tF,EAAAiuF,CAAOZ,CAAA/qF,UAAA,CAAyB,CAAA,CAAzB,CAAP2rF,CACpB5lF,IAAA,CAAkB,GAAlB,CAEA,KAAIokB,CAAJ,CACIrV,EAAY6zE,CAAA,CAAuBvmF,CAAA0S,UAAvB,CAAuC+zE,CAAvC,CAAsDl+E,CAAtD,CADhB,CAKIihF,EAAe5zE,CAAA,CAAU,CAAV,CAAA+E,uBAAA,EAGnBuuE,EAAAO,2BAAA,CAAwCC,QAAQ,CAAC/lF,CAAD,CAAM,CACpD,MAAO,GAD6C,CAKjDwlE,EAAL,EAwDE+f,CAAAS,WA8BA;AA9BwBC,QAA+B,CAACr4D,CAAD,CAAS,CAE9D,GAAKxJ,CAAL,CAAA,CAIA,IAAI8hE,EAAkBt4D,CAAlBs4D,EAA4Bt4D,CAAAshB,IAAA,CAAWm2C,CAAX,CAA5Ba,EAAsE,EAE1E9hE,EAAA5nB,MAAAzE,QAAA,CAAsB,QAAQ,CAACkU,CAAD,CAAS,CACjCA,CAAAtP,QAAA8oE,SAAJ,EAvj+B2C,EAuj+B3C,GAvj+BHhqE,KAAAkjB,UAAA3hB,QAAA3E,KAAA,CAuj+B4C6tF,CAvj+B5C,CAuj+B6Dj6E,CAvj+B7D,CAuj+BG,GACEA,CAAAtP,QAAA8oE,SADF,CAC4B,CAAA,CAD5B,CADqC,CAAvC,CANA,CAF8D,CA8BhE,CAdA8f,CAAAY,UAcA,CAduBC,QAA8B,EAAG,CAAA,IAClDC,EAAiBvD,CAAA9iF,IAAA,EAAjBqmF,EAAwC,EADU,CAElDC,EAAa,EAEjBvuF,EAAA,CAAQsuF,CAAR,CAAwB,QAAQ,CAACvtF,CAAD,CAAQ,CAEtC,CADImT,CACJ,CADamY,CAAAwgE,eAAA,CAAuB9rF,CAAvB,CACb,GAAeqqF,CAAAl3E,CAAAk3E,SAAf,EAAgCmD,CAAAhpF,KAAA,CAAgB8mB,CAAA2gE,uBAAA,CAA+B94E,CAA/B,CAAhB,CAFM,CAAxC,CAKA,OAAOq6E,EAT+C,CAcxD,CAAIv3E,CAAA40E,QAAJ,EAEE/+E,CAAAq8B,iBAAA,CAAuB,QAAQ,EAAG,CAChC,GAAIxpC,CAAA,CAAQ+tF,CAAAjsB,WAAR,CAAJ,CACE,MAAOisB,EAAAjsB,WAAArqB,IAAA,CAA2B,QAAQ,CAACp2C,CAAD,CAAQ,CAChD,MAAOiW,EAAAi1E,gBAAA,CAA0BlrF,CAA1B,CADyC,CAA3C,CAFuB,CAAlC,CAMG,QAAQ,EAAG,CACZ0sF,CAAAprB,QAAA,EADY,CANd,CAxFJ,GAEEmrB,CAAAS,WA6CA,CA7CwBC,QAA4B,CAACntF,CAAD,CAAQ,CAE1D,GAAKsrB,CAAL,CAAA,CAEA,IAAImiE,EAAiBzD,CAAA,CAAc,CAAd,CAAA1+D,QAAA,CAAyB0+D,CAAA,CAAc,CAAd,CAAA0D,cAAzB,CAArB;AACIv6E,EAASmY,CAAA0gE,uBAAA,CAA+BhsF,CAA/B,CAITytF,EAAJ,EAAoBA,CAAAvhB,gBAAA,CAA+B,UAA/B,CAEhB/4D,EAAJ,EAMM62E,CAAA,CAAc,CAAd,CAAAhqF,MAOJ,GAP+BmT,CAAA+2E,YAO/B,GANEuC,CAAAkB,oBAAA,EAGA,CADA3D,CAAA,CAAc,CAAd,CAAAhqF,MACA,CADyBmT,CAAA+2E,YACzB,CAAA/2E,CAAAtP,QAAA8oE,SAAA,CAA0B,CAAA,CAG5B,EAAAx5D,CAAAtP,QAAA0d,aAAA,CAA4B,UAA5B,CAAwC,UAAxC,CAbF,EAeEkrE,CAAAmB,2BAAA,CAAsC5tF,CAAtC,CAxBF,CAF0D,CA6C5D,CAfAysF,CAAAY,UAeA,CAfuBC,QAA2B,EAAG,CAEnD,IAAIG,EAAiBniE,CAAAwgE,eAAA,CAAuB9B,CAAA9iF,IAAA,EAAvB,CAErB,OAAIumF,EAAJ,EAAuBpD,CAAAoD,CAAApD,SAAvB,EACEoC,CAAAoB,oBAAA,EAEO,CADPpB,CAAAkB,oBAAA,EACO,CAAAriE,CAAA2gE,uBAAA,CAA+BwB,CAA/B,CAHT,EAKO,IAT4C,CAerD,CAAIx3E,CAAA40E,QAAJ,EACE/+E,CAAA7I,OAAA,CACE,QAAQ,EAAG,CAAE,MAAOgT,EAAAi1E,gBAAA,CAA0BwB,CAAAjsB,WAA1B,CAAT,CADb,CAEE,QAAQ,EAAG,CAAEisB,CAAAprB,QAAA,EAAF,CAFb,CAhDJ,CAqGIurB;CAAJ,GAGEzI,CAAA,CAASqI,CAAAG,YAAT,CAAA,CAAiC9gF,CAAjC,CAIA,CAFAk+E,CAAAvc,QAAA,CAAsBgf,CAAAG,YAAtB,CAEA,CAzz7BgBhxD,CAyz7BhB,GAAI6wD,CAAAG,YAAA,CAAuB,CAAvB,CAAA3jF,SAAJ,EAGEwjF,CAAAE,eAKA,CAL4B,CAAA,CAK5B,CAAAF,CAAAJ,eAAA,CAA4ByB,QAAQ,CAACC,CAAD,CAAc/kB,CAAd,CAAwB,CACnC,EAAvB,GAAIA,CAAA9hE,IAAA,EAAJ,GACEulF,CAAAE,eAMA,CAN4B,CAAA,CAM5B,CALAF,CAAAG,YAKA,CALyB5jB,CAKzB,CAJAyjB,CAAAG,YAAA3nE,YAAA,CAAmC,UAAnC,CAIA,CAFAynE,CAAAprB,QAAA,EAEA,CAAA0H,CAAAr7D,GAAA,CAAY,UAAZ,CAAwB,QAAQ,EAAG,CACjC,IAAIqgF,EAAgBvB,CAAAwB,uBAAA,EAEpBxB,EAAAE,eAAA,CAA4B,CAAA,CAC5BF,EAAAG,YAAA,CAAyB7nF,IAAAA,EAErBipF,EAAJ,EAAmBtB,CAAAprB,QAAA,EANc,CAAnC,CAPF,CAD0D,CAR9D,EA8BEmrB,CAAAG,YAAA3nE,YAAA,CAAmC,UAAnC,CArCJ,CA2CAnZ,EAAAq8B,iBAAA,CAAuBlyB,CAAAu1E,cAAvB,CAmCA0C,QAAsB,EAAG,CACvB,IAAIlnD,EAAgB1b,CAAhB0b,EAA2BylD,CAAAY,UAAA,EAO/B,IAAI/hE,CAAJ,CAEE,IAAS,IAAAzrB,EAAIyrB,CAAA5nB,MAAA5E,OAAJe,CAA2B,CAApC,CAA4C,CAA5C,EAAuCA,CAAvC,CAA+CA,CAAA,EAA/C,CAAoD,CAClD,IAAIsT;AAASmY,CAAA5nB,MAAA,CAAc7D,CAAd,CACT/B,EAAA,CAAUqV,CAAAi3E,MAAV,CAAJ,CACE7nE,EAAA,CAAapP,CAAAtP,QAAAqe,WAAb,CADF,CAGEK,EAAA,CAAapP,CAAAtP,QAAb,CALgD,CAUtDynB,CAAA,CAAUrV,CAAA21E,WAAA,EAEV,KAAIuC,EAAkB,EAEtB7iE,EAAA5nB,MAAAzE,QAAA,CAAsBmvF,QAAkB,CAACj7E,CAAD,CAAS,CAC/C,IAAIk7E,CAEJ,IAAIvwF,CAAA,CAAUqV,CAAAi3E,MAAV,CAAJ,CAA6B,CAI3BiE,CAAA,CAAeF,CAAA,CAAgBh7E,CAAAi3E,MAAhB,CAEViE,EAAL,GAEEA,CAQA,CARelC,CAAAhrF,UAAA,CAA2B,CAAA,CAA3B,CAQf,CAPA4rF,CAAA3uE,YAAA,CAAyBiwE,CAAzB,CAOA,CAHAA,CAAAlE,MAGA,CAHsC,IAAjB,GAAAh3E,CAAAi3E,MAAA,CAAwB,MAAxB,CAAiCj3E,CAAAi3E,MAGtD,CAAA+D,CAAA,CAAgBh7E,CAAAi3E,MAAhB,CAAA,CAAgCiE,CAVlC,CA/DJ,KAAIC,EAAgBpC,CAAA/qF,UAAA,CAAyB,CAAA,CAAzB,CACpBW,EAAAsc,YAAA,CAAmBkwE,CAAnB,CACA9B,EAAA,CA0EqBr5E,CA1ErB,CAA4Bm7E,CAA5B,CAuD+B,CAA7B,IAzDEA,EAEJ,CAFoBpC,CAAA/qF,UAAA,CAAyB,CAAA,CAAzB,CAEpB,CA+E6B4rF,CAhF7B3uE,YAAA,CAAmBkwE,CAAnB,CACA,CAAA9B,CAAA,CA+EqBr5E,CA/ErB,CAA4Bm7E,CAA5B,CAoDiD,CAAjD,CA+BAtE,EAAA,CAAc,CAAd,CAAA5rE,YAAA,CAA6B2uE,CAA7B,CAEAL,EAAAprB,QAAA,EAGKorB,EAAAtsB,SAAA,CAAqBp5B,CAArB,CAAL,GACMunD,CAEJ,CAFgB9B,CAAAY,UAAA,EAEhB,EADqBp3E,CAAA40E,QACjB,EADsCne,CACtC,CAAkB3mE,EAAA,CAAOihC,CAAP,CAAsBunD,CAAtB,CAAlB,CAAqDvnD,CAArD,GAAuEunD,CAA3E,IACE7B,CAAA/rB,cAAA,CAA0B4tB,CAA1B,CACA,CAAA7B,CAAAprB,QAAA,EAFF,CAHF,CA5DuB,CAnCzB,CArL4D,CAmSxD,CAJD,CApc0F,CAA1E,CA5TzB,CA+7BIpsD,GAAuB,CAAC,SAAD,CAAY,cAAZ,CAA4B,MAA5B;AAAoC,QAAQ,CAAC4hD,CAAD,CAAUj9C,CAAV,CAAwBoB,CAAxB,CAA8B,CAAA,IAC/FuzE,EAAQ,KADuF,CAE/FC,EAAU,oBAEd,OAAO,CACLr/D,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAoDnCmrF,QAASA,EAAiB,CAACC,CAAD,CAAU,CAClC9qF,CAAAkgC,KAAA,CAAa4qD,CAAb,EAAwB,EAAxB,CADkC,CApDD,IAC/BC,EAAYrrF,CAAAs0C,MADmB,CAE/Bg3C,EAAUtrF,CAAA+yB,MAAAwwB,KAAV+nC,EAA6BhrF,CAAAN,KAAA,CAAaA,CAAA+yB,MAAAwwB,KAAb,CAFE,CAG/B/8B,EAASxmB,CAAAwmB,OAATA,EAAwB,CAHO,CAI/B+kE,EAAQhjF,CAAAwhD,MAAA,CAAYuhC,CAAZ,CAARC,EAAgC,EAJD,CAK/BC,EAAc,EALiB,CAM/BzlD,EAAczvB,CAAAyvB,YAAA,EANiB,CAO/BC,EAAY1vB,CAAA0vB,UAAA,EAPmB,CAQ/BylD,EAAmB1lD,CAAnB0lD,CAAiCJ,CAAjCI,CAA6C,GAA7CA,CAAmDjlE,CAAnDilE,CAA4DzlD,CAR7B,CAS/B0lD,EAAe7iF,EAAAnK,KATgB,CAU/BitF,CAEJjwF,EAAA,CAAQsE,CAAR,CAAc,QAAQ,CAACunC,CAAD,CAAaqkD,CAAb,CAA4B,CAChD,IAAIC,EAAWX,CAAAlwE,KAAA,CAAa4wE,CAAb,CACXC,EAAJ,GACMC,CACJ,EADeD,CAAA,CAAS,CAAT,CAAA,CAAc,GAAd,CAAoB,EACnC,EADyCtrF,CAAA,CAAUsrF,CAAA,CAAS,CAAT,CAAV,CACzC,CAAAN,CAAA,CAAMO,CAAN,CAAA,CAAiBxrF,CAAAN,KAAA,CAAaA,CAAA+yB,MAAA,CAAW64D,CAAX,CAAb,CAFnB,CAFgD,CAAlD,CAOAlwF,EAAA,CAAQ6vF,CAAR,CAAe,QAAQ,CAAChkD,CAAD,CAAa1rC,CAAb,CAAkB,CACvC2vF,CAAA,CAAY3vF,CAAZ,CAAA,CAAmBya,CAAA,CAAaixB,CAAAhjC,QAAA,CAAmB0mF,CAAnB,CAA0BQ,CAA1B,CAAb,CADoB,CAAzC,CAKAljF,EAAA7I,OAAA,CAAa2rF,CAAb,CAAwBU,QAA+B,CAACtkE,CAAD,CAAS,CAC9D,IAAI6sB,EAAQokB,UAAA,CAAWjxC,CAAX,CAAZ,CACIukE,EAAatnF,CAAA,CAAY4vC,CAAZ,CAEZ03C,EAAL,EAAqB13C,CAArB,GAA8Bi3C,EAA9B,GAGEj3C,CAHF,CAGUif,CAAA04B,UAAA,CAAkB33C,CAAlB,CAA0B9tB,CAA1B,CAHV,CAQK8tB,EAAL,GAAeq3C,CAAf,EAA+BK,CAA/B,EAA6CtnF,CAAA,CAAYinF,CAAZ,CAA7C,GACED,CAAA,EAWA,CAVIQ,CAUJ,CAVgBV,CAAA,CAAYl3C,CAAZ,CAUhB,CATIr1C,CAAA,CAAYitF,CAAZ,CAAJ;CACgB,IAId,EAJIzkE,CAIJ,EAHE/P,CAAAoiC,MAAA,CAAW,oCAAX,CAAmDxF,CAAnD,CAA2D,OAA3D,CAAsEg3C,CAAtE,CAGF,CADAI,CACA,CADehtF,CACf,CAAAysF,CAAA,EALF,EAOEO,CAPF,CAOiBnjF,CAAA7I,OAAA,CAAawsF,CAAb,CAAwBf,CAAxB,CAEjB,CAAAQ,CAAA,CAAYr3C,CAZd,CAZ8D,CAAhE,CAxBmC,CADhC,CAJ4F,CAA1E,CA/7B3B,CA+uCI63C,GAAcnxF,CAAA,CAAO,OAAP,CA/uClB,CAivCI6W,GAAiB,CAAC,QAAD,CAAW,QAAQ,CAAC+F,CAAD,CAAS,CAC/C,MAAO,CACLgX,SAAW,EADN,CAELC,SAAU,GAFL,CAGLrmB,QAASA,QAAQ,CAACymB,CAAD,CAAWC,CAAX,CAAmB,CAElC,IAAI2F,EAAiBqC,EAAA,CAAmB72B,EAAA,CAAU4uB,CAAV,CAAnB,CAArB,CAGIvjB,EAASkM,CAAA,CAAOsX,CAAAtd,MAAP,CAHb,CAII2qE,EAAS7wE,CAAA84B,OAAT+3C,EAA0B,QAAQ,EAAG,CACvC,KAAM4P,GAAA,CAAY,WAAZ,CAAyEj9D,CAAAtd,MAAzE,CAAN,CADuC,CAIzC,OAAO,SAAQ,CAACrJ,CAAD,CAAQjI,CAAR,CAAiBw1B,CAAjB,CAAwB,CACrC,IAAIs2D,CAEJ,IAAIt2D,CAAA/5B,eAAA,CAAqB,WAArB,CAAJ,CACE,GAAwB,UAAxB,GAAI+5B,CAAAu2D,UAAJ,CACED,CAAA,CAAW9rF,CADb,KAKE,IAFA8rF,CAEKA,CAFM9rF,CAAAoI,KAAA,CAAa,GAAb,CAAmBotB,CAAAu2D,UAAnB,CAAqC,YAArC,CAEND,CAAAA,CAAAA,CAAL,CACE,KAAMD,GAAA,CACJ,QADI,CAGJr2D,CAAAu2D,UAHI,CAIJn9D,CAAAtd,MAJI,CAAN,CADF,CANJ,IAgBEw6E,EAAA,CAAW9rF,CAAAoI,KAAA,CAAa,GAAb,CAAmBmsB,CAAnB,CAAoC,YAApC,CAGbu3D,EAAA;AAAWA,CAAX,EAAuB9rF,CAEvBi8E,EAAA,CAAOh0E,CAAP,CAAc6jF,CAAd,CAGA9rF,EAAA8J,GAAA,CAAW,UAAX,CAAuB,QAAQ,EAAG,CAG5BsB,CAAA,CAAOnD,CAAP,CAAJ,GAAsB6jF,CAAtB,EACE7P,CAAA,CAAOh0E,CAAP,CAAc,IAAd,CAJ8B,CAAlC,CA3BqC,CAVL,CAH/B,CADwC,CAA5B,CAjvCrB,CAotDIwJ,GAAoB,CAAC,QAAD,CAAW,UAAX,CAAuB,UAAvB,CAAmC,QAAQ,CAAC6F,CAAD,CAASlD,CAAT,CAAmBmsE,CAAnB,CAA6B,CAE9F,IAAIyL,EAAiBtxF,CAAA,CAAO,UAAP,CAArB,CAEIuxF,EAAcA,QAAQ,CAAChkF,CAAD,CAAQ7H,CAAR,CAAe8rF,CAAf,CAAgC/vF,CAAhC,CAAuCgwF,CAAvC,CAAsD5wF,CAAtD,CAA2D6wF,CAA3D,CAAwE,CAEhGnkF,CAAA,CAAMikF,CAAN,CAAA,CAAyB/vF,CACrBgwF,EAAJ,GAAmBlkF,CAAA,CAAMkkF,CAAN,CAAnB,CAA0C5wF,CAA1C,CACA0M,EAAA26D,OAAA,CAAexiE,CACf6H,EAAAokF,OAAA,CAA0B,CAA1B,GAAgBjsF,CAChB6H,EAAAqkF,MAAA,CAAelsF,CAAf,GAA0BgsF,CAA1B,CAAwC,CACxCnkF,EAAAskF,QAAA,CAAgB,EAAEtkF,CAAAokF,OAAF,EAAkBpkF,CAAAqkF,MAAlB,CAEhBrkF,EAAAukF,KAAA,CAAa,EAAEvkF,CAAAwkF,MAAF,CAAgC,CAAhC,IAAiBrsF,CAAjB,CAAyB,CAAzB,EATmF,CAFlG,CAsBIssF,EAAmBA,QAAQ,CAACvuD,CAAD,CAAS5iC,CAAT,CAAcY,CAAd,CAAqB,CAClD,MAAOklB,GAAA,CAAQllB,CAAR,CAD2C,CAtBpD,CA0BIwwF,EAAiBA,QAAQ,CAACxuD,CAAD,CAAS5iC,CAAT,CAAc,CACzC,MAAOA,EADkC,CAI3C,OAAO,CACLgzB,SAAU,GADL,CAELkQ,aAAc,CAAA,CAFT,CAGLrP,WAAY,SAHP,CAILd,SAAU,GAJL,CAKLuH,SAAU,CAAA,CALL,CAML0G,MAAO,CAAA,CANF,CAOLr0B,QAAS0kF,QAAwB,CAAC/9D,CAAD,CAAW4D,CAAX,CAAkB,CACjD,IAAIwU,EAAaxU,CAAAjhB,SAAjB,CACIq7E,EAAqBtM,CAAA7jD,gBAAA,CAAyB,cAAzB;AAAyCuK,CAAzC,CADzB,CAGIrlC,EAAQqlC,CAAArlC,MAAA,CAAiB,4FAAjB,CAEZ,IAAKA,CAAAA,CAAL,CACE,KAAMoqF,EAAA,CAAe,MAAf,CACF/kD,CADE,CAAN,CAIF,IAAIkwC,EAAMv1E,CAAA,CAAM,CAAN,CAAV,CACIs1E,EAAMt1E,CAAA,CAAM,CAAN,CADV,CAEIkrF,EAAUlrF,CAAA,CAAM,CAAN,CAFd,CAGImrF,EAAanrF,CAAA,CAAM,CAAN,CAHjB,CAKAA,EAAQu1E,CAAAv1E,MAAA,CAAU,qDAAV,CAER,IAAKA,CAAAA,CAAL,CACE,KAAMoqF,EAAA,CAAe,QAAf,CACF7U,CADE,CAAN,CAGF,IAAI+U,EAAkBtqF,CAAA,CAAM,CAAN,CAAlBsqF,EAA8BtqF,CAAA,CAAM,CAAN,CAAlC,CACIuqF,EAAgBvqF,CAAA,CAAM,CAAN,CAEpB,IAAIkrF,CAAJ,GAAiB,CAAA,4BAAAvtF,KAAA,CAAkCutF,CAAlC,CAAjB,EACI,2FAAAvtF,KAAA,CAAiGutF,CAAjG,CADJ,EAEE,KAAMd,EAAA,CAAe,UAAf,CACJc,CADI,CAAN,CAIF,IAAIE,CAEJ,IAAID,CAAJ,CAAgB,CACd,IAAIE,EAAe,CAACloC,IAAK1jC,EAAN,CAAnB,CACI6rE,EAAmB51E,CAAA,CAAOy1E,CAAP,CAEvBC,EAAA,CAAiBA,QAAQ,CAAC7uD,CAAD,CAAS5iC,CAAT,CAAcY,CAAd,CAAqBiE,CAArB,CAA4B,CAE/C+rF,CAAJ;CAAmBc,CAAA,CAAad,CAAb,CAAnB,CAAiD5wF,CAAjD,CACA0xF,EAAA,CAAaf,CAAb,CAAA,CAAgC/vF,CAChC8wF,EAAArqB,OAAA,CAAsBxiE,CACtB,OAAO8sF,EAAA,CAAiB/uD,CAAjB,CAAyB8uD,CAAzB,CAL4C,CAJvC,CAahB,MAAOE,SAAqB,CAAChvD,CAAD,CAAStP,CAAT,CAAmB4D,CAAnB,CAA0BgpC,CAA1B,CAAgCr9B,CAAhC,CAA6C,CAUvE,IAAIgvD,EAAe3qF,CAAA,EAGnB07B,EAAAmG,iBAAA,CAAwB4yC,CAAxB,CAA6BmW,QAAuB,CAAChgE,CAAD,CAAa,CAAA,IAC3DjtB,CAD2D,CACpDnF,CADoD,CAE3DqyF,EAAez+D,CAAA,CAAS,CAAT,CAF4C,CAI3D0+D,CAJ2D,CAO3DC,EAAe/qF,CAAA,EAP4C,CAQ3DgrF,CAR2D,CAS3DlyF,CAT2D,CAStDY,CATsD,CAU3DuxF,CAV2D,CAY3DC,CAZ2D,CAa3D7/E,CAb2D,CAc3D8/E,CAGAd,EAAJ,GACE3uD,CAAA,CAAO2uD,CAAP,CADF,CACoBz/D,CADpB,CAIA,IAAI1yB,EAAA,CAAY0yB,CAAZ,CAAJ,CACEsgE,CACA,CADiBtgE,CACjB,CAAAwgE,CAAA,CAAcb,CAAd,EAAgCN,CAFlC,KAOE,KAAS7F,CAAT,GAHAgH,EAGoBxgE,CAHN2/D,CAGM3/D,EAHYs/D,CAGZt/D,CADpBsgE,CACoBtgE,CADH,EACGA,CAAAA,CAApB,CACM5xB,EAAAC,KAAA,CAAoB2xB,CAApB,CAAgCw5D,CAAhC,CAAJ,EAAsE,GAAtE,GAAgDA,CAAAnkF,OAAA,CAAe,CAAf,CAAhD,EACEirF,CAAAhtF,KAAA,CAAoBkmF,CAApB,CAKN4G,EAAA,CAAmBE,CAAA1yF,OACnB2yF,EAAA,CAAqB9uF,KAAJ,CAAU2uF,CAAV,CAGjB,KAAKrtF,CAAL,CAAa,CAAb,CAAgBA,CAAhB,CAAwBqtF,CAAxB,CAA0CrtF,CAAA,EAA1C,CAIE,GAHA7E,CAGI,CAHG8xB,CAAD,GAAgBsgE,CAAhB,CAAkCvtF,CAAlC,CAA0CutF,CAAA,CAAevtF,CAAf,CAG5C,CAFJjE,CAEI,CAFIkxB,CAAA,CAAW9xB,CAAX,CAEJ,CADJmyF,CACI,CADQG,CAAA,CAAY1vD,CAAZ,CAAoB5iC,CAApB,CAAyBY,CAAzB,CAAgCiE,CAAhC,CACR,CAAAgtF,CAAA,CAAaM,CAAb,CAAJ,CAEE5/E,CAGA,CAHQs/E,CAAA,CAAaM,CAAb,CAGR,CAFA,OAAON,CAAA,CAAaM,CAAb,CAEP,CADAF,CAAA,CAAaE,CAAb,CACA,CAD0B5/E,CAC1B,CAAA8/E,CAAA,CAAextF,CAAf,CAAA,CAAwB0N,CAL1B,KAMO,CAAA,GAAI0/E,CAAA,CAAaE,CAAb,CAAJ,CAKL,KAHAtyF,EAAA,CAAQwyF,CAAR,CAAwB,QAAQ,CAAC9/E,CAAD,CAAQ,CAClCA,CAAJ,EAAaA,CAAA7F,MAAb,GAA0BmlF,CAAA,CAAat/E,CAAAge,GAAb,CAA1B,CAAmDhe,CAAnD,CADsC,CAAxC,CAGM,CAAAk+E,CAAA,CAAe,OAAf,CAEF/kD,CAFE,CAEUymD,CAFV,CAEqBvxF,CAFrB,CAAN,CAKAyxF,CAAA,CAAextF,CAAf,CAAA,CAAwB,CAAC0rB,GAAI4hE,CAAL,CAAgBzlF,MAAO/G,IAAAA,EAAvB,CAAkC1D,MAAO0D,IAAAA,EAAzC,CACxBssF,EAAA,CAAaE,CAAb,CAAA,CAA0B,CAAA,CAXrB,CAiBLT,CAAJ,GACEA,CAAA,CAAaf,CAAb,CADF,CACkChrF,IAAAA,EADlC,CAKA;IAAS4sF,CAAT,GAAqBV,EAArB,CAAmC,CACjCt/E,CAAA,CAAQs/E,CAAA,CAAaU,CAAb,CACRtrD,EAAA,CAAmB/2B,EAAA,CAAcqC,CAAAtQ,MAAd,CACnB4W,EAAA84D,MAAA,CAAe1qC,CAAf,CACA,IAAIA,CAAA,CAAiB,CAAjB,CAAAnkB,WAAJ,CAGE,IAAKje,CAAW,CAAH,CAAG,CAAAnF,CAAA,CAASunC,CAAAvnC,OAAzB,CAAkDmF,CAAlD,CAA0DnF,CAA1D,CAAkEmF,CAAA,EAAlE,CACEoiC,CAAA,CAAiBpiC,CAAjB,CAAA,aAAA,CAAsC,CAAA,CAG1C0N,EAAA7F,MAAAyC,SAAA,EAXiC,CAenC,IAAKtK,CAAL,CAAa,CAAb,CAAgBA,CAAhB,CAAwBqtF,CAAxB,CAA0CrtF,CAAA,EAA1C,CAKE,GAJA7E,CAII0M,CAJGolB,CAAD,GAAgBsgE,CAAhB,CAAkCvtF,CAAlC,CAA0CutF,CAAA,CAAevtF,CAAf,CAI5C6H,CAHJ9L,CAGI8L,CAHIolB,CAAA,CAAW9xB,CAAX,CAGJ0M,CAFJ6F,CAEI7F,CAFI2lF,CAAA,CAAextF,CAAf,CAEJ6H,CAAA6F,CAAA7F,MAAJ,CAAiB,CAIfslF,CAAA,CAAWD,CAGX,GACEC,EAAA,CAAWA,CAAA1hF,YADb,OAES0hF,CAFT,EAEqBA,CAAA,aAFrB,CAIkBz/E,EAvLrBtQ,MAAA,CAAY,CAAZ,CAuLG,GAA6B+vF,CAA7B,EAEEn5E,CAAA64D,KAAA,CAAcxhE,EAAA,CAAcqC,CAAAtQ,MAAd,CAAd,CAA0C,IAA1C,CAAgD8vF,CAAhD,CAEFA,EAAA,CAA2Bx/E,CAvL9BtQ,MAAA,CAuL8BsQ,CAvLlBtQ,MAAAvC,OAAZ,CAAiC,CAAjC,CAwLGgxF,EAAA,CAAYn+E,CAAA7F,MAAZ,CAAyB7H,CAAzB,CAAgC8rF,CAAhC,CAAiD/vF,CAAjD,CAAwDgwF,CAAxD,CAAuE5wF,CAAvE,CAA4EkyF,CAA5E,CAhBe,CAAjB,IAmBErvD,EAAA,CAAY2vD,QAA2B,CAACvwF,CAAD,CAAQyK,CAAR,CAAe,CACpD6F,CAAA7F,MAAA,CAAcA,CAEd,KAAI0D,EAAUkhF,CAAAvvF,UAAA,CAA6B,CAAA,CAA7B,CACdE,EAAA,CAAMA,CAAAvC,OAAA,EAAN,CAAA,CAAwB0Q,CAExByI,EAAA44D,MAAA,CAAexvE,CAAf,CAAsB,IAAtB,CAA4B8vF,CAA5B,CACAA,EAAA,CAAe3hF,CAIfmC,EAAAtQ,MAAA,CAAcA,CACdgwF,EAAA,CAAa1/E,CAAAge,GAAb,CAAA,CAAyBhe,CACzBm+E,EAAA,CAAYn+E,CAAA7F,MAAZ,CAAyB7H,CAAzB,CAAgC8rF,CAAhC,CAAiD/vF,CAAjD,CAAwDgwF,CAAxD,CAAuE5wF,CAAvE,CAA4EkyF,CAA5E,CAboD,CAAtD,CAiBJL,EAAA,CAAeI,CA/HgD,CAAjE,CAbuE,CA9CxB,CAP9C,CAhCuF,CAAxE,CAptDxB,CAsoEI77E,GAAkB,CAAC,UAAD,CAAa,QAAQ,CAACyC,CAAD,CAAW,CACpD,MAAO,CACLma,SAAU,GADL;AAELkQ,aAAc,CAAA,CAFT,CAGLlT,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CACnCuI,CAAA7I,OAAA,CAAaM,CAAAgS,OAAb,CAA0Bs8E,QAA0B,CAAC7xF,CAAD,CAAQ,CAK1DiY,CAAA,CAASjY,CAAA,CAAQ,aAAR,CAAwB,UAAjC,CAAA,CAA6C6D,CAA7C,CApNYiuF,SAoNZ,CAAqE,CACnE3gB,YApNsB4gB,iBAmN6C,CAArE,CAL0D,CAA5D,CADmC,CAHhC,CAD6C,CAAhC,CAtoEtB,CAi2EIv9E,GAAkB,CAAC,UAAD,CAAa,QAAQ,CAACyD,CAAD,CAAW,CACpD,MAAO,CACLma,SAAU,GADL,CAELkQ,aAAc,CAAA,CAFT,CAGLlT,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CACnCuI,CAAA7I,OAAA,CAAaM,CAAAgR,OAAb,CAA0By9E,QAA0B,CAAChyF,CAAD,CAAQ,CAG1DiY,CAAA,CAASjY,CAAA,CAAQ,UAAR,CAAqB,aAA9B,CAAA,CAA6C6D,CAA7C,CA7aYiuF,SA6aZ,CAAoE,CAClE3gB,YA7asB4gB,iBA4a4C,CAApE,CAH0D,CAA5D,CADmC,CAHhC,CAD6C,CAAhC,CAj2EtB,CAo6EIr8E,GAAmBuoD,EAAA,CAAY,QAAQ,CAACnyD,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAChEuI,CAAAq8B,iBAAA,CAAuB5kC,CAAAkS,QAAvB,CAAqCw8E,QAA2B,CAACC,CAAD,CAAYC,CAAZ,CAAuB,CACjFA,CAAJ,EAAkBD,CAAlB,GAAgCC,CAAhC,EACElzF,CAAA,CAAQkzF,CAAR,CAAmB,QAAQ,CAACjrF,CAAD,CAAMijB,CAAN,CAAa,CAAEtmB,CAAAsoE,IAAA,CAAYhiD,CAAZ,CAAmB,EAAnB,CAAF,CAAxC,CAEE+nE,EAAJ,EAAeruF,CAAAsoE,IAAA,CAAY+lB,CAAZ,CAJsE,CAAvF,CADgE,CAA3C,CAp6EvB,CAsjFIt8E,GAAoB,CAAC,UAAD,CAAa,UAAb,CAAyB,QAAQ,CAACqC,CAAD;AAAWmsE,CAAX,CAAqB,CAC5E,MAAO,CACL7yD,QAAS,UADJ,CAILzjB,WAAY,CAAC,QAAD,CAAWskF,QAA2B,EAAG,CACpD,IAAAC,MAAA,CAAa,EADuC,CAAzC,CAJP,CAOLjjE,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+uF,CAAvB,CAA2C,CAAA,IAEnDC,EAAsB,EAF6B,CAGnDC,EAAmB,EAHgC,CAInDC,EAA0B,EAJyB,CAKnDC,EAAiB,EALkC,CAOnDC,EAAgBA,QAAQ,CAAC3uF,CAAD,CAAQC,CAAR,CAAe,CACvC,MAAO,SAAQ,CAAC8qC,CAAD,CAAW,CACP,CAAA,CAAjB,GAAIA,CAAJ,EAAwB/qC,CAAAG,OAAA,CAAaF,CAAb,CAAoB,CAApB,CADA,CADa,CAM3C6H,EAAA7I,OAAA,CAZgBM,CAAAoS,SAYhB,EAZiCpS,CAAAoK,GAYjC,CAAwBilF,QAA4B,CAAC5yF,CAAD,CAAQ,CAI1D,IAJ0D,IACtDH,CADsD,CACnDY,CAGP,CAAOgyF,CAAA3zF,OAAP,CAAA,CACEmZ,CAAAyW,OAAA,CAAgB+jE,CAAAzgC,IAAA,EAAhB,CAGGnyD,EAAA,CAAI,CAAT,KAAYY,CAAZ,CAAiBiyF,CAAA5zF,OAAjB,CAAwCe,CAAxC,CAA4CY,CAA5C,CAAgD,EAAEZ,CAAlD,CAAqD,CACnD,IAAI8sE,EAAWr9D,EAAA,CAAckjF,CAAA,CAAiB3yF,CAAjB,CAAAwB,MAAd,CACfqxF,EAAA,CAAe7yF,CAAf,CAAA0O,SAAA,EAEAqiC,EADa6hD,CAAA,CAAwB5yF,CAAxB,CACb+wC,CAD0C34B,CAAA84D,MAAA,CAAepE,CAAf,CAC1C/7B,MAAA,CAAY+hD,CAAA,CAAcF,CAAd,CAAuC5yF,CAAvC,CAAZ,CAJmD,CAOrD2yF,CAAA1zF,OAAA,CAA0B,CAC1B4zF,EAAA5zF,OAAA,CAAwB,CAExB,EAAKyzF,CAAL,CAA2BD,CAAAD,MAAA,CAAyB,GAAzB,CAA+BryF,CAA/B,CAA3B,EAAoEsyF,CAAAD,MAAA,CAAyB,GAAzB,CAApE,GACEpzF,CAAA,CAAQszF,CAAR,CAA6B,QAAQ,CAACM,CAAD,CAAqB,CACxDA,CAAA5/D,WAAA,CAA8B,QAAQ,CAAC6/D,CAAD,CAAcC,CAAd,CAA6B,CACjEL,CAAAluF,KAAA,CAAoBuuF,CAApB,CACA,KAAIC,EAASH,CAAAhvF,QACbivF,EAAA,CAAYA,CAAAh0F,OAAA,EAAZ,CAAA,CAAoCslF,CAAA7jD,gBAAA,CAAyB,kBAAzB,CAGpCiyD;CAAAhuF,KAAA,CAFYmN,CAAEtQ,MAAOyxF,CAATnhF,CAEZ,CACAsG,EAAA44D,MAAA,CAAeiiB,CAAf,CAA4BE,CAAAlxF,OAAA,EAA5B,CAA6CkxF,CAA7C,CAPiE,CAAnE,CADwD,CAA1D,CAnBwD,CAA5D,CAbuD,CAPpD,CADqE,CAAtD,CAtjFxB,CA+mFIl9E,GAAwBmoD,EAAA,CAAY,CACtChrC,WAAY,SAD0B,CAEtCd,SAAU,IAF4B,CAGtCZ,QAAS,WAH6B,CAItC+Q,aAAc,CAAA,CAJwB,CAKtClT,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBw1B,CAAjB,CAAwBimC,CAAxB,CAA8Br9B,CAA9B,CAA2C,CAEnDowD,CAAAA,CAAQh5D,CAAAxjB,aAAAlS,MAAA,CAAyB01B,CAAA45D,sBAAzB,CAAArzF,KAAA,EAAA2R,OAAA,CAEV,QAAQ,CAAC1N,CAAD,CAAUI,CAAV,CAAiBD,CAAjB,CAAwB,CAAE,MAAOA,EAAA,CAAMC,CAAN,CAAc,CAAd,CAAP,GAA4BJ,CAA9B,CAFtB,CAKZ5E,EAAA,CAAQozF,CAAR,CAAe,QAAQ,CAACa,CAAD,CAAW,CAChC5zB,CAAA+yB,MAAA,CAAW,GAAX,CAAiBa,CAAjB,CAAA,CAA8B5zB,CAAA+yB,MAAA,CAAW,GAAX,CAAiBa,CAAjB,CAA9B,EAA4D,EAC5D5zB,EAAA+yB,MAAA,CAAW,GAAX,CAAiBa,CAAjB,CAAA1uF,KAAA,CAAgC,CAAEyuB,WAAYgP,CAAd,CAA2Bp+B,QAASA,CAApC,CAAhC,CAFgC,CAAlC,CAPuD,CALnB,CAAZ,CA/mF5B,CAkoFImS,GAA2BioD,EAAA,CAAY,CACzChrC,WAAY,SAD6B,CAEzCd,SAAU,IAF+B,CAGzCZ,QAAS,WAHgC,CAIzC+Q,aAAc,CAAA,CAJ2B,CAKzClT,KAAMA,QAAQ,CAACtjB,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB+7D,CAAvB,CAA6Br9B,CAA7B,CAA0C,CACtDq9B,CAAA+yB,MAAA,CAAW,GAAX,CAAA,CAAmB/yB,CAAA+yB,MAAA,CAAW,GAAX,CAAnB,EAAsC,EACtC/yB,EAAA+yB,MAAA,CAAW,GAAX,CAAA7tF,KAAA,CAAqB,CAAEyuB,WAAYgP,CAAd;AAA2Bp+B,QAASA,CAApC,CAArB,CAFsD,CALf,CAAZ,CAloF/B,CA2yFIsvF,GAAqB50F,CAAA,CAAO,cAAP,CA3yFzB,CA4yFI6X,GAAwB,CAAC,UAAD,CAAa,QAAQ,CAACguE,CAAD,CAAW,CAC1D,MAAO,CACLhyD,SAAU,KADL,CAELrmB,QAASqnF,QAA4B,CAAC5gE,CAAD,CAAW,CAG9C,IAAI6gE,EAAiBjP,CAAA,CAAS5xD,CAAAsO,SAAA,EAAT,CACrBtO,EAAA3pB,MAAA,EAEA,OAAOyqF,SAA6B,CAACtxD,CAAD,CAAStP,CAAT,CAAmBC,CAAnB,CAA2B7kB,CAA3B,CAAuCm0B,CAAvC,CAAoD,CAoCtFsxD,QAASA,EAAkB,EAAG,CAG5BF,CAAA,CAAerxD,CAAf,CAAuB,QAAQ,CAAC3gC,CAAD,CAAQ,CACrCqxB,CAAA3pB,OAAA,CAAgB1H,CAAhB,CADqC,CAAvC,CAH4B,CAlC9B,GAAK4gC,CAAAA,CAAL,CACE,KAAMkxD,GAAA,CAAmB,QAAnB,CAINvqF,EAAA,CAAY8pB,CAAZ,CAJM,CAAN,CASEC,CAAAxc,aAAJ,GAA4Bwc,CAAA2D,MAAAngB,aAA5B,GACEwc,CAAAxc,aADF,CACwB,EADxB,CAGImkB,EAAAA,CAAW3H,CAAAxc,aAAXmkB,EAAkC3H,CAAA6gE,iBAGtCvxD,EAAA,CAOAwxD,QAAkC,CAACpyF,CAAD,CAAQ04B,CAAR,CAA0B,CACtD,IAAA,CAAA,IAAAj7B,CAAA,CAAAA,CAAAA,OAAA,CAkBwB,CAAA,CAAA,CACnBe,CAAAA,CAAI,CAAb,KAAS,IAAOY,EAnBI8O,CAmBCzQ,OAArB,CAAmCe,CAAnC,CAAuCY,CAAvC,CAA2CZ,CAAA,EAA3C,CAAgD,CAC9C,IAAIwD,EApBckM,CAoBP,CAAM1P,CAAN,CACX,IAAIwD,CAAA4F,SAAJ,GAAsBC,EAAtB,EAAwC7F,CAAAu2B,UAAAxa,KAAA,EAAxC,CAA+D,CAC7D,CAAA,CAAO,CAAA,CAAP,OAAA,CAD6D,CAFjB,CADpB,CAAA,CAAA,IAAA,EAAA,CAlBxB,CAAJ,CACEsT,CAAA3pB,OAAA,CAAgB1H,CAAhB,CADF,EAGEkyF,CAAA,EAGA,CAAAx5D,CAAAxrB,SAAA,EANF,CAD0D,CAP5D;AAAuC,IAAvC,CAA6C+rB,CAA7C,CAGIA,EAAJ,EAAiB,CAAA2H,CAAAlE,aAAA,CAAyBzD,CAAzB,CAAjB,EACEi5D,CAAA,EAtBoF,CAN1C,CAF3C,CADmD,CAAhC,CA5yF5B,CA+4FIvgF,GAAkB,CAAC,gBAAD,CAAmB,QAAQ,CAACmJ,CAAD,CAAiB,CAChE,MAAO,CACLiW,SAAU,GADL,CAELsH,SAAU,CAAA,CAFL,CAGL3tB,QAASA,QAAQ,CAAClI,CAAD,CAAUN,CAAV,CAAgB,CACb,kBAAlB,GAAIA,CAAAoC,KAAJ,EAIEwW,CAAA6T,IAAA,CAHkBzsB,CAAAosB,GAGlB,CAFW9rB,CAAA,CAAQ,CAAR,CAAAkgC,KAEX,CAL6B,CAH5B,CADyD,CAA5C,CA/4FtB,CAg6FI2vD,GAAwB,CAAE/yB,cAAe1+D,CAAjB,CAAuBq/D,QAASr/D,CAAhC,CAh6F5B,CAqjGI0xF,GACI,CAAC,UAAD,CAAa,QAAb,CAAoC,QAAQ,CAACjhE,CAAD,CAAWsP,CAAX,CAAmB,CA0MrE4xD,QAASA,EAAc,EAAG,CACpBC,CAAJ,GACAA,CACA,CADkB,CAAA,CAClB,CAAA7xD,CAAAiF,aAAA,CAAoB,QAAQ,EAAG,CAC7B4sD,CAAA,CAAkB,CAAA,CAClBjtF,EAAA8lF,YAAAprB,QAAA,EAF6B,CAA/B,CAFA,CADwB,CAU1BwyB,QAASA,EAAuB,CAACC,CAAD,CAAc,CACxCC,CAAJ,GAEAA,CAEA,CAFkB,CAAA,CAElB,CAAAhyD,CAAAiF,aAAA,CAAoB,QAAQ,EAAG,CACzBjF,CAAAqB,YAAJ,GAEA2wD,CAEA,CAFkB,CAAA,CAElB,CADAptF,CAAA8lF,YAAA/rB,cAAA,CAA+B/5D,CAAAymF,UAAA,EAA/B,CACA,CAAI0G,CAAJ,EAAiBntF,CAAA8lF,YAAAprB,QAAA,EAJjB,CAD6B,CAA/B,CAJA,CAD4C,CApNuB,IAEjE16D,EAAO,IAF0D,CAGjEqtF,EAAa,IAAIvrE,EAErB9hB,EAAAklF,eAAA;AAAsB,EAGtBllF,EAAA8lF,YAAA,CAAmBgH,EACnB9sF,EAAA8lE,SAAA,CAAgB,CAAA,CAShB9lE,EAAAkmF,cAAA,CAAqBjuF,CAAA,CAAOnB,CAAAyJ,SAAAkX,cAAA,CAA8B,QAA9B,CAAP,CASrBzX,EAAA+lF,eAAA,CAAsB,CAAA,CACtB/lF,EAAAgmF,YAAA,CAAmB7nF,IAAAA,EAEnB6B,EAAAstF,oBAAA,CAA2BC,QAAQ,CAACjtF,CAAD,CAAM,CACnCktF,CAAAA,CAAaxtF,CAAAomF,2BAAA,CAAgC9lF,CAAhC,CACjBN,EAAAkmF,cAAA5lF,IAAA,CAAuBktF,CAAvB,CACA1hE,EAAA+6C,QAAA,CAAiB7mE,CAAAkmF,cAAjB,CACA/jB,GAAA,CAAwBniE,CAAAkmF,cAAxB,CAA4C,CAAA,CAA5C,CACAp6D,EAAAxrB,IAAA,CAAaktF,CAAb,CALuC,CAQzCxtF,EAAAytF,oBAAA,CAA2BC,QAAQ,CAACptF,CAAD,CAAM,CACnCktF,CAAAA,CAAaxtF,CAAAomF,2BAAA,CAAgC9lF,CAAhC,CACjBN,EAAAkmF,cAAA5lF,IAAA,CAAuBktF,CAAvB,CACArrB,GAAA,CAAwBniE,CAAAkmF,cAAxB,CAA4C,CAAA,CAA5C,CACAp6D,EAAAxrB,IAAA,CAAaktF,CAAb,CAJuC,CAOzCxtF,EAAAomF,2BAAA,CAAkCuH,QAAQ,CAACrtF,CAAD,CAAM,CAC9C,MAAO,IAAP,CAAcge,EAAA,CAAQhe,CAAR,CAAd,CAA6B,IADiB,CAIhDN,EAAA+mF,oBAAA,CAA2B6G,QAAQ,EAAG,CAChC5tF,CAAAkmF,cAAAhrF,OAAA,EAAJ;AAAiC8E,CAAAkmF,cAAA58D,OAAA,EADG,CAItCtpB,EAAA6tF,kBAAA,CAAyBC,QAAQ,EAAG,CAC9B9tF,CAAAgmF,YAAJ,GACEl6D,CAAAxrB,IAAA,CAAa,EAAb,CACA,CAAA6hE,EAAA,CAAwBniE,CAAAgmF,YAAxB,CAA0C,CAAA,CAA1C,CAFF,CADkC,CAOpChmF,EAAAinF,oBAAA,CAA2B8G,QAAQ,EAAG,CAChC/tF,CAAA+lF,eAAJ,EACE5jB,EAAA,CAAwBniE,CAAAgmF,YAAxB,CAA0C,CAAA,CAA1C,CAFkC,CAMtC5qD,EAAAvD,IAAA,CAAW,UAAX,CAAuB,QAAQ,EAAG,CAEhC73B,CAAAstF,oBAAA,CAA2BjyF,CAFK,CAAlC,CAOA2E,EAAAymF,UAAA,CAAiBuH,QAAwB,EAAG,CAC1C,IAAI1tF,EAAMwrB,CAAAxrB,IAAA,EAAV,CAEI2tF,EAAU3tF,CAAA,GAAON,EAAAklF,eAAP,CAA6BllF,CAAAklF,eAAA,CAAoB5kF,CAApB,CAA7B,CAAwDA,CAEtE,OAAIN,EAAAkuF,UAAA,CAAeD,CAAf,CAAJ,CACSA,CADT,CAIO,IATmC,CAe5CjuF,EAAAsmF,WAAA,CAAkB6H,QAAyB,CAAC/0F,CAAD,CAAQ,CAGjD,IAAIg1F,EAA0BtiE,CAAA,CAAS,CAAT,CAAApH,QAAA,CAAoBoH,CAAA,CAAS,CAAT,CAAAg7D,cAApB,CAC1BsH,EAAJ,EAA6BjsB,EAAA,CAAwBlqE,CAAA,CAAOm2F,CAAP,CAAxB,CAAyD,CAAA,CAAzD,CAEzBpuF,EAAAkuF,UAAA,CAAe90F,CAAf,CAAJ,EACE4G,CAAA+mF,oBAAA,EAOA,CALIsH,CAKJ,CALgB/vE,EAAA,CAAQllB,CAAR,CAKhB,CAJA0yB,CAAAxrB,IAAA,CAAa+tF,CAAA,GAAaruF,EAAAklF,eAAb;AAAmCmJ,CAAnC,CAA+Cj1F,CAA5D,CAIA,CAAA+oE,EAAA,CAAwBlqE,CAAA,CADH6zB,CAAA,CAAS,CAAT,CAAApH,QAAAmiE,CAAoB/6D,CAAA,CAAS,CAAT,CAAAg7D,cAApBD,CACG,CAAxB,CAAgD,CAAA,CAAhD,CARF,EAUE7mF,CAAAgnF,2BAAA,CAAgC5tF,CAAhC,CAhB+C,CAsBnD4G,EAAAwnF,UAAA,CAAiB8G,QAAQ,CAACl1F,CAAD,CAAQ6D,CAAR,CAAiB,CAExC,GA72gCoB+3B,CA62gCpB,GAAI/3B,CAAA,CAAQ,CAAR,CAAAoF,SAAJ,CAAA,CAEA+F,EAAA,CAAwBhP,CAAxB,CAA+B,gBAA/B,CACc,GAAd,GAAIA,CAAJ,GACE4G,CAAA+lF,eACA,CADsB,CAAA,CACtB,CAAA/lF,CAAAgmF,YAAA,CAAmB/oF,CAFrB,CAIA,KAAIg0C,EAAQo8C,CAAAnnF,IAAA,CAAe9M,CAAf,CAAR63C,EAAiC,CACrCo8C,EAAA3uF,IAAA,CAAetF,CAAf,CAAsB63C,CAAtB,CAA8B,CAA9B,CAGA+7C,EAAA,EAXA,CAFwC,CAiB1ChtF,EAAAuuF,aAAA,CAAoBC,QAAQ,CAACp1F,CAAD,CAAQ,CAClC,IAAI63C,EAAQo8C,CAAAnnF,IAAA,CAAe9M,CAAf,CACR63C,EAAJ,GACgB,CAAd,GAAIA,CAAJ,EACEo8C,CAAArlB,OAAA,CAAkB5uE,CAAlB,CACA,CAAc,EAAd,GAAIA,CAAJ,GACE4G,CAAA+lF,eACA,CADsB,CAAA,CACtB,CAAA/lF,CAAAgmF,YAAA,CAAmB7nF,IAAAA,EAFrB,CAFF,EAOEkvF,CAAA3uF,IAAA,CAAetF,CAAf,CAAsB63C,CAAtB,CAA8B,CAA9B,CARJ,CAFkC,CAgBpCjxC,EAAAkuF,UAAA,CAAiBO,QAAQ,CAACr1F,CAAD,CAAQ,CAC/B,MAAO,CAAE,CAAAi0F,CAAAnnF,IAAA,CAAe9M,CAAf,CADsB,CAcjC4G,EAAA0uF,gBAAA,CAAuBC,QAAQ,EAAG,CAChC,MAAO3uF,EAAA+lF,eADyB,CAclC/lF,EAAA4uF,yBAAA,CAAgCC,QAAQ,EAAG,CAEzC,MAAO/iE,EAAA,CAAS,CAAT,CAAApH,QAAA,CAAoB,CAApB,CAAP;AAAkC1kB,CAAAkmF,cAAA,CAAmB,CAAnB,CAFO,CAe3ClmF,EAAAqnF,uBAAA,CAA8ByH,QAAQ,EAAG,CACvC,MAAO9uF,EAAA+lF,eAAP,EAA8Bj6D,CAAA,CAAS,CAAT,CAAApH,QAAA,CAAoBoH,CAAA,CAAS,CAAT,CAAAg7D,cAApB,CAA9B,GAAiF9mF,CAAAgmF,YAAA,CAAiB,CAAjB,CAD1C,CAIzChmF,EAAAgnF,2BAAA,CAAkC+H,QAAQ,CAAC31F,CAAD,CAAQ,CACnC,IAAb,EAAIA,CAAJ,EAAqB4G,CAAAgmF,YAArB,EACEhmF,CAAA+mF,oBAAA,EACA,CAAA/mF,CAAA6tF,kBAAA,EAFF,EAGW7tF,CAAAkmF,cAAAhrF,OAAA,EAAAhD,OAAJ,CACL8H,CAAAytF,oBAAA,CAAyBr0F,CAAzB,CADK,CAGL4G,CAAAstF,oBAAA,CAAyBl0F,CAAzB,CAP8C,CAWlD,KAAI6zF,EAAkB,CAAA,CAAtB,CAUIG,EAAkB,CAAA,CAgBtBptF,EAAAylF,eAAA,CAAsBuJ,QAAQ,CAAC7H,CAAD,CAAcO,CAAd,CAA6BuH,CAA7B,CAA0CC,CAA1C,CAA8DC,CAA9D,CAAiF,CAE7G,GAAIF,CAAAv/D,MAAA/e,QAAJ,CAA+B,CAAA,IAEzB0T,CAFyB,CAEjBgqE,CACZY,EAAAjuD,SAAA,CAAqB,OAArB,CAA8BouD,QAAoC,CAAChrE,CAAD,CAAS,CAEzE,IAAIirE,CAAJ,CACIC,EAAqB5H,CAAAhrF,KAAA,CAAmB,UAAnB,CAErBxF,EAAA,CAAUm3F,CAAV,CAAJ,GACEruF,CAAAuuF,aAAA,CAAkBlqE,CAAlB,CAEA,CADA,OAAOrkB,CAAAklF,eAAA,CAAoBmJ,CAApB,CACP;AAAAgB,CAAA,CAAU,CAAA,CAHZ,CAMAhB,EAAA,CAAY/vE,EAAA,CAAQ8F,CAAR,CACZC,EAAA,CAASD,CACTpkB,EAAAklF,eAAA,CAAoBmJ,CAApB,CAAA,CAAiCjqE,CACjCpkB,EAAAwnF,UAAA,CAAepjE,CAAf,CAAuBsjE,CAAvB,CAIAA,EAAA/qF,KAAA,CAAmB,OAAnB,CAA4B0xF,CAA5B,CAEIgB,EAAJ,EAAeC,CAAf,EACEpC,CAAA,EArBuE,CAA3E,CAH6B,CAA/B,IA4BWgC,EAAJ,CAELD,CAAAjuD,SAAA,CAAqB,OAArB,CAA8BouD,QAAoC,CAAChrE,CAAD,CAAS,CAEzEpkB,CAAAymF,UAAA,EAEA,KAAI4I,CAAJ,CACIC,EAAqB5H,CAAAhrF,KAAA,CAAmB,UAAnB,CAErBxF,EAAA,CAAUmtB,CAAV,CAAJ,GACErkB,CAAAuuF,aAAA,CAAkBlqE,CAAlB,CACA,CAAAgrE,CAAA,CAAU,CAAA,CAFZ,CAIAhrE,EAAA,CAASD,CACTpkB,EAAAwnF,UAAA,CAAepjE,CAAf,CAAuBsjE,CAAvB,CAEI2H,EAAJ,EAAeC,CAAf,EACEpC,CAAA,EAfuE,CAA3E,CAFK,CAoBIiC,CAAJ,CAELhI,CAAA9qF,OAAA,CAAmB8yF,CAAnB,CAAsCI,QAA+B,CAACnrE,CAAD,CAASC,CAAT,CAAiB,CACpF4qE,CAAApzD,KAAA,CAAiB,OAAjB,CAA0BzX,CAA1B,CACA,KAAIkrE,EAAqB5H,CAAAhrF,KAAA,CAAmB,UAAnB,CACrB2nB,EAAJ,GAAeD,CAAf,EACEpkB,CAAAuuF,aAAA,CAAkBlqE,CAAlB,CAEFrkB,EAAAwnF,UAAA,CAAepjE,CAAf,CAAuBsjE,CAAvB,CAEIrjE,EAAJ,EAAcirE,CAAd,EACEpC,CAAA,EATkF,CAAtF,CAFK,CAgBLltF,CAAAwnF,UAAA,CAAeyH,CAAA71F,MAAf,CAAkCsuF,CAAlC,CAIFuH,EAAAjuD,SAAA,CAAqB,UAArB,CAAiC,QAAQ,CAAC5c,CAAD,CAAS,CAKhD,GAAe,MAAf,GAAIA,CAAJ,EAAyBA,CAAzB,EAAmCsjE,CAAAhrF,KAAA,CAAmB,UAAnB,CAAnC,CACMsD,CAAA8lE,SAAJ,CACEonB,CAAA,CAAwB,CAAA,CAAxB,CADF,EAGEltF,CAAA8lF,YAAA/rB,cAAA,CAA+B,IAA/B,CACA,CAAA/5D,CAAA8lF,YAAAprB,QAAA,EAJF,CAN8C,CAAlD,CAeAgtB;CAAA3gF,GAAA,CAAiB,UAAjB,CAA6B,QAAQ,EAAG,CACtC,IAAIo5B,EAAengC,CAAAymF,UAAA,EAAnB,CACI+I,EAAcP,CAAA71F,MAElB4G,EAAAuuF,aAAA,CAAkBiB,CAAlB,CACAxC,EAAA,EAEA,EAAIhtF,CAAA8lE,SAAJ,EAAqB3lC,CAArB,EAA4E,EAA5E,GAAqCA,CAAA7iC,QAAA,CAAqBkyF,CAArB,CAArC,EACIrvD,CADJ,GACqBqvD,CADrB,GAKEtC,CAAA,CAAwB,CAAA,CAAxB,CAZoC,CAAxC,CArF6G,CAnO1C,CAA/D,CAtjGR,CAioHI5gF,GAAkBA,QAAQ,EAAG,CAE/B,MAAO,CACLkf,SAAU,GADL,CAELb,QAAS,CAAC,QAAD,CAAW,UAAX,CAFJ,CAGLzjB,WAAY6lF,EAHP,CAILxhE,SAAU,CAJL,CAKL/C,KAAM,CACJ6N,IAKJo5D,QAAsB,CAACvqF,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuBq8E,CAAvB,CAA8B,CAEhD,IAAI6M,EAAa7M,CAAA,CAAM,CAAN,CAAjB,CACI8M,EAAc9M,CAAA,CAAM,CAAN,CAIlB,IAAK8M,CAAL,CAsBA,IAhBAD,CAAAC,YAgBIhgB,CAhBqBggB,CAgBrBhgB,CAXJ7oE,CAAA8J,GAAA,CAAW,QAAX,CAAqB,QAAQ,EAAG,CAC9B8+E,CAAAkB,oBAAA,EACA7hF,EAAAE,OAAA,CAAa,QAAQ,EAAG,CACtB0gF,CAAA/rB,cAAA,CAA0B8rB,CAAAY,UAAA,EAA1B,CADsB,CAAxB,CAF8B,CAAhC,CAWI3gB,CAAAnpE,CAAAmpE,SAAJ,CAAmB,CACjB+f,CAAA/f,SAAA,CAAsB,CAAA,CAGtB+f,EAAAY,UAAA,CAAuBC,QAA0B,EAAG,CAClD,IAAItpF,EAAQ,EACZ/E,EAAA,CAAQ4E,CAAAL,KAAA,CAAa,QAAb,CAAR,CAAgC,QAAQ,CAAC2P,CAAD,CAAS,CAC3CA,CAAAw5D,SAAJ,EAAwB0d,CAAAl3E,CAAAk3E,SAAxB;CACMnjF,CACJ,CADUiM,CAAAnT,MACV,CAAAgE,CAAAQ,KAAA,CAAW0C,CAAA,GAAOulF,EAAAX,eAAP,CAAmCW,CAAAX,eAAA,CAA0B5kF,CAA1B,CAAnC,CAAoEA,CAA/E,CAFF,CAD+C,CAAjD,CAMA,OAAOlD,EAR2C,CAYpDyoF,EAAAS,WAAA,CAAwBC,QAA2B,CAACntF,CAAD,CAAQ,CACzDf,CAAA,CAAQ4E,CAAAL,KAAA,CAAa,QAAb,CAAR,CAAgC,QAAQ,CAAC2P,CAAD,CAAS,CAC/C,IAAImjF,EAAmB,CAAEt2F,CAAAA,CAArBs2F,GA7qkCuC,EA6qkCvCA,GA7qkCP3zF,KAAAkjB,UAAA3hB,QAAA3E,KAAA,CA6qkC+CS,CA7qkC/C,CA6qkCsDmT,CAAAnT,MA7qkCtD,CA6qkCOs2F,EA7qkCuC,EA6qkCvCA,GA7qkCP3zF,KAAAkjB,UAAA3hB,QAAA3E,KAAA,CA8qkC+CS,CA9qkC/C,CA8qkCsDysF,CAAAX,eAAArtF,CAA0B0U,CAAAnT,MAA1BvB,CA9qkCtD,CA6qkCO63F,CAWAA,EAAJ,GATwBnjF,CAAAw5D,SASxB,EACE5D,EAAA,CAAwBlqE,CAAA,CAAOsU,CAAP,CAAxB,CAAwCmjF,CAAxC,CAb6C,CAAjD,CADyD,CAhB1C,KAsCbC,CAtCa,CAsCHC,EAAct4F,GAC5B4N,EAAA7I,OAAA,CAAawzF,QAA4B,EAAG,CACtCD,CAAJ,GAAoB9J,CAAAjsB,WAApB,EAA+C16D,EAAA,CAAOwwF,CAAP,CAAiB7J,CAAAjsB,WAAjB,CAA/C,GACE81B,CACA,CADW3kF,EAAA,CAAY86E,CAAAjsB,WAAZ,CACX,CAAAisB,CAAAprB,QAAA,EAFF,CAIAk1B,EAAA,CAAc9J,CAAAjsB,WAL4B,CAA5C,CAUAisB,EAAAtsB,SAAA,CAAuBs2B,QAAQ,CAAC12F,CAAD,CAAQ,CACrC,MAAO,CAACA,CAAR,EAAkC,CAAlC,GAAiBA,CAAAlB,OADoB,CAjDtB,CAAnB,CAtBA,IACE2tF,EAAAJ,eAAA,CAA4BpqF,CARkB,CAN5C,CAEJi7B,KAyFFy5D,QAAuB,CAAC7qF,CAAD,CAAQjI,CAAR,CAAiBw1B,CAAjB,CAAwBumD,CAAxB,CAA+B,CAEpD,IAAI8M;AAAc9M,CAAA,CAAM,CAAN,CAClB,IAAK8M,CAAL,CAAA,CAEA,IAAID,EAAa7M,CAAA,CAAM,CAAN,CAOjB8M,EAAAprB,QAAA,CAAsBs1B,QAAQ,EAAG,CAC/BnK,CAAAS,WAAA,CAAsBR,CAAAjsB,WAAtB,CAD+B,CATjC,CAHoD,CA3FhD,CALD,CAFwB,CAjoHjC,CAyvHIrtD,GAAkB,CAAC,cAAD,CAAiB,QAAQ,CAACyG,CAAD,CAAe,CAC5D,MAAO,CACLuY,SAAU,GADL,CAELD,SAAU,GAFL,CAGLpmB,QAASA,QAAQ,CAAClI,CAAD,CAAUN,CAAV,CAAgB,CAAA,IAC3BuyF,CAD2B,CACPC,CAEpBj4F,EAAA,CAAUyF,CAAAgU,QAAV,CAAJ,GAEWzZ,CAAA,CAAUyF,CAAAvD,MAAV,CAAJ,CAEL81F,CAFK,CAEgBj8E,CAAA,CAAatW,CAAAvD,MAAb,CAAyB,CAAA,CAAzB,CAFhB,EAML+1F,CANK,CAMel8E,CAAA,CAAahW,CAAAkgC,KAAA,EAAb,CAA6B,CAAA,CAA7B,CANf,GAQHxgC,CAAAk/B,KAAA,CAAU,OAAV,CAAmB5+B,CAAAkgC,KAAA,EAAnB,CAVJ,CAcA,OAAO,SAAQ,CAACj4B,CAAD,CAAQjI,CAAR,CAAiBN,CAAjB,CAAuB,CAAA,IAIhCzB,EAAS+B,CAAA/B,OAAA,EAIb,EAHI2qF,CAGJ,CAHiB3qF,CAAAmK,KAAA,CAFI4qF,mBAEJ,CAGjB,EAFM/0F,CAAAA,OAAA,EAAAmK,KAAA,CAHe4qF,mBAGf,CAEN,GACEpK,CAAAJ,eAAA,CAA0BvgF,CAA1B,CAAiCjI,CAAjC,CAA0CN,CAA1C,CAAgDuyF,CAAhD,CAAoEC,CAApE,CATkC,CAjBP,CAH5B,CADqD,CAAxC,CAzvHtB,CA61HIh/E,GAAoB,CAAC,QAAD,CAAW,QAAQ,CAACoE,CAAD,CAAS,CAClD,MAAO,CACLiX,SAAU,GADL,CAELb,QAAS,UAFJ,CAGLnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB+7D,CAAnB,CAAyB,CACrC,GAAKA,CAAL,CAAA,CAEA,IAAIt/D;AAAQuD,CAAAjE,eAAA,CAAoB,UAApB,CAARU,EAA2Cmb,CAAA,CAAO5X,CAAAyT,WAAP,CAAA,CAAwBlL,CAAxB,CAE1CvI,EAAAyT,WAAL,GAGEzT,CAAAuT,SAHF,CAGkB,CAAA,CAHlB,CAMAwoD,EAAAsE,YAAA9sD,SAAA,CAA4BggF,QAAQ,CAACnuB,CAAD,CAAa/D,CAAb,CAAwB,CAC1D,MAAO,CAAC5kE,CAAR,EAAiB,CAACs/D,CAAAc,SAAA,CAAcwE,CAAd,CADwC,CAI5DrhE,EAAAqkC,SAAA,CAAc,UAAd,CAA0B,QAAQ,CAAC5c,CAAD,CAAS,CAErChrB,CAAJ,GAAcgrB,CAAd,GACEhrB,CACA,CADQgrB,CACR,CAAAs0C,CAAAwE,UAAA,EAFF,CAFyC,CAA3C,CAdA,CADqC,CAHlC,CAD2C,CAA5B,CA71HxB,CA48HIltD,GAAmB,CAAC,QAAD,CAAW,QAAQ,CAACuE,CAAD,CAAS,CACjD,MAAO,CACLiX,SAAU,GADL,CAELb,QAAS,UAFJ,CAGLxlB,QAASA,QAAQ,CAACgrF,CAAD,CAAOC,CAAP,CAAc,CAC7B,IAAI9tB,CAAJ,CACIzD,CAEAuxB,EAAAngF,UAAJ,GACEqyD,CAME,CANW8tB,CAAAngF,UAMX,CAAA4uD,CAAA,CADgC,GAAlC,GAAIuxB,CAAAngF,UAAAtQ,OAAA,CAAuB,CAAvB,CAAJ,EAAyC8iE,EAAAjmE,KAAA,CAAyB4zF,CAAAngF,UAAzB,CAAzC,CACY4uD,QAAQ,EAAG,CAAE,MAAOuxB,EAAAngF,UAAT,CADvB,CAGYsE,CAAA,CAAO67E,CAAAngF,UAAP,CATd,CAaA,OAAO,SAAQ,CAAC/K,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB+7D,CAAnB,CAAyB,CACtC,GAAKA,CAAL,CAAA,CAEA,IAAI23B,EAAU1zF,CAAAoT,QAEVpT,EAAAsT,UAAJ,CACEogF,CADF,CACYxxB,CAAA,CAAQ35D,CAAR,CADZ,CAGEo9D,CAHF,CAGe3lE,CAAAoT,QAGf;IAAI0c,EAAS41C,EAAA,CAAiBguB,CAAjB,CAA0B/tB,CAA1B,CAAsCv+C,CAAtC,CAEbpnB,EAAAqkC,SAAA,CAAc,SAAd,CAAyB,QAAQ,CAAC5c,CAAD,CAAS,CACxC,IAAIksE,EAAY7jE,CAEhBA,EAAA,CAAS41C,EAAA,CAAiBj+C,CAAjB,CAAyBk+C,CAAzB,CAAqCv+C,CAArC,CAET,EAAKusE,CAAL,EAAkBA,CAAA30F,SAAA,EAAlB,KAA6C8wB,CAA7C,EAAuDA,CAAA9wB,SAAA,EAAvD,GACE+8D,CAAAwE,UAAA,EANsC,CAA1C,CAUAxE,EAAAsE,YAAAjtD,QAAA,CAA2BwgF,QAAQ,CAACxuB,CAAD,CAAa/D,CAAb,CAAwB,CAEzD,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCpiE,CAAA,CAAY6wB,CAAZ,CAAnC,EAA0DA,CAAAjwB,KAAA,CAAYwhE,CAAZ,CAFD,CAtB3D,CADsC,CAjBX,CAH1B,CAD0C,CAA5B,CA58HvB,CAykIIvtD,GAAqB,CAAC,QAAD,CAAW,QAAQ,CAAC8D,CAAD,CAAS,CACnD,MAAO,CACLiX,SAAU,GADL,CAELb,QAAS,UAFJ,CAGLnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB+7D,CAAnB,CAAyB,CACrC,GAAKA,CAAL,CAAA,CAEA,IAAIloD,EAAY7T,CAAA6T,UAAZA,EAA8B+D,CAAA,CAAO5X,CAAA+T,YAAP,CAAA,CAAyBxL,CAAzB,CAAlC,CACIsrF,EAAkBjuB,EAAA,CAAY/xD,CAAZ,CAEtB7T,EAAAqkC,SAAA,CAAc,WAAd,CAA2B,QAAQ,CAAC5nC,CAAD,CAAQ,CACrCoX,CAAJ,GAAkBpX,CAAlB,GACEo3F,CAEA,CAFkBjuB,EAAA,CAAYnpE,CAAZ,CAElB,CADAoX,CACA,CADYpX,CACZ,CAAAs/D,CAAAwE,UAAA,EAHF,CADyC,CAA3C,CAOAxE,EAAAsE,YAAAxsD,UAAA,CAA6BigF,QAAQ,CAAC1uB,CAAD,CAAa/D,CAAb,CAAwB,CAC3D,MAA0B,EAA1B,CAAQwyB,CAAR,EAAgC93B,CAAAc,SAAA,CAAcwE,CAAd,CAAhC,EAA6DA,CAAA9lE,OAA7D,EAAiFs4F,CADtB,CAZ7D,CADqC,CAHlC,CAD4C,CAA5B,CAzkIzB,CAsqIIlgF;AAAqB,CAAC,QAAD,CAAW,QAAQ,CAACiE,CAAD,CAAS,CACnD,MAAO,CACLiX,SAAU,GADL,CAELb,QAAS,UAFJ,CAGLnC,KAAMA,QAAQ,CAACtjB,CAAD,CAAQ6e,CAAR,CAAapnB,CAAb,CAAmB+7D,CAAnB,CAAyB,CACrC,GAAKA,CAAL,CAAA,CAEA,IAAIroD,EAAY1T,CAAA0T,UAAZA,EAA8BkE,CAAA,CAAO5X,CAAA4T,YAAP,CAAA,CAAyBrL,CAAzB,CAAlC,CACIwrF,EAAkBnuB,EAAA,CAAYlyD,CAAZ,CAAlBqgF,EAA6C,EAEjD/zF,EAAAqkC,SAAA,CAAc,WAAd,CAA2B,QAAQ,CAAC5nC,CAAD,CAAQ,CACrCiX,CAAJ,GAAkBjX,CAAlB,GACEs3F,CAEA,CAFkBnuB,EAAA,CAAYnpE,CAAZ,CAElB,EAFyC,EAEzC,CADAiX,CACA,CADYjX,CACZ,CAAAs/D,CAAAwE,UAAA,EAHF,CADyC,CAA3C,CAQAxE,EAAAsE,YAAA3sD,UAAA,CAA6BsgF,QAAQ,CAAC5uB,CAAD,CAAa/D,CAAb,CAAwB,CAC3D,MAAOtF,EAAAc,SAAA,CAAcwE,CAAd,CAAP,EAAmCA,CAAA9lE,OAAnC,EAAuDw4F,CADI,CAb7D,CADqC,CAHlC,CAD4C,CAA5B,CA+CrB55F,EAAA0O,QAAA7B,UAAJ,CAEM7M,CAAAuN,QAFN,EAGIA,OAAA6yC,IAAA,CAAY,kDAAZ,CAHJ,EAUAzwC,EAAA,EAmJE,CAjJF0E,EAAA,CAAmB3F,EAAnB,CAiJE,CA/IFA,EAAA3B,OAAA,CAAe,UAAf,CAA2B,EAA3B,CAA+B,CAAC,UAAD,CAAa,QAAQ,CAACe,CAAD,CAAW,CAE/DgsF,QAASA,EAAW,CAACroE,CAAD,CAAI,CACtBA,CAAA,EAAQ,EACR,KAAItvB,EAAIsvB,CAAAjrB,QAAA,CAAU,GAAV,CACR,OAAc,EAAP;AAACrE,CAAD,CAAY,CAAZ,CAAgBsvB,CAAArwB,OAAhB,CAA2Be,CAA3B,CAA+B,CAHhB,CAkBxB2L,CAAAxL,MAAA,CAAe,SAAf,CAA0B,CACxB,iBAAoB,CAClB,MAAS,CACP,IADO,CAEP,IAFO,CADS,CAKlB,IAAO,0DAAA,MAAA,CAAA,GAAA,CALW,CAclB,SAAY,CACV,eADU,CAEV,aAFU,CAdM,CAkBlB,KAAQ,CACN,IADM,CAEN,IAFM,CAlBU,CAsBlB,eAAkB,CAtBA,CAuBlB,MAAS,uFAAA,MAAA,CAAA,GAAA,CAvBS,CAqClB,SAAY,6BAAA,MAAA,CAAA,GAAA,CArCM,CA8ClB,WAAc,iDAAA,MAAA,CAAA,GAAA,CA9CI,CA4DlB,gBAAmB,uFAAA,MAAA,CAAA,GAAA,CA5DD;AA0ElB,aAAgB,CACd,CADc,CAEd,CAFc,CA1EE,CA8ElB,SAAY,iBA9EM,CA+ElB,SAAY,WA/EM,CAgFlB,OAAU,oBAhFQ,CAiFlB,WAAc,UAjFI,CAkFlB,WAAc,WAlFI,CAmFlB,QAAS,eAnFS,CAoFlB,UAAa,QApFK,CAqFlB,UAAa,QArFK,CADI,CAwFxB,eAAkB,CAChB,aAAgB,GADA,CAEhB,YAAe,GAFC,CAGhB,UAAa,GAHG,CAIhB,SAAY,CACV,CACE,MAAS,CADX,CAEE,OAAU,CAFZ,CAGE,QAAW,CAHb,CAIE,QAAW,CAJb,CAKE,OAAU,CALZ,CAME,OAAU,GANZ,CAOE,OAAU,EAPZ,CAQE,OAAU,EARZ,CASE,OAAU,EATZ,CADU,CAYV,CACE,MAAS,CADX,CAEE,OAAU,CAFZ,CAGE,QAAW,CAHb,CAIE,QAAW,CAJb,CAKE,OAAU,CALZ,CAME,OAAU,SANZ,CAOE,OAAU,EAPZ,CAQE,OAAU,QARZ,CASE,OAAU,EATZ,CAZU,CAJI,CAxFM,CAqHxB,GAAM,OArHkB,CAsHxB,SAAY,OAtHY,CAuHxB,UAAawvF,QAAQ,CAACrgE,CAAD;AAAIsoE,CAAJ,CAAmB,CAAG,IAAI53F,EAAIsvB,CAAJtvB,CAAQ,CAAZ,CAlIvCk1B,EAkIyE0iE,CAhIzE1yF,KAAAA,EAAJ,GAAkBgwB,CAAlB,GACEA,CADF,CACMe,IAAAyiC,IAAA,CAASi/B,CAAA,CA+H2DroE,CA/H3D,CAAT,CAAyB,CAAzB,CADN,CAIW2G,KAAAyvC,IAAA,CAAS,EAAT,CAAaxwC,CAAb,CA4HmF,OAAS,EAAT,EAAIl1B,CAAJ,EAAsB,CAAtB,EA1HnFk1B,CA0HmF,CA1ItD2iE,KA0IsD,CA1IFC,OA0IpD,CAvHhB,CAA1B,CApB+D,CAAhC,CAA/B,CA+IE,CAAA94F,CAAA,CAAO,QAAQ,EAAG,CAChByL,EAAA,CAAY5M,CAAAyJ,SAAZ,CAA6BoD,EAA7B,CADgB,CAAlB,CA7JF,CA/knCkB,CAAjB,CAAD,CAgvnCG7M,MAhvnCH,CAkvnCCgsE,EAAAhsE,MAAA0O,QAAAwrF,MAAA,EAAAluB,cAAD,EAAyChsE,MAAA0O,QAAAvI,QAAA,CAAuBsD,QAAA0wF,KAAvB,CAAApqB,QAAA,CAA8C/vE,MAAA0O,QAAAvI,QAAA,CAAuB,SAAvB,CAAAkgC,KAAA,CAAuC,iPAAvC,CAA9C;",
+"sources":["angular.js"],
+"names":["window","errorHandlingConfig","config","isObject","isDefined","objectMaxDepth","minErrConfig","isValidObjectMaxDepth","NaN","urlErrorParamsEnabled","isBoolean","maxDepth","isNumber","minErr","isArrayLike","obj","isWindow","isArray","isString","jqLite","length","Object","item","forEach","iterator","context","key","isFunction","hasOwnProperty","call","isPrimitive","isBlankObject","forEachSorted","keys","sort","i","reverseParams","iteratorFn","value","nextUid","uid","baseExtend","dst","objs","deep","h","$$hashKey","ii","j","jj","src","isDate","Date","valueOf","isRegExp","RegExp","nodeName","cloneNode","isElement","clone","extend","slice","arguments","merge","toInt","str","parseInt","inherit","parent","extra","create","noop","identity","$","valueFn","valueRef","hasCustomToString","toString","isUndefined","getPrototypeOf","arr","Array","isError","tag","Error","isScope","$evalAsync","$watch","isTypedArray","TYPED_ARRAY_REGEXP","test","node","prop","attr","find","makeMap","items","split","nodeName_","element","lowercase","arrayRemove","array","index","indexOf","splice","copy","source","destination","copyRecurse","push","copyElement","stackSource","stackDest","ngMinErr","needsRecurse","copyType","undefined","constructor","buffer","byteOffset","copied","ArrayBuffer","byteLength","set","Uint8Array","re","match","lastIndex","type","simpleCompare","a","b","equals","o1","o2","t1","t2","getTime","keySet","createMap","charAt","concat","array1","array2","bind","self","fn","curryArgs","startIndex","apply","toJsonReplacer","val","document","toJson","pretty","JSON","stringify","fromJson","json","parse","timezoneToOffset","timezone","fallback","replace","ALL_COLONS","requestedTimezoneOffset","isNumberNaN","addDateMinutes","date","minutes","setMinutes","getMinutes","convertTimezoneToLocal","reverse","dateTimezoneOffset","getTimezoneOffset","timezoneOffset","startingTag","empty","elemHtml","append","html","nodeType","NODE_TYPE_TEXT","e","tryDecodeURIComponent","decodeURIComponent","parseKeyValue","keyValue","splitPoint","substring","toKeyValue","parts","arrayValue","encodeUriQuery","join","encodeUriSegment","pctEncodeSpaces","encodeURIComponent","getNgAttribute","ngAttr","ngAttrPrefixes","getAttribute","angularInit","bootstrap","appElement","module","prefix","name","hasAttribute","candidate","querySelector","isAutoBootstrapAllowed","strictDi","console","error","modules","defaultConfig","doBootstrap","injector","unshift","$provide","debugInfoEnabled","$compileProvider","createInjector","invoke","bootstrapApply","scope","compile","$apply","data","NG_ENABLE_DEBUG_INFO","NG_DEFER_BOOTSTRAP","angular","resumeBootstrap","angular.resumeBootstrap","extraModules","resumeDeferredBootstrap","reloadWithDebugInfo","location","reload","getTestability","rootElement","get","snake_case","separator","SNAKE_CASE_REGEXP","letter","pos","toLowerCase","bindJQuery","originalCleanData","bindJQueryFired","jqName","jq","jQuery","on","JQLitePrototype","isolateScope","controller","inheritedData","JQLite","cleanData","jqLite.cleanData","elems","events","elem","_data","$destroy","triggerHandler","UNSAFE_restoreLegacyJqLiteXHTMLReplacement","legacyXHTMLReplacement","assertArg","arg","reason","assertArgFn","acceptArrayAnnotation","assertNotHasOwnProperty","getter","path","bindFnToScope","lastInstance","len","getBlockNodes","nodes","endNode","blockNodes","nextSibling","setupModuleLoader","ensure","factory","$injectorMinErr","$$minErr","requires","configFn","info","invokeLater","provider","method","insertMethod","queue","invokeQueue","moduleInstance","invokeLaterAndSetModuleName","recipeName","factoryFunction","$$moduleName","configBlocks","runBlocks","_invokeQueue","_configBlocks","_runBlocks","service","constant","decorator","animation","filter","directive","component","run","block","shallowCopy","serializeObject","seen","publishExternalAPI","version","$$counter","csp","uppercase","angularModule","ngModule","$$sanitizeUri","$$SanitizeUriProvider","$CompileProvider","htmlAnchorDirective","input","inputDirective","textarea","form","formDirective","script","scriptDirective","select","selectDirective","option","optionDirective","ngBind","ngBindDirective","ngBindHtml","ngBindHtmlDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngIf","ngIfDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRef","ngRefDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","pattern","patternDirective","ngPattern","required","requiredDirective","ngRequired","minlength","minlengthDirective","ngMinlength","maxlength","maxlengthDirective","ngMaxlength","ngValue","ngValueDirective","ngModelOptions","ngModelOptionsDirective","ngIncludeFillContentDirective","hiddenInputBrowserCacheDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$animate","$AnimateProvider","$animateCss","$CoreAnimateCssProvider","$$animateJs","$$CoreAnimateJsProvider","$$animateQueue","$$CoreAnimateQueueProvider","$$AnimateRunner","$$AnimateRunnerFactoryProvider","$$animateAsyncRun","$$AnimateAsyncRunFactoryProvider","$browser","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$controller","$ControllerProvider","$document","$DocumentProvider","$$isDocumentHidden","$$IsDocumentHiddenProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$$forceReflow","$$ForceReflowProvider","$interpolate","$InterpolateProvider","$interval","$IntervalProvider","$$intervalFactory","$$IntervalFactoryProvider","$http","$HttpProvider","$httpParamSerializer","$HttpParamSerializerProvider","$httpParamSerializerJQLike","$HttpParamSerializerJQLikeProvider","$httpBackend","$HttpBackendProvider","$xhrFactory","$xhrFactoryProvider","$jsonpCallbacks","$jsonpCallbacksProvider","$location","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$rootScope","$RootScopeProvider","$q","$QProvider","$$q","$$QProvider","$sce","$SceProvider","$sceDelegate","$SceDelegateProvider","$sniffer","$SnifferProvider","$$taskTrackerFactory","$$TaskTrackerFactoryProvider","$templateCache","$TemplateCacheProvider","$templateRequest","$TemplateRequestProvider","$$testability","$$TestabilityProvider","$timeout","$TimeoutProvider","$window","$WindowProvider","$$rAF","$$RAFProvider","$$jqLite","$$jqLiteProvider","$$Map","$$MapProvider","$$cookieReader","$$CookieReaderProvider","angularVersion","fnCamelCaseReplace","all","toUpperCase","kebabToCamel","DASH_LOWERCASE_REGEXP","jqLiteAcceptsData","NODE_TYPE_ELEMENT","NODE_TYPE_DOCUMENT","jqLiteBuildFragment","tmp","finalHtml","fragment","createDocumentFragment","HTML_REGEXP","appendChild","createElement","TAG_NAME_REGEXP","exec","XHTML_TAG_REGEXP","msie","wrap","wrapMapIE9","_default","innerHTML","firstChild","wrapMap","childNodes","textContent","createTextNode","argIsString","trim","jqLiteMinErr","parsed","SINGLE_TAG_REGEXP","jqLiteAddNodes","jqLiteReady","jqLiteClone","jqLiteDealoc","onlyDescendants","querySelectorAll","isEmptyObject","removeIfEmptyData","expandoId","ng339","expandoStore","jqCache","jqLiteOff","unsupported","jqLiteExpandoStore","handle","removeHandler","listenerFns","removeEventListener","MOUSE_EVENT_MAP","jqLiteRemoveData","createIfNecessary","jqId","jqLiteData","isSimpleSetter","isSimpleGetter","massGetter","jqLiteHasClass","selector","jqLiteRemoveClass","cssClasses","setAttribute","existingClasses","newClasses","cssClass","jqLiteAddClass","root","elements","jqLiteController","jqLiteInheritedData","documentElement","names","parentNode","NODE_TYPE_DOCUMENT_FRAGMENT","host","jqLiteEmpty","removeChild","jqLiteRemove","keepData","jqLiteDocumentLoaded","action","win","readyState","setTimeout","trigger","addEventListener","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","createEventHandler","eventHandler","event","isDefaultPrevented","event.isDefaultPrevented","defaultPrevented","eventFns","eventFnsLength","immediatePropagationStopped","originalStopImmediatePropagation","stopImmediatePropagation","event.stopImmediatePropagation","stopPropagation","isImmediatePropagationStopped","event.isImmediatePropagationStopped","handlerWrapper","specialHandlerWrapper","defaultHandlerWrapper","handler","specialMouseHandlerWrapper","target","related","relatedTarget","jqLiteContains","$get","this.$get","hasClass","classes","addClass","removeClass","hashKey","nextUidFn","objType","NgMapShim","_keys","_values","_lastKey","_lastIndex","extractArgs","fnText","Function","prototype","STRIP_COMMENTS","ARROW_ARG","FN_ARGS","anonFn","args","modulesToLoad","supportObject","delegate","provider_","providerInjector","instantiate","providerCache","providerSuffix","enforceReturnValue","enforcedReturnValue","result","instanceInjector","factoryFn","enforce","loadModules","moduleFn","runInvokeQueue","invokeArgs","loadedModules","message","stack","createInternalInjector","cache","getService","serviceName","caller","INSTANTIATING","err","shift","injectionArgs","locals","$inject","$$annotate","func","$$ngIsClass","Type","ctor","annotate","has","NgMap","$injector","instanceCache","decorFn","origProvider","orig$get","origProvider.$get","origInstance","$delegate","protoInstanceInjector","loadNewModules","instanceInjector.loadNewModules","mods","autoScrollingEnabled","disableAutoScrolling","this.disableAutoScrolling","getFirstAnchor","list","some","scrollTo","scrollIntoView","offset","scroll","yOffset","getComputedStyle","style","position","getBoundingClientRect","bottom","elemTop","top","scrollBy","hash","elm","getElementById","getElementsByName","autoScrollWatch","autoScrollWatchAction","newVal","oldVal","mergeClasses","splitClasses","klass","prepareAnimateOptions","options","Browser","cacheStateAndFireUrlChange","pendingLocation","fireStateOrUrlChange","cacheState","cachedState","getCurrentState","lastCachedState","lastHistoryState","prevLastHistoryState","lastBrowserUrl","url","urlChangeListeners","listener","history","clearTimeout","pendingDeferIds","taskTracker","isMock","$$completeOutstandingRequest","completeTask","$$incOutstandingRequestCount","incTaskCount","notifyWhenNoOutstandingRequests","notifyWhenNoPendingTasks","href","baseElement","state","self.url","sameState","urlResolve","sameBase","stripHash","substr","self.state","urlChangeInit","onUrlChange","self.onUrlChange","callback","$$applicationDestroyed","self.$$applicationDestroyed","off","$$checkUrlChange","baseHref","self.baseHref","defer","self.defer","delay","taskType","timeoutId","DEFAULT_TASK_TYPE","cancel","self.defer.cancel","deferId","cacheFactory","cacheId","refresh","entry","freshEnd","staleEnd","n","link","p","nextEntry","prevEntry","caches","size","stats","id","capacity","Number","MAX_VALUE","lruHash","put","lruEntry","remove","removeAll","destroy","cacheFactory.info","cacheFactory.get","$$sanitizeUriProvider","parseIsolateBindings","directiveName","isController","LOCAL_REGEXP","bindings","definition","scopeName","bindingCache","$compileMinErr","mode","collection","optional","attrName","assertValidDirectiveName","getDirectiveRequire","require","REQUIRE_PREFIX_REGEXP","hasDirectives","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","ALL_OR_NOTHING_ATTRS","EVENT_HANDLER_ATTR_REGEXP","this.directive","registerDirective","directiveFactory","Suffix","directives","priority","restrict","this.component","registerComponent","makeInjectable","tElement","tAttrs","$element","$attrs","template","templateUrl","ddo","controllerAs","identifierForController","transclude","bindToController","aHrefSanitizationTrustedUrlList","this.aHrefSanitizationTrustedUrlList","regexp","defineProperty","imgSrcSanitizationTrustedUrlList","this.imgSrcSanitizationTrustedUrlList","this.debugInfoEnabled","enabled","strictComponentBindingsEnabled","this.strictComponentBindingsEnabled","TTL","onChangesTtl","this.onChangesTtl","commentDirectivesEnabledConfig","commentDirectivesEnabled","this.commentDirectivesEnabled","cssClassDirectivesEnabledConfig","cssClassDirectivesEnabled","this.cssClassDirectivesEnabled","PROP_CONTEXTS","addPropertySecurityContext","this.addPropertySecurityContext","elementName","propertyName","ctx","registerNativePropertyContexts","registerContext","values","v","SCE_CONTEXTS","HTML","CSS","URL","MEDIA_URL","RESOURCE_URL","flushOnChangesQueue","onChangesQueue","sanitizeSrcset","invokeType","trimmedSrcset","srcPattern","rawUris","nbrUrisWith2parts","Math","floor","innerIdx","getTrustedMediaUrl","lastTuple","Attributes","attributesToCopy","l","$attr","$$element","setSpecialAttr","specialAttrHolder","attributes","attribute","removeNamedItem","setNamedItem","safeAddClass","className","$compileNodes","transcludeFn","maxPriority","ignoreDirective","previousCompileContext","compositeLinkFn","compileNodes","$$addScopeClass","namespace","publicLinkFn","cloneConnectFn","needsNewScope","$parent","$new","parentBoundTranscludeFn","transcludeControllers","futureParentElement","$$boundTransclude","$linkNode","wrapTemplate","controllerName","instance","$$addScopeInfo","nodeList","$rootElement","childLinkFn","childScope","childBoundTranscludeFn","stableNodeList","nodeLinkFnFound","linkFns","idx","nodeLinkFn","transcludeOnThisElement","createBoundTranscludeFn","templateOnThisElement","notLiveList","attrs","linkFnFound","mergeConsecutiveTextNodes","collectDirectives","applyDirectivesToNode","terminal","sibling","nodeValue","previousBoundTranscludeFn","boundTranscludeFn","transcludedScope","cloneFn","controllers","containingScope","$$transcluded","boundSlots","$$slots","slotName","attrsMap","addDirective","directiveNormalize","nName","ngPrefixMatch","nAttrs","attrStartName","attrEndName","isNgAttr","isNgProp","isNgEvent","multiElementMatch","NG_PREFIX_BINDING","PREFIX_REGEXP","MULTI_ELEMENT_DIR_RE","directiveIsMultiElement","addPropertyDirective","createEventDirective","addAttrInterpolateDirective","animVal","addTextInterpolateDirective","NODE_TYPE_COMMENT","collectCommentDirectives","byPriority","groupScan","attrStart","attrEnd","depth","groupElementsLinkFnWrapper","linkFn","groupedElementsLink","compilationGenerator","eager","compiled","lazyCompilation","compileNode","templateAttrs","jqCollection","originalReplaceDirective","preLinkFns","postLinkFns","addLinkFns","pre","post","newIsolateScopeDirective","$$isolateScope","cloneAndAnnotateFn","linkNode","controllersBoundTransclude","cloneAttachFn","hasElementTranscludeDirective","elementControllers","slotTranscludeFn","scopeToChild","controllerScope","newScopeDirective","isSlotFilled","transcludeFn.isSlotFilled","controllerDirectives","setupControllers","templateDirective","$$originalDirective","$$isolateBindings","scopeBindingInfo","initializeDirectiveBindings","removeWatches","$on","controllerDirective","$$bindings","bindingInfo","getControllers","controllerInstance","$onChanges","initialChanges","$onInit","$doCheck","$onDestroy","callOnDestroyHook","invokeLinkFn","$postLink","terminalPriority","nonTlbTranscludeDirective","hasTranscludeDirective","hasTemplate","$compileNode","$template","childTranscludeFn","didScanForMultipleTransclusion","mightHaveMultipleTransclusionError","directiveValue","$$start","$$end","assertNoDuplicate","$$tlb","scanningIndex","candidateDirective","$$createComment","replaceWith","replaceDirective","slots","slotMap","filledSlots","elementSelector","contents","filled","slotCompileNodes","$$newScope","denormalizeTemplate","removeComments","templateNamespace","newTemplateAttrs","templateDirectives","unprocessedDirectives","markDirectiveScope","mergeTemplateAttributes","compileTemplateUrl","max","inheritType","dataName","property","controllerKey","$scope","$transclude","newScope","tDirectives","startAttrName","endAttrName","multiElement","srcAttr","dstAttr","$set","linkQueue","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","then","content","tempTemplateAttrs","beforeTemplateLinkNode","linkRootElement","$$destroyed","oldClasses","catch","delayedNodeLinkFn","ignoreChildLinkFn","diff","what","previousDirective","wrapModuleNameIfDefined","moduleName","text","interpolateFn","textInterpolateCompileFn","templateNode","templateNodeParent","hasCompileParent","$$addBindingClass","textInterpolateLinkFn","$$addBindingInfo","expressions","interpolateFnWatchAction","wrapper","getTrustedAttrContext","attrNormalizedName","getTrustedPropContext","propNormalizedName","sanitizeSrcsetPropertyValue","propName","trustedContext","sanitizer","getTrusted","ngPropCompileFn","_","ngPropGetter","ngPropWatch","sceValueOf","ngPropPreLinkFn","applyPropValue","propValue","allOrNothing","mustHaveExpression","attrInterpolatePreLinkFn","$$observers","newValue","$$inter","$$scope","oldValue","$updateClass","elementsToRemove","newNode","firstElementToRemove","removeCount","j2","replaceChild","hasData","annotation","strictBindingsCheck","recordChanges","currentValue","previousValue","$$postDigest","changes","triggerOnChangesHook","SimpleChange","removeWatchCollection","initializeBinding","lastValue","parentGet","parentSet","compare","removeWatch","$observe","_UNINITIALIZED_VALUE","literal","assign","parentValueWatch","parentValue","$stateful","$watchCollection","isLiteral","initialValue","parentValueWatchAction","SIMPLE_ATTR_NAME","$normalize","$addClass","classVal","$removeClass","toAdd","tokenDifference","toRemove","writeAttr","booleanKey","aliasedKey","ALIASED_ATTR","observer","removeAttr","listeners","startSymbol","endSymbol","binding","isolated","noTemplate","compile.$$createComment","comment","createComment","previous","current","SPECIAL_CHARS_REGEXP","str1","str2","tokens1","tokens2","token","jqNodes","ident","CNTRL_REG","this.has","register","this.register","addIdentifier","identifier","expression","later","$controllerMinErr","controllerPrototype","$controllerInit","changeListener","hidden","doc","exception","cause","serializeValue","toISOString","ngParamSerializer","params","jQueryLikeParamSerializer","serialize","toSerialize","topLevel","defaultHttpResponseTransform","headers","tempData","JSON_PROTECTION_PREFIX","contentType","hasJsonContentType","APPLICATION_JSON","jsonStart","JSON_START","JSON_ENDS","$httpMinErr","parseHeaders","line","headerVal","headerKey","headersGetter","headersObj","transformData","status","fns","defaults","transformResponse","transformRequest","d","common","CONTENT_TYPE_APPLICATION_JSON","patch","xsrfCookieName","xsrfHeaderName","paramSerializer","jsonpCallbackParam","useApplyAsync","this.useApplyAsync","interceptorFactories","interceptors","xsrfTrustedOrigins","origins","requestConfig","chainInterceptors","promise","thenFn","rejectFn","executeHeaderFns","headerContent","processedHeaders","headerFn","header","response","resp","reject","mergeHeaders","defHeaders","reqHeaders","defHeaderName","lowercaseDefHeaderName","reqHeaderName","requestInterceptors","responseInterceptors","resolve","reversedInterceptors","interceptor","request","requestError","responseError","serverRequest","reqData","withCredentials","sendReq","finally","completeOutstandingRequest","createApplyHandlers","eventHandlers","applyHandlers","callEventHandler","$applyAsync","$$phase","done","headersString","statusText","xhrStatus","resolveHttpPromise","resolvePromise","deferred","resolvePromiseWithResult","removePendingReq","pendingRequests","cachedResp","isJsonp","getTrustedResourceUrl","buildUrl","sanitizeJsonpCallbackParam","defaultCache","xsrfValue","urlIsAllowedOrigin","timeout","responseType","uploadEventHandlers","serializedParams","cbKey","interceptorFactory","urlIsAllowedOriginFactory","createShortMethods","createShortMethodsWithData","createXhr","XMLHttpRequest","createHttpBackend","$browserDefer","callbacks","rawDocument","jsonpReq","callbackPath","async","body","wasCalled","timeoutRequest","abortedByTimeout","jsonpDone","xhr","abort","completeRequest","createCallback","getResponse","removeCallback","open","setRequestHeader","onload","xhr.onload","responseText","protocol","getAllResponseHeaders","onerror","ontimeout","requestTimeout","onabort","requestAborted","upload","send","$$timeoutId","this.startSymbol","this.endSymbol","escape","ch","unescapeText","escapedStartRegexp","escapedEndRegexp","constantWatchDelegate","objectEquality","constantInterp","unwatch","constantInterpolateWatch","parseStringifyInterceptor","contextAllowsConcatenation","$interpolateMinErr","interr","unescapedText","exp","$$watchDelegate","endIndex","parseFns","textLength","expressionPositions","singleExpression","startSymbolLength","endSymbolLength","map","compute","throwNoconcat","interpolationFn","$watchGroup","interpolateFnWatcher","oldValues","currValue","$interpolate.startSymbol","$interpolate.endSymbol","intervals","clearIntervalFn","clearInterval","interval","setIntervalFn","tick","setInterval","interval.cancel","$intervalMinErr","$$intervalId","q","$$state","pur","intervalFactory","intervalFn","count","invokeApply","hasParams","iteration","skipApply","notify","parseAbsoluteUrl","absoluteUrl","locationObj","parsedUrl","$$protocol","$$host","hostname","$$port","port","DEFAULT_PORTS","parseAppUrl","html5Mode","DOUBLE_SLASH_REGEX","$locationMinErr","prefixed","segments","pathname","$$path","$$search","search","$$hash","startsWith","stripBaseUrl","base","LocationHtml5Url","appBase","appBaseNoFile","basePrefix","$$html5","$$parse","this.$$parse","pathUrl","$$compose","$$normalizeUrl","this.$$normalizeUrl","$$parseLinkUrl","this.$$parseLinkUrl","relHref","appUrl","prevAppUrl","rewrittenUrl","LocationHashbangUrl","hashPrefix","withoutBaseUrl","withoutHashUrl","windowsFilePathExp","firstPathSegmentMatch","LocationHashbangInHtml5Url","locationGetter","locationGetterSetter","preprocess","requireBase","rewriteLinks","this.hashPrefix","this.html5Mode","urlsEqual","setBrowserUrlWithFallback","oldUrl","oldState","afterLocationChange","$broadcast","absUrl","LocationMode","initialUrl","lastIndexOf","IGNORE_URI_REGEXP","ctrlKey","metaKey","shiftKey","which","button","absHref","preventDefault","initializing","newUrl","newState","$digest","$locationWatch","$$urlUpdatedByLocation","currentReplace","$$replace","urlOrStateChanged","debug","debugEnabled","this.debugEnabled","flag","formatError","formatStackTrace","sourceURL","consoleLog","logFn","log","navigator","userAgent","warn","getStringValue","ifDefined","plusFn","r","isPure","parentIsPure","AST","MemberExpression","computed","UnaryExpression","PURITY_ABSOLUTE","BinaryExpression","operator","CallExpression","PURITY_RELATIVE","findConstantAndWatchExpressions","ast","allConstants","argsToWatch","astIsPure","Program","expr","Literal","toWatch","argument","left","right","LogicalExpression","ConditionalExpression","alternate","consequent","Identifier","object","isStatelessFilter","callee","AssignmentExpression","ArrayExpression","ObjectExpression","properties","ThisExpression","LocalsExpression","getInputs","lastExpression","isAssignable","assignableAST","NGValueParameter","ASTCompiler","ASTInterpreter","Parser","lexer","astCompiler","getValueOf","objectValueOf","literals","identStart","identContinue","addLiteral","this.addLiteral","literalName","literalValue","setIdentifierFns","this.setIdentifierFns","identifierStart","identifierContinue","interceptorFn","parsedExpression","cacheKey","Lexer","$parseOptions","parser","addWatchDelegate","addInterceptor","expressionInputDirtyCheck","oldValueOfValue","compareObjectIdentity","inputsWatchDelegate","prettyPrintExpression","inputExpressions","inputs","lastResult","oldInputValueOf","expressionInputWatch","newInputValue","oldInputValueOfValues","oldInputValues","expressionInputsWatch","changed","oneTimeWatchDelegate","unwatchIfDone","isDone","oneTimeWatch","useInputs","isAllDefined","$$intercepted","$$interceptor","allDefined","constantWatch","oneTime","first","second","chainedInterceptor","$$pure","depurifier","s","noUnsafeEval","isIdentifierStart","isIdentifierContinue","$$getAst","getAst","errorOnUnhandledRejections","qFactory","this.errorOnUnhandledRejections","nextTick","exceptionHandler","Deferred","Promise","this.resolve","this.reject","rejectPromise","this.notify","progress","notifyPromise","processChecks","queueSize","checkQueue","toCheck","errorMessage","scheduleProcessQueue","pending","processScheduled","$$passToExceptionHandler","$$reject","$qMinErr","$$resolve","doResolve","doReject","doNotify","handleCallback","resolver","callbackOutput","when","errback","progressBack","$Q","resolveFn","TypeError","onFulfilled","onRejected","promises","counter","results","race","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","webkitCancelRequestAnimationFrame","rafSupported","raf","timer","supported","createChildScopeClass","ChildScope","$$watchers","$$nextSibling","$$childHead","$$childTail","$$listeners","$$listenerCount","$$watchersCount","$id","$$ChildScope","$$suspended","$rootScopeMinErr","lastDirtyWatch","applyAsyncId","digestTtl","this.digestTtl","destroyChildScope","$event","currentScope","cleanUpScope","$$prevSibling","$root","Scope","beginPhase","phase","incrementWatchersCount","decrementListenerCount","initWatchVal","flushApplyAsync","applyAsyncQueue","scheduleApplyAsync","isolate","child","watchExp","watcher","last","eq","$$digestWatchIndex","deregisterWatch","watchExpressions","watchGroupAction","changeReactionScheduled","firstRun","newValues","deregisterFns","shouldCall","deregisterWatchGroup","unwatchFn","watchGroupSubAction","$watchCollectionInterceptor","_value","bothNaN","newItem","oldItem","internalArray","oldLength","changeDetected","newLength","internalObject","veryOldValue","trackVeryOldValue","changeDetector","initRun","$watchCollectionAction","watch","watchers","dirty","ttl","asyncQueue","watchLog","logIdx","asyncTask","asyncQueuePosition","msg","next","postDigestQueuePosition","postDigestQueue","$suspend","$isSuspended","$resume","eventName","this.$watchGroup","$eval","$applyAsyncExpression","namedListeners","indexOfListener","$emit","targetScope","listenerArgs","$$asyncQueue","$$postDigestQueue","$$applyAsyncQueue","sanitizeUri","uri","isMediaUrl","regex","normalizedVal","adjustMatcher","matcher","$sceMinErr","escapeForRegexp","adjustMatchers","matchers","adjustedMatchers","trustedResourceUrlList","bannedResourceUrlList","this.trustedResourceUrlList","this.bannedResourceUrlList","matchUrl","baseURI","baseUrlParsingNode","generateHolderType","Base","holderType","trustedValue","$$unwrapTrustedValue","this.$$unwrapTrustedValue","holderType.prototype.valueOf","holderType.prototype.toString","htmlSanitizer","trustedValueHolderBase","byType","JS","trustAs","Constructor","maybeTrusted","allowed","this.enabled","sce","isEnabled","sce.isEnabled","sce.getTrusted","parseAs","sce.parseAs","enumValue","lName","UNDERSCORE_LOWERCASE_REGEXP","eventSupport","hasHistoryPushState","nw","process","chrome","app","runtime","pushState","android","boxee","bodyStyle","transitions","animations","hasEvent","divElm","TaskTracker","getLastCallback","cbInfo","taskCallbacks","pop","cb","getLastCallbackForType","taskCounts","ALL_TASKS_TYPE","countForType","countForAll","getNextCallback","nextCb","httpOptions","this.httpOptions","handleRequestFn","tpl","ignoreRequestError","totalPendingRequests","transformer","handleError","$templateRequestMinErr","testability","testability.findBindings","opt_exactMatch","getElementsByClassName","matches","dataBinding","bindingName","testability.findModels","prefixes","attributeEquals","testability.getLocation","testability.setLocation","testability.whenStable","deferreds","timeout.cancel","$timeoutMinErr","urlParsingNode","ipv6InBrackets","trustedOriginUrls","parsedAllowedOriginUrls","originUrl","requestUrl","urlsAreSameOrigin","url1","url2","$$CookieReader","safeDecodeURIComponent","lastCookies","lastCookieString","cookieArray","cookie","currentCookieString","filters","suffix","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","comparator","anyPropertyKey","matchAgainstAnyProp","getTypeForFilter","expressionType","predicateFn","createPredicateFn","shouldMatchPrimitives","actual","expected","deepCompare","dontMatchWholeObject","actualType","expectedType","expectedVal","matchAnyProperty","actualVal","$locale","formats","NUMBER_FORMATS","amount","currencySymbol","fractionSize","CURRENCY_SYM","PATTERNS","maxFrac","currencySymbolRe","formatNumber","GROUP_SEP","DECIMAL_SEP","number","numStr","exponent","digits","numberOfIntegerDigits","zeros","ZERO_CHAR","MAX_DIGITS","roundNumber","parsedNumber","minFrac","fractionLen","min","roundAt","digit","k","carry","reduceRight","groupSep","decimalSep","isNaN","isInfinity","isFinite","isZero","abs","formattedText","integerLen","decimals","reduce","groups","lgSize","gSize","negPre","negSuf","posPre","posSuf","padNumber","num","negWrap","neg","dateGetter","dateStrGetter","shortForm","standAlone","getFirstThursdayOfYear","year","dayOfWeekOnFirst","getDay","weekGetter","firstThurs","getFullYear","thisThurs","getMonth","getDate","round","eraGetter","ERAS","jsonStringToDate","string","R_ISO8601_STR","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","m","ms","parseFloat","format","DATETIME_FORMATS","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","spacing","limit","begin","Infinity","sliceFn","end","processPredicates","sortPredicates","predicate","descending","defaultCompare","v1","v2","type1","type2","value1","value2","sortPredicate","reverseOrder","compareFn","predicates","compareValues","getComparisonObject","tieBreaker","predicateValues","doComparison","ngDirective","FormController","$$controls","$error","$$success","$pending","$name","$dirty","$valid","$pristine","$submitted","$invalid","$$parentForm","nullFormCtrl","$$animate","setupValidity","$$classCache","INVALID_CLASS","VALID_CLASS","addSetValidityMethod","cachedToggleClass","ctrl","switchValue","toggleValidationCss","validationErrorKey","isValid","unset","clazz","$setValidity","clazz.prototype.$setValidity","isObjectEmpty","PENDING_CLASS","combinedState","stringBasedInputType","$formatters","$isEmpty","baseInputType","composing","ev","ngTrim","$viewValue","$$hasNativeValidators","$setViewValue","deferListener","origValue","keyCode","PARTIAL_VALIDATION_TYPES","PARTIAL_VALIDATION_EVENTS","validity","origBadInput","badInput","origTypeMismatch","typeMismatch","$render","ctrl.$render","createDateParser","mapping","iso","previousDate","ISO_DATE_REGEXP","yyyy","MM","dd","HH","getHours","mm","ss","getSeconds","sss","getMilliseconds","part","createDateInputType","parseDate","dynamicDateInputType","isValidDate","parseObservedDateValue","parseDateAndConvertTimeZoneToLocal","$options","getOption","previousTimezone","parsedDate","badInputChecker","isTimeType","$parsers","$$parserName","ngModelMinErr","targetFormat","formatted","ngMin","minVal","parsedMinVal","$validators","ctrl.$validators.min","$validate","ngMax","maxVal","parsedMaxVal","ctrl.$validators.max","parserName","VALIDITY_STATE_PROPERTY","numberFormatterParser","NUMBER_REGEXP","parseNumberAttrVal","countDecimals","numString","decimalSymbolIndex","isValidForStep","viewValue","stepBase","step","isNonIntegerValue","isNonIntegerStepBase","isNonIntegerStep","valueDecimals","stepBaseDecimals","stepDecimals","decimalCount","multiplier","pow","parseConstantExpr","parseFn","classDirective","arrayDifference","toClassString","classValue","classString","indexWatchExpression","digestClassCounts","classArray","classesToUpdate","classCounts","ngClassIndexWatchAction","newModulo","oldClassString","oldModulo","moduloTwo","$index","ngClassWatchAction","newClassString","oldClassArray","newClassArray","toRemoveArray","toAddArray","toRemoveString","toAddString","forceAsync","ngEventHandler","NgModelController","$modelValue","$$rawModelValue","$asyncValidators","$viewChangeListeners","$untouched","$touched","defaultModelOptions","$$updateEvents","$$updateEventHandler","$$parsedNgModel","$$parsedNgModelAssign","$$ngModelGet","$$ngModelSet","$$pendingDebounce","$$parserValid","$$currentValidationRunId","$$rootScope","$$attr","$$timeout","$$exceptionHandler","setupModelWatcher","ngModelWatch","modelValue","$$setModelValue","ModelOptions","$$options","setOptionSelectedStatus","optionEl","parsePatternAttr","patternExp","parseLength","intVal","REGEX_STRING_REGEXP","documentMode","rules","ngCspElement","ngCspAttribute","noInlineStyle","name_","el","allowAutoBootstrap","currentScript","HTMLScriptElement","SVGScriptElement","srcs","getNamedItem","every","origin","full","major","minor","dot","codeName","expando","JQLite._data","MS_HACK_REGEXP","mouseleave","mouseenter","thead","col","tr","td","tbody","tfoot","colgroup","caption","th","wrapMapValueClosing","wrapMapValue","optgroup","Node","contains","compareDocumentPosition","ready","removeData","jqLiteHasData","jqLiteCleanData","removeAttribute","css","NODE_TYPE_ATTRIBUTE","lowercasedName","isBooleanAttr","ret","getText","$dv","multiple","selected","arg1","arg2","nodeCount","jqLiteOn","types","addHandler","noEventListener","one","onFn","replaceNode","insertBefore","children","contentDocument","prepend","wrapNode","detach","after","newElement","toggleClass","condition","classCondition","nextElementSibling","getElementsByTagName","extraParameters","dummyEvent","handlerArgs","eventFnsCopy","arg3","unbind","nanKey","_idx","_transformKey","delete","FN_ARG_SPLIT","FN_ARG","argDecl","underscore","$animateMinErr","postDigestElements","updateData","handleCSSClassChanges","existing","pin","domOperation","from","to","classesAdded","add","classesRemoved","runner","complete","classNameFilter","customFilter","$$registeredAnimations","this.customFilter","filterFn","this.classNameFilter","reservedRegex","NG_ANIMATE_CLASSNAME","domInsert","parentElement","afterElement","afterNode","ELEMENT_NODE","previousElementSibling","enter","move","leave","addclass","setClass","animate","tempClasses","waitForTick","waitQueue","passed","AnimateRunner","setHost","rafTick","_doneCallbacks","_tick","this._tick","_state","chain","AnimateRunner.chain","AnimateRunner.all","runners","onProgress","DONE_COMPLETE_STATE","getPromise","resolveHandler","rejectHandler","pause","resume","_resolve","INITIAL_STATE","DONE_PENDING_STATE","initialOptions","closed","$$prepared","cleanupStyles","start","UNINITIALIZED_VALUE","isFirstChange","SimpleChange.prototype.isFirstChange","domNode","offsetWidth","$interpolateMinErr.throwNoconcat","$interpolateMinErr.interr","callbackId","called","callbackMap","PATH_MATCH","locationPrototype","$$absUrl","hashValue","pathValue","$$url","paramValue","Location","Location.prototype.state","$parseMinErr","OPERATORS","ESCAPE","lex","tokens","readString","peek","readNumber","peekMultichar","readIdent","is","isWhitespace","ch2","ch3","op2","op3","op1","throwError","chars","codePointAt","isValidIdentifierStart","isValidIdentifierContinue","cp","charCodeAt","cp1","cp2","isExpOperator","colStr","peekCh","quote","rawString","hex","String","fromCharCode","rep","ExpressionStatement","Property","program","expressionStatement","expect","filterChain","assignment","ternary","logicalOR","consume","logicalAND","equality","relational","additive","multiplicative","unary","primary","arrayDeclaration","selfReferential","parseArguments","baseExpression","peekToken","kind","e1","e2","e3","e4","peekAhead","t","nextId","vars","own","assignable","stage","computing","recurse","return_","generateFunction","fnKey","intoId","watchId","fnString","USE","STRICT","filterPrefix","watchFns","varsPrefix","section","nameId","recursionFn","skipWatchIdCheck","if_","lazyAssign","computedMember","lazyRecurse","plus","not","getHasOwnProperty","isNull","nonComputedMember","notNull","member","filterName","defaultValue","UNSAFE_CHARACTERS","SAFE_IDENTIFIER","stringEscapeFn","stringEscapeRegex","c","skip","init","fn.assign","rhs","lhs","unary+","unary-","unary!","binary+","binary-","binary*","binary/","binary%","binary===","binary!==","binary==","binary!=","binary<","binary>","binary<=","binary>=","binary&&","binary||","ternary?:","yy","y","MMMM","MMM","M","LLLL","H","hh","EEEE","EEE","ampmGetter","AMPMS","Z","timeZoneGetter","zone","paddedZone","ww","w","G","GG","GGG","GGGG","longEraGetter","ERANAMES","xlinkHref","defaultLinkFn","normalized","ngBooleanAttrWatchAction","htmlAttr","ngAttrAliasWatchAction","$addControl","$getControls","$$renameControl","nullFormRenameControl","control","$removeControl","$setDirty","$setPristine","$setSubmitted","$$setSubmitted","$rollbackViewValue","$commitViewValue","newName","oldName","PRISTINE_CLASS","DIRTY_CLASS","SUBMITTED_CLASS","$setUntouched","rootForm","formDirectiveFactory","isNgForm","getSetter","ngFormCompile","formElement","nameAttr","ngFormPreLink","ctrls","handleFormSubmission","setter","URL_REGEXP","EMAIL_REGEXP","DATE_REGEXP","DATETIMELOCAL_REGEXP","WEEK_REGEXP","MONTH_REGEXP","TIME_REGEXP","inputType","textInputType","weekParser","isoWeek","existingDate","week","hours","seconds","milliseconds","addDays","numberInputType","ngStep","stepVal","parsedStepVal","ctrl.$validators.step","urlInputType","ctrl.$validators.url","emailInputType","email","ctrl.$validators.email","radioInputType","doTrim","checked","rangeInputType","setInitialValueAndObserver","htmlAttrName","changeFn","wrappedObserver","minChange","supportsRange","elVal","maxChange","stepChange","hasMinAttr","hasMaxAttr","hasStepAttr","originalRender","rangeUnderflow","rangeOverflow","rangeRender","noopMinValidator","minValidator","noopMaxValidator","maxValidator","nativeStepValidator","stepMismatch","stepValidator","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","ctrl.$isEmpty","valueProperty","configurable","enumerable","CONSTANT_VALUE_REGEXP","updateElementValue","tplAttr","ngValueConstantLink","ngValueLink","valueWatchAction","$compile","ngBindCompile","templateElement","ngBindLink","ngBindWatchAction","ngBindTemplateCompile","ngBindTemplateLink","ngBindHtmlCompile","ngBindHtmlGetter","ngBindHtmlWatch","ngBindHtmlLink","ngBindHtmlWatchAction","getTrustedHtml","forceAsyncEvents","previousElements","ngIfWatchAction","srcExp","onloadExp","autoScrollExp","autoscroll","changeCounter","previousElement","currentElement","cleanupLastIncludeContent","ngIncludeWatchAction","afterAnimation","thisChangeId","namespaceAdaptedClone","trimValues","$$initGetterSetters","invokeModelGetter","invokeModelSetter","this.$$ngModelGet","this.$$ngModelSet","$$$p","$$updateEmptyClasses","NOT_EMPTY_CLASS","EMPTY_CLASS","UNTOUCHED_CLASS","TOUCHED_CLASS","$setTouched","$$lastCommittedViewValue","prevValid","prevModelValue","allowInvalid","that","$$runValidators","allValid","$$writeModelToScope","doneCallback","processSyncValidators","syncValidatorsValid","validator","Boolean","setValidity","processAsyncValidators","validatorPromises","validationDone","localValidationRunId","processParseErrors","errorKey","$$parseAndValidate","$$debounceViewValueCommit","debounceDelay","$overrideModelOptions","createChild","$$setUpdateOnEvents","$processModelValue","$$format","formatters","ngModelCompile","ngModelPreLink","modelCtrl","formCtrl","optionsCtrl","ngModelPostLink","setTouched","DEFAULT_REGEXP","inheritAll","updateOnDefault","updateOn","debounce","getterSetter","NgModelOptionsController","$$attrs","parentOptions","parentCtrl","modelOptionsDefinition","ngOptionsMinErr","NG_OPTIONS_REGEXP","parseOptionsExpression","optionsExp","selectElement","Option","selectValue","label","group","disabled","getOptionValuesKeys","optionValues","optionValuesKeys","keyName","itemKey","valueName","selectAs","trackBy","viewValueFn","trackByFn","getTrackByValueFn","getHashOfValue","getTrackByValue","getLocals","displayFn","groupByFn","disableWhenFn","valuesFn","getWatchables","watchedArray","optionValuesLength","disableWhen","getOptions","optionItems","selectValueMap","optionItem","getOptionFromViewValue","getViewValueFromOption","optionTemplate","optGroupTemplate","ngOptionsPreLink","registerOption","ngOptionsPostLink","getAndUpdateSelectedOption","updateOptionElement","selectCtrl","ngModelCtrl","hasEmptyOption","emptyOption","providedEmptyOption","unknownOption","listFragment","generateUnknownOptionValue","selectCtrl.generateUnknownOptionValue","writeValue","selectCtrl.writeValue","selectedOptions","readValue","selectCtrl.readValue","selectedValues","selections","selectedOption","selectedIndex","removeUnknownOption","selectUnknownOrEmptyOption","unselectEmptyOption","selectCtrl.registerOption","optionScope","needsRerender","$isEmptyOptionSelected","updateOptions","groupElementMap","addOption","groupElement","optionElement","nextValue","BRACE","IS_WHEN","updateElementText","newText","numberExp","whenExp","whens","whensExpFns","braceReplacement","watchRemover","lastCount","attributeName","tmpMatch","whenKey","ngPluralizeWatchAction","countIsNaN","pluralCat","whenExpFn","ngRefMinErr","refValue","ngRefRead","ngRepeatMinErr","updateScope","valueIdentifier","keyIdentifier","arrayLength","$first","$last","$middle","$odd","$even","trackByIdArrayFn","trackByIdObjFn","ngRepeatCompile","ngRepeatEndComment","aliasAs","trackByExp","trackByIdExpFn","hashFnLocals","trackByExpGetter","ngRepeatLink","lastBlockMap","ngRepeatAction","previousNode","nextNode","nextBlockMap","collectionLength","trackById","collectionKeys","nextBlockOrder","trackByIdFn","blockKey","ngRepeatTransclude","ngShowWatchAction","NG_HIDE_CLASS","NG_HIDE_IN_PROGRESS_CLASS","ngHideWatchAction","ngStyleWatchAction","newStyles","oldStyles","NgSwitchController","cases","ngSwitchController","selectedTranscludes","selectedElements","previousLeaveAnimations","selectedScopes","spliceFactory","ngSwitchWatchAction","selectedTransclude","caseElement","selectedScope","anchor","ngSwitchWhenSeparator","whenCase","ngTranscludeMinErr","ngTranscludeCompile","fallbackLinkFn","ngTranscludePostLink","useFallbackContent","ngTranscludeSlot","ngTranscludeCloneAttachFn","noopNgModelController","SelectController","scheduleRender","renderScheduled","scheduleViewValueUpdate","renderAfter","updateScheduled","optionsMap","renderUnknownOption","self.renderUnknownOption","unknownVal","updateUnknownOption","self.updateUnknownOption","self.generateUnknownOptionValue","self.removeUnknownOption","selectEmptyOption","self.selectEmptyOption","self.unselectEmptyOption","self.readValue","realVal","hasOption","self.writeValue","currentlySelectedOption","hashedVal","self.addOption","removeOption","self.removeOption","self.hasOption","$hasEmptyOption","self.$hasEmptyOption","$isUnknownOptionSelected","self.$isUnknownOptionSelected","self.$isEmptyOptionSelected","self.selectUnknownOrEmptyOption","self.registerOption","optionAttrs","interpolateValueFn","interpolateTextFn","valueAttributeObserveAction","removal","previouslySelected","interpolateWatchAction","removeValue","selectPreLink","shouldBeSelected","lastView","lastViewRef","selectMultipleWatch","ngModelCtrl.$isEmpty","selectPostLink","ngModelCtrl.$render","selectCtrlName","ctrl.$validators.required","tElm","tAttr","attrVal","oldRegexp","ctrl.$validators.pattern","maxlengthParsed","ctrl.$validators.maxlength","minlengthParsed","ctrl.$validators.minlength","getDecimals","opt_precision","ONE","OTHER","$$csp","head"]
+}
Index: .idea/libraries/Maven__org_checkerframework_checker_qual_3_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_checkerframework_checker_qual_3_5_0.xml b/.idea/libraries/Maven__org_checkerframework_checker_qual_3_5_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_checkerframework_checker_qual_3_5_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.checkerframework:checker-qual:3.5.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_6.xml b/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.6/jaxb-runtime-2.3.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/index.js b/node_modules/angular/index.js
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/index.js	
@@ -0,0 +1,2 @@
+require('./angular');
+module.exports = angular;
Index: .idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_7.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_7.xml b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_7.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_7.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.aspectj:aspectjweaver:1.9.7">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/angular.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/angular.js b/node_modules/angular/angular.js
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/angular.js	
@@ -0,0 +1,36600 @@
+/**
+ * @license AngularJS v1.8.3
+ * (c) 2010-2020 Google LLC. http://angularjs.org
+ * License: MIT
+ */
+(function(window) {'use strict';
+
+/* exported
+  minErrConfig,
+  errorHandlingConfig,
+  isValidObjectMaxDepth
+*/
+
+var minErrConfig = {
+  objectMaxDepth: 5,
+  urlErrorParamsEnabled: true
+};
+
+/**
+ * @ngdoc function
+ * @name angular.errorHandlingConfig
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Configure several aspects of error handling in AngularJS if used as a setter or return the
+ * current configuration if used as a getter. The following options are supported:
+ *
+ * - **objectMaxDepth**: The maximum depth to which objects are traversed when stringified for error messages.
+ *
+ * Omitted or undefined options will leave the corresponding configuration values unchanged.
+ *
+ * @param {Object=} config - The configuration object. May only contain the options that need to be
+ *     updated. Supported keys:
+ *
+ * * `objectMaxDepth`  **{Number}** - The max depth for stringifying objects. Setting to a
+ *   non-positive or non-numeric value, removes the max depth limit.
+ *   Default: 5
+ *
+ * * `urlErrorParamsEnabled`  **{Boolean}** - Specifies whether the generated error url will
+ *   contain the parameters of the thrown error. Disabling the parameters can be useful if the
+ *   generated error url is very long.
+ *
+ *   Default: true. When used without argument, it returns the current value.
+ */
+function errorHandlingConfig(config) {
+  if (isObject(config)) {
+    if (isDefined(config.objectMaxDepth)) {
+      minErrConfig.objectMaxDepth = isValidObjectMaxDepth(config.objectMaxDepth) ? config.objectMaxDepth : NaN;
+    }
+    if (isDefined(config.urlErrorParamsEnabled) && isBoolean(config.urlErrorParamsEnabled)) {
+      minErrConfig.urlErrorParamsEnabled = config.urlErrorParamsEnabled;
+    }
+  } else {
+    return minErrConfig;
+  }
+}
+
+/**
+ * @private
+ * @param {Number} maxDepth
+ * @return {boolean}
+ */
+function isValidObjectMaxDepth(maxDepth) {
+  return isNumber(maxDepth) && maxDepth > 0;
+}
+
+
+/**
+ * @description
+ *
+ * This object provides a utility for producing rich Error messages within
+ * AngularJS. It can be called as follows:
+ *
+ * var exampleMinErr = minErr('example');
+ * throw exampleMinErr('one', 'This {0} is {1}', foo, bar);
+ *
+ * The above creates an instance of minErr in the example namespace. The
+ * resulting error will have a namespaced error code of example.one.  The
+ * resulting error will replace {0} with the value of foo, and {1} with the
+ * value of bar. The object is not restricted in the number of arguments it can
+ * take.
+ *
+ * If fewer arguments are specified than necessary for interpolation, the extra
+ * interpolation markers will be preserved in the final string.
+ *
+ * Since data will be parsed statically during a build step, some restrictions
+ * are applied with respect to how minErr instances are created and called.
+ * Instances should have names of the form namespaceMinErr for a minErr created
+ * using minErr('namespace'). Error codes, namespaces and template strings
+ * should all be static strings, not variables or general expressions.
+ *
+ * @param {string} module The namespace to use for the new minErr instance.
+ * @param {function} ErrorConstructor Custom error constructor to be instantiated when returning
+ *   error from returned function, for cases when a particular type of error is useful.
+ * @returns {function(code:string, template:string, ...templateArgs): Error} minErr instance
+ */
+
+function minErr(module, ErrorConstructor) {
+  ErrorConstructor = ErrorConstructor || Error;
+
+  var url = 'https://errors.angularjs.org/1.8.3/';
+  var regex = url.replace('.', '\\.') + '[\\s\\S]*';
+  var errRegExp = new RegExp(regex, 'g');
+
+  return function() {
+    var code = arguments[0],
+      template = arguments[1],
+      message = '[' + (module ? module + ':' : '') + code + '] ',
+      templateArgs = sliceArgs(arguments, 2).map(function(arg) {
+        return toDebugString(arg, minErrConfig.objectMaxDepth);
+      }),
+      paramPrefix, i;
+
+    // A minErr message has two parts: the message itself and the url that contains the
+    // encoded message.
+    // The message's parameters can contain other error messages which also include error urls.
+    // To prevent the messages from getting too long, we strip the error urls from the parameters.
+
+    message += template.replace(/\{\d+\}/g, function(match) {
+      var index = +match.slice(1, -1);
+
+      if (index < templateArgs.length) {
+        return templateArgs[index].replace(errRegExp, '');
+      }
+
+      return match;
+    });
+
+    message += '\n' + url + (module ? module + '/' : '') + code;
+
+    if (minErrConfig.urlErrorParamsEnabled) {
+      for (i = 0, paramPrefix = '?'; i < templateArgs.length; i++, paramPrefix = '&') {
+        message += paramPrefix + 'p' + i + '=' + encodeURIComponent(templateArgs[i]);
+      }
+    }
+
+    return new ErrorConstructor(message);
+  };
+}
+
+/* We need to tell ESLint what variables are being exported */
+/* exported
+  angular,
+  msie,
+  jqLite,
+  jQuery,
+  slice,
+  splice,
+  push,
+  toString,
+  minErrConfig,
+  errorHandlingConfig,
+  isValidObjectMaxDepth,
+  ngMinErr,
+  angularModule,
+  uid,
+  REGEX_STRING_REGEXP,
+  VALIDITY_STATE_PROPERTY,
+
+  lowercase,
+  uppercase,
+  nodeName_,
+  isArrayLike,
+  forEach,
+  forEachSorted,
+  reverseParams,
+  nextUid,
+  setHashKey,
+  extend,
+  toInt,
+  inherit,
+  merge,
+  noop,
+  identity,
+  valueFn,
+  isUndefined,
+  isDefined,
+  isObject,
+  isBlankObject,
+  isString,
+  isNumber,
+  isNumberNaN,
+  isDate,
+  isError,
+  isArray,
+  isFunction,
+  isRegExp,
+  isWindow,
+  isScope,
+  isFile,
+  isFormData,
+  isBlob,
+  isBoolean,
+  isPromiseLike,
+  trim,
+  escapeForRegexp,
+  isElement,
+  makeMap,
+  includes,
+  arrayRemove,
+  copy,
+  simpleCompare,
+  equals,
+  csp,
+  jq,
+  concat,
+  sliceArgs,
+  bind,
+  toJsonReplacer,
+  toJson,
+  fromJson,
+  convertTimezoneToLocal,
+  timezoneToOffset,
+  addDateMinutes,
+  startingTag,
+  tryDecodeURIComponent,
+  parseKeyValue,
+  toKeyValue,
+  encodeUriSegment,
+  encodeUriQuery,
+  angularInit,
+  bootstrap,
+  getTestability,
+  snake_case,
+  bindJQuery,
+  assertArg,
+  assertArgFn,
+  assertNotHasOwnProperty,
+  getter,
+  getBlockNodes,
+  hasOwnProperty,
+  createMap,
+  stringify,
+  UNSAFE_restoreLegacyJqLiteXHTMLReplacement,
+
+  NODE_TYPE_ELEMENT,
+  NODE_TYPE_ATTRIBUTE,
+  NODE_TYPE_TEXT,
+  NODE_TYPE_COMMENT,
+  NODE_TYPE_DOCUMENT,
+  NODE_TYPE_DOCUMENT_FRAGMENT
+*/
+
+////////////////////////////////////
+
+/**
+ * @ngdoc module
+ * @name ng
+ * @module ng
+ * @installation
+ * @description
+ *
+ * The ng module is loaded by default when an AngularJS application is started. The module itself
+ * contains the essential components for an AngularJS application to function. The table below
+ * lists a high level breakdown of each of the services/factories, filters, directives and testing
+ * components available within this core module.
+ *
+ */
+
+var REGEX_STRING_REGEXP = /^\/(.+)\/([a-z]*)$/;
+
+// The name of a form control's ValidityState property.
+// This is used so that it's possible for internal tests to create mock ValidityStates.
+var VALIDITY_STATE_PROPERTY = 'validity';
+
+
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+
+/**
+ * @private
+ *
+ * @description Converts the specified string to lowercase.
+ * @param {string} string String to be converted to lowercase.
+ * @returns {string} Lowercased string.
+ */
+var lowercase = function(string) {return isString(string) ? string.toLowerCase() : string;};
+
+/**
+ * @private
+ *
+ * @description Converts the specified string to uppercase.
+ * @param {string} string String to be converted to uppercase.
+ * @returns {string} Uppercased string.
+ */
+var uppercase = function(string) {return isString(string) ? string.toUpperCase() : string;};
+
+
+var
+    msie,             // holds major version number for IE, or NaN if UA is not IE.
+    jqLite,           // delay binding since jQuery could be loaded after us.
+    jQuery,           // delay binding
+    slice             = [].slice,
+    splice            = [].splice,
+    push              = [].push,
+    toString          = Object.prototype.toString,
+    getPrototypeOf    = Object.getPrototypeOf,
+    ngMinErr          = minErr('ng'),
+
+    /** @name angular */
+    angular           = window.angular || (window.angular = {}),
+    angularModule,
+    uid               = 0;
+
+// Support: IE 9-11 only
+/**
+ * documentMode is an IE-only property
+ * http://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx
+ */
+msie = window.document.documentMode;
+
+
+/**
+ * @private
+ * @param {*} obj
+ * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments,
+ *                   String ...)
+ */
+function isArrayLike(obj) {
+
+  // `null`, `undefined` and `window` are not array-like
+  if (obj == null || isWindow(obj)) return false;
+
+  // arrays, strings and jQuery/jqLite objects are array like
+  // * jqLite is either the jQuery or jqLite constructor function
+  // * we have to check the existence of jqLite first as this method is called
+  //   via the forEach method when constructing the jqLite object in the first place
+  if (isArray(obj) || isString(obj) || (jqLite && obj instanceof jqLite)) return true;
+
+  // Support: iOS 8.2 (not reproducible in simulator)
+  // "length" in obj used to prevent JIT error (gh-11508)
+  var length = 'length' in Object(obj) && obj.length;
+
+  // NodeList objects (with `item` method) and
+  // other objects with suitable length characteristics are array-like
+  return isNumber(length) && (length >= 0 && (length - 1) in obj || typeof obj.item === 'function');
+
+}
+
+/**
+ * @ngdoc function
+ * @name angular.forEach
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Invokes the `iterator` function once for each item in `obj` collection, which can be either an
+ * object or an array. The `iterator` function is invoked with `iterator(value, key, obj)`, where `value`
+ * is the value of an object property or an array element, `key` is the object property key or
+ * array element index and obj is the `obj` itself. Specifying a `context` for the function is optional.
+ *
+ * It is worth noting that `.forEach` does not iterate over inherited properties because it filters
+ * using the `hasOwnProperty` method.
+ *
+ * Unlike ES262's
+ * [Array.prototype.forEach](http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18),
+ * providing 'undefined' or 'null' values for `obj` will not throw a TypeError, but rather just
+ * return the value provided.
+ *
+   ```js
+     var values = {name: 'misko', gender: 'male'};
+     var log = [];
+     angular.forEach(values, function(value, key) {
+       this.push(key + ': ' + value);
+     }, log);
+     expect(log).toEqual(['name: misko', 'gender: male']);
+   ```
+ *
+ * @param {Object|Array} obj Object to iterate over.
+ * @param {Function} iterator Iterator function.
+ * @param {Object=} context Object to become context (`this`) for the iterator function.
+ * @returns {Object|Array} Reference to `obj`.
+ */
+
+function forEach(obj, iterator, context) {
+  var key, length;
+  if (obj) {
+    if (isFunction(obj)) {
+      for (key in obj) {
+        if (key !== 'prototype' && key !== 'length' && key !== 'name' && obj.hasOwnProperty(key)) {
+          iterator.call(context, obj[key], key, obj);
+        }
+      }
+    } else if (isArray(obj) || isArrayLike(obj)) {
+      var isPrimitive = typeof obj !== 'object';
+      for (key = 0, length = obj.length; key < length; key++) {
+        if (isPrimitive || key in obj) {
+          iterator.call(context, obj[key], key, obj);
+        }
+      }
+    } else if (obj.forEach && obj.forEach !== forEach) {
+        obj.forEach(iterator, context, obj);
+    } else if (isBlankObject(obj)) {
+      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
+      for (key in obj) {
+        iterator.call(context, obj[key], key, obj);
+      }
+    } else if (typeof obj.hasOwnProperty === 'function') {
+      // Slow path for objects inheriting Object.prototype, hasOwnProperty check needed
+      for (key in obj) {
+        if (obj.hasOwnProperty(key)) {
+          iterator.call(context, obj[key], key, obj);
+        }
+      }
+    } else {
+      // Slow path for objects which do not have a method `hasOwnProperty`
+      for (key in obj) {
+        if (hasOwnProperty.call(obj, key)) {
+          iterator.call(context, obj[key], key, obj);
+        }
+      }
+    }
+  }
+  return obj;
+}
+
+function forEachSorted(obj, iterator, context) {
+  var keys = Object.keys(obj).sort();
+  for (var i = 0; i < keys.length; i++) {
+    iterator.call(context, obj[keys[i]], keys[i]);
+  }
+  return keys;
+}
+
+
+/**
+ * when using forEach the params are value, key, but it is often useful to have key, value.
+ * @param {function(string, *)} iteratorFn
+ * @returns {function(*, string)}
+ */
+function reverseParams(iteratorFn) {
+  return function(value, key) {iteratorFn(key, value);};
+}
+
+/**
+ * A consistent way of creating unique IDs in angular.
+ *
+ * Using simple numbers allows us to generate 28.6 million unique ids per second for 10 years before
+ * we hit number precision issues in JavaScript.
+ *
+ * Math.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M
+ *
+ * @returns {number} an unique alpha-numeric string
+ */
+function nextUid() {
+  return ++uid;
+}
+
+
+/**
+ * Set or clear the hashkey for an object.
+ * @param obj object
+ * @param h the hashkey (!truthy to delete the hashkey)
+ */
+function setHashKey(obj, h) {
+  if (h) {
+    obj.$$hashKey = h;
+  } else {
+    delete obj.$$hashKey;
+  }
+}
+
+
+function baseExtend(dst, objs, deep) {
+  var h = dst.$$hashKey;
+
+  for (var i = 0, ii = objs.length; i < ii; ++i) {
+    var obj = objs[i];
+    if (!isObject(obj) && !isFunction(obj)) continue;
+    var keys = Object.keys(obj);
+    for (var j = 0, jj = keys.length; j < jj; j++) {
+      var key = keys[j];
+      var src = obj[key];
+
+      if (deep && isObject(src)) {
+        if (isDate(src)) {
+          dst[key] = new Date(src.valueOf());
+        } else if (isRegExp(src)) {
+          dst[key] = new RegExp(src);
+        } else if (src.nodeName) {
+          dst[key] = src.cloneNode(true);
+        } else if (isElement(src)) {
+          dst[key] = src.clone();
+        } else {
+          if (key !== '__proto__') {
+            if (!isObject(dst[key])) dst[key] = isArray(src) ? [] : {};
+            baseExtend(dst[key], [src], true);
+          }
+        }
+      } else {
+        dst[key] = src;
+      }
+    }
+  }
+
+  setHashKey(dst, h);
+  return dst;
+}
+
+/**
+ * @ngdoc function
+ * @name angular.extend
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
+ * to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
+ * by passing an empty object as the target: `var object = angular.extend({}, object1, object2)`.
+ *
+ * **Note:** Keep in mind that `angular.extend` does not support recursive merge (deep copy). Use
+ * {@link angular.merge} for this.
+ *
+ * @param {Object} dst Destination object.
+ * @param {...Object} src Source object(s).
+ * @returns {Object} Reference to `dst`.
+ */
+function extend(dst) {
+  return baseExtend(dst, slice.call(arguments, 1), false);
+}
+
+
+/**
+* @ngdoc function
+* @name angular.merge
+* @module ng
+* @kind function
+*
+* @description
+* Deeply extends the destination object `dst` by copying own enumerable properties from the `src` object(s)
+* to `dst`. You can specify multiple `src` objects. If you want to preserve original objects, you can do so
+* by passing an empty object as the target: `var object = angular.merge({}, object1, object2)`.
+*
+* Unlike {@link angular.extend extend()}, `merge()` recursively descends into object properties of source
+* objects, performing a deep copy.
+*
+* @deprecated
+* sinceVersion="1.6.5"
+* This function is deprecated, but will not be removed in the 1.x lifecycle.
+* There are edge cases (see {@link angular.merge#known-issues known issues}) that are not
+* supported by this function. We suggest using another, similar library for all-purpose merging,
+* such as [lodash's merge()](https://lodash.com/docs/4.17.4#merge).
+*
+* @knownIssue
+* This is a list of (known) object types that are not handled correctly by this function:
+* - [`Blob`](https://developer.mozilla.org/docs/Web/API/Blob)
+* - [`MediaStream`](https://developer.mozilla.org/docs/Web/API/MediaStream)
+* - [`CanvasGradient`](https://developer.mozilla.org/docs/Web/API/CanvasGradient)
+* - AngularJS {@link $rootScope.Scope scopes};
+*
+* `angular.merge` also does not support merging objects with circular references.
+*
+* @param {Object} dst Destination object.
+* @param {...Object} src Source object(s).
+* @returns {Object} Reference to `dst`.
+*/
+function merge(dst) {
+  return baseExtend(dst, slice.call(arguments, 1), true);
+}
+
+
+
+function toInt(str) {
+  return parseInt(str, 10);
+}
+
+var isNumberNaN = Number.isNaN || function isNumberNaN(num) {
+  // eslint-disable-next-line no-self-compare
+  return num !== num;
+};
+
+
+function inherit(parent, extra) {
+  return extend(Object.create(parent), extra);
+}
+
+/**
+ * @ngdoc function
+ * @name angular.noop
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * A function that performs no operations. This function can be useful when writing code in the
+ * functional style.
+   ```js
+     function foo(callback) {
+       var result = calculateResult();
+       (callback || angular.noop)(result);
+     }
+   ```
+ */
+function noop() {}
+noop.$inject = [];
+
+
+/**
+ * @ngdoc function
+ * @name angular.identity
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * A function that returns its first argument. This function is useful when writing code in the
+ * functional style.
+ *
+   ```js
+   function transformer(transformationFn, value) {
+     return (transformationFn || angular.identity)(value);
+   };
+
+   // E.g.
+   function getResult(fn, input) {
+     return (fn || angular.identity)(input);
+   };
+
+   getResult(function(n) { return n * 2; }, 21);   // returns 42
+   getResult(null, 21);                            // returns 21
+   getResult(undefined, 21);                       // returns 21
+   ```
+ *
+ * @param {*} value to be returned.
+ * @returns {*} the value passed in.
+ */
+function identity($) {return $;}
+identity.$inject = [];
+
+
+function valueFn(value) {return function valueRef() {return value;};}
+
+function hasCustomToString(obj) {
+  return isFunction(obj.toString) && obj.toString !== toString;
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isUndefined
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is undefined.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is undefined.
+ */
+function isUndefined(value) {return typeof value === 'undefined';}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isDefined
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is defined.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is defined.
+ */
+function isDefined(value) {return typeof value !== 'undefined';}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isObject
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not
+ * considered to be objects. Note that JavaScript arrays are objects.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is an `Object` but not `null`.
+ */
+function isObject(value) {
+  // http://jsperf.com/isobject4
+  return value !== null && typeof value === 'object';
+}
+
+
+/**
+ * Determine if a value is an object with a null prototype
+ *
+ * @returns {boolean} True if `value` is an `Object` with a null prototype
+ */
+function isBlankObject(value) {
+  return value !== null && typeof value === 'object' && !getPrototypeOf(value);
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isString
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is a `String`.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a `String`.
+ */
+function isString(value) {return typeof value === 'string';}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isNumber
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is a `Number`.
+ *
+ * This includes the "special" numbers `NaN`, `+Infinity` and `-Infinity`.
+ *
+ * If you wish to exclude these then you can use the native
+ * [`isFinite'](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite)
+ * method.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a `Number`.
+ */
+function isNumber(value) {return typeof value === 'number';}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isDate
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a value is a date.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a `Date`.
+ */
+function isDate(value) {
+  return toString.call(value) === '[object Date]';
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.isArray
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is an `Array`.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is an `Array`.
+ */
+function isArray(arr) {
+  return Array.isArray(arr) || arr instanceof Array;
+}
+
+/**
+ * @description
+ * Determines if a reference is an `Error`.
+ * Loosely based on https://www.npmjs.com/package/iserror
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is an `Error`.
+ */
+function isError(value) {
+  var tag = toString.call(value);
+  switch (tag) {
+    case '[object Error]': return true;
+    case '[object Exception]': return true;
+    case '[object DOMException]': return true;
+    default: return value instanceof Error;
+  }
+}
+
+/**
+ * @ngdoc function
+ * @name angular.isFunction
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is a `Function`.
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a `Function`.
+ */
+function isFunction(value) {return typeof value === 'function';}
+
+
+/**
+ * Determines if a value is a regular expression object.
+ *
+ * @private
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a `RegExp`.
+ */
+function isRegExp(value) {
+  return toString.call(value) === '[object RegExp]';
+}
+
+
+/**
+ * Checks if `obj` is a window object.
+ *
+ * @private
+ * @param {*} obj Object to check
+ * @returns {boolean} True if `obj` is a window obj.
+ */
+function isWindow(obj) {
+  return obj && obj.window === obj;
+}
+
+
+function isScope(obj) {
+  return obj && obj.$evalAsync && obj.$watch;
+}
+
+
+function isFile(obj) {
+  return toString.call(obj) === '[object File]';
+}
+
+
+function isFormData(obj) {
+  return toString.call(obj) === '[object FormData]';
+}
+
+
+function isBlob(obj) {
+  return toString.call(obj) === '[object Blob]';
+}
+
+
+function isBoolean(value) {
+  return typeof value === 'boolean';
+}
+
+
+function isPromiseLike(obj) {
+  return obj && isFunction(obj.then);
+}
+
+
+var TYPED_ARRAY_REGEXP = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/;
+function isTypedArray(value) {
+  return value && isNumber(value.length) && TYPED_ARRAY_REGEXP.test(toString.call(value));
+}
+
+function isArrayBuffer(obj) {
+  return toString.call(obj) === '[object ArrayBuffer]';
+}
+
+
+var trim = function(value) {
+  return isString(value) ? value.trim() : value;
+};
+
+// Copied from:
+// http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1021
+// Prereq: s is a string.
+var escapeForRegexp = function(s) {
+  return s
+    .replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, '\\$1')
+    // eslint-disable-next-line no-control-regex
+    .replace(/\x08/g, '\\x08');
+};
+
+
+/**
+ * @ngdoc function
+ * @name angular.isElement
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if a reference is a DOM element (or wrapped jQuery element).
+ *
+ * @param {*} value Reference to check.
+ * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).
+ */
+function isElement(node) {
+  return !!(node &&
+    (node.nodeName  // We are a direct element.
+    || (node.prop && node.attr && node.find)));  // We have an on and find method part of jQuery API.
+}
+
+/**
+ * @param str 'key1,key2,...'
+ * @returns {object} in the form of {key1:true, key2:true, ...}
+ */
+function makeMap(str) {
+  var obj = {}, items = str.split(','), i;
+  for (i = 0; i < items.length; i++) {
+    obj[items[i]] = true;
+  }
+  return obj;
+}
+
+
+function nodeName_(element) {
+  return lowercase(element.nodeName || (element[0] && element[0].nodeName));
+}
+
+function includes(array, obj) {
+  return Array.prototype.indexOf.call(array, obj) !== -1;
+}
+
+function arrayRemove(array, value) {
+  var index = array.indexOf(value);
+  if (index >= 0) {
+    array.splice(index, 1);
+  }
+  return index;
+}
+
+/**
+ * @ngdoc function
+ * @name angular.copy
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Creates a deep copy of `source`, which should be an object or an array. This functions is used
+ * internally, mostly in the change-detection code. It is not intended as an all-purpose copy
+ * function, and has several limitations (see below).
+ *
+ * * If no destination is supplied, a copy of the object or array is created.
+ * * If a destination is provided, all of its elements (for arrays) or properties (for objects)
+ *   are deleted and then all elements/properties from the source are copied to it.
+ * * If `source` is not an object or array (inc. `null` and `undefined`), `source` is returned.
+ * * If `source` is identical to `destination` an exception will be thrown.
+ *
+ * <br />
+ *
+ * <div class="alert alert-warning">
+ *   Only enumerable properties are taken into account. Non-enumerable properties (both on `source`
+ *   and on `destination`) will be ignored.
+ * </div>
+ *
+ * <div class="alert alert-warning">
+ *   `angular.copy` does not check if destination and source are of the same type. It's the
+ *   developer's responsibility to make sure they are compatible.
+ * </div>
+ *
+ * @knownIssue
+ * This is a non-exhaustive list of object types / features that are not handled correctly by
+ * `angular.copy`. Note that since this functions is used by the change detection code, this
+ * means binding or watching objects of these types (or that include these types) might not work
+ * correctly.
+ * - [`File`](https://developer.mozilla.org/docs/Web/API/File)
+ * - [`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map)
+ * - [`ImageData`](https://developer.mozilla.org/docs/Web/API/ImageData)
+ * - [`MediaStream`](https://developer.mozilla.org/docs/Web/API/MediaStream)
+ * - [`Set`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)
+ * - [`WeakMap`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)
+ * - [`getter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get)/
+ *   [`setter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)
+ *
+ * @param {*} source The source that will be used to make a copy. Can be any type, including
+ *     primitives, `null`, and `undefined`.
+ * @param {(Object|Array)=} destination Destination into which the source is copied. If provided,
+ *     must be of the same type as `source`.
+ * @returns {*} The copy or updated `destination`, if `destination` was specified.
+ *
+ * @example
+  <example module="copyExample" name="angular-copy">
+    <file name="index.html">
+      <div ng-controller="ExampleController">
+        <form novalidate class="simple-form">
+          <label>Name: <input type="text" ng-model="user.name" /></label><br />
+          <label>Age:  <input type="number" ng-model="user.age" /></label><br />
+          Gender: <label><input type="radio" ng-model="user.gender" value="male" />male</label>
+                  <label><input type="radio" ng-model="user.gender" value="female" />female</label><br />
+          <button ng-click="reset()">RESET</button>
+          <button ng-click="update(user)">SAVE</button>
+        </form>
+        <pre>form = {{user | json}}</pre>
+        <pre>leader = {{leader | json}}</pre>
+      </div>
+    </file>
+    <file name="script.js">
+      // Module: copyExample
+      angular.
+        module('copyExample', []).
+        controller('ExampleController', ['$scope', function($scope) {
+          $scope.leader = {};
+
+          $scope.reset = function() {
+            // Example with 1 argument
+            $scope.user = angular.copy($scope.leader);
+          };
+
+          $scope.update = function(user) {
+            // Example with 2 arguments
+            angular.copy(user, $scope.leader);
+          };
+
+          $scope.reset();
+        }]);
+    </file>
+  </example>
+ */
+function copy(source, destination, maxDepth) {
+  var stackSource = [];
+  var stackDest = [];
+  maxDepth = isValidObjectMaxDepth(maxDepth) ? maxDepth : NaN;
+
+  if (destination) {
+    if (isTypedArray(destination) || isArrayBuffer(destination)) {
+      throw ngMinErr('cpta', 'Can\'t copy! TypedArray destination cannot be mutated.');
+    }
+    if (source === destination) {
+      throw ngMinErr('cpi', 'Can\'t copy! Source and destination are identical.');
+    }
+
+    // Empty the destination object
+    if (isArray(destination)) {
+      destination.length = 0;
+    } else {
+      forEach(destination, function(value, key) {
+        if (key !== '$$hashKey') {
+          delete destination[key];
+        }
+      });
+    }
+
+    stackSource.push(source);
+    stackDest.push(destination);
+    return copyRecurse(source, destination, maxDepth);
+  }
+
+  return copyElement(source, maxDepth);
+
+  function copyRecurse(source, destination, maxDepth) {
+    maxDepth--;
+    if (maxDepth < 0) {
+      return '...';
+    }
+    var h = destination.$$hashKey;
+    var key;
+    if (isArray(source)) {
+      for (var i = 0, ii = source.length; i < ii; i++) {
+        destination.push(copyElement(source[i], maxDepth));
+      }
+    } else if (isBlankObject(source)) {
+      // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty
+      for (key in source) {
+        destination[key] = copyElement(source[key], maxDepth);
+      }
+    } else if (source && typeof source.hasOwnProperty === 'function') {
+      // Slow path, which must rely on hasOwnProperty
+      for (key in source) {
+        if (source.hasOwnProperty(key)) {
+          destination[key] = copyElement(source[key], maxDepth);
+        }
+      }
+    } else {
+      // Slowest path --- hasOwnProperty can't be called as a method
+      for (key in source) {
+        if (hasOwnProperty.call(source, key)) {
+          destination[key] = copyElement(source[key], maxDepth);
+        }
+      }
+    }
+    setHashKey(destination, h);
+    return destination;
+  }
+
+  function copyElement(source, maxDepth) {
+    // Simple values
+    if (!isObject(source)) {
+      return source;
+    }
+
+    // Already copied values
+    var index = stackSource.indexOf(source);
+    if (index !== -1) {
+      return stackDest[index];
+    }
+
+    if (isWindow(source) || isScope(source)) {
+      throw ngMinErr('cpws',
+        'Can\'t copy! Making copies of Window or Scope instances is not supported.');
+    }
+
+    var needsRecurse = false;
+    var destination = copyType(source);
+
+    if (destination === undefined) {
+      destination = isArray(source) ? [] : Object.create(getPrototypeOf(source));
+      needsRecurse = true;
+    }
+
+    stackSource.push(source);
+    stackDest.push(destination);
+
+    return needsRecurse
+      ? copyRecurse(source, destination, maxDepth)
+      : destination;
+  }
+
+  function copyType(source) {
+    switch (toString.call(source)) {
+      case '[object Int8Array]':
+      case '[object Int16Array]':
+      case '[object Int32Array]':
+      case '[object Float32Array]':
+      case '[object Float64Array]':
+      case '[object Uint8Array]':
+      case '[object Uint8ClampedArray]':
+      case '[object Uint16Array]':
+      case '[object Uint32Array]':
+        return new source.constructor(copyElement(source.buffer), source.byteOffset, source.length);
+
+      case '[object ArrayBuffer]':
+        // Support: IE10
+        if (!source.slice) {
+          // If we're in this case we know the environment supports ArrayBuffer
+          /* eslint-disable no-undef */
+          var copied = new ArrayBuffer(source.byteLength);
+          new Uint8Array(copied).set(new Uint8Array(source));
+          /* eslint-enable */
+          return copied;
+        }
+        return source.slice(0);
+
+      case '[object Boolean]':
+      case '[object Number]':
+      case '[object String]':
+      case '[object Date]':
+        return new source.constructor(source.valueOf());
+
+      case '[object RegExp]':
+        var re = new RegExp(source.source, source.toString().match(/[^/]*$/)[0]);
+        re.lastIndex = source.lastIndex;
+        return re;
+
+      case '[object Blob]':
+        return new source.constructor([source], {type: source.type});
+    }
+
+    if (isFunction(source.cloneNode)) {
+      return source.cloneNode(true);
+    }
+  }
+}
+
+
+// eslint-disable-next-line no-self-compare
+function simpleCompare(a, b) { return a === b || (a !== a && b !== b); }
+
+
+/**
+ * @ngdoc function
+ * @name angular.equals
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Determines if two objects or two values are equivalent. Supports value types, regular
+ * expressions, arrays and objects.
+ *
+ * Two objects or values are considered equivalent if at least one of the following is true:
+ *
+ * * Both objects or values pass `===` comparison.
+ * * Both objects or values are of the same type and all of their properties are equal by
+ *   comparing them with `angular.equals`.
+ * * Both values are NaN. (In JavaScript, NaN == NaN => false. But we consider two NaN as equal)
+ * * Both values represent the same regular expression (In JavaScript,
+ *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual
+ *   representation matches).
+ *
+ * During a property comparison, properties of `function` type and properties with names
+ * that begin with `$` are ignored.
+ *
+ * Scope and DOMWindow objects are being compared only by identify (`===`).
+ *
+ * @param {*} o1 Object or value to compare.
+ * @param {*} o2 Object or value to compare.
+ * @returns {boolean} True if arguments are equal.
+ *
+ * @example
+   <example module="equalsExample" name="equalsExample">
+     <file name="index.html">
+      <div ng-controller="ExampleController">
+        <form novalidate>
+          <h3>User 1</h3>
+          Name: <input type="text" ng-model="user1.name">
+          Age: <input type="number" ng-model="user1.age">
+
+          <h3>User 2</h3>
+          Name: <input type="text" ng-model="user2.name">
+          Age: <input type="number" ng-model="user2.age">
+
+          <div>
+            <br/>
+            <input type="button" value="Compare" ng-click="compare()">
+          </div>
+          User 1: <pre>{{user1 | json}}</pre>
+          User 2: <pre>{{user2 | json}}</pre>
+          Equal: <pre>{{result}}</pre>
+        </form>
+      </div>
+    </file>
+    <file name="script.js">
+        angular.module('equalsExample', []).controller('ExampleController', ['$scope', function($scope) {
+          $scope.user1 = {};
+          $scope.user2 = {};
+          $scope.compare = function() {
+            $scope.result = angular.equals($scope.user1, $scope.user2);
+          };
+        }]);
+    </file>
+  </example>
+ */
+function equals(o1, o2) {
+  if (o1 === o2) return true;
+  if (o1 === null || o2 === null) return false;
+  // eslint-disable-next-line no-self-compare
+  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN
+  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;
+  if (t1 === t2 && t1 === 'object') {
+    if (isArray(o1)) {
+      if (!isArray(o2)) return false;
+      if ((length = o1.length) === o2.length) {
+        for (key = 0; key < length; key++) {
+          if (!equals(o1[key], o2[key])) return false;
+        }
+        return true;
+      }
+    } else if (isDate(o1)) {
+      if (!isDate(o2)) return false;
+      return simpleCompare(o1.getTime(), o2.getTime());
+    } else if (isRegExp(o1)) {
+      if (!isRegExp(o2)) return false;
+      return o1.toString() === o2.toString();
+    } else {
+      if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) ||
+        isArray(o2) || isDate(o2) || isRegExp(o2)) return false;
+      keySet = createMap();
+      for (key in o1) {
+        if (key.charAt(0) === '$' || isFunction(o1[key])) continue;
+        if (!equals(o1[key], o2[key])) return false;
+        keySet[key] = true;
+      }
+      for (key in o2) {
+        if (!(key in keySet) &&
+            key.charAt(0) !== '$' &&
+            isDefined(o2[key]) &&
+            !isFunction(o2[key])) return false;
+      }
+      return true;
+    }
+  }
+  return false;
+}
+
+var csp = function() {
+  if (!isDefined(csp.rules)) {
+
+
+    var ngCspElement = (window.document.querySelector('[ng-csp]') ||
+                    window.document.querySelector('[data-ng-csp]'));
+
+    if (ngCspElement) {
+      var ngCspAttribute = ngCspElement.getAttribute('ng-csp') ||
+                    ngCspElement.getAttribute('data-ng-csp');
+      csp.rules = {
+        noUnsafeEval: !ngCspAttribute || (ngCspAttribute.indexOf('no-unsafe-eval') !== -1),
+        noInlineStyle: !ngCspAttribute || (ngCspAttribute.indexOf('no-inline-style') !== -1)
+      };
+    } else {
+      csp.rules = {
+        noUnsafeEval: noUnsafeEval(),
+        noInlineStyle: false
+      };
+    }
+  }
+
+  return csp.rules;
+
+  function noUnsafeEval() {
+    try {
+      // eslint-disable-next-line no-new, no-new-func
+      new Function('');
+      return false;
+    } catch (e) {
+      return true;
+    }
+  }
+};
+
+/**
+ * @ngdoc directive
+ * @module ng
+ * @name ngJq
+ *
+ * @element ANY
+ * @param {string=} ngJq the name of the library available under `window`
+ * to be used for angular.element
+ * @description
+ * Use this directive to force the angular.element library.  This should be
+ * used to force either jqLite by leaving ng-jq blank or setting the name of
+ * the jquery variable under window (eg. jQuery).
+ *
+ * Since AngularJS looks for this directive when it is loaded (doesn't wait for the
+ * DOMContentLoaded event), it must be placed on an element that comes before the script
+ * which loads angular. Also, only the first instance of `ng-jq` will be used and all
+ * others ignored.
+ *
+ * @example
+ * This example shows how to force jqLite using the `ngJq` directive to the `html` tag.
+ ```html
+ <!doctype html>
+ <html ng-app ng-jq>
+ ...
+ ...
+ </html>
+ ```
+ * @example
+ * This example shows how to use a jQuery based library of a different name.
+ * The library name must be available at the top most 'window'.
+ ```html
+ <!doctype html>
+ <html ng-app ng-jq="jQueryLib">
+ ...
+ ...
+ </html>
+ ```
+ */
+var jq = function() {
+  if (isDefined(jq.name_)) return jq.name_;
+  var el;
+  var i, ii = ngAttrPrefixes.length, prefix, name;
+  for (i = 0; i < ii; ++i) {
+    prefix = ngAttrPrefixes[i];
+    el = window.document.querySelector('[' + prefix.replace(':', '\\:') + 'jq]');
+    if (el) {
+      name = el.getAttribute(prefix + 'jq');
+      break;
+    }
+  }
+
+  return (jq.name_ = name);
+};
+
+function concat(array1, array2, index) {
+  return array1.concat(slice.call(array2, index));
+}
+
+function sliceArgs(args, startIndex) {
+  return slice.call(args, startIndex || 0);
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.bind
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for
+ * `fn`). You can supply optional `args` that are prebound to the function. This feature is also
+ * known as [partial application](http://en.wikipedia.org/wiki/Partial_application), as
+ * distinguished from [function currying](http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application).
+ *
+ * @param {Object} self Context which `fn` should be evaluated in.
+ * @param {function()} fn Function to be bound.
+ * @param {...*} args Optional arguments to be prebound to the `fn` function call.
+ * @returns {function()} Function that wraps the `fn` with all the specified bindings.
+ */
+function bind(self, fn) {
+  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];
+  if (isFunction(fn) && !(fn instanceof RegExp)) {
+    return curryArgs.length
+      ? function() {
+          return arguments.length
+            ? fn.apply(self, concat(curryArgs, arguments, 0))
+            : fn.apply(self, curryArgs);
+        }
+      : function() {
+          return arguments.length
+            ? fn.apply(self, arguments)
+            : fn.call(self);
+        };
+  } else {
+    // In IE, native methods are not functions so they cannot be bound (note: they don't need to be).
+    return fn;
+  }
+}
+
+
+function toJsonReplacer(key, value) {
+  var val = value;
+
+  if (typeof key === 'string' && key.charAt(0) === '$' && key.charAt(1) === '$') {
+    val = undefined;
+  } else if (isWindow(value)) {
+    val = '$WINDOW';
+  } else if (value &&  window.document === value) {
+    val = '$DOCUMENT';
+  } else if (isScope(value)) {
+    val = '$SCOPE';
+  }
+
+  return val;
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.toJson
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Serializes input into a JSON-formatted string. Properties with leading $$ characters will be
+ * stripped since AngularJS uses this notation internally.
+ *
+ * @param {Object|Array|Date|string|number|boolean} obj Input to be serialized into JSON.
+ * @param {boolean|number} [pretty=2] If set to true, the JSON output will contain newlines and whitespace.
+ *    If set to an integer, the JSON output will contain that many spaces per indentation.
+ * @returns {string|undefined} JSON-ified string representing `obj`.
+ * @knownIssue
+ *
+ * The Safari browser throws a `RangeError` instead of returning `null` when it tries to stringify a `Date`
+ * object with an invalid date value. The only reliable way to prevent this is to monkeypatch the
+ * `Date.prototype.toJSON` method as follows:
+ *
+ * ```
+ * var _DatetoJSON = Date.prototype.toJSON;
+ * Date.prototype.toJSON = function() {
+ *   try {
+ *     return _DatetoJSON.call(this);
+ *   } catch(e) {
+ *     if (e instanceof RangeError) {
+ *       return null;
+ *     }
+ *     throw e;
+ *   }
+ * };
+ * ```
+ *
+ * See https://github.com/angular/angular.js/pull/14221 for more information.
+ */
+function toJson(obj, pretty) {
+  if (isUndefined(obj)) return undefined;
+  if (!isNumber(pretty)) {
+    pretty = pretty ? 2 : null;
+  }
+  return JSON.stringify(obj, toJsonReplacer, pretty);
+}
+
+
+/**
+ * @ngdoc function
+ * @name angular.fromJson
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Deserializes a JSON string.
+ *
+ * @param {string} json JSON string to deserialize.
+ * @returns {Object|Array|string|number} Deserialized JSON string.
+ */
+function fromJson(json) {
+  return isString(json)
+      ? JSON.parse(json)
+      : json;
+}
+
+
+var ALL_COLONS = /:/g;
+function timezoneToOffset(timezone, fallback) {
+  // Support: IE 9-11 only, Edge 13-15+
+  // IE/Edge do not "understand" colon (`:`) in timezone
+  timezone = timezone.replace(ALL_COLONS, '');
+  var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;
+  return isNumberNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;
+}
+
+
+function addDateMinutes(date, minutes) {
+  date = new Date(date.getTime());
+  date.setMinutes(date.getMinutes() + minutes);
+  return date;
+}
+
+
+function convertTimezoneToLocal(date, timezone, reverse) {
+  reverse = reverse ? -1 : 1;
+  var dateTimezoneOffset = date.getTimezoneOffset();
+  var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
+  return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));
+}
+
+
+/**
+ * @returns {string} Returns the string representation of the element.
+ */
+function startingTag(element) {
+  element = jqLite(element).clone().empty();
+  var elemHtml = jqLite('<div></div>').append(element).html();
+  try {
+    return element[0].nodeType === NODE_TYPE_TEXT ? lowercase(elemHtml) :
+        elemHtml.
+          match(/^(<[^>]+>)/)[1].
+          replace(/^<([\w-]+)/, function(match, nodeName) {return '<' + lowercase(nodeName);});
+  } catch (e) {
+    return lowercase(elemHtml);
+  }
+
+}
+
+
+/////////////////////////////////////////////////
+
+/**
+ * Tries to decode the URI component without throwing an exception.
+ *
+ * @private
+ * @param str value potential URI component to check.
+ * @returns {boolean} True if `value` can be decoded
+ * with the decodeURIComponent function.
+ */
+function tryDecodeURIComponent(value) {
+  try {
+    return decodeURIComponent(value);
+  } catch (e) {
+    // Ignore any invalid uri component.
+  }
+}
+
+
+/**
+ * Parses an escaped url query string into key-value pairs.
+ * @returns {Object.<string,boolean|Array>}
+ */
+function parseKeyValue(/**string*/keyValue) {
+  var obj = {};
+  forEach((keyValue || '').split('&'), function(keyValue) {
+    var splitPoint, key, val;
+    if (keyValue) {
+      key = keyValue = keyValue.replace(/\+/g,'%20');
+      splitPoint = keyValue.indexOf('=');
+      if (splitPoint !== -1) {
+        key = keyValue.substring(0, splitPoint);
+        val = keyValue.substring(splitPoint + 1);
+      }
+      key = tryDecodeURIComponent(key);
+      if (isDefined(key)) {
+        val = isDefined(val) ? tryDecodeURIComponent(val) : true;
+        if (!hasOwnProperty.call(obj, key)) {
+          obj[key] = val;
+        } else if (isArray(obj[key])) {
+          obj[key].push(val);
+        } else {
+          obj[key] = [obj[key],val];
+        }
+      }
+    }
+  });
+  return obj;
+}
+
+function toKeyValue(obj) {
+  var parts = [];
+  forEach(obj, function(value, key) {
+    if (isArray(value)) {
+      forEach(value, function(arrayValue) {
+        parts.push(encodeUriQuery(key, true) +
+                   (arrayValue === true ? '' : '=' + encodeUriQuery(arrayValue, true)));
+      });
+    } else {
+    parts.push(encodeUriQuery(key, true) +
+               (value === true ? '' : '=' + encodeUriQuery(value, true)));
+    }
+  });
+  return parts.length ? parts.join('&') : '';
+}
+
+
+/**
+ * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
+ * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path
+ * segments:
+ *    segment       = *pchar
+ *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
+ *    pct-encoded   = "%" HEXDIG HEXDIG
+ *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
+ *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
+ *                     / "*" / "+" / "," / ";" / "="
+ */
+function encodeUriSegment(val) {
+  return encodeUriQuery(val, true).
+             replace(/%26/gi, '&').
+             replace(/%3D/gi, '=').
+             replace(/%2B/gi, '+');
+}
+
+
+/**
+ * This method is intended for encoding *key* or *value* parts of query component. We need a custom
+ * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be
+ * encoded per http://tools.ietf.org/html/rfc3986:
+ *    query         = *( pchar / "/" / "?" )
+ *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
+ *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
+ *    pct-encoded   = "%" HEXDIG HEXDIG
+ *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
+ *                     / "*" / "+" / "," / ";" / "="
+ */
+function encodeUriQuery(val, pctEncodeSpaces) {
+  return encodeURIComponent(val).
+             replace(/%40/gi, '@').
+             replace(/%3A/gi, ':').
+             replace(/%24/g, '$').
+             replace(/%2C/gi, ',').
+             replace(/%3B/gi, ';').
+             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));
+}
+
+var ngAttrPrefixes = ['ng-', 'data-ng-', 'ng:', 'x-ng-'];
+
+function getNgAttribute(element, ngAttr) {
+  var attr, i, ii = ngAttrPrefixes.length;
+  for (i = 0; i < ii; ++i) {
+    attr = ngAttrPrefixes[i] + ngAttr;
+    if (isString(attr = element.getAttribute(attr))) {
+      return attr;
+    }
+  }
+  return null;
+}
+
+function allowAutoBootstrap(document) {
+  var script = document.currentScript;
+
+  if (!script) {
+    // Support: IE 9-11 only
+    // IE does not have `document.currentScript`
+    return true;
+  }
+
+  // If the `currentScript` property has been clobbered just return false, since this indicates a probable attack
+  if (!(script instanceof window.HTMLScriptElement || script instanceof window.SVGScriptElement)) {
+    return false;
+  }
+
+  var attributes = script.attributes;
+  var srcs = [attributes.getNamedItem('src'), attributes.getNamedItem('href'), attributes.getNamedItem('xlink:href')];
+
+  return srcs.every(function(src) {
+    if (!src) {
+      return true;
+    }
+    if (!src.value) {
+      return false;
+    }
+
+    var link = document.createElement('a');
+    link.href = src.value;
+
+    if (document.location.origin === link.origin) {
+      // Same-origin resources are always allowed, even for banned URL schemes.
+      return true;
+    }
+    // Disabled bootstrapping unless angular.js was loaded from a known scheme used on the web.
+    // This is to prevent angular.js bundled with browser extensions from being used to bypass the
+    // content security policy in web pages and other browser extensions.
+    switch (link.protocol) {
+      case 'http:':
+      case 'https:':
+      case 'ftp:':
+      case 'blob:':
+      case 'file:':
+      case 'data:':
+        return true;
+      default:
+        return false;
+    }
+  });
+}
+
+// Cached as it has to run during loading so that document.currentScript is available.
+var isAutoBootstrapAllowed = allowAutoBootstrap(window.document);
+
+/**
+ * @ngdoc directive
+ * @name ngApp
+ * @module ng
+ *
+ * @element ANY
+ * @param {angular.Module} ngApp an optional application
+ *   {@link angular.module module} name to load.
+ * @param {boolean=} ngStrictDi if this attribute is present on the app element, the injector will be
+ *   created in "strict-di" mode. This means that the application will fail to invoke functions which
+ *   do not use explicit function annotation (and are thus unsuitable for minification), as described
+ *   in {@link guide/di the Dependency Injection guide}, and useful debugging info will assist in
+ *   tracking down the root of these bugs.
+ *
+ * @description
+ *
+ * Use this directive to **auto-bootstrap** an AngularJS application. The `ngApp` directive
+ * designates the **root element** of the application and is typically placed near the root element
+ * of the page - e.g. on the `<body>` or `<html>` tags.
+ *
+ * There are a few things to keep in mind when using `ngApp`:
+ * - only one AngularJS application can be auto-bootstrapped per HTML document. The first `ngApp`
+ *   found in the document will be used to define the root element to auto-bootstrap as an
+ *   application. To run multiple applications in an HTML document you must manually bootstrap them using
+ *   {@link angular.bootstrap} instead.
+ * - AngularJS applications cannot be nested within each other.
+ * - Do not use a directive that uses {@link ng.$compile#transclusion transclusion} on the same element as `ngApp`.
+ *   This includes directives such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and
+ *   {@link ngRoute.ngView `ngView`}.
+ *   Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
+ *   causing animations to stop working and making the injector inaccessible from outside the app.
+ *
+ * You can specify an **AngularJS module** to be used as the root module for the application.  This
+ * module will be loaded into the {@link auto.$injector} when the application is bootstrapped. It
+ * should contain the application code needed or have dependencies on other modules that will
+ * contain the code. See {@link angular.module} for more information.
+ *
+ * In the example below if the `ngApp` directive were not placed on the `html` element then the
+ * document would not be compiled, the `AppController` would not be instantiated and the `{{ a+b }}`
+ * would not be resolved to `3`.
+ *
+ * @example
+ *
+ * ### Simple Usage
+ *
+ * `ngApp` is the easiest, and most common way to bootstrap an application.
+ *
+ <example module="ngAppDemo" name="ng-app">
+   <file name="index.html">
+   <div ng-controller="ngAppDemoController">
+     I can add: {{a}} + {{b}} =  {{ a+b }}
+   </div>
+   </file>
+   <file name="script.js">
+   angular.module('ngAppDemo', []).controller('ngAppDemoController', function($scope) {
+     $scope.a = 1;
+     $scope.b = 2;
+   });
+   </file>
+ </example>
+ *
+ * @example
+ *
+ * ### With `ngStrictDi`
+ *
+ * Using `ngStrictDi`, you would see something like this:
+ *
+ <example ng-app-included="true" name="strict-di">
+   <file name="index.html">
+   <div ng-app="ngAppStrictDemo" ng-strict-di>
+       <div ng-controller="GoodController1">
+           I can add: {{a}} + {{b}} =  {{ a+b }}
+
+           <p>This renders because the controller does not fail to
+              instantiate, by using explicit annotation style (see
+              script.js for details)
+           </p>
+       </div>
+
+       <div ng-controller="GoodController2">
+           Name: <input ng-model="name"><br />
+           Hello, {{name}}!
+
+           <p>This renders because the controller does not fail to
+              instantiate, by using explicit annotation style
+              (see script.js for details)
+           </p>
+       </div>
+
+       <div ng-controller="BadController">
+           I can add: {{a}} + {{b}} =  {{ a+b }}
+
+           <p>The controller could not be instantiated, due to relying
+              on automatic function annotations (which are disabled in
+              strict mode). As such, the content of this section is not
+              interpolated, and there should be an error in your web console.
+           </p>
+       </div>
+   </div>
+   </file>
+   <file name="script.js">
+   angular.module('ngAppStrictDemo', [])
+     // BadController will fail to instantiate, due to relying on automatic function annotation,
+     // rather than an explicit annotation
+     .controller('BadController', function($scope) {
+       $scope.a = 1;
+       $scope.b = 2;
+     })
+     // Unlike BadController, GoodController1 and GoodController2 will not fail to be instantiated,
+     // due to using explicit annotations using the array style and $inject property, respectively.
+     .controller('GoodController1', ['$scope', function($scope) {
+       $scope.a = 1;
+       $scope.b = 2;
+     }])
+     .controller('GoodController2', GoodController2);
+     function GoodController2($scope) {
+       $scope.name = 'World';
+     }
+     GoodController2.$inject = ['$scope'];
+   </file>
+   <file name="style.css">
+   div[ng-controller] {
+       margin-bottom: 1em;
+       -webkit-border-radius: 4px;
+       border-radius: 4px;
+       border: 1px solid;
+       padding: .5em;
+   }
+   div[ng-controller^=Good] {
+       border-color: #d6e9c6;
+       background-color: #dff0d8;
+       color: #3c763d;
+   }
+   div[ng-controller^=Bad] {
+       border-color: #ebccd1;
+       background-color: #f2dede;
+       color: #a94442;
+       margin-bottom: 0;
+   }
+   </file>
+ </example>
+ */
+function angularInit(element, bootstrap) {
+  var appElement,
+      module,
+      config = {};
+
+  // The element `element` has priority over any other element.
+  forEach(ngAttrPrefixes, function(prefix) {
+    var name = prefix + 'app';
+
+    if (!appElement && element.hasAttribute && element.hasAttribute(name)) {
+      appElement = element;
+      module = element.getAttribute(name);
+    }
+  });
+  forEach(ngAttrPrefixes, function(prefix) {
+    var name = prefix + 'app';
+    var candidate;
+
+    if (!appElement && (candidate = element.querySelector('[' + name.replace(':', '\\:') + ']'))) {
+      appElement = candidate;
+      module = candidate.getAttribute(name);
+    }
+  });
+  if (appElement) {
+    if (!isAutoBootstrapAllowed) {
+      window.console.error('AngularJS: disabling automatic bootstrap. <script> protocol indicates ' +
+          'an extension, document.location.href does not match.');
+      return;
+    }
+    config.strictDi = getNgAttribute(appElement, 'strict-di') !== null;
+    bootstrap(appElement, module ? [module] : [], config);
+  }
+}
+
+/**
+ * @ngdoc function
+ * @name angular.bootstrap
+ * @module ng
+ * @description
+ * Use this function to manually start up AngularJS application.
+ *
+ * For more information, see the {@link guide/bootstrap Bootstrap guide}.
+ *
+ * AngularJS will detect if it has been loaded into the browser more than once and only allow the
+ * first loaded script to be bootstrapped and will report a warning to the browser console for
+ * each of the subsequent scripts. This prevents strange results in applications, where otherwise
+ * multiple instances of AngularJS try to work on the DOM.
+ *
+ * <div class="alert alert-warning">
+ * **Note:** Protractor based end-to-end tests cannot use this function to bootstrap manually.
+ * They must use {@link ng.directive:ngApp ngApp}.
+ * </div>
+ *
+ * <div class="alert alert-warning">
+ * **Note:** Do not bootstrap the app on an element with a directive that uses {@link ng.$compile#transclusion transclusion},
+ * such as {@link ng.ngIf `ngIf`}, {@link ng.ngInclude `ngInclude`} and {@link ngRoute.ngView `ngView`}.
+ * Doing this misplaces the app {@link ng.$rootElement `$rootElement`} and the app's {@link auto.$injector injector},
+ * causing animations to stop working and making the injector inaccessible from outside the app.
+ * </div>
+ *
+ * ```html
+ * <!doctype html>
+ * <html>
+ * <body>
+ * <div ng-controller="WelcomeController">
+ *   {{greeting}}
+ * </div>
+ *
+ * <script src="angular.js"></script>
+ * <script>
+ *   var app = angular.module('demo', [])
+ *   .controller('WelcomeController', function($scope) {
+ *       $scope.greeting = 'Welcome!';
+ *   });
+ *   angular.bootstrap(document, ['demo']);
+ * </script>
+ * </body>
+ * </html>
+ * ```
+ *
+ * @param {DOMElement} element DOM element which is the root of AngularJS application.
+ * @param {Array<String|Function|Array>=} modules an array of modules to load into the application.
+ *     Each item in the array should be the name of a predefined module or a (DI annotated)
+ *     function that will be invoked by the injector as a `config` block.
+ *     See: {@link angular.module modules}
+ * @param {Object=} config an object for defining configuration options for the application. The
+ *     following keys are supported:
+ *
+ * * `strictDi` - disable automatic function annotation for the application. This is meant to
+ *   assist in finding bugs which break minified code. Defaults to `false`.
+ *
+ * @returns {auto.$injector} Returns the newly created injector for this app.
+ */
+function bootstrap(element, modules, config) {
+  if (!isObject(config)) config = {};
+  var defaultConfig = {
+    strictDi: false
+  };
+  config = extend(defaultConfig, config);
+  var doBootstrap = function() {
+    element = jqLite(element);
+
+    if (element.injector()) {
+      var tag = (element[0] === window.document) ? 'document' : startingTag(element);
+      // Encode angle brackets to prevent input from being sanitized to empty string #8683.
+      throw ngMinErr(
+          'btstrpd',
+          'App already bootstrapped with this element \'{0}\'',
+          tag.replace(/</,'&lt;').replace(/>/,'&gt;'));
+    }
+
+    modules = modules || [];
+    modules.unshift(['$provide', function($provide) {
+      $provide.value('$rootElement', element);
+    }]);
+
+    if (config.debugInfoEnabled) {
+      // Pushing so that this overrides `debugInfoEnabled` setting defined in user's `modules`.
+      modules.push(['$compileProvider', function($compileProvider) {
+        $compileProvider.debugInfoEnabled(true);
+      }]);
+    }
+
+    modules.unshift('ng');
+    var injector = createInjector(modules, config.strictDi);
+    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',
+       function bootstrapApply(scope, element, compile, injector) {
+        scope.$apply(function() {
+          element.data('$injector', injector);
+          compile(element)(scope);
+        });
+      }]
+    );
+    return injector;
+  };
+
+  var NG_ENABLE_DEBUG_INFO = /^NG_ENABLE_DEBUG_INFO!/;
+  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;
+
+  if (window && NG_ENABLE_DEBUG_INFO.test(window.name)) {
+    config.debugInfoEnabled = true;
+    window.name = window.name.replace(NG_ENABLE_DEBUG_INFO, '');
+  }
+
+  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {
+    return doBootstrap();
+  }
+
+  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');
+  angular.resumeBootstrap = function(extraModules) {
+    forEach(extraModules, function(module) {
+      modules.push(module);
+    });
+    return doBootstrap();
+  };
+
+  if (isFunction(angular.resumeDeferredBootstrap)) {
+    angular.resumeDeferredBootstrap();
+  }
+}
+
+/**
+ * @ngdoc function
+ * @name angular.reloadWithDebugInfo
+ * @module ng
+ * @description
+ * Use this function to reload the current application with debug information turned on.
+ * This takes precedence over a call to `$compileProvider.debugInfoEnabled(false)`.
+ *
+ * See {@link ng.$compileProvider#debugInfoEnabled} for more.
+ */
+function reloadWithDebugInfo() {
+  window.name = 'NG_ENABLE_DEBUG_INFO!' + window.name;
+  window.location.reload();
+}
+
+/**
+ * @name angular.getTestability
+ * @module ng
+ * @description
+ * Get the testability service for the instance of AngularJS on the given
+ * element.
+ * @param {DOMElement} element DOM element which is the root of AngularJS application.
+ */
+function getTestability(rootElement) {
+  var injector = angular.element(rootElement).injector();
+  if (!injector) {
+    throw ngMinErr('test',
+      'no injector found for element argument to getTestability');
+  }
+  return injector.get('$$testability');
+}
+
+var SNAKE_CASE_REGEXP = /[A-Z]/g;
+function snake_case(name, separator) {
+  separator = separator || '_';
+  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {
+    return (pos ? separator : '') + letter.toLowerCase();
+  });
+}
+
+var bindJQueryFired = false;
+function bindJQuery() {
+  var originalCleanData;
+
+  if (bindJQueryFired) {
+    return;
+  }
+
+  // bind to jQuery if present;
+  var jqName = jq();
+  jQuery = isUndefined(jqName) ? window.jQuery :   // use jQuery (if present)
+           !jqName             ? undefined     :   // use jqLite
+                                 window[jqName];   // use jQuery specified by `ngJq`
+
+  // Use jQuery if it exists with proper functionality, otherwise default to us.
+  // AngularJS 1.2+ requires jQuery 1.7+ for on()/off() support.
+  // AngularJS 1.3+ technically requires at least jQuery 2.1+ but it may work with older
+  // versions. It will not work for sure with jQuery <1.7, though.
+  if (jQuery && jQuery.fn.on) {
+    jqLite = jQuery;
+    extend(jQuery.fn, {
+      scope: JQLitePrototype.scope,
+      isolateScope: JQLitePrototype.isolateScope,
+      controller: /** @type {?} */ (JQLitePrototype).controller,
+      injector: JQLitePrototype.injector,
+      inheritedData: JQLitePrototype.inheritedData
+    });
+  } else {
+    jqLite = JQLite;
+  }
+
+  // All nodes removed from the DOM via various jqLite/jQuery APIs like .remove()
+  // are passed through jqLite/jQuery.cleanData. Monkey-patch this method to fire
+  // the $destroy event on all removed nodes.
+  originalCleanData = jqLite.cleanData;
+  jqLite.cleanData = function(elems) {
+    var events;
+    for (var i = 0, elem; (elem = elems[i]) != null; i++) {
+      events = (jqLite._data(elem) || {}).events;
+      if (events && events.$destroy) {
+        jqLite(elem).triggerHandler('$destroy');
+      }
+    }
+    originalCleanData(elems);
+  };
+
+  angular.element = jqLite;
+
+  // Prevent double-proxying.
+  bindJQueryFired = true;
+}
+
+/**
+ * @ngdoc function
+ * @name angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Restores the pre-1.8 behavior of jqLite that turns XHTML-like strings like
+ * `<div /><span />` to `<div></div><span></span>` instead of `<div><span></span></div>`.
+ * The new behavior is a security fix. Thus, if you need to call this function, please try to adjust
+ * your code for this change and remove your use of this function as soon as possible.
+
+ * Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the
+ * [jQuery 3.5 upgrade guide](https://jquery.com/upgrade-guide/3.5/) for more details
+ * about the workarounds.
+ */
+function UNSAFE_restoreLegacyJqLiteXHTMLReplacement() {
+  JQLite.legacyXHTMLReplacement = true;
+}
+
+/**
+ * throw error if the argument is falsy.
+ */
+function assertArg(arg, name, reason) {
+  if (!arg) {
+    throw ngMinErr('areq', 'Argument \'{0}\' is {1}', (name || '?'), (reason || 'required'));
+  }
+  return arg;
+}
+
+function assertArgFn(arg, name, acceptArrayAnnotation) {
+  if (acceptArrayAnnotation && isArray(arg)) {
+      arg = arg[arg.length - 1];
+  }
+
+  assertArg(isFunction(arg), name, 'not a function, got ' +
+      (arg && typeof arg === 'object' ? arg.constructor.name || 'Object' : typeof arg));
+  return arg;
+}
+
+/**
+ * throw error if the name given is hasOwnProperty
+ * @param  {String} name    the name to test
+ * @param  {String} context the context in which the name is used, such as module or directive
+ */
+function assertNotHasOwnProperty(name, context) {
+  if (name === 'hasOwnProperty') {
+    throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
+  }
+}
+
+/**
+ * Return the value accessible from the object by path. Any undefined traversals are ignored
+ * @param {Object} obj starting object
+ * @param {String} path path to traverse
+ * @param {boolean} [bindFnToScope=true]
+ * @returns {Object} value as accessible by path
+ */
+//TODO(misko): this function needs to be removed
+function getter(obj, path, bindFnToScope) {
+  if (!path) return obj;
+  var keys = path.split('.');
+  var key;
+  var lastInstance = obj;
+  var len = keys.length;
+
+  for (var i = 0; i < len; i++) {
+    key = keys[i];
+    if (obj) {
+      obj = (lastInstance = obj)[key];
+    }
+  }
+  if (!bindFnToScope && isFunction(obj)) {
+    return bind(lastInstance, obj);
+  }
+  return obj;
+}
+
+/**
+ * Return the DOM siblings between the first and last node in the given array.
+ * @param {Array} array like object
+ * @returns {Array} the inputted object or a jqLite collection containing the nodes
+ */
+function getBlockNodes(nodes) {
+  // TODO(perf): update `nodes` instead of creating a new object?
+  var node = nodes[0];
+  var endNode = nodes[nodes.length - 1];
+  var blockNodes;
+
+  for (var i = 1; node !== endNode && (node = node.nextSibling); i++) {
+    if (blockNodes || nodes[i] !== node) {
+      if (!blockNodes) {
+        blockNodes = jqLite(slice.call(nodes, 0, i));
+      }
+      blockNodes.push(node);
+    }
+  }
+
+  return blockNodes || nodes;
+}
+
+
+/**
+ * Creates a new object without a prototype. This object is useful for lookup without having to
+ * guard against prototypically inherited properties via hasOwnProperty.
+ *
+ * Related micro-benchmarks:
+ * - http://jsperf.com/object-create2
+ * - http://jsperf.com/proto-map-lookup/2
+ * - http://jsperf.com/for-in-vs-object-keys2
+ *
+ * @returns {Object}
+ */
+function createMap() {
+  return Object.create(null);
+}
+
+function stringify(value) {
+  if (value == null) { // null || undefined
+    return '';
+  }
+  switch (typeof value) {
+    case 'string':
+      break;
+    case 'number':
+      value = '' + value;
+      break;
+    default:
+      if (hasCustomToString(value) && !isArray(value) && !isDate(value)) {
+        value = value.toString();
+      } else {
+        value = toJson(value);
+      }
+  }
+
+  return value;
+}
+
+var NODE_TYPE_ELEMENT = 1;
+var NODE_TYPE_ATTRIBUTE = 2;
+var NODE_TYPE_TEXT = 3;
+var NODE_TYPE_COMMENT = 8;
+var NODE_TYPE_DOCUMENT = 9;
+var NODE_TYPE_DOCUMENT_FRAGMENT = 11;
+
+/**
+ * @ngdoc type
+ * @name angular.Module
+ * @module ng
+ * @description
+ *
+ * Interface for configuring AngularJS {@link angular.module modules}.
+ */
+
+function setupModuleLoader(window) {
+
+  var $injectorMinErr = minErr('$injector');
+  var ngMinErr = minErr('ng');
+
+  function ensure(obj, name, factory) {
+    return obj[name] || (obj[name] = factory());
+  }
+
+  var angular = ensure(window, 'angular', Object);
+
+  // We need to expose `angular.$$minErr` to modules such as `ngResource` that reference it during bootstrap
+  angular.$$minErr = angular.$$minErr || minErr;
+
+  return ensure(angular, 'module', function() {
+    /** @type {Object.<string, angular.Module>} */
+    var modules = {};
+
+    /**
+     * @ngdoc function
+     * @name angular.module
+     * @module ng
+     * @description
+     *
+     * The `angular.module` is a global place for creating, registering and retrieving AngularJS
+     * modules.
+     * All modules (AngularJS core or 3rd party) that should be available to an application must be
+     * registered using this mechanism.
+     *
+     * Passing one argument retrieves an existing {@link angular.Module},
+     * whereas passing more than one argument creates a new {@link angular.Module}
+     *
+     *
+     * # Module
+     *
+     * A module is a collection of services, directives, controllers, filters, and configuration information.
+     * `angular.module` is used to configure the {@link auto.$injector $injector}.
+     *
+     * ```js
+     * // Create a new module
+     * var myModule = angular.module('myModule', []);
+     *
+     * // register a new service
+     * myModule.value('appName', 'MyCoolApp');
+     *
+     * // configure existing services inside initialization blocks.
+     * myModule.config(['$locationProvider', function($locationProvider) {
+     *   // Configure existing providers
+     *   $locationProvider.hashPrefix('!');
+     * }]);
+     * ```
+     *
+     * Then you can create an injector and load your modules like this:
+     *
+     * ```js
+     * var injector = angular.injector(['ng', 'myModule'])
+     * ```
+     *
+     * However it's more likely that you'll just use
+     * {@link ng.directive:ngApp ngApp} or
+     * {@link angular.bootstrap} to simplify this process for you.
+     *
+     * @param {!string} name The name of the module to create or retrieve.
+     * @param {!Array.<string>=} requires If specified then new module is being created. If
+     *        unspecified then the module is being retrieved for further configuration.
+     * @param {Function=} configFn Optional configuration function for the module. Same as
+     *        {@link angular.Module#config Module#config()}.
+     * @returns {angular.Module} new module with the {@link angular.Module} api.
+     */
+    return function module(name, requires, configFn) {
+
+      var info = {};
+
+      var assertNotHasOwnProperty = function(name, context) {
+        if (name === 'hasOwnProperty') {
+          throw ngMinErr('badname', 'hasOwnProperty is not a valid {0} name', context);
+        }
+      };
+
+      assertNotHasOwnProperty(name, 'module');
+      if (requires && modules.hasOwnProperty(name)) {
+        modules[name] = null;
+      }
+      return ensure(modules, name, function() {
+        if (!requires) {
+          throw $injectorMinErr('nomod', 'Module \'{0}\' is not available! You either misspelled ' +
+             'the module name or forgot to load it. If registering a module ensure that you ' +
+             'specify the dependencies as the second argument.', name);
+        }
+
+        /** @type {!Array.<Array.<*>>} */
+        var invokeQueue = [];
+
+        /** @type {!Array.<Function>} */
+        var configBlocks = [];
+
+        /** @type {!Array.<Function>} */
+        var runBlocks = [];
+
+        var config = invokeLater('$injector', 'invoke', 'push', configBlocks);
+
+        /** @type {angular.Module} */
+        var moduleInstance = {
+          // Private state
+          _invokeQueue: invokeQueue,
+          _configBlocks: configBlocks,
+          _runBlocks: runBlocks,
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#info
+           * @module ng
+           *
+           * @param {Object=} info Information about the module
+           * @returns {Object|Module} The current info object for this module if called as a getter,
+           *                          or `this` if called as a setter.
+           *
+           * @description
+           * Read and write custom information about this module.
+           * For example you could put the version of the module in here.
+           *
+           * ```js
+           * angular.module('myModule', []).info({ version: '1.0.0' });
+           * ```
+           *
+           * The version could then be read back out by accessing the module elsewhere:
+           *
+           * ```
+           * var version = angular.module('myModule').info().version;
+           * ```
+           *
+           * You can also retrieve this information during runtime via the
+           * {@link $injector#modules `$injector.modules`} property:
+           *
+           * ```js
+           * var version = $injector.modules['myModule'].info().version;
+           * ```
+           */
+          info: function(value) {
+            if (isDefined(value)) {
+              if (!isObject(value)) throw ngMinErr('aobj', 'Argument \'{0}\' must be an object', 'value');
+              info = value;
+              return this;
+            }
+            return info;
+          },
+
+          /**
+           * @ngdoc property
+           * @name angular.Module#requires
+           * @module ng
+           *
+           * @description
+           * Holds the list of modules which the injector will load before the current module is
+           * loaded.
+           */
+          requires: requires,
+
+          /**
+           * @ngdoc property
+           * @name angular.Module#name
+           * @module ng
+           *
+           * @description
+           * Name of the module.
+           */
+          name: name,
+
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#provider
+           * @module ng
+           * @param {string} name service name
+           * @param {Function} providerType Construction function for creating new instance of the
+           *                                service.
+           * @description
+           * See {@link auto.$provide#provider $provide.provider()}.
+           */
+          provider: invokeLaterAndSetModuleName('$provide', 'provider'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#factory
+           * @module ng
+           * @param {string} name service name
+           * @param {Function} providerFunction Function for creating new instance of the service.
+           * @description
+           * See {@link auto.$provide#factory $provide.factory()}.
+           */
+          factory: invokeLaterAndSetModuleName('$provide', 'factory'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#service
+           * @module ng
+           * @param {string} name service name
+           * @param {Function} constructor A constructor function that will be instantiated.
+           * @description
+           * See {@link auto.$provide#service $provide.service()}.
+           */
+          service: invokeLaterAndSetModuleName('$provide', 'service'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#value
+           * @module ng
+           * @param {string} name service name
+           * @param {*} object Service instance object.
+           * @description
+           * See {@link auto.$provide#value $provide.value()}.
+           */
+          value: invokeLater('$provide', 'value'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#constant
+           * @module ng
+           * @param {string} name constant name
+           * @param {*} object Constant value.
+           * @description
+           * Because the constants are fixed, they get applied before other provide methods.
+           * See {@link auto.$provide#constant $provide.constant()}.
+           */
+          constant: invokeLater('$provide', 'constant', 'unshift'),
+
+           /**
+           * @ngdoc method
+           * @name angular.Module#decorator
+           * @module ng
+           * @param {string} name The name of the service to decorate.
+           * @param {Function} decorFn This function will be invoked when the service needs to be
+           *                           instantiated and should return the decorated service instance.
+           * @description
+           * See {@link auto.$provide#decorator $provide.decorator()}.
+           */
+          decorator: invokeLaterAndSetModuleName('$provide', 'decorator', configBlocks),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#animation
+           * @module ng
+           * @param {string} name animation name
+           * @param {Function} animationFactory Factory function for creating new instance of an
+           *                                    animation.
+           * @description
+           *
+           * **NOTE**: animations take effect only if the **ngAnimate** module is loaded.
+           *
+           *
+           * Defines an animation hook that can be later used with
+           * {@link $animate $animate} service and directives that use this service.
+           *
+           * ```js
+           * module.animation('.animation-name', function($inject1, $inject2) {
+           *   return {
+           *     eventName : function(element, done) {
+           *       //code to run the animation
+           *       //once complete, then run done()
+           *       return function cancellationFunction(element) {
+           *         //code to cancel the animation
+           *       }
+           *     }
+           *   }
+           * })
+           * ```
+           *
+           * See {@link ng.$animateProvider#register $animateProvider.register()} and
+           * {@link ngAnimate ngAnimate module} for more information.
+           */
+          animation: invokeLaterAndSetModuleName('$animateProvider', 'register'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#filter
+           * @module ng
+           * @param {string} name Filter name - this must be a valid AngularJS expression identifier
+           * @param {Function} filterFactory Factory function for creating new instance of filter.
+           * @description
+           * See {@link ng.$filterProvider#register $filterProvider.register()}.
+           *
+           * <div class="alert alert-warning">
+           * **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
+           * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
+           * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
+           * (`myapp_subsection_filterx`).
+           * </div>
+           */
+          filter: invokeLaterAndSetModuleName('$filterProvider', 'register'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#controller
+           * @module ng
+           * @param {string|Object} name Controller name, or an object map of controllers where the
+           *    keys are the names and the values are the constructors.
+           * @param {Function} constructor Controller constructor function.
+           * @description
+           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.
+           */
+          controller: invokeLaterAndSetModuleName('$controllerProvider', 'register'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#directive
+           * @module ng
+           * @param {string|Object} name Directive name, or an object map of directives where the
+           *    keys are the names and the values are the factories.
+           * @param {Function} directiveFactory Factory function for creating new instance of
+           * directives.
+           * @description
+           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.
+           */
+          directive: invokeLaterAndSetModuleName('$compileProvider', 'directive'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#component
+           * @module ng
+           * @param {string|Object} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`),
+           *    or an object map of components where the keys are the names and the values are the component definition objects.
+           * @param {Object} options Component definition object (a simplified
+           *    {@link ng.$compile#directive-definition-object directive definition object})
+           *
+           * @description
+           * See {@link ng.$compileProvider#component $compileProvider.component()}.
+           */
+          component: invokeLaterAndSetModuleName('$compileProvider', 'component'),
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#config
+           * @module ng
+           * @param {Function} configFn Execute this function on module load. Useful for service
+           *    configuration.
+           * @description
+           * Use this method to configure services by injecting their
+           * {@link angular.Module#provider `providers`}, e.g. for adding routes to the
+           * {@link ngRoute.$routeProvider $routeProvider}.
+           *
+           * Note that you can only inject {@link angular.Module#provider `providers`} and
+           * {@link angular.Module#constant `constants`} into this function.
+           *
+           * For more about how to configure services, see
+           * {@link providers#provider-recipe Provider Recipe}.
+           */
+          config: config,
+
+          /**
+           * @ngdoc method
+           * @name angular.Module#run
+           * @module ng
+           * @param {Function} initializationFn Execute this function after injector creation.
+           *    Useful for application initialization.
+           * @description
+           * Use this method to register work which should be performed when the injector is done
+           * loading all modules.
+           */
+          run: function(block) {
+            runBlocks.push(block);
+            return this;
+          }
+        };
+
+        if (configFn) {
+          config(configFn);
+        }
+
+        return moduleInstance;
+
+        /**
+         * @param {string} provider
+         * @param {string} method
+         * @param {String=} insertMethod
+         * @returns {angular.Module}
+         */
+        function invokeLater(provider, method, insertMethod, queue) {
+          if (!queue) queue = invokeQueue;
+          return function() {
+            queue[insertMethod || 'push']([provider, method, arguments]);
+            return moduleInstance;
+          };
+        }
+
+        /**
+         * @param {string} provider
+         * @param {string} method
+         * @returns {angular.Module}
+         */
+        function invokeLaterAndSetModuleName(provider, method, queue) {
+          if (!queue) queue = invokeQueue;
+          return function(recipeName, factoryFunction) {
+            if (factoryFunction && isFunction(factoryFunction)) factoryFunction.$$moduleName = name;
+            queue.push([provider, method, arguments]);
+            return moduleInstance;
+          };
+        }
+      });
+    };
+  });
+
+}
+
+/* global shallowCopy: true */
+
+/**
+ * Creates a shallow copy of an object, an array or a primitive.
+ *
+ * Assumes that there are no proto properties for objects.
+ */
+function shallowCopy(src, dst) {
+  if (isArray(src)) {
+    dst = dst || [];
+
+    for (var i = 0, ii = src.length; i < ii; i++) {
+      dst[i] = src[i];
+    }
+  } else if (isObject(src)) {
+    dst = dst || {};
+
+    for (var key in src) {
+      if (!(key.charAt(0) === '$' && key.charAt(1) === '$')) {
+        dst[key] = src[key];
+      }
+    }
+  }
+
+  return dst || src;
+}
+
+/* exported toDebugString */
+
+function serializeObject(obj, maxDepth) {
+  var seen = [];
+
+  // There is no direct way to stringify object until reaching a specific depth
+  // and a very deep object can cause a performance issue, so we copy the object
+  // based on this specific depth and then stringify it.
+  if (isValidObjectMaxDepth(maxDepth)) {
+    // This file is also included in `angular-loader`, so `copy()` might not always be available in
+    // the closure. Therefore, it is lazily retrieved as `angular.copy()` when needed.
+    obj = angular.copy(obj, null, maxDepth);
+  }
+  return JSON.stringify(obj, function(key, val) {
+    val = toJsonReplacer(key, val);
+    if (isObject(val)) {
+
+      if (seen.indexOf(val) >= 0) return '...';
+
+      seen.push(val);
+    }
+    return val;
+  });
+}
+
+function toDebugString(obj, maxDepth) {
+  if (typeof obj === 'function') {
+    return obj.toString().replace(/ \{[\s\S]*$/, '');
+  } else if (isUndefined(obj)) {
+    return 'undefined';
+  } else if (typeof obj !== 'string') {
+    return serializeObject(obj, maxDepth);
+  }
+  return obj;
+}
+
+/* global angularModule: true,
+  version: true,
+
+  $CompileProvider,
+
+  htmlAnchorDirective,
+  inputDirective,
+  hiddenInputBrowserCacheDirective,
+  formDirective,
+  scriptDirective,
+  selectDirective,
+  optionDirective,
+  ngBindDirective,
+  ngBindHtmlDirective,
+  ngBindTemplateDirective,
+  ngClassDirective,
+  ngClassEvenDirective,
+  ngClassOddDirective,
+  ngCloakDirective,
+  ngControllerDirective,
+  ngFormDirective,
+  ngHideDirective,
+  ngIfDirective,
+  ngIncludeDirective,
+  ngIncludeFillContentDirective,
+  ngInitDirective,
+  ngNonBindableDirective,
+  ngPluralizeDirective,
+  ngRefDirective,
+  ngRepeatDirective,
+  ngShowDirective,
+  ngStyleDirective,
+  ngSwitchDirective,
+  ngSwitchWhenDirective,
+  ngSwitchDefaultDirective,
+  ngOptionsDirective,
+  ngTranscludeDirective,
+  ngModelDirective,
+  ngListDirective,
+  ngChangeDirective,
+  patternDirective,
+  patternDirective,
+  requiredDirective,
+  requiredDirective,
+  minlengthDirective,
+  minlengthDirective,
+  maxlengthDirective,
+  maxlengthDirective,
+  ngValueDirective,
+  ngModelOptionsDirective,
+  ngAttributeAliasDirectives,
+  ngEventDirectives,
+
+  $AnchorScrollProvider,
+  $AnimateProvider,
+  $CoreAnimateCssProvider,
+  $$CoreAnimateJsProvider,
+  $$CoreAnimateQueueProvider,
+  $$AnimateRunnerFactoryProvider,
+  $$AnimateAsyncRunFactoryProvider,
+  $BrowserProvider,
+  $CacheFactoryProvider,
+  $ControllerProvider,
+  $DateProvider,
+  $DocumentProvider,
+  $$IsDocumentHiddenProvider,
+  $ExceptionHandlerProvider,
+  $FilterProvider,
+  $$ForceReflowProvider,
+  $InterpolateProvider,
+  $$IntervalFactoryProvider,
+  $IntervalProvider,
+  $HttpProvider,
+  $HttpParamSerializerProvider,
+  $HttpParamSerializerJQLikeProvider,
+  $HttpBackendProvider,
+  $xhrFactoryProvider,
+  $jsonpCallbacksProvider,
+  $LocationProvider,
+  $LogProvider,
+  $$MapProvider,
+  $ParseProvider,
+  $RootScopeProvider,
+  $QProvider,
+  $$QProvider,
+  $$SanitizeUriProvider,
+  $SceProvider,
+  $SceDelegateProvider,
+  $SnifferProvider,
+  $$TaskTrackerFactoryProvider,
+  $TemplateCacheProvider,
+  $TemplateRequestProvider,
+  $$TestabilityProvider,
+  $TimeoutProvider,
+  $$RAFProvider,
+  $WindowProvider,
+  $$jqLiteProvider,
+  $$CookieReaderProvider
+*/
+
+
+/**
+ * @ngdoc object
+ * @name angular.version
+ * @module ng
+ * @description
+ * An object that contains information about the current AngularJS version.
+ *
+ * This object has the following properties:
+ *
+ * - `full` – `{string}` – Full version string, such as "0.9.18".
+ * - `major` – `{number}` – Major version number, such as "0".
+ * - `minor` – `{number}` – Minor version number, such as "9".
+ * - `dot` – `{number}` – Dot version number, such as "18".
+ * - `codeName` – `{string}` – Code name of the release, such as "jiggling-armfat".
+ */
+var version = {
+  // These placeholder strings will be replaced by grunt's `build` task.
+  // They need to be double- or single-quoted.
+  full: '1.8.3',
+  major: 1,
+  minor: 8,
+  dot: 3,
+  codeName: 'ultimate-farewell'
+};
+
+
+function publishExternalAPI(angular) {
+  extend(angular, {
+    'errorHandlingConfig': errorHandlingConfig,
+    'bootstrap': bootstrap,
+    'copy': copy,
+    'extend': extend,
+    'merge': merge,
+    'equals': equals,
+    'element': jqLite,
+    'forEach': forEach,
+    'injector': createInjector,
+    'noop': noop,
+    'bind': bind,
+    'toJson': toJson,
+    'fromJson': fromJson,
+    'identity': identity,
+    'isUndefined': isUndefined,
+    'isDefined': isDefined,
+    'isString': isString,
+    'isFunction': isFunction,
+    'isObject': isObject,
+    'isNumber': isNumber,
+    'isElement': isElement,
+    'isArray': isArray,
+    'version': version,
+    'isDate': isDate,
+    'callbacks': {$$counter: 0},
+    'getTestability': getTestability,
+    'reloadWithDebugInfo': reloadWithDebugInfo,
+    'UNSAFE_restoreLegacyJqLiteXHTMLReplacement': UNSAFE_restoreLegacyJqLiteXHTMLReplacement,
+    '$$minErr': minErr,
+    '$$csp': csp,
+    '$$encodeUriSegment': encodeUriSegment,
+    '$$encodeUriQuery': encodeUriQuery,
+    '$$lowercase': lowercase,
+    '$$stringify': stringify,
+    '$$uppercase': uppercase
+  });
+
+  angularModule = setupModuleLoader(window);
+
+  angularModule('ng', ['ngLocale'], ['$provide',
+    function ngModule($provide) {
+      // $$sanitizeUriProvider needs to be before $compileProvider as it is used by it.
+      $provide.provider({
+        $$sanitizeUri: $$SanitizeUriProvider
+      });
+      $provide.provider('$compile', $CompileProvider).
+        directive({
+            a: htmlAnchorDirective,
+            input: inputDirective,
+            textarea: inputDirective,
+            form: formDirective,
+            script: scriptDirective,
+            select: selectDirective,
+            option: optionDirective,
+            ngBind: ngBindDirective,
+            ngBindHtml: ngBindHtmlDirective,
+            ngBindTemplate: ngBindTemplateDirective,
+            ngClass: ngClassDirective,
+            ngClassEven: ngClassEvenDirective,
+            ngClassOdd: ngClassOddDirective,
+            ngCloak: ngCloakDirective,
+            ngController: ngControllerDirective,
+            ngForm: ngFormDirective,
+            ngHide: ngHideDirective,
+            ngIf: ngIfDirective,
+            ngInclude: ngIncludeDirective,
+            ngInit: ngInitDirective,
+            ngNonBindable: ngNonBindableDirective,
+            ngPluralize: ngPluralizeDirective,
+            ngRef: ngRefDirective,
+            ngRepeat: ngRepeatDirective,
+            ngShow: ngShowDirective,
+            ngStyle: ngStyleDirective,
+            ngSwitch: ngSwitchDirective,
+            ngSwitchWhen: ngSwitchWhenDirective,
+            ngSwitchDefault: ngSwitchDefaultDirective,
+            ngOptions: ngOptionsDirective,
+            ngTransclude: ngTranscludeDirective,
+            ngModel: ngModelDirective,
+            ngList: ngListDirective,
+            ngChange: ngChangeDirective,
+            pattern: patternDirective,
+            ngPattern: patternDirective,
+            required: requiredDirective,
+            ngRequired: requiredDirective,
+            minlength: minlengthDirective,
+            ngMinlength: minlengthDirective,
+            maxlength: maxlengthDirective,
+            ngMaxlength: maxlengthDirective,
+            ngValue: ngValueDirective,
+            ngModelOptions: ngModelOptionsDirective
+        }).
+        directive({
+          ngInclude: ngIncludeFillContentDirective,
+          input: hiddenInputBrowserCacheDirective
+        }).
+        directive(ngAttributeAliasDirectives).
+        directive(ngEventDirectives);
+      $provide.provider({
+        $anchorScroll: $AnchorScrollProvider,
+        $animate: $AnimateProvider,
+        $animateCss: $CoreAnimateCssProvider,
+        $$animateJs: $$CoreAnimateJsProvider,
+        $$animateQueue: $$CoreAnimateQueueProvider,
+        $$AnimateRunner: $$AnimateRunnerFactoryProvider,
+        $$animateAsyncRun: $$AnimateAsyncRunFactoryProvider,
+        $browser: $BrowserProvider,
+        $cacheFactory: $CacheFactoryProvider,
+        $controller: $ControllerProvider,
+        $document: $DocumentProvider,
+        $$isDocumentHidden: $$IsDocumentHiddenProvider,
+        $exceptionHandler: $ExceptionHandlerProvider,
+        $filter: $FilterProvider,
+        $$forceReflow: $$ForceReflowProvider,
+        $interpolate: $InterpolateProvider,
+        $interval: $IntervalProvider,
+        $$intervalFactory: $$IntervalFactoryProvider,
+        $http: $HttpProvider,
+        $httpParamSerializer: $HttpParamSerializerProvider,
+        $httpParamSerializerJQLike: $HttpParamSerializerJQLikeProvider,
+        $httpBackend: $HttpBackendProvider,
+        $xhrFactory: $xhrFactoryProvider,
+        $jsonpCallbacks: $jsonpCallbacksProvider,
+        $location: $LocationProvider,
+        $log: $LogProvider,
+        $parse: $ParseProvider,
+        $rootScope: $RootScopeProvider,
+        $q: $QProvider,
+        $$q: $$QProvider,
+        $sce: $SceProvider,
+        $sceDelegate: $SceDelegateProvider,
+        $sniffer: $SnifferProvider,
+        $$taskTrackerFactory: $$TaskTrackerFactoryProvider,
+        $templateCache: $TemplateCacheProvider,
+        $templateRequest: $TemplateRequestProvider,
+        $$testability: $$TestabilityProvider,
+        $timeout: $TimeoutProvider,
+        $window: $WindowProvider,
+        $$rAF: $$RAFProvider,
+        $$jqLite: $$jqLiteProvider,
+        $$Map: $$MapProvider,
+        $$cookieReader: $$CookieReaderProvider
+      });
+    }
+  ])
+  .info({ angularVersion: '1.8.3' });
+}
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+ *     Any commits to this file should be reviewed with security in mind.  *
+ *   Changes to this file can potentially create security vulnerabilities. *
+ *          An approval from 2 Core members with history of modifying      *
+ *                         this file is required.                          *
+ *                                                                         *
+ *  Does the change somehow allow for arbitrary javascript to be executed? *
+ *    Or allows for someone to change the prototype of built-in objects?   *
+ *     Or gives undesired access to variables likes document or window?    *
+ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
+
+/* global
+  JQLitePrototype: true,
+  BOOLEAN_ATTR: true,
+  ALIASED_ATTR: true
+*/
+
+//////////////////////////////////
+//JQLite
+//////////////////////////////////
+
+/**
+ * @ngdoc function
+ * @name angular.element
+ * @module ng
+ * @kind function
+ *
+ * @description
+ * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.
+ *
+ * If jQuery is available, `angular.element` is an alias for the
+ * [jQuery](http://api.jquery.com/jQuery/) function. If jQuery is not available, `angular.element`
+ * delegates to AngularJS's built-in subset of jQuery, called "jQuery lite" or **jqLite**.
+ *
+ * jqLite is a tiny, API-compatible subset of jQuery that allows
+ * AngularJS to manipulate the DOM in a cross-browser compatible way. jqLite implements only the most
+ * commonly needed functionality with the goal of having a very small footprint.
+ *
+ * To use `jQuery`, simply ensure it is loaded before the `angular.js` file. You can also use the
+ * {@link ngJq `ngJq`} directive to specify that jqlite should be used over jQuery, or to use a
+ * specific version of jQuery if multiple versions exist on the page.
+ *
+ * <div class="alert alert-info">**Note:** All element references in AngularJS are always wrapped with jQuery or
+ * jqLite (such as the element argument in a directive's compile / link function). They are never raw DOM references.</div>
+ *
+ * <div class="alert alert-warning">**Note:** Keep in mind that this function will not find elements
+ * by tag name / CSS selector. For lookups by tag name, try instead `angular.element(document).find(...)`
+ * or `$document.find()`, or use the standard DOM APIs, e.g. `document.querySelectorAll()`.</div>
+ *
+ * ## AngularJS's jqLite
+ * jqLite provides only the following jQuery methods:
+ *
+ * - [`addClass()`](http://api.jquery.com/addClass/) - Does not support a function as first argument
+ * - [`after()`](http://api.jquery.com/after/)
+ * - [`append()`](http://api.jquery.com/append/) - Contrary to jQuery, this doesn't clone elements
+ *   so will not work correctly when invoked on a jqLite object containing more than one DOM node
+ * - [`attr()`](http://api.jquery.com/attr/) - Does not support functions as parameters
+ * - [`bind()`](http://api.jquery.com/bind/) (_deprecated_, use [`on()`](http://api.jquery.com/on/)) - Does not support namespaces, selectors or eventData
+ * - [`children()`](http://api.jquery.com/children/) - Does not support selectors
+ * - [`clone()`](http://api.jquery.com/clone/)
+ * - [`contents()`](http://api.jquery.com/contents/)
+ * - [`css()`](http://api.jquery.com/css/) - Only retrieves inline-styles, does not call `getComputedStyle()`.
+ *   As a setter, does not convert numbers to strings or append 'px', and also does not have automatic property prefixing.
+ * - [`data()`](http://api.jquery.com/data/)
+ * - [`detach()`](http://api.jquery.com/detach/)
+ * - [`empty()`](http://api.jquery.com/empty/)
+ * - [`eq()`](http://api.jquery.com/eq/)
+ * - [`find()`](http://api.jquery.com/find/) - Limited to lookups by tag name
+ * - [`hasClass()`](http://api.jquery.com/hasClass/)
+ * - [`html()`](http://api.jquery.com/html/)
+ * - [`next()`](http://api.jquery.com/next/) - Does not support selectors
+ * - [`on()`](http://api.jquery.com/on/) - Does not support namespaces, selectors or eventData
+ * - [`off()`](http://api.jquery.com/off/) - Does not support namespaces, selectors or event object as parameter
+ * - [`one()`](http://api.jquery.com/one/) - Does not support namespaces or selectors
+ * - [`parent()`](http://api.jquery.com/parent/) - Does not support selectors
+ * - [`prepend()`](http://api.jquery.com/prepend/)
+ * - [`prop()`](http://api.jquery.com/prop/)
+ * - [`ready()`](http://api.jquery.com/ready/) (_deprecated_, use `angular.element(callback)` instead of `angular.element(document).ready(callback)`)
+ * - [`remove()`](http://api.jquery.com/remove/)
+ * - [`removeAttr()`](http://api.jquery.com/removeAttr/) - Does not support multiple attributes
+ * - [`removeClass()`](http://api.jquery.com/removeClass/) - Does not support a function as first argument
+ * - [`removeData()`](http://api.jquery.com/removeData/)
+ * - [`replaceWith()`](http://api.jquery.com/replaceWith/)
+ * - [`text()`](http://api.jquery.com/text/)
+ * - [`toggleClass()`](http://api.jquery.com/toggleClass/) - Does not support a function as first argument
+ * - [`triggerHandler()`](http://api.jquery.com/triggerHandler/) - Passes a dummy event object to handlers
+ * - [`unbind()`](http://api.jquery.com/unbind/) (_deprecated_, use [`off()`](http://api.jquery.com/off/)) - Does not support namespaces or event object as parameter
+ * - [`val()`](http://api.jquery.com/val/)
+ * - [`wrap()`](http://api.jquery.com/wrap/)
+ *
+ * jqLite also provides a method restoring pre-1.8 insecure treatment of XHTML-like tags.
+ * This legacy behavior turns input like `<div /><span />` to `<div></div><span></span>`
+ * instead of `<div><span></span></div>` like version 1.8 & newer do. To restore it, invoke:
+ * ```js
+ * angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement();
+ * ```
+ * Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the
+ * [jQuery 3.5 upgrade guide](https://jquery.com/upgrade-guide/3.5/) for more details
+ * about the workarounds.
+ *
+ * ## jQuery/jqLite Extras
+ * AngularJS also provides the following additional methods and events to both jQuery and jqLite:
+ *
+ * ### Events
+ * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event
+ *    on all DOM nodes being removed.  This can be used to clean up any 3rd party bindings to the DOM
+ *    element before it is removed.
+ *
+ * ### Methods
+ * - `controller(name)` - retrieves the controller of the current element or its parent. By default
+ *   retrieves controller associated with the `ngController` directive. If `name` is provided as
+ *   camelCase directive name, then the controller for this directive will be retrieved (e.g.
+ *   `'ngModel'`).
+ * - `injector()` - retrieves the injector of the current element or its parent.
+ * - `scope()` - retrieves the {@link ng.$rootScope.Scope scope} of the current
+ *   element or its parent. Requires {@link guide/production#disabling-debug-data Debug Data} to
+ *   be enabled.
+ * - `isolateScope()` - retrieves an isolate {@link ng.$rootScope.Scope scope} if one is attached directly to the
+ *   current element. This getter should be used only on elements that contain a directive which starts a new isolate
+ *   scope. Calling `scope()` on this element always returns the original non-isolate scope.
+ *   Requires {@link guide/production#disabling-debug-data Debug Data} to be enabled.
+ * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top
+ *   parent element is reached.
+ *
+ * @knownIssue You cannot spy on `angular.element` if you are using Jasmine version 1.x. See
+ * https://github.com/angular/angular.js/issues/14251 for more information.
+ *
+ * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.
+ * @returns {Object} jQuery object.
+ */
+
+JQLite.expando = 'ng339';
+
+var jqCache = JQLite.cache = {},
+    jqId = 1;
+
+/*
+ * !!! This is an undocumented "private" function !!!
+ */
+JQLite._data = function(node) {
+  //jQuery always returns an object on cache miss
+  return this.cache[node[this.expando]] || {};
+};
+
+function jqNextId() { return ++jqId; }
+
+
+var DASH_LOWERCASE_REGEXP = /-([a-z])/g;
+var MS_HACK_REGEXP = /^-ms-/;
+var MOUSE_EVENT_MAP = { mouseleave: 'mouseout', mouseenter: 'mouseover' };
+var jqLiteMinErr = minErr('jqLite');
+
+/**
+ * Converts kebab-case to camelCase.
+ * There is also a special case for the ms prefix starting with a lowercase letter.
+ * @param name Name to normalize
+ */
+function cssKebabToCamel(name) {
+    return kebabToCamel(name.replace(MS_HACK_REGEXP, 'ms-'));
+}
+
+function fnCamelCaseReplace(all, letter) {
+  return letter.toUpperCase();
+}
+
+/**
+ * Converts kebab-case to camelCase.
+ * @param name Name to normalize
+ */
+function kebabToCamel(name) {
+  return name
+    .replace(DASH_LOWERCASE_REGEXP, fnCamelCaseReplace);
+}
+
+var SINGLE_TAG_REGEXP = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/;
+var HTML_REGEXP = /<|&#?\w+;/;
+var TAG_NAME_REGEXP = /<([\w:-]+)/;
+var XHTML_TAG_REGEXP = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi;
+
+// Table parts need to be wrapped with `<table>` or they're
+// stripped to their contents when put in a div.
+// XHTML parsers do not magically insert elements in the
+// same way that tag soup parsers do, so we cannot shorten
+// this by omitting <tbody> or other required elements.
+var wrapMap = {
+  thead: ['table'],
+  col: ['colgroup', 'table'],
+  tr: ['tbody', 'table'],
+  td: ['tr', 'tbody', 'table']
+};
+
+wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
+wrapMap.th = wrapMap.td;
+
+// Support: IE <10 only
+// IE 9 requires an option wrapper & it needs to have the whole table structure
+// set up in advance; assigning `"<td></td>"` to `tr.innerHTML` doesn't work, etc.
+var wrapMapIE9 = {
+  option: [1, '<select multiple="multiple">', '</select>'],
+  _default: [0, '', '']
+};
+
+for (var key in wrapMap) {
+  var wrapMapValueClosing = wrapMap[key];
+  var wrapMapValue = wrapMapValueClosing.slice().reverse();
+  wrapMapIE9[key] = [wrapMapValue.length, '<' + wrapMapValue.join('><') + '>', '</' + wrapMapValueClosing.join('></') + '>'];
+}
+
+wrapMapIE9.optgroup = wrapMapIE9.option;
+
+function jqLiteIsTextNode(html) {
+  return !HTML_REGEXP.test(html);
+}
+
+function jqLiteAcceptsData(node) {
+  // The window object can accept data but has no nodeType
+  // Otherwise we are only interested in elements (1) and documents (9)
+  var nodeType = node.nodeType;
+  return nodeType === NODE_TYPE_ELEMENT || !nodeType || nodeType === NODE_TYPE_DOCUMENT;
+}
+
+function jqLiteHasData(node) {
+  for (var key in jqCache[node.ng339]) {
+    return true;
+  }
+  return false;
+}
+
+function jqLiteBuildFragment(html, context) {
+  var tmp, tag, wrap, finalHtml,
+      fragment = context.createDocumentFragment(),
+      nodes = [], i;
+
+  if (jqLiteIsTextNode(html)) {
+    // Convert non-html into a text node
+    nodes.push(context.createTextNode(html));
+  } else {
+    // Convert html into DOM nodes
+    tmp = fragment.appendChild(context.createElement('div'));
+    tag = (TAG_NAME_REGEXP.exec(html) || ['', ''])[1].toLowerCase();
+    finalHtml = JQLite.legacyXHTMLReplacement ?
+      html.replace(XHTML_TAG_REGEXP, '<$1></$2>') :
+      html;
+
+    if (msie < 10) {
+      wrap = wrapMapIE9[tag] || wrapMapIE9._default;
+      tmp.innerHTML = wrap[1] + finalHtml + wrap[2];
+
+      // Descend through wrappers to the right content
+      i = wrap[0];
+      while (i--) {
+        tmp = tmp.firstChild;
+      }
+    } else {
+      wrap = wrapMap[tag] || [];
+
+      // Create wrappers & descend into them
+      i = wrap.length;
+      while (--i > -1) {
+        tmp.appendChild(window.document.createElement(wrap[i]));
+        tmp = tmp.firstChild;
+      }
+
+      tmp.innerHTML = finalHtml;
+    }
+
+    nodes = concat(nodes, tmp.childNodes);
+
+    tmp = fragment.firstChild;
+    tmp.textContent = '';
+  }
+
+  // Remove wrapper from fragment
+  fragment.textContent = '';
+  fragment.innerHTML = ''; // Clear inner HTML
+  forEach(nodes, function(node) {
+    fragment.appendChild(node);
+  });
+
+  return fragment;
+}
+
+function jqLiteParseHTML(html, context) {
+  context = context || window.document;
+  var parsed;
+
+  if ((parsed = SINGLE_TAG_REGEXP.exec(html))) {
+    return [context.createElement(parsed[1])];
+  }
+
+  if ((parsed = jqLiteBuildFragment(html, context))) {
+    return parsed.childNodes;
+  }
+
+  return [];
+}
+
+function jqLiteWrapNode(node, wrapper) {
+  var parent = node.parentNode;
+
+  if (parent) {
+    parent.replaceChild(wrapper, node);
+  }
+
+  wrapper.appendChild(node);
+}
+
+
+// IE9-11 has no method "contains" in SVG element and in Node.prototype. Bug #10259.
+var jqLiteContains = window.Node.prototype.contains || /** @this */ function(arg) {
+  // eslint-disable-next-line no-bitwise
+  return !!(this.compareDocumentPosition(arg) & 16);
+};
+
+/////////////////////////////////////////////
+function JQLite(element) {
+  if (element instanceof JQLite) {
+    return element;
+  }
+
+  var argIsString;
+
+  if (isString(element)) {
+    element = trim(element);
+    argIsString = true;
+  }
+  if (!(this instanceof JQLite)) {
+    if (argIsString && element.charAt(0) !== '<') {
+      throw jqLiteMinErr('nosel', 'Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element');
+    }
+    return new JQLite(element);
+  }
+
+  if (argIsString) {
+    jqLiteAddNodes(this, jqLiteParseHTML(element));
+  } else if (isFunction(element)) {
+    jqLiteReady(element);
+  } else {
+    jqLiteAddNodes(this, element);
+  }
+}
+
+function jqLiteClone(element) {
+  return element.cloneNode(true);
+}
+
+function jqLiteDealoc(element, onlyDescendants) {
+  if (!onlyDescendants && jqLiteAcceptsData(element)) jqLite.cleanData([element]);
+
+  if (element.querySelectorAll) {
+    jqLite.cleanData(element.querySelectorAll('*'));
+  }
+}
+
+function isEmptyObject(obj) {
+  var name;
+
+  for (name in obj) {
+    return false;
+  }
+  return true;
+}
+
+function removeIfEmptyData(element) {
+  var expandoId = element.ng339;
+  var expandoStore = expandoId && jqCache[expandoId];
+
+  var events = expandoStore && expandoStore.events;
+  var data = expandoStore && expandoStore.data;
+
+  if ((!data || isEmptyObject(data)) && (!events || isEmptyObject(events))) {
+    delete jqCache[expandoId];
+    element.ng339 = undefined; // don't delete DOM expandos. IE and Chrome don't like it
+  }
+}
+
+function jqLiteOff(element, type, fn, unsupported) {
+  if (isDefined(unsupported)) throw jqLiteMinErr('offargs', 'jqLite#off() does not support the `selector` argument');
+
+  var expandoStore = jqLiteExpandoStore(element);
+  var events = expandoStore && expandoStore.events;
+  var handle = expandoStore && expandoStore.handle;
+
+  if (!handle) return; //no listeners registered
+
+  if (!type) {
+    for (type in events) {
+      if (type !== '$destroy') {
+        element.removeEventListener(type, handle);
+      }
+      delete events[type];
+    }
+  } else {
+
+    var removeHandler = function(type) {
+      var listenerFns = events[type];
+      if (isDefined(fn)) {
+        arrayRemove(listenerFns || [], fn);
+      }
+      if (!(isDefined(fn) && listenerFns && listenerFns.length > 0)) {
+        element.removeEventListener(type, handle);
+        delete events[type];
+      }
+    };
+
+    forEach(type.split(' '), function(type) {
+      removeHandler(type);
+      if (MOUSE_EVENT_MAP[type]) {
+        removeHandler(MOUSE_EVENT_MAP[type]);
+      }
+    });
+  }
+
+  removeIfEmptyData(element);
+}
+
+function jqLiteRemoveData(element, name) {
+  var expandoId = element.ng339;
+  var expandoStore = expandoId && jqCache[expandoId];
+
+  if (expandoStore) {
+    if (name) {
+      delete expandoStore.data[name];
+    } else {
+      expandoStore.data = {};
+    }
+
+    removeIfEmptyData(element);
+  }
+}
+
+
+function jqLiteExpandoStore(element, createIfNecessary) {
+  var expandoId = element.ng339,
+      expandoStore = expandoId && jqCache[expandoId];
+
+  if (createIfNecessary && !expandoStore) {
+    element.ng339 = expandoId = jqNextId();
+    expandoStore = jqCache[expandoId] = {events: {}, data: {}, handle: undefined};
+  }
+
+  return expandoStore;
+}
+
+
+function jqLiteData(element, key, value) {
+  if (jqLiteAcceptsData(element)) {
+    var prop;
+
+    var isSimpleSetter = isDefined(value);
+    var isSimpleGetter = !isSimpleSetter && key && !isObject(key);
+    var massGetter = !key;
+    var expandoStore = jqLiteExpandoStore(element, !isSimpleGetter);
+    var data = expandoStore && expandoStore.data;
+
+    if (isSimpleSetter) { // data('key', value)
+      data[kebabToCamel(key)] = value;
+    } else {
+      if (massGetter) {  // data()
+        return data;
+      } else {
+        if (isSimpleGetter) { // data('key')
+          // don't force creation of expandoStore if it doesn't exist yet
+          return data && data[kebabToCamel(key)];
+        } else { // mass-setter: data({key1: val1, key2: val2})
+          for (prop in key) {
+            data[kebabToCamel(prop)] = key[prop];
+          }
+        }
+      }
+    }
+  }
+}
+
+function jqLiteHasClass(element, selector) {
+  if (!element.getAttribute) return false;
+  return ((' ' + (element.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').
+      indexOf(' ' + selector + ' ') > -1);
+}
+
+function jqLiteRemoveClass(element, cssClasses) {
+  if (cssClasses && element.setAttribute) {
+    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')
+                            .replace(/[\n\t]/g, ' ');
+    var newClasses = existingClasses;
+
+    forEach(cssClasses.split(' '), function(cssClass) {
+      cssClass = trim(cssClass);
+      newClasses = newClasses.replace(' ' + cssClass + ' ', ' ');
+    });
+
+    if (newClasses !== existingClasses) {
+      element.setAttribute('class', trim(newClasses));
+    }
+  }
+}
+
+function jqLiteAddClass(element, cssClasses) {
+  if (cssClasses && element.setAttribute) {
+    var existingClasses = (' ' + (element.getAttribute('class') || '') + ' ')
+                            .replace(/[\n\t]/g, ' ');
+    var newClasses = existingClasses;
+
+    forEach(cssClasses.split(' '), function(cssClass) {
+      cssClass = trim(cssClass);
+      if (newClasses.indexOf(' ' + cssClass + ' ') === -1) {
+        newClasses += cssClass + ' ';
+      }
+    });
+
+    if (newClasses !== existingClasses) {
+      element.setAttribute('class', trim(newClasses));
+    }
+  }
+}
+
+
+function jqLiteAddNodes(root, elements) {
+  // THIS CODE IS VERY HOT. Don't make changes without benchmarking.
+
+  if (elements) {
+
+    // if a Node (the most common case)
+    if (elements.nodeType) {
+      root[root.length++] = elements;
+    } else {
+      var length = elements.length;
+
+      // if an Array or NodeList and not a Window
+      if (typeof length === 'number' && elements.window !== elements) {
+        if (length) {
+          for (var i = 0; i < length; i++) {
+            root[root.length++] = elements[i];
+          }
+        }
+      } else {
+        root[root.length++] = elements;
+      }
+    }
+  }
+}
+
+
+function jqLiteController(element, name) {
+  return jqLiteInheritedData(element, '$' + (name || 'ngController') + 'Controller');
+}
+
+function jqLiteInheritedData(element, name, value) {
+  // if element is the document object work with the html element instead
+  // this makes $(document).scope() possible
+  if (element.nodeType === NODE_TYPE_DOCUMENT) {
+    element = element.documentElement;
+  }
+  var names = isArray(name) ? name : [name];
+
+  while (element) {
+    for (var i = 0, ii = names.length; i < ii; i++) {
+      if (isDefined(value = jqLite.data(element, names[i]))) return value;
+    }
+
+    // If dealing with a document fragment node with a host element, and no parent, use the host
+    // element as the parent. This enables directives within a Shadow DOM or polyfilled Shadow DOM
+    // to lookup parent controllers.
+    element = element.parentNode || (element.nodeType === NODE_TYPE_DOCUMENT_FRAGMENT && element.host);
+  }
+}
+
+function jqLiteEmpty(element) {
+  jqLiteDealoc(element, true);
+  while (element.firstChild) {
+    element.removeChild(element.firstChild);
+  }
+}
+
+function jqLiteRemove(element, keepData) {
+  if (!keepData) jqLiteDealoc(element);
+  var parent = element.parentNode;
+  if (parent) parent.removeChild(element);
+}
+
+
+function jqLiteDocumentLoaded(action, win) {
+  win = win || window;
+  if (win.document.readyState === 'complete') {
+    // Force the action to be run async for consistent behavior
+    // from the action's point of view
+    // i.e. it will definitely not be in a $apply
+    win.setTimeout(action);
+  } else {
+    // No need to unbind this handler as load is only ever called once
+    jqLite(win).on('load', action);
+  }
+}
+
+function jqLiteReady(fn) {
+  function trigger() {
+    window.document.removeEventListener('DOMContentLoaded', trigger);
+    window.removeEventListener('load', trigger);
+    fn();
+  }
+
+  // check if document is already loaded
+  if (window.document.readyState === 'complete') {
+    window.setTimeout(fn);
+  } else {
+    // We can not use jqLite since we are not done loading and jQuery could be loaded later.
+
+    // Works for modern browsers and IE9
+    window.document.addEventListener('DOMContentLoaded', trigger);
+
+    // Fallback to window.onload for others
+    window.addEventListener('load', trigger);
+  }
+}
+
+//////////////////////////////////////////
+// Functions which are declared directly.
+//////////////////////////////////////////
+var JQLitePrototype = JQLite.prototype = {
+  ready: jqLiteReady,
+  toString: function() {
+    var value = [];
+    forEach(this, function(e) { value.push('' + e);});
+    return '[' + value.join(', ') + ']';
+  },
+
+  eq: function(index) {
+      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);
+  },
+
+  length: 0,
+  push: push,
+  sort: [].sort,
+  splice: [].splice
+};
+
+//////////////////////////////////////////
+// Functions iterating getter/setters.
+// these functions return self on setter and
+// value on get.
+//////////////////////////////////////////
+var BOOLEAN_ATTR = {};
+forEach('multiple,selected,checked,disabled,readOnly,required,open'.split(','), function(value) {
+  BOOLEAN_ATTR[lowercase(value)] = value;
+});
+var BOOLEAN_ELEMENTS = {};
+forEach('input,select,option,textarea,button,form,details'.split(','), function(value) {
+  BOOLEAN_ELEMENTS[value] = true;
+});
+var ALIASED_ATTR = {
+  'ngMinlength': 'minlength',
+  'ngMaxlength': 'maxlength',
+  'ngMin': 'min',
+  'ngMax': 'max',
+  'ngPattern': 'pattern',
+  'ngStep': 'step'
+};
+
+function getBooleanAttrName(element, name) {
+  // check dom last since we will most likely fail on name
+  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];
+
+  // booleanAttr is here twice to minimize DOM access
+  return booleanAttr && BOOLEAN_ELEMENTS[nodeName_(element)] && booleanAttr;
+}
+
+function getAliasedAttrName(name) {
+  return ALIASED_ATTR[name];
+}
+
+forEach({
+  data: jqLiteData,
+  removeData: jqLiteRemoveData,
+  hasData: jqLiteHasData,
+  cleanData: function jqLiteCleanData(nodes) {
+    for (var i = 0, ii = nodes.length; i < ii; i++) {
+      jqLiteRemoveData(nodes[i]);
+      jqLiteOff(nodes[i]);
+    }
+  }
+}, function(fn, name) {
+  JQLite[name] = fn;
+});
+
+forEach({
+  data: jqLiteData,
+  inheritedData: jqLiteInheritedData,
+
+  scope: function(element) {
+    // Can't use jqLiteData here directly so we stay compatible with jQuery!
+    return jqLite.data(element, '$scope') || jqLiteInheritedData(element.parentNode || element, ['$isolateScope', '$scope']);
+  },
+
+  isolateScope: function(element) {
+    // Can't use jqLiteData here directly so we stay compatible with jQuery!
+    return jqLite.data(element, '$isolateScope') || jqLite.data(element, '$isolateScopeNoTemplate');
+  },
+
+  controller: jqLiteController,
+
+  injector: function(element) {
+    return jqLiteInheritedData(element, '$injector');
+  },
+
+  removeAttr: function(element, name) {
+    element.removeAttribute(name);
+  },
+
+  hasClass: jqLiteHasClass,
+
+  css: function(element, name, value) {
+    name = cssKebabToCamel(name);
+
+    if (isDefined(value)) {
+      element.style[name] = value;
+    } else {
+      return element.style[name];
+    }
+  },
+
+  attr: function(element, name, value) {
+    var ret;
+    var nodeType = element.nodeType;
+    if (nodeType === NODE_TYPE_TEXT || nodeType === NODE_TYPE_ATTRIBUTE || nodeType === NODE_TYPE_COMMENT ||
+      !element.getAttribute) {
+      return;
+    }
+
+    var lowercasedName = lowercase(name);
+    var isBooleanAttr = BOOLEAN_ATTR[lowercasedName];
+
+    if (isDefined(value)) {
+      // setter
+
+      if (value === null || (value === false && isBooleanAttr)) {
+        element.removeAttribute(name);
+      } else {
+        element.setAttribute(name, isBooleanAttr ? lowercasedName : value);
+      }
+    } else {
+      // getter
+
+      ret = element.getAttribute(name);
+
+      if (isBooleanAttr && ret !== null) {
+        ret = lowercasedName;
+      }
+      // Normalize non-existing attributes to undefined (as jQuery).
+      return ret === null ? undefined : ret;
+    }
+  },
+
+  prop: function(element, name, value) {
+    if (isDefined(value)) {
+      element[name] = value;
+    } else {
+      return element[name];
+    }
+  },
+
+  text: (function() {
+    getText.$dv = '';
+    return getText;
+
+    function getText(element, value) {
+      if (isUndefined(value)) {
+        var nodeType = element.nodeType;
+        return (nodeType === NODE_TYPE_ELEMENT || nodeType === NODE_TYPE_TEXT) ? element.textContent : '';
+      }
+      element.textContent = value;
+    }
+  })(),
+
+  val: function(element, value) {
+    if (isUndefined(value)) {
+      if (element.multiple && nodeName_(element) === 'select') {
+        var result = [];
+        forEach(element.options, function(option) {
+          if (option.selected) {
+            result.push(option.value || option.text);
+          }
+        });
+        return result;
+      }
+      return element.value;
+    }
+    element.value = value;
+  },
+
+  html: function(element, value) {
+    if (isUndefined(value)) {
+      return element.innerHTML;
+    }
+    jqLiteDealoc(element, true);
+    element.innerHTML = value;
+  },
+
+  empty: jqLiteEmpty
+}, function(fn, name) {
+  /**
+   * Properties: writes return selection, reads return first value
+   */
+  JQLite.prototype[name] = function(arg1, arg2) {
+    var i, key;
+    var nodeCount = this.length;
+
+    // jqLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it
+    // in a way that survives minification.
+    // jqLiteEmpty takes no arguments but is a setter.
+    if (fn !== jqLiteEmpty &&
+        (isUndefined((fn.length === 2 && (fn !== jqLiteHasClass && fn !== jqLiteController)) ? arg1 : arg2))) {
+      if (isObject(arg1)) {
+
+        // we are a write, but the object properties are the key/values
+        for (i = 0; i < nodeCount; i++) {
+          if (fn === jqLiteData) {
+            // data() takes the whole object in jQuery
+            fn(this[i], arg1);
+          } else {
+            for (key in arg1) {
+              fn(this[i], key, arg1[key]);
+            }
+          }
+        }
+        // return self for chaining
+        return this;
+      } else {
+        // we are a read, so read the first child.
+        // TODO: do we still need this?
+        var value = fn.$dv;
+        // Only if we have $dv do we iterate over all, otherwise it is just the first element.
+        var jj = (isUndefined(value)) ? Math.min(nodeCount, 1) : nodeCount;
+        for (var j = 0; j < jj; j++) {
+          var nodeValue = fn(this[j], arg1, arg2);
+          value = value ? value + nodeValue : nodeValue;
+        }
+        return value;
+      }
+    } else {
+      // we are a write, so apply to all children
+      for (i = 0; i < nodeCount; i++) {
+        fn(this[i], arg1, arg2);
+      }
+      // return self for chaining
+      return this;
+    }
+  };
+});
+
+function createEventHandler(element, events) {
+  var eventHandler = function(event, type) {
+    // jQuery specific api
+    event.isDefaultPrevented = function() {
+      return event.defaultPrevented;
+    };
+
+    var eventFns = events[type || event.type];
+    var eventFnsLength = eventFns ? eventFns.length : 0;
+
+    if (!eventFnsLength) return;
+
+    if (isUndefined(event.immediatePropagationStopped)) {
+      var originalStopImmediatePropagation = event.stopImmediatePropagation;
+      event.stopImmediatePropagation = function() {
+        event.immediatePropagationStopped = true;
+
+        if (event.stopPropagation) {
+          event.stopPropagation();
+        }
+
+        if (originalStopImmediatePropagation) {
+          originalStopImmediatePropagation.call(event);
+        }
+      };
+    }
+
+    event.isImmediatePropagationStopped = function() {
+      return event.immediatePropagationStopped === true;
+    };
+
+    // Some events have special handlers that wrap the real handler
+    var handlerWrapper = eventFns.specialHandlerWrapper || defaultHandlerWrapper;
+
+    // Copy event handlers in case event handlers array is modified during execution.
+    if ((eventFnsLength > 1)) {
+      eventFns = shallowCopy(eventFns);
+    }
+
+    for (var i = 0; i < eventFnsLength; i++) {
+      if (!event.isImmediatePropagationStopped()) {
+        handlerWrapper(element, event, eventFns[i]);
+      }
+    }
+  };
+
+  // TODO: this is a hack for angularMocks/clearDataCache that makes it possible to deregister all
+  //       events on `element`
+  eventHandler.elem = element;
+  return eventHandler;
+}
+
+function defaultHandlerWrapper(element, event, handler) {
+  handler.call(element, event);
+}
+
+function specialMouseHandlerWrapper(target, event, handler) {
+  // Refer to jQuery's implementation of mouseenter & mouseleave
+  // Read about mouseenter and mouseleave:
+  // http://www.quirksmode.org/js/events_mouse.html#link8
+  var related = event.relatedTarget;
+  // For mousenter/leave call the handler if related is outside the target.
+  // NB: No relatedTarget if the mouse left/entered the browser window
+  if (!related || (related !== target && !jqLiteContains.call(target, related))) {
+    handler.call(target, event);
+  }
+}
+
+//////////////////////////////////////////
+// Functions iterating traversal.
+// These functions chain results into a single
+// selector.
+//////////////////////////////////////////
+forEach({
+  removeData: jqLiteRemoveData,
+
+  on: function jqLiteOn(element, type, fn, unsupported) {
+    if (isDefined(unsupported)) throw jqLiteMinErr('onargs', 'jqLite#on() does not support the `selector` or `eventData` parameters');
+
+    // Do not add event handlers to non-elements because they will not be cleaned up.
+    if (!jqLiteAcceptsData(element)) {
+      return;
+    }
+
+    var expandoStore = jqLiteExpandoStore(element, true);
+    var events = expandoStore.events;
+    var handle = expandoStore.handle;
+
+    if (!handle) {
+      handle = expandoStore.handle = createEventHandler(element, events);
+    }
+
+    // http://jsperf.com/string-indexof-vs-split
+    var types = type.indexOf(' ') >= 0 ? type.split(' ') : [type];
+    var i = types.length;
+
+    var addHandler = function(type, specialHandlerWrapper, noEventListener) {
+      var eventFns = events[type];
+
+      if (!eventFns) {
+        eventFns = events[type] = [];
+        eventFns.specialHandlerWrapper = specialHandlerWrapper;
+        if (type !== '$destroy' && !noEventListener) {
+          element.addEventListener(type, handle);
+        }
+      }
+
+      eventFns.push(fn);
+    };
+
+    while (i--) {
+      type = types[i];
+      if (MOUSE_EVENT_MAP[type]) {
+        addHandler(MOUSE_EVENT_MAP[type], specialMouseHandlerWrapper);
+        addHandler(type, undefined, true);
+      } else {
+        addHandler(type);
+      }
+    }
+  },
+
+  off: jqLiteOff,
+
+  one: function(element, type, fn) {
+    element = jqLite(element);
+
+    //add the listener twice so that when it is called
+    //you can remove the original function and still be
+    //able to call element.off(ev, fn) normally
+    element.on(type, function onFn() {
+      element.off(type, fn);
+      element.off(type, onFn);
+    });
+    element.on(type, fn);
+  },
+
+  replaceWith: function(element, replaceNode) {
+    var index, parent = element.parentNode;
+    jqLiteDealoc(element);
+    forEach(new JQLite(replaceNode), function(node) {
+      if (index) {
+        parent.insertBefore(node, index.nextSibling);
+      } else {
+        parent.replaceChild(node, element);
+      }
+      index = node;
+    });
+  },
+
+  children: function(element) {
+    var children = [];
+    forEach(element.childNodes, function(element) {
+      if (element.nodeType === NODE_TYPE_ELEMENT) {
+        children.push(element);
+      }
+    });
+    return children;
+  },
+
+  contents: function(element) {
+    return element.contentDocument || element.childNodes || [];
+  },
+
+  append: function(element, node) {
+    var nodeType = element.nodeType;
+    if (nodeType !== NODE_TYPE_ELEMENT && nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT) return;
+
+    node = new JQLite(node);
+
+    for (var i = 0, ii = node.length; i < ii; i++) {
+      var child = node[i];
+      element.appendChild(child);
+    }
+  },
+
+  prepend: function(element, node) {
+    if (element.nodeType === NODE_TYPE_ELEMENT) {
+      var index = element.firstChild;
+      forEach(new JQLite(node), function(child) {
+        element.insertBefore(child, index);
+      });
+    }
+  },
+
+  wrap: function(element, wrapNode) {
+    jqLiteWrapNode(element, jqLite(wrapNode).eq(0).clone()[0]);
+  },
+
+  remove: jqLiteRemove,
+
+  detach: function(element) {
+    jqLiteRemove(element, true);
+  },
+
+  after: function(element, newElement) {
+    var index = element, parent = element.parentNode;
+
+    if (parent) {
+      newElement = new JQLite(newElement);
+
+      for (var i = 0, ii = newElement.length; i < ii; i++) {
+        var node = newElement[i];
+        parent.insertBefore(node, index.nextSibling);
+        index = node;
+      }
+    }
+  },
+
+  addClass: jqLiteAddClass,
+  removeClass: jqLiteRemoveClass,
+
+  toggleClass: function(element, selector, condition) {
+    if (selector) {
+      forEach(selector.split(' '), function(className) {
+        var classCondition = condition;
+        if (isUndefined(classCondition)) {
+          classCondition = !jqLiteHasClass(element, className);
+        }
+        (classCondition ? jqLiteAddClass : jqLiteRemoveClass)(element, className);
+      });
+    }
+  },
+
+  parent: function(element) {
+    var parent = element.parentNode;
+    return parent && parent.nodeType !== NODE_TYPE_DOCUMENT_FRAGMENT ? parent : null;
+  },
+
+  next: function(element) {
+    return element.nextElementSibling;
+  },
+
+  find: function(element, selector) {
+    if (element.getElementsByTagName) {
+      return element.getElementsByTagName(selector);
+    } else {
+      return [];
+    }
+  },
+
+  clone: jqLiteClone,
+
+  triggerHandler: function(element, event, extraParameters) {
+
+    var dummyEvent, eventFnsCopy, handlerArgs;
+    var eventName = event.type || event;
+    var expandoStore = jqLiteExpandoStore(element);
+    var events = expandoStore && expandoStore.events;
+    var eventFns = events && events[eventName];
+
+    if (eventFns) {
+      // Create a dummy event to pass to the handlers
+      dummyEvent = {
+        preventDefault: function() { this.defaultPrevented = true; },
+        isDefaultPrevented: function() { return this.defaultPrevented === true; },
+        stopImmediatePropagation: function() { this.immediatePropagationStopped = true; },
+        isImmediatePropagationStopped: function() { return this.immediatePropagationStopped === true; },
+        stopPropagation: noop,
+        type: eventName,
+        target: element
+      };
+
+      // If a custom event was provided then extend our dummy event with it
+      if (event.type) {
+        dummyEvent = extend(dummyEvent, event);
+      }
+
+      // Copy event handlers in case event handlers array is modified during execution.
+      eventFnsCopy = shallowCopy(eventFns);
+      handlerArgs = extraParameters ? [dummyEvent].concat(extraParameters) : [dummyEvent];
+
+      forEach(eventFnsCopy, function(fn) {
+        if (!dummyEvent.isImmediatePropagationStopped()) {
+          fn.apply(element, handlerArgs);
+        }
+      });
+    }
+  }
+}, function(fn, name) {
+  /**
+   * chaining functions
+   */
+  JQLite.prototype[name] = function(arg1, arg2, arg3) {
+    var value;
+
+    for (var i = 0, ii = this.length; i < ii; i++) {
+      if (isUndefined(value)) {
+        value = fn(this[i], arg1, arg2, arg3);
+        if (isDefined(value)) {
+          // any function which returns a value needs to be wrapped
+          value = jqLite(value);
+        }
+      } else {
+        jqLiteAddNodes(value, fn(this[i], arg1, arg2, arg3));
+      }
+    }
+    return isDefined(value) ? value : this;
+  };
+});
+
+// bind legacy bind/unbind to on/off
+JQLite.prototype.bind = JQLite.prototype.on;
+JQLite.prototype.unbind = JQLite.prototype.off;
+
+
+// Provider for private $$jqLite service
+/** @this */
+function $$jqLiteProvider() {
+  this.$get = function $$jqLite() {
+    return extend(JQLite, {
+      hasClass: function(node, classes) {
+        if (node.attr) node = node[0];
+        return jqLiteHasClass(node, classes);
+      },
+      addClass: function(node, classes) {
+        if (node.attr) node = node[0];
+        return jqLiteAddClass(node, classes);
+      },
+      removeClass: function(node, classes) {
+        if (node.attr) node = node[0];
+        return jqLiteRemoveClass(node, classes);
+      }
+    });
+  };
+}
+
+/**
+ * Computes a hash of an 'obj'.
+ * Hash of a:
+ *  string is string
+ *  number is number as string
+ *  object is either result of calling $$hashKey function on the object or uniquely generated id,
+ *         that is also assigned to the $$hashKey property of the object.
+ *
+ * @param obj
+ * @returns {string} hash string such that the same input will have the same hash string.
+ *         The resulting string key is in 'type:hashKey' format.
+ */
+function hashKey(obj, nextUidFn) {
+  var key = obj && obj.$$hashKey;
+
+  if (key) {
+    if (typeof key === 'function') {
+      key = obj.$$hashKey();
+    }
+    return key;
+  }
+
+  var objType = typeof obj;
+  if (objType === 'function' || (objType === 'object' && obj !== null)) {
+    key = obj.$$hashKey = objType + ':' + (nextUidFn || nextUid)();
+  } else {
+    key = objType + ':' + obj;
+  }
+
+  return key;
+}
+
+// A minimal ES2015 Map implementation.
+// Should be bug/feature equivalent to the native implementations of supported browsers
+// (for the features required in Angular).
+// See https://kangax.github.io/compat-table/es6/#test-Map
+var nanKey = Object.create(null);
+function NgMapShim() {
+  this._keys = [];
+  this._values = [];
+  this._lastKey = NaN;
+  this._lastIndex = -1;
+}
+NgMapShim.prototype = {
+  _idx: function(key) {
+    if (key !== this._lastKey) {
+      this._lastKey = key;
+      this._lastIndex = this._keys.indexOf(key);
+    }
+    return this._lastIndex;
+  },
+  _transformKey: function(key) {
+    return isNumberNaN(key) ? nanKey : key;
+  },
+  get: function(key) {
+    key = this._transformKey(key);
+    var idx = this._idx(key);
+    if (idx !== -1) {
+      return this._values[idx];
+    }
+  },
+  has: function(key) {
+    key = this._transformKey(key);
+    var idx = this._idx(key);
+    return idx !== -1;
+  },
+  set: function(key, value) {
+    key = this._transformKey(key);
+    var idx = this._idx(key);
+    if (idx === -1) {
+      idx = this._lastIndex = this._keys.length;
+    }
+    this._keys[idx] = key;
+    this._values[idx] = value;
+
+    // Support: IE11
+    // Do not `return this` to simulate the partial IE11 implementation
+  },
+  delete: function(key) {
+    key = this._transformKey(key);
+    var idx = this._idx(key);
+    if (idx === -1) {
+      return false;
+    }
+    this._keys.splice(idx, 1);
+    this._values.splice(idx, 1);
+    this._lastKey = NaN;
+    this._lastIndex = -1;
+    return true;
+  }
+};
+
+// For now, always use `NgMapShim`, even if `window.Map` is available. Some native implementations
+// are still buggy (often in subtle ways) and can cause hard-to-debug failures. When native `Map`
+// implementations get more stable, we can reconsider switching to `window.Map` (when available).
+var NgMap = NgMapShim;
+
+var $$MapProvider = [/** @this */function() {
+  this.$get = [function() {
+    return NgMap;
+  }];
+}];
+
+/**
+ * @ngdoc function
+ * @module ng
+ * @name angular.injector
+ * @kind function
+ *
+ * @description
+ * Creates an injector object that can be used for retrieving services as well as for
+ * dependency injection (see {@link guide/di dependency injection}).
+ *
+ * @param {Array.<string|Function>} modules A list of module functions or their aliases. See
+ *     {@link angular.module}. The `ng` module must be explicitly added.
+ * @param {boolean=} [strictDi=false] Whether the injector should be in strict mode, which
+ *     disallows argument name annotation inference.
+ * @returns {injector} Injector object. See {@link auto.$injector $injector}.
+ *
+ * @example
+ * Typical usage
+ * ```js
+ *   // create an injector
+ *   var $injector = angular.injector(['ng']);
+ *
+ *   // use the injector to kick off your application
+ *   // use the type inference to auto inject arguments, or use implicit injection
+ *   $injector.invoke(function($rootScope, $compile, $document) {
+ *     $compile($document)($rootScope);
+ *     $rootScope.$digest();
+ *   });
+ * ```
+ *
+ * Sometimes you want to get access to the injector of a currently running AngularJS app
+ * from outside AngularJS. Perhaps, you want to inject and compile some markup after the
+ * application has been bootstrapped. You can do this using the extra `injector()` added
+ * to JQuery/jqLite elements. See {@link angular.element}.
+ *
+ * *This is fairly rare but could be the case if a third party library is injecting the
+ * markup.*
+ *
+ * In the following example a new block of HTML containing a `ng-controller`
+ * directive is added to the end of the document body by JQuery. We then compile and link
+ * it into the current AngularJS scope.
+ *
+ * ```js
+ * var $div = $('<div ng-controller="MyCtrl">{{content.label}}</div>');
+ * $(document.body).append($div);
+ *
+ * angular.element(document).injector().invoke(function($compile) {
+ *   var scope = angular.element($div).scope();
+ *   $compile($div)(scope);
+ * });
+ * ```
+ */
+
+
+/**
+ * @ngdoc module
+ * @name auto
+ * @installation
+ * @description
+ *
+ * Implicit module which gets automatically added to each {@link auto.$injector $injector}.
+ */
+
+var ARROW_ARG = /^([^(]+?)=>/;
+var FN_ARGS = /^[^(]*\(\s*([^)]*)\)/m;
+var FN_ARG_SPLIT = /,/;
+var FN_ARG = /^\s*(_?)(\S+?)\1\s*$/;
+var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
+var $injectorMinErr = minErr('$injector');
+
+function stringifyFn(fn) {
+  return Function.prototype.toString.call(fn);
+}
+
+function extractArgs(fn) {
+  var fnText = stringifyFn(fn).replace(STRIP_COMMENTS, ''),
+      args = fnText.match(ARROW_ARG) || fnText.match(FN_ARGS);
+  return args;
+}
+
+function anonFn(fn) {
+  // For anonymous functions, showing at the very least the function signature can help in
+  // debugging.
+  var args = extractArgs(fn);
+  if (args) {
+    return 'function(' + (args[1] || '').replace(/[\s\r\n]+/, ' ') + ')';
+  }
+  return 'fn';
+}
+
+function annotate(fn, strictDi, name) {
+  var $inject,
+      argDecl,
+      last;
+
+  if (typeof fn === 'function') {
+    if (!($inject = fn.$inject)) {
+      $inject = [];
+      if (fn.length) {
+        if (strictDi) {
+          if (!isString(name) || !name) {
+            name = fn.name || anonFn(fn);
+          }
+          throw $injectorMinErr('strictdi',
+            '{0} is not using explicit annotation and cannot be invoked in strict mode', name);
+        }
+        argDecl = extractArgs(fn);
+        forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg) {
+          arg.replace(FN_ARG, function(all, underscore, name) {
+            $inject.push(name);
+          });
+        });
+      }
+      fn.$inject = $inject;
+    }
+  } else if (isArray(fn)) {
+    last = fn.length - 1;
+    assertArgFn(fn[last], 'fn');
+    $inject = fn.slice(0, last);
+  } else {
+    assertArgFn(fn, 'fn', true);
+  }
+  return $inject;
+}
+
+///////////////////////////////////////
+
+/**
+ * @ngdoc service
+ * @name $injector
+ *
+ * @description
+ *
+ * `$injector` is used to retrieve object instances as defined by
+ * {@link auto.$provide provider}, instantiate types, invoke methods,
+ * and load modules.
+ *
+ * The following always holds true:
+ *
+ * ```js
+ *   var $injector = angular.injector();
+ *   expect($injector.get('$injector')).toBe($injector);
+ *   expect($injector.invoke(function($injector) {
+ *     return $injector;
+ *   })).toBe($injector);
+ * ```
+ *
+ * ## Injection Function Annotation
+ *
+ * JavaScript does not have annotations, and annotations are needed for dependency injection. The
+ * following are all valid ways of annotating function with injection arguments and are equivalent.
+ *
+ * ```js
+ *   // inferred (only works if code not minified/obfuscated)
+ *   $injector.invoke(function(serviceA){});
+ *
+ *   // annotated
+ *   function explicit(serviceA) {};
+ *   explicit.$inject = ['serviceA'];
+ *   $injector.invoke(explicit);
+ *
+ *   // inline
+ *   $injector.invoke(['serviceA', function(serviceA){}]);
+ * ```
+ *
+ * ### Inference
+ *
+ * In JavaScript calling `toString()` on a function returns the function definition. The definition
+ * can then be parsed and the function arguments can be extracted. This method of discovering
+ * annotations is disallowed when the injector is in strict mode.
+ * *NOTE:* This does not work with minification, and obfuscation tools since these tools change the
+ * argument names.
+ *
+ * ### `$inject` Annotation
+ * By adding an `$inject` property onto a function the injection parameters can be specified.
+ *
+ * ### Inline
+ * As an array of injection names, where the last item in the array is the function to call.
+ */
+
+/**
+ * @ngdoc property
+ * @name $injector#modules
+ * @type {Object}
+ * @description
+ * A hash containing all the modules that have been loaded into the
+ * $injector.
+ *
+ * You can use this property to find out information about a module via the
+ * {@link angular.Module#info `myModule.info(...)`} method.
+ *
+ * For example:
+ *
+ * ```
+ * var info = $injector.modules['ngAnimate'].info();
+ * ```
+ *
+ * **Do not use this property to attempt to modify the modules after the application
+ * has been bootstrapped.**
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $injector#get
+ *
+ * @description
+ * Return an instance of the service.
+ *
+ * @param {string} name The name of the instance to retrieve.
+ * @param {string=} caller An optional string to provide the origin of the function call for error messages.
+ * @return {*} The instance.
+ */
+
+/**
+ * @ngdoc method
+ * @name $injector#invoke
+ *
+ * @description
+ * Invoke the method and supply the method arguments from the `$injector`.
+ *
+ * @param {Function|Array.<string|Function>} fn The injectable function to invoke. Function parameters are
+ *   injected according to the {@link guide/di $inject Annotation} rules.
+ * @param {Object=} self The `this` for the invoked method.
+ * @param {Object=} locals Optional object. If preset then any argument names are read from this
+ *                         object first, before the `$injector` is consulted.
+ * @returns {*} the value returned by the invoked `fn` function.
+ */
+
+/**
+ * @ngdoc method
+ * @name $injector#has
+ *
+ * @description
+ * Allows the user to query if the particular service exists.
+ *
+ * @param {string} name Name of the service to query.
+ * @returns {boolean} `true` if injector has given service.
+ */
+
+/**
+ * @ngdoc method
+ * @name $injector#instantiate
+ * @description
+ * Create a new instance of JS type. The method takes a constructor function, invokes the new
+ * operator, and supplies all of the arguments to the constructor function as specified by the
+ * constructor annotation.
+ *
+ * @param {Function} Type Annotated constructor function.
+ * @param {Object=} locals Optional object. If preset then any argument names are read from this
+ * object first, before the `$injector` is consulted.
+ * @returns {Object} new instance of `Type`.
+ */
+
+/**
+ * @ngdoc method
+ * @name $injector#annotate
+ *
+ * @description
+ * Returns an array of service names which the function is requesting for injection. This API is
+ * used by the injector to determine which services need to be injected into the function when the
+ * function is invoked. There are three ways in which the function can be annotated with the needed
+ * dependencies.
+ *
+ * #### Argument names
+ *
+ * The simplest form is to extract the dependencies from the arguments of the function. This is done
+ * by converting the function into a string using `toString()` method and extracting the argument
+ * names.
+ * ```js
+ *   // Given
+ *   function MyController($scope, $route) {
+ *     // ...
+ *   }
+ *
+ *   // Then
+ *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
+ * ```
+ *
+ * You can disallow this method by using strict injection mode.
+ *
+ * This method does not work with code minification / obfuscation. For this reason the following
+ * annotation strategies are supported.
+ *
+ * #### The `$inject` property
+ *
+ * If a function has an `$inject` property and its value is an array of strings, then the strings
+ * represent names of services to be injected into the function.
+ * ```js
+ *   // Given
+ *   var MyController = function(obfuscatedScope, obfuscatedRoute) {
+ *     // ...
+ *   }
+ *   // Define function dependencies
+ *   MyController['$inject'] = ['$scope', '$route'];
+ *
+ *   // Then
+ *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);
+ * ```
+ *
+ * #### The array notation
+ *
+ * It is often desirable to inline Injected functions and that's when setting the `$inject` property
+ * is very inconvenient. In these situations using the array notation to specify the dependencies in
+ * a way that survives minification is a better choice:
+ *
+ * ```js
+ *   // We wish to write this (not minification / obfuscation safe)
+ *   injector.invoke(function($compile, $rootScope) {
+ *     // ...
+ *   });
+ *
+ *   // We are forced to write break inlining
+ *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {
+ *     // ...
+ *   };
+ *   tmpFn.$inject = ['$compile', '$rootScope'];
+ *   injector.invoke(tmpFn);
+ *
+ *   // To better support inline function the inline annotation is supported
+ *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {
+ *     // ...
+ *   }]);
+ *
+ *   // Therefore
+ *   expect(injector.annotate(
+ *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])
+ *    ).toEqual(['$compile', '$rootScope']);
+ * ```
+ *
+ * @param {Function|Array.<string|Function>} fn Function for which dependent service names need to
+ * be retrieved as described above.
+ *
+ * @param {boolean=} [strictDi=false] Disallow argument name annotation inference.
+ *
+ * @returns {Array.<string>} The names of the services which the function requires.
+ */
+/**
+ * @ngdoc method
+ * @name $injector#loadNewModules
+ *
+ * @description
+ *
+ * **This is a dangerous API, which you use at your own risk!**
+ *
+ * Add the specified modules to the current injector.
+ *
+ * This method will add each of the injectables to the injector and execute all of the config and run
+ * blocks for each module passed to the method.
+ *
+ * If a module has already been loaded into the injector then it will not be loaded again.
+ *
+ * * The application developer is responsible for loading the code containing the modules; and for
+ * ensuring that lazy scripts are not downloaded and executed more often that desired.
+ * * Previously compiled HTML will not be affected by newly loaded directives, filters and components.
+ * * Modules cannot be unloaded.
+ *
+ * You can use {@link $injector#modules `$injector.modules`} to check whether a module has been loaded
+ * into the injector, which may indicate whether the script has been executed already.
+ *
+ * @example
+ * Here is an example of loading a bundle of modules, with a utility method called `getScript`:
+ *
+ * ```javascript
+ * app.factory('loadModule', function($injector) {
+ *   return function loadModule(moduleName, bundleUrl) {
+ *     return getScript(bundleUrl).then(function() { $injector.loadNewModules([moduleName]); });
+ *   };
+ * })
+ * ```
+ *
+ * @param {Array<String|Function|Array>=} mods an array of modules to load into the application.
+ *     Each item in the array should be the name of a predefined module or a (DI annotated)
+ *     function that will be invoked by the injector as a `config` block.
+ *     See: {@link angular.module modules}
+ */
+
+
+/**
+ * @ngdoc service
+ * @name $provide
+ *
+ * @description
+ *
+ * The {@link auto.$provide $provide} service has a number of methods for registering components
+ * with the {@link auto.$injector $injector}. Many of these functions are also exposed on
+ * {@link angular.Module}.
+ *
+ * An AngularJS **service** is a singleton object created by a **service factory**.  These **service
+ * factories** are functions which, in turn, are created by a **service provider**.
+ * The **service providers** are constructor functions. When instantiated they must contain a
+ * property called `$get`, which holds the **service factory** function.
+ *
+ * When you request a service, the {@link auto.$injector $injector} is responsible for finding the
+ * correct **service provider**, instantiating it and then calling its `$get` **service factory**
+ * function to get the instance of the **service**.
+ *
+ * Often services have no configuration options and there is no need to add methods to the service
+ * provider.  The provider will be no more than a constructor function with a `$get` property. For
+ * these cases the {@link auto.$provide $provide} service has additional helper methods to register
+ * services without specifying a provider.
+ *
+ * * {@link auto.$provide#provider provider(name, provider)} - registers a **service provider** with the
+ *     {@link auto.$injector $injector}
+ * * {@link auto.$provide#constant constant(name, obj)} - registers a value/object that can be accessed by
+ *     providers and services.
+ * * {@link auto.$provide#value value(name, obj)} - registers a value/object that can only be accessed by
+ *     services, not providers.
+ * * {@link auto.$provide#factory factory(name, fn)} - registers a service **factory function**
+ *     that will be wrapped in a **service provider** object, whose `$get` property will contain the
+ *     given factory function.
+ * * {@link auto.$provide#service service(name, Fn)} - registers a **constructor function**
+ *     that will be wrapped in a **service provider** object, whose `$get` property will instantiate
+ *      a new object using the given constructor function.
+ * * {@link auto.$provide#decorator decorator(name, decorFn)} - registers a **decorator function** that
+ *      will be able to modify or replace the implementation of another service.
+ *
+ * See the individual methods for more information and examples.
+ */
+
+/**
+ * @ngdoc method
+ * @name $provide#provider
+ * @description
+ *
+ * Register a **provider function** with the {@link auto.$injector $injector}. Provider functions
+ * are constructor functions, whose instances are responsible for "providing" a factory for a
+ * service.
+ *
+ * Service provider names start with the name of the service they provide followed by `Provider`.
+ * For example, the {@link ng.$log $log} service has a provider called
+ * {@link ng.$logProvider $logProvider}.
+ *
+ * Service provider objects can have additional methods which allow configuration of the provider
+ * and its service. Importantly, you can configure what kind of service is created by the `$get`
+ * method, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a
+ * method {@link ng.$logProvider#debugEnabled debugEnabled}
+ * which lets you specify whether the {@link ng.$log $log} service will log debug messages to the
+ * console or not.
+ *
+ * It is possible to inject other providers into the provider function,
+ * but the injected provider must have been defined before the one that requires it.
+ *
+ * @param {string} name The name of the instance. NOTE: the provider will be available under `name +
+                        'Provider'` key.
+ * @param {(Object|function())} provider If the provider is:
+ *
+ *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using
+ *     {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.
+ *   - `Constructor`: a new instance of the provider will be created using
+ *     {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.
+ *
+ * @returns {Object} registered provider instance
+
+ * @example
+ *
+ * The following example shows how to create a simple event tracking service and register it using
+ * {@link auto.$provide#provider $provide.provider()}.
+ *
+ * ```js
+ *  // Define the eventTracker provider
+ *  function EventTrackerProvider() {
+ *    var trackingUrl = '/track';
+ *
+ *    // A provider method for configuring where the tracked events should been saved
+ *    this.setTrackingUrl = function(url) {
+ *      trackingUrl = url;
+ *    };
+ *
+ *    // The service factory function
+ *    this.$get = ['$http', function($http) {
+ *      var trackedEvents = {};
+ *      return {
+ *        // Call this to track an event
+ *        event: function(event) {
+ *          var count = trackedEvents[event] || 0;
+ *          count += 1;
+ *          trackedEvents[event] = count;
+ *          return count;
+ *        },
+ *        // Call this to save the tracked events to the trackingUrl
+ *        save: function() {
+ *          $http.post(trackingUrl, trackedEvents);
+ *        }
+ *      };
+ *    }];
+ *  }
+ *
+ *  describe('eventTracker', function() {
+ *    var postSpy;
+ *
+ *    beforeEach(module(function($provide) {
+ *      // Register the eventTracker provider
+ *      $provide.provider('eventTracker', EventTrackerProvider);
+ *    }));
+ *
+ *    beforeEach(module(function(eventTrackerProvider) {
+ *      // Configure eventTracker provider
+ *      eventTrackerProvider.setTrackingUrl('/custom-track');
+ *    }));
+ *
+ *    it('tracks events', inject(function(eventTracker) {
+ *      expect(eventTracker.event('login')).toEqual(1);
+ *      expect(eventTracker.event('login')).toEqual(2);
+ *    }));
+ *
+ *    it('saves to the tracking url', inject(function(eventTracker, $http) {
+ *      postSpy = spyOn($http, 'post');
+ *      eventTracker.event('login');
+ *      eventTracker.save();
+ *      expect(postSpy).toHaveBeenCalled();
+ *      expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');
+ *      expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');
+ *      expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });
+ *    }));
+ *  });
+ * ```
+ */
+
+/**
+ * @ngdoc method
+ * @name $provide#factory
+ * @description
+ *
+ * Register a **service factory**, which will be called to return the service instance.
+ * This is short for registering a service where its provider consists of only a `$get` property,
+ * which is the given service factory function.
+ * You should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to
+ * configure your service in a provider.
+ *
+ * @param {string} name The name of the instance.
+ * @param {Function|Array.<string|Function>} $getFn The injectable $getFn for the instance creation.
+ *                      Internally this is a short hand for `$provide.provider(name, {$get: $getFn})`.
+ * @returns {Object} registered provider instance
+ *
+ * @example
+ * Here is an example of registering a service
+ * ```js
+ *   $provide.factory('ping', ['$http', function($http) {
+ *     return function ping() {
+ *       return $http.send('/ping');
+ *     };
+ *   }]);
+ * ```
+ * You would then inject and use this service like this:
+ * ```js
+ *   someModule.controller('Ctrl', ['ping', function(ping) {
+ *     ping();
+ *   }]);
+ * ```
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $provide#service
+ * @description
+ *
+ * Register a **service constructor**, which will be invoked with `new` to create the service
+ * instance.
+ * This is short for registering a service where its provider's `$get` property is a factory
+ * function that returns an instance instantiated by the injector from the service constructor
+ * function.
+ *
+ * Internally it looks a bit like this:
+ *
+ * ```
+ * {
+ *   $get: function() {
+ *     return $injector.instantiate(constructor);
+ *   }
+ * }
+ * ```
+ *
+ *
+ * You should use {@link auto.$provide#service $provide.service(class)} if you define your service
+ * as a type/class.
+ *
+ * @param {string} name The name of the instance.
+ * @param {Function|Array.<string|Function>} constructor An injectable class (constructor function)
+ *     that will be instantiated.
+ * @returns {Object} registered provider instance
+ *
+ * @example
+ * Here is an example of registering a service using
+ * {@link auto.$provide#service $provide.service(class)}.
+ * ```js
+ *   var Ping = function($http) {
+ *     this.$http = $http;
+ *   };
+ *
+ *   Ping.$inject = ['$http'];
+ *
+ *   Ping.prototype.send = function() {
+ *     return this.$http.get('/ping');
+ *   };
+ *   $provide.service('ping', Ping);
+ * ```
+ * You would then inject and use this service like this:
+ * ```js
+ *   someModule.controller('Ctrl', ['ping', function(ping) {
+ *     ping.send();
+ *   }]);
+ * ```
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $provide#value
+ * @description
+ *
+ * Register a **value service** with the {@link auto.$injector $injector}, such as a string, a
+ * number, an array, an object or a function. This is short for registering a service where its
+ * provider's `$get` property is a factory function that takes no arguments and returns the **value
+ * service**. That also means it is not possible to inject other services into a value service.
+ *
+ * Value services are similar to constant services, except that they cannot be injected into a
+ * module configuration function (see {@link angular.Module#config}) but they can be overridden by
+ * an AngularJS {@link auto.$provide#decorator decorator}.
+ *
+ * @param {string} name The name of the instance.
+ * @param {*} value The value.
+ * @returns {Object} registered provider instance
+ *
+ * @example
+ * Here are some examples of creating value services.
+ * ```js
+ *   $provide.value('ADMIN_USER', 'admin');
+ *
+ *   $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });
+ *
+ *   $provide.value('halfOf', function(value) {
+ *     return value / 2;
+ *   });
+ * ```
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $provide#constant
+ * @description
+ *
+ * Register a **constant service** with the {@link auto.$injector $injector}, such as a string,
+ * a number, an array, an object or a function. Like the {@link auto.$provide#value value}, it is not
+ * possible to inject other services into a constant.
+ *
+ * But unlike {@link auto.$provide#value value}, a constant can be
+ * injected into a module configuration function (see {@link angular.Module#config}) and it cannot
+ * be overridden by an AngularJS {@link auto.$provide#decorator decorator}.
+ *
+ * @param {string} name The name of the constant.
+ * @param {*} value The constant value.
+ * @returns {Object} registered instance
+ *
+ * @example
+ * Here a some examples of creating constants:
+ * ```js
+ *   $provide.constant('SHARD_HEIGHT', 306);
+ *
+ *   $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);
+ *
+ *   $provide.constant('double', function(value) {
+ *     return value * 2;
+ *   });
+ * ```
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $provide#decorator
+ * @description
+ *
+ * Register a **decorator function** with the {@link auto.$injector $injector}. A decorator function
+ * intercepts the creation of a service, allowing it to override or modify the behavior of the
+ * service. The return value of the decorator function may be the original service, or a new service
+ * that replaces (or wraps and delegates to) the original service.
+ *
+ * You can find out more about using decorators in the {@link guide/decorators} guide.
+ *
+ * @param {string} name The name of the service to decorate.
+ * @param {Function|Array.<string|Function>} decorator This function will be invoked when the service needs to be
+ *    provided and should return the decorated service instance. The function is called using
+ *    the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.
+ *    Local injection arguments:
+ *
+ *    * `$delegate` - The original service instance, which can be replaced, monkey patched, configured,
+ *      decorated or delegated to.
+ *
+ * @example
+ * Here we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting
+ * calls to {@link ng.$log#error $log.warn()}.
+ * ```js
+ *   $provide.decorator('$log', ['$delegate', function($delegate) {
+ *     $delegate.warn = $delegate.error;
+ *     return $delegate;
+ *   }]);
+ * ```
+ */
+
+
+function createInjector(modulesToLoad, strictDi) {
+  strictDi = (strictDi === true);
+  var INSTANTIATING = {},
+      providerSuffix = 'Provider',
+      path = [],
+      loadedModules = new NgMap(),
+      providerCache = {
+        $provide: {
+            provider: supportObject(provider),
+            factory: supportObject(factory),
+            service: supportObject(service),
+            value: supportObject(value),
+            constant: supportObject(constant),
+            decorator: decorator
+          }
+      },
+      providerInjector = (providerCache.$injector =
+          createInternalInjector(providerCache, function(serviceName, caller) {
+            if (angular.isString(caller)) {
+              path.push(caller);
+            }
+            throw $injectorMinErr('unpr', 'Unknown provider: {0}', path.join(' <- '));
+          })),
+      instanceCache = {},
+      protoInstanceInjector =
+          createInternalInjector(instanceCache, function(serviceName, caller) {
+            var provider = providerInjector.get(serviceName + providerSuffix, caller);
+            return instanceInjector.invoke(
+                provider.$get, provider, undefined, serviceName);
+          }),
+      instanceInjector = protoInstanceInjector;
+
+  providerCache['$injector' + providerSuffix] = { $get: valueFn(protoInstanceInjector) };
+  instanceInjector.modules = providerInjector.modules = createMap();
+  var runBlocks = loadModules(modulesToLoad);
+  instanceInjector = protoInstanceInjector.get('$injector');
+  instanceInjector.strictDi = strictDi;
+  forEach(runBlocks, function(fn) { if (fn) instanceInjector.invoke(fn); });
+
+  instanceInjector.loadNewModules = function(mods) {
+    forEach(loadModules(mods), function(fn) { if (fn) instanceInjector.invoke(fn); });
+  };
+
+
+  return instanceInjector;
+
+  ////////////////////////////////////
+  // $provider
+  ////////////////////////////////////
+
+  function supportObject(delegate) {
+    return function(key, value) {
+      if (isObject(key)) {
+        forEach(key, reverseParams(delegate));
+      } else {
+        return delegate(key, value);
+      }
+    };
+  }
+
+  function provider(name, provider_) {
+    assertNotHasOwnProperty(name, 'service');
+    if (isFunction(provider_) || isArray(provider_)) {
+      provider_ = providerInjector.instantiate(provider_);
+    }
+    if (!provider_.$get) {
+      throw $injectorMinErr('pget', 'Provider \'{0}\' must define $get factory method.', name);
+    }
+    return (providerCache[name + providerSuffix] = provider_);
+  }
+
+  function enforceReturnValue(name, factory) {
+    return /** @this */ function enforcedReturnValue() {
+      var result = instanceInjector.invoke(factory, this);
+      if (isUndefined(result)) {
+        throw $injectorMinErr('undef', 'Provider \'{0}\' must return a value from $get factory method.', name);
+      }
+      return result;
+    };
+  }
+
+  function factory(name, factoryFn, enforce) {
+    return provider(name, {
+      $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn
+    });
+  }
+
+  function service(name, constructor) {
+    return factory(name, ['$injector', function($injector) {
+      return $injector.instantiate(constructor);
+    }]);
+  }
+
+  function value(name, val) { return factory(name, valueFn(val), false); }
+
+  function constant(name, value) {
+    assertNotHasOwnProperty(name, 'constant');
+    providerCache[name] = value;
+    instanceCache[name] = value;
+  }
+
+  function decorator(serviceName, decorFn) {
+    var origProvider = providerInjector.get(serviceName + providerSuffix),
+        orig$get = origProvider.$get;
+
+    origProvider.$get = function() {
+      var origInstance = instanceInjector.invoke(orig$get, origProvider);
+      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});
+    };
+  }
+
+  ////////////////////////////////////
+  // Module Loading
+  ////////////////////////////////////
+  function loadModules(modulesToLoad) {
+    assertArg(isUndefined(modulesToLoad) || isArray(modulesToLoad), 'modulesToLoad', 'not an array');
+    var runBlocks = [], moduleFn;
+    forEach(modulesToLoad, function(module) {
+      if (loadedModules.get(module)) return;
+      loadedModules.set(module, true);
+
+      function runInvokeQueue(queue) {
+        var i, ii;
+        for (i = 0, ii = queue.length; i < ii; i++) {
+          var invokeArgs = queue[i],
+              provider = providerInjector.get(invokeArgs[0]);
+
+          provider[invokeArgs[1]].apply(provider, invokeArgs[2]);
+        }
+      }
+
+      try {
+        if (isString(module)) {
+          moduleFn = angularModule(module);
+          instanceInjector.modules[module] = moduleFn;
+          runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);
+          runInvokeQueue(moduleFn._invokeQueue);
+          runInvokeQueue(moduleFn._configBlocks);
+        } else if (isFunction(module)) {
+            runBlocks.push(providerInjector.invoke(module));
+        } else if (isArray(module)) {
+            runBlocks.push(providerInjector.invoke(module));
+        } else {
+          assertArgFn(module, 'module');
+        }
+      } catch (e) {
+        if (isArray(module)) {
+          module = module[module.length - 1];
+        }
+        if (e.message && e.stack && e.stack.indexOf(e.message) === -1) {
+          // Safari & FF's stack traces don't contain error.message content
+          // unlike those of Chrome and IE
+          // So if stack doesn't contain message, we create a new string that contains both.
+          // Since error.stack is read-only in Safari, I'm overriding e and not e.stack here.
+          // eslint-disable-next-line no-ex-assign
+          e = e.message + '\n' + e.stack;
+        }
+        throw $injectorMinErr('modulerr', 'Failed to instantiate module {0} due to:\n{1}',
+                  module, e.stack || e.message || e);
+      }
+    });
+    return runBlocks;
+  }
+
+  ////////////////////////////////////
+  // internal Injector
+  ////////////////////////////////////
+
+  function createInternalInjector(cache, factory) {
+
+    function getService(serviceName, caller) {
+      if (cache.hasOwnProperty(serviceName)) {
+        if (cache[serviceName] === INSTANTIATING) {
+          throw $injectorMinErr('cdep', 'Circular dependency found: {0}',
+                    serviceName + ' <- ' + path.join(' <- '));
+        }
+        return cache[serviceName];
+      } else {
+        try {
+          path.unshift(serviceName);
+          cache[serviceName] = INSTANTIATING;
+          cache[serviceName] = factory(serviceName, caller);
+          return cache[serviceName];
+        } catch (err) {
+          if (cache[serviceName] === INSTANTIATING) {
+            delete cache[serviceName];
+          }
+          throw err;
+        } finally {
+          path.shift();
+        }
+      }
+    }
+
+
+    function injectionArgs(fn, locals, serviceName) {
+      var args = [],
+          $inject = createInjector.$$annotate(fn, strictDi, serviceName);
+
+      for (var i = 0, length = $inject.length; i < length; i++) {
+        var key = $inject[i];
+        if (typeof key !== 'string') {
+          throw $injectorMinErr('itkn',
+                  'Incorrect injection token! Expected service name as string, got {0}', key);
+        }
+        args.push(locals && locals.hasOwnProperty(key) ? locals[key] :
+                                                         getService(key, serviceName));
+      }
+      return args;
+    }
+
+    function isClass(func) {
+      // Support: IE 9-11 only
+      // IE 9-11 do not support classes and IE9 leaks with the code below.
+      if (msie || typeof func !== 'function') {
+        return false;
+      }
+      var result = func.$$ngIsClass;
+      if (!isBoolean(result)) {
+        result = func.$$ngIsClass = /^class\b/.test(stringifyFn(func));
+      }
+      return result;
+    }
+
+    function invoke(fn, self, locals, serviceName) {
+      if (typeof locals === 'string') {
+        serviceName = locals;
+        locals = null;
+      }
+
+      var args = injectionArgs(fn, locals, serviceName);
+      if (isArray(fn)) {
+        fn = fn[fn.length - 1];
+      }
+
+      if (!isClass(fn)) {
+        // http://jsperf.com/angularjs-invoke-apply-vs-switch
+        // #5388
+        return fn.apply(self, args);
+      } else {
+        args.unshift(null);
+        return new (Function.prototype.bind.apply(fn, args))();
+      }
+    }
+
+
+    function instantiate(Type, locals, serviceName) {
+      // Check if Type is annotated and use just the given function at n-1 as parameter
+      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);
+      var ctor = (isArray(Type) ? Type[Type.length - 1] : Type);
+      var args = injectionArgs(Type, locals, serviceName);
+      // Empty object at position 0 is ignored for invocation with `new`, but required.
+      args.unshift(null);
+      return new (Function.prototype.bind.apply(ctor, args))();
+    }
+
+
+    return {
+      invoke: invoke,
+      instantiate: instantiate,
+      get: getService,
+      annotate: createInjector.$$annotate,
+      has: function(name) {
+        return providerCache.hasOwnProperty(name + providerSuffix) || cache.hasOwnProperty(name);
+      }
+    };
+  }
+}
+
+createInjector.$$annotate = annotate;
+
+/**
+ * @ngdoc provider
+ * @name $anchorScrollProvider
+ * @this
+ *
+ * @description
+ * Use `$anchorScrollProvider` to disable automatic scrolling whenever
+ * {@link ng.$location#hash $location.hash()} changes.
+ */
+function $AnchorScrollProvider() {
+
+  var autoScrollingEnabled = true;
+
+  /**
+   * @ngdoc method
+   * @name $anchorScrollProvider#disableAutoScrolling
+   *
+   * @description
+   * By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to
+   * {@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />
+   * Use this method to disable automatic scrolling.
+   *
+   * If automatic scrolling is disabled, one must explicitly call
+   * {@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the
+   * current hash.
+   */
+  this.disableAutoScrolling = function() {
+    autoScrollingEnabled = false;
+  };
+
+  /**
+   * @ngdoc service
+   * @name $anchorScroll
+   * @kind function
+   * @requires $window
+   * @requires $location
+   * @requires $rootScope
+   *
+   * @description
+   * When called, it scrolls to the element related to the specified `hash` or (if omitted) to the
+   * current value of {@link ng.$location#hash $location.hash()}, according to the rules specified
+   * in the
+   * [HTML5 spec](http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document).
+   *
+   * It also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to
+   * match any anchor whenever it changes. This can be disabled by calling
+   * {@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.
+   *
+   * Additionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a
+   * vertical scroll-offset (either fixed or dynamic).
+   *
+   * @param {string=} hash The hash specifying the element to scroll to. If omitted, the value of
+   *                       {@link ng.$location#hash $location.hash()} will be used.
+   *
+   * @property {(number|function|jqLite)} yOffset
+   * If set, specifies a vertical scroll-offset. This is often useful when there are fixed
+   * positioned elements at the top of the page, such as navbars, headers etc.
+   *
+   * `yOffset` can be specified in various ways:
+   * - **number**: A fixed number of pixels to be used as offset.<br /><br />
+   * - **function**: A getter function called everytime `$anchorScroll()` is executed. Must return
+   *   a number representing the offset (in pixels).<br /><br />
+   * - **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from
+   *   the top of the page to the element's bottom will be used as offset.<br />
+   *   **Note**: The element will be taken into account only as long as its `position` is set to
+   *   `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust
+   *   their height and/or positioning according to the viewport's size.
+   *
+   * <br />
+   * <div class="alert alert-warning">
+   * In order for `yOffset` to work properly, scrolling should take place on the document's root and
+   * not some child element.
+   * </div>
+   *
+   * @example
+     <example module="anchorScrollExample" name="anchor-scroll">
+       <file name="index.html">
+         <div id="scrollArea" ng-controller="ScrollController">
+           <a ng-click="gotoBottom()">Go to bottom</a>
+           <a id="bottom"></a> You're at the bottom!
+         </div>
+       </file>
+       <file name="script.js">
+         angular.module('anchorScrollExample', [])
+           .controller('ScrollController', ['$scope', '$location', '$anchorScroll',
+             function($scope, $location, $anchorScroll) {
+               $scope.gotoBottom = function() {
+                 // set the location.hash to the id of
+                 // the element you wish to scroll to.
+                 $location.hash('bottom');
+
+                 // call $anchorScroll()
+                 $anchorScroll();
+               };
+             }]);
+       </file>
+       <file name="style.css">
+         #scrollArea {
+           height: 280px;
+           overflow: auto;
+         }
+
+         #bottom {
+           display: block;
+           margin-top: 2000px;
+         }
+       </file>
+     </example>
+   *
+   * <hr />
+   * The example below illustrates the use of a vertical scroll-offset (specified as a fixed value).
+   * See {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.
+   *
+   * @example
+     <example module="anchorScrollOffsetExample" name="anchor-scroll-offset">
+       <file name="index.html">
+         <div class="fixed-header" ng-controller="headerCtrl">
+           <a href="" ng-click="gotoAnchor(x)" ng-repeat="x in [1,2,3,4,5]">
+             Go to anchor {{x}}
+           </a>
+         </div>
+         <div id="anchor{{x}}" class="anchor" ng-repeat="x in [1,2,3,4,5]">
+           Anchor {{x}} of 5
+         </div>
+       </file>
+       <file name="script.js">
+         angular.module('anchorScrollOffsetExample', [])
+           .run(['$anchorScroll', function($anchorScroll) {
+             $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels
+           }])
+           .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',
+             function($anchorScroll, $location, $scope) {
+               $scope.gotoAnchor = function(x) {
+                 var newHash = 'anchor' + x;
+                 if ($location.hash() !== newHash) {
+                   // set the $location.hash to `newHash` and
+                   // $anchorScroll will automatically scroll to it
+                   $location.hash('anchor' + x);
+                 } else {
+                   // call $anchorScroll() explicitly,
+                   // since $location.hash hasn't changed
+                   $anchorScroll();
+                 }
+               };
+             }
+           ]);
+       </file>
+       <file name="style.css">
+         body {
+           padding-top: 50px;
+         }
+
+         .anchor {
+           border: 2px dashed DarkOrchid;
+           padding: 10px 10px 200px 10px;
+         }
+
+         .fixed-header {
+           background-color: rgba(0, 0, 0, 0.2);
+           height: 50px;
+           position: fixed;
+           top: 0; left: 0; right: 0;
+         }
+
+         .fixed-header > a {
+           display: inline-block;
+           margin: 5px 15px;
+         }
+       </file>
+     </example>
+   */
+  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {
+    var document = $window.document;
+
+    // Helper function to get first anchor from a NodeList
+    // (using `Array#some()` instead of `angular#forEach()` since it's more performant
+    //  and working in all supported browsers.)
+    function getFirstAnchor(list) {
+      var result = null;
+      Array.prototype.some.call(list, function(element) {
+        if (nodeName_(element) === 'a') {
+          result = element;
+          return true;
+        }
+      });
+      return result;
+    }
+
+    function getYOffset() {
+
+      var offset = scroll.yOffset;
+
+      if (isFunction(offset)) {
+        offset = offset();
+      } else if (isElement(offset)) {
+        var elem = offset[0];
+        var style = $window.getComputedStyle(elem);
+        if (style.position !== 'fixed') {
+          offset = 0;
+        } else {
+          offset = elem.getBoundingClientRect().bottom;
+        }
+      } else if (!isNumber(offset)) {
+        offset = 0;
+      }
+
+      return offset;
+    }
+
+    function scrollTo(elem) {
+      if (elem) {
+        elem.scrollIntoView();
+
+        var offset = getYOffset();
+
+        if (offset) {
+          // `offset` is the number of pixels we should scroll UP in order to align `elem` properly.
+          // This is true ONLY if the call to `elem.scrollIntoView()` initially aligns `elem` at the
+          // top of the viewport.
+          //
+          // IF the number of pixels from the top of `elem` to the end of the page's content is less
+          // than the height of the viewport, then `elem.scrollIntoView()` will align the `elem` some
+          // way down the page.
+          //
+          // This is often the case for elements near the bottom of the page.
+          //
+          // In such cases we do not need to scroll the whole `offset` up, just the difference between
+          // the top of the element and the offset, which is enough to align the top of `elem` at the
+          // desired position.
+          var elemTop = elem.getBoundingClientRect().top;
+          $window.scrollBy(0, elemTop - offset);
+        }
+      } else {
+        $window.scrollTo(0, 0);
+      }
+    }
+
+    function scroll(hash) {
+      // Allow numeric hashes
+      hash = isString(hash) ? hash : isNumber(hash) ? hash.toString() : $location.hash();
+      var elm;
+
+      // empty hash, scroll to the top of the page
+      if (!hash) scrollTo(null);
+
+      // element with given id
+      else if ((elm = document.getElementById(hash))) scrollTo(elm);
+
+      // first anchor with given name :-D
+      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) scrollTo(elm);
+
+      // no element and hash === 'top', scroll to the top of the page
+      else if (hash === 'top') scrollTo(null);
+    }
+
+    // does not scroll when user clicks on anchor link that is currently on
+    // (no url change, no $location.hash() change), browser native does scroll
+    if (autoScrollingEnabled) {
+      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},
+        function autoScrollWatchAction(newVal, oldVal) {
+          // skip the initial scroll if $location.hash is empty
+          if (newVal === oldVal && newVal === '') return;
+
+          jqLiteDocumentLoaded(function() {
+            $rootScope.$evalAsync(scroll);
+          });
+        });
+    }
+
+    return scroll;
+  }];
+}
+
+var $animateMinErr = minErr('$animate');
+var ELEMENT_NODE = 1;
+var NG_ANIMATE_CLASSNAME = 'ng-animate';
+
+function mergeClasses(a,b) {
+  if (!a && !b) return '';
+  if (!a) return b;
+  if (!b) return a;
+  if (isArray(a)) a = a.join(' ');
+  if (isArray(b)) b = b.join(' ');
+  return a + ' ' + b;
+}
+
+function extractElementNode(element) {
+  for (var i = 0; i < element.length; i++) {
+    var elm = element[i];
+    if (elm.nodeType === ELEMENT_NODE) {
+      return elm;
+    }
+  }
+}
+
+function splitClasses(classes) {
+  if (isString(classes)) {
+    classes = classes.split(' ');
+  }
+
+  // Use createMap() to prevent class assumptions involving property names in
+  // Object.prototype
+  var obj = createMap();
+  forEach(classes, function(klass) {
+    // sometimes the split leaves empty string values
+    // incase extra spaces were applied to the options
+    if (klass.length) {
+      obj[klass] = true;
+    }
+  });
+  return obj;
+}
+
+// if any other type of options value besides an Object value is
+// passed into the $animate.method() animation then this helper code
+// will be run which will ignore it. While this patch is not the
+// greatest solution to this, a lot of existing plugins depend on
+// $animate to either call the callback (< 1.2) or return a promise
+// that can be changed. This helper function ensures that the options
+// are wiped clean incase a callback function is provided.
+function prepareAnimateOptions(options) {
+  return isObject(options)
+      ? options
+      : {};
+}
+
+var $$CoreAnimateJsProvider = /** @this */ function() {
+  this.$get = noop;
+};
+
+// this is prefixed with Core since it conflicts with
+// the animateQueueProvider defined in ngAnimate/animateQueue.js
+var $$CoreAnimateQueueProvider = /** @this */ function() {
+  var postDigestQueue = new NgMap();
+  var postDigestElements = [];
+
+  this.$get = ['$$AnimateRunner', '$rootScope',
+       function($$AnimateRunner,   $rootScope) {
+    return {
+      enabled: noop,
+      on: noop,
+      off: noop,
+      pin: noop,
+
+      push: function(element, event, options, domOperation) {
+        if (domOperation) {
+          domOperation();
+        }
+
+        options = options || {};
+        if (options.from) {
+          element.css(options.from);
+        }
+        if (options.to) {
+          element.css(options.to);
+        }
+
+        if (options.addClass || options.removeClass) {
+          addRemoveClassesPostDigest(element, options.addClass, options.removeClass);
+        }
+
+        var runner = new $$AnimateRunner();
+
+        // since there are no animations to run the runner needs to be
+        // notified that the animation call is complete.
+        runner.complete();
+        return runner;
+      }
+    };
+
+
+    function updateData(data, classes, value) {
+      var changed = false;
+      if (classes) {
+        classes = isString(classes) ? classes.split(' ') :
+                  isArray(classes) ? classes : [];
+        forEach(classes, function(className) {
+          if (className) {
+            changed = true;
+            data[className] = value;
+          }
+        });
+      }
+      return changed;
+    }
+
+    function handleCSSClassChanges() {
+      forEach(postDigestElements, function(element) {
+        var data = postDigestQueue.get(element);
+        if (data) {
+          var existing = splitClasses(element.attr('class'));
+          var toAdd = '';
+          var toRemove = '';
+          forEach(data, function(status, className) {
+            var hasClass = !!existing[className];
+            if (status !== hasClass) {
+              if (status) {
+                toAdd += (toAdd.length ? ' ' : '') + className;
+              } else {
+                toRemove += (toRemove.length ? ' ' : '') + className;
+              }
+            }
+          });
+
+          forEach(element, function(elm) {
+            if (toAdd) {
+              jqLiteAddClass(elm, toAdd);
+            }
+            if (toRemove) {
+              jqLiteRemoveClass(elm, toRemove);
+            }
+          });
+          postDigestQueue.delete(element);
+        }
+      });
+      postDigestElements.length = 0;
+    }
+
+
+    function addRemoveClassesPostDigest(element, add, remove) {
+      var data = postDigestQueue.get(element) || {};
+
+      var classesAdded = updateData(data, add, true);
+      var classesRemoved = updateData(data, remove, false);
+
+      if (classesAdded || classesRemoved) {
+
+        postDigestQueue.set(element, data);
+        postDigestElements.push(element);
+
+        if (postDigestElements.length === 1) {
+          $rootScope.$$postDigest(handleCSSClassChanges);
+        }
+      }
+    }
+  }];
+};
+
+/**
+ * @ngdoc provider
+ * @name $animateProvider
+ *
+ * @description
+ * Default implementation of $animate that doesn't perform any animations, instead just
+ * synchronously performs DOM updates and resolves the returned runner promise.
+ *
+ * In order to enable animations the `ngAnimate` module has to be loaded.
+ *
+ * To see the functional implementation check out `src/ngAnimate/animate.js`.
+ */
+var $AnimateProvider = ['$provide', /** @this */ function($provide) {
+  var provider = this;
+  var classNameFilter = null;
+  var customFilter = null;
+
+  this.$$registeredAnimations = Object.create(null);
+
+   /**
+   * @ngdoc method
+   * @name $animateProvider#register
+   *
+   * @description
+   * Registers a new injectable animation factory function. The factory function produces the
+   * animation object which contains callback functions for each event that is expected to be
+   * animated.
+   *
+   *   * `eventFn`: `function(element, ... , doneFunction, options)`
+   *   The element to animate, the `doneFunction` and the options fed into the animation. Depending
+   *   on the type of animation additional arguments will be injected into the animation function. The
+   *   list below explains the function signatures for the different animation methods:
+   *
+   *   - setClass: function(element, addedClasses, removedClasses, doneFunction, options)
+   *   - addClass: function(element, addedClasses, doneFunction, options)
+   *   - removeClass: function(element, removedClasses, doneFunction, options)
+   *   - enter, leave, move: function(element, doneFunction, options)
+   *   - animate: function(element, fromStyles, toStyles, doneFunction, options)
+   *
+   *   Make sure to trigger the `doneFunction` once the animation is fully complete.
+   *
+   * ```js
+   *   return {
+   *     //enter, leave, move signature
+   *     eventFn : function(element, done, options) {
+   *       //code to run the animation
+   *       //once complete, then run done()
+   *       return function endFunction(wasCancelled) {
+   *         //code to cancel the animation
+   *       }
+   *     }
+   *   }
+   * ```
+   *
+   * @param {string} name The name of the animation (this is what the class-based CSS value will be compared to).
+   * @param {Function} factory The factory function that will be executed to return the animation
+   *                           object.
+   */
+  this.register = function(name, factory) {
+    if (name && name.charAt(0) !== '.') {
+      throw $animateMinErr('notcsel', 'Expecting class selector starting with \'.\' got \'{0}\'.', name);
+    }
+
+    var key = name + '-animation';
+    provider.$$registeredAnimations[name.substr(1)] = key;
+    $provide.factory(key, factory);
+  };
+
+  /**
+   * @ngdoc method
+   * @name $animateProvider#customFilter
+   *
+   * @description
+   * Sets and/or returns the custom filter function that is used to "filter" animations, i.e.
+   * determine if an animation is allowed or not. When no filter is specified (the default), no
+   * animation will be blocked. Setting the `customFilter` value will only allow animations for
+   * which the filter function's return value is truthy.
+   *
+   * This allows to easily create arbitrarily complex rules for filtering animations, such as
+   * allowing specific events only, or enabling animations on specific subtrees of the DOM, etc.
+   * Filtering animations can also boost performance for low-powered devices, as well as
+   * applications containing a lot of structural operations.
+   *
+   * <div class="alert alert-success">
+   *   **Best Practice:**
+   *   Keep the filtering function as lean as possible, because it will be called for each DOM
+   *   action (e.g. insertion, removal, class change) performed by "animation-aware" directives.
+   *   See {@link guide/animations#which-directives-support-animations- here} for a list of built-in
+   *   directives that support animations.
+   *   Performing computationally expensive or time-consuming operations on each call of the
+   *   filtering function can make your animations sluggish.
+   * </div>
+   *
+   * **Note:** If present, `customFilter` will be checked before
+   * {@link $animateProvider#classNameFilter classNameFilter}.
+   *
+   * @param {Function=} filterFn - The filter function which will be used to filter all animations.
+   *   If a falsy value is returned, no animation will be performed. The function will be called
+   *   with the following arguments:
+   *   - **node** `{DOMElement}` - The DOM element to be animated.
+   *   - **event** `{String}` - The name of the animation event (e.g. `enter`, `leave`, `addClass`
+   *     etc).
+   *   - **options** `{Object}` - A collection of options/styles used for the animation.
+   * @return {Function} The current filter function or `null` if there is none set.
+   */
+  this.customFilter = function(filterFn) {
+    if (arguments.length === 1) {
+      customFilter = isFunction(filterFn) ? filterFn : null;
+    }
+
+    return customFilter;
+  };
+
+  /**
+   * @ngdoc method
+   * @name $animateProvider#classNameFilter
+   *
+   * @description
+   * Sets and/or returns the CSS class regular expression that is checked when performing
+   * an animation. Upon bootstrap the classNameFilter value is not set at all and will
+   * therefore enable $animate to attempt to perform an animation on any element that is triggered.
+   * When setting the `classNameFilter` value, animations will only be performed on elements
+   * that successfully match the filter expression. This in turn can boost performance
+   * for low-powered devices as well as applications containing a lot of structural operations.
+   *
+   * **Note:** If present, `classNameFilter` will be checked after
+   * {@link $animateProvider#customFilter customFilter}. If `customFilter` is present and returns
+   * false, `classNameFilter` will not be checked.
+   *
+   * @param {RegExp=} expression The className expression which will be checked against all animations
+   * @return {RegExp} The current CSS className expression value. If null then there is no expression value
+   */
+  this.classNameFilter = function(expression) {
+    if (arguments.length === 1) {
+      classNameFilter = (expression instanceof RegExp) ? expression : null;
+      if (classNameFilter) {
+        var reservedRegex = new RegExp('[(\\s|\\/)]' + NG_ANIMATE_CLASSNAME + '[(\\s|\\/)]');
+        if (reservedRegex.test(classNameFilter.toString())) {
+          classNameFilter = null;
+          throw $animateMinErr('nongcls', '$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.', NG_ANIMATE_CLASSNAME);
+        }
+      }
+    }
+    return classNameFilter;
+  };
+
+  this.$get = ['$$animateQueue', function($$animateQueue) {
+    function domInsert(element, parentElement, afterElement) {
+      // if for some reason the previous element was removed
+      // from the dom sometime before this code runs then let's
+      // just stick to using the parent element as the anchor
+      if (afterElement) {
+        var afterNode = extractElementNode(afterElement);
+        if (afterNode && !afterNode.parentNode && !afterNode.previousElementSibling) {
+          afterElement = null;
+        }
+      }
+      if (afterElement) {
+        afterElement.after(element);
+      } else {
+        parentElement.prepend(element);
+      }
+    }
+
+    /**
+     * @ngdoc service
+     * @name $animate
+     * @description The $animate service exposes a series of DOM utility methods that provide support
+     * for animation hooks. The default behavior is the application of DOM operations, however,
+     * when an animation is detected (and animations are enabled), $animate will do the heavy lifting
+     * to ensure that animation runs with the triggered DOM operation.
+     *
+     * By default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't
+     * included and only when it is active then the animation hooks that `$animate` triggers will be
+     * functional. Once active then all structural `ng-` directives will trigger animations as they perform
+     * their DOM-related operations (enter, leave and move). Other directives such as `ngClass`,
+     * `ngShow`, `ngHide` and `ngMessages` also provide support for animations.
+     *
+     * It is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.
+     *
+     * To learn more about enabling animation support, click here to visit the
+     * {@link ngAnimate ngAnimate module page}.
+     */
+    return {
+      // we don't call it directly since non-existant arguments may
+      // be interpreted as null within the sub enabled function
+
+      /**
+       *
+       * @ngdoc method
+       * @name $animate#on
+       * @kind function
+       * @description Sets up an event listener to fire whenever the animation event (enter, leave, move, etc...)
+       *    has fired on the given element or among any of its children. Once the listener is fired, the provided callback
+       *    is fired with the following params:
+       *
+       * ```js
+       * $animate.on('enter', container,
+       *    function callback(element, phase) {
+       *      // cool we detected an enter animation within the container
+       *    }
+       * );
+       * ```
+       *
+       * <div class="alert alert-warning">
+       * **Note**: Generally, the events that are fired correspond 1:1 to `$animate` method names,
+       * e.g. {@link ng.$animate#addClass addClass()} will fire `addClass`, and {@link ng.ngClass}
+       * will fire `addClass` if classes are added, and `removeClass` if classes are removed.
+       * However, there are two exceptions:
+       *
+       * <ul>
+       *   <li>if both an {@link ng.$animate#addClass addClass()} and a
+       *   {@link ng.$animate#removeClass removeClass()} action are performed during the same
+       *   animation, the event fired will be `setClass`. This is true even for `ngClass`.</li>
+       *   <li>an {@link ng.$animate#animate animate()} call that adds and removes classes will fire
+       *   the `setClass` event, but if it either removes or adds classes,
+       *   it will fire `animate` instead.</li>
+       * </ul>
+       *
+       * </div>
+       *
+       * @param {string} event the animation event that will be captured (e.g. enter, leave, move, addClass, removeClass, etc...)
+       * @param {DOMElement} container the container element that will capture each of the animation events that are fired on itself
+       *     as well as among its children
+       * @param {Function} callback the callback function that will be fired when the listener is triggered.
+       *
+       * The arguments present in the callback function are:
+       * * `element` - The captured DOM element that the animation was fired on.
+       * * `phase` - The phase of the animation. The two possible phases are **start** (when the animation starts) and **close** (when it ends).
+       * * `data` - an object with these properties:
+       *     * addClass - `{string|null}` - space-separated CSS classes to add to the element
+       *     * removeClass - `{string|null}` - space-separated CSS classes to remove from the element
+       *     * from - `{Object|null}` - CSS properties & values at the beginning of the animation
+       *     * to - `{Object|null}` - CSS properties & values at the end of the animation
+       *
+       * Note that the callback does not trigger a scope digest. Wrap your call into a
+       * {@link $rootScope.Scope#$apply scope.$apply} to propagate changes to the scope.
+       */
+      on: $$animateQueue.on,
+
+      /**
+       *
+       * @ngdoc method
+       * @name $animate#off
+       * @kind function
+       * @description Deregisters an event listener based on the event which has been associated with the provided element. This method
+       * can be used in three different ways depending on the arguments:
+       *
+       * ```js
+       * // remove all the animation event listeners listening for `enter`
+       * $animate.off('enter');
+       *
+       * // remove listeners for all animation events from the container element
+       * $animate.off(container);
+       *
+       * // remove all the animation event listeners listening for `enter` on the given element and its children
+       * $animate.off('enter', container);
+       *
+       * // remove the event listener function provided by `callback` that is set
+       * // to listen for `enter` on the given `container` as well as its children
+       * $animate.off('enter', container, callback);
+       * ```
+       *
+       * @param {string|DOMElement} event|container the animation event (e.g. enter, leave, move,
+       * addClass, removeClass, etc...), or the container element. If it is the element, all other
+       * arguments are ignored.
+       * @param {DOMElement=} container the container element the event listener was placed on
+       * @param {Function=} callback the callback function that was registered as the listener
+       */
+      off: $$animateQueue.off,
+
+      /**
+       * @ngdoc method
+       * @name $animate#pin
+       * @kind function
+       * @description Associates the provided element with a host parent element to allow the element to be animated even if it exists
+       *    outside of the DOM structure of the AngularJS application. By doing so, any animation triggered via `$animate` can be issued on the
+       *    element despite being outside the realm of the application or within another application. Say for example if the application
+       *    was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated
+       *    as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind
+       *    that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.
+       *
+       *    Note that this feature is only active when the `ngAnimate` module is used.
+       *
+       * @param {DOMElement} element the external element that will be pinned
+       * @param {DOMElement} parentElement the host parent element that will be associated with the external element
+       */
+      pin: $$animateQueue.pin,
+
+      /**
+       *
+       * @ngdoc method
+       * @name $animate#enabled
+       * @kind function
+       * @description Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This
+       * function can be called in four ways:
+       *
+       * ```js
+       * // returns true or false
+       * $animate.enabled();
+       *
+       * // changes the enabled state for all animations
+       * $animate.enabled(false);
+       * $animate.enabled(true);
+       *
+       * // returns true or false if animations are enabled for an element
+       * $animate.enabled(element);
+       *
+       * // changes the enabled state for an element and its children
+       * $animate.enabled(element, true);
+       * $animate.enabled(element, false);
+       * ```
+       *
+       * @param {DOMElement=} element the element that will be considered for checking/setting the enabled state
+       * @param {boolean=} enabled whether or not the animations will be enabled for the element
+       *
+       * @return {boolean} whether or not animations are enabled
+       */
+      enabled: $$animateQueue.enabled,
+
+      /**
+       * @ngdoc method
+       * @name $animate#cancel
+       * @kind function
+       * @description Cancels the provided animation and applies the end state of the animation.
+       * Note that this does not cancel the underlying operation, e.g. the setting of classes or
+       * adding the element to the DOM.
+       *
+       * @param {animationRunner} animationRunner An animation runner returned by an $animate function.
+       *
+       * @example
+        <example module="animationExample" deps="angular-animate.js" animations="true" name="animate-cancel">
+          <file name="app.js">
+            angular.module('animationExample', ['ngAnimate']).component('cancelExample', {
+              templateUrl: 'template.html',
+              controller: function($element, $animate) {
+                this.runner = null;
+
+                this.addClass = function() {
+                  this.runner = $animate.addClass($element.find('div'), 'red');
+                  var ctrl = this;
+                  this.runner.finally(function() {
+                    ctrl.runner = null;
+                  });
+                };
+
+                this.removeClass = function() {
+                  this.runner = $animate.removeClass($element.find('div'), 'red');
+                  var ctrl = this;
+                  this.runner.finally(function() {
+                    ctrl.runner = null;
+                  });
+                };
+
+                this.cancel = function() {
+                  $animate.cancel(this.runner);
+                };
+              }
+            });
+          </file>
+          <file name="template.html">
+            <p>
+              <button id="add" ng-click="$ctrl.addClass()">Add</button>
+              <button ng-click="$ctrl.removeClass()">Remove</button>
+              <br>
+              <button id="cancel" ng-click="$ctrl.cancel()" ng-disabled="!$ctrl.runner">Cancel</button>
+              <br>
+              <div id="target">CSS-Animated Text</div>
+            </p>
+          </file>
+          <file name="index.html">
+            <cancel-example></cancel-example>
+          </file>
+          <file name="style.css">
+            .red-add, .red-remove {
+              transition: all 4s cubic-bezier(0.250, 0.460, 0.450, 0.940);
+            }
+
+            .red,
+            .red-add.red-add-active {
+              color: #FF0000;
+              font-size: 40px;
+            }
+
+            .red-remove.red-remove-active {
+              font-size: 10px;
+              color: black;
+            }
+
+          </file>
+        </example>
+       */
+      cancel: function(runner) {
+        if (runner.cancel) {
+          runner.cancel();
+        }
+      },
+
+      /**
+       *
+       * @ngdoc method
+       * @name $animate#enter
+       * @kind function
+       * @description Inserts the element into the DOM either after the `after` element (if provided) or
+       *   as the first child within the `parent` element and then triggers an animation.
+       *   A promise is returned that will be resolved during the next digest once the animation
+       *   has completed.
+       *
+       * @param {DOMElement} element the element which will be inserted into the DOM
+       * @param {DOMElement} parent the parent element which will append the element as
+       *   a child (so long as the after element is not present)
+       * @param {DOMElement=} after the sibling element after which the element will be appended
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      enter: function(element, parent, after, options) {
+        parent = parent && jqLite(parent);
+        after = after && jqLite(after);
+        parent = parent || after.parent();
+        domInsert(element, parent, after);
+        return $$animateQueue.push(element, 'enter', prepareAnimateOptions(options));
+      },
+
+      /**
+       *
+       * @ngdoc method
+       * @name $animate#move
+       * @kind function
+       * @description Inserts (moves) the element into its new position in the DOM either after
+       *   the `after` element (if provided) or as the first child within the `parent` element
+       *   and then triggers an animation. A promise is returned that will be resolved
+       *   during the next digest once the animation has completed.
+       *
+       * @param {DOMElement} element the element which will be moved into the new DOM position
+       * @param {DOMElement} parent the parent element which will append the element as
+       *   a child (so long as the after element is not present)
+       * @param {DOMElement=} after the sibling element after which the element will be appended
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      move: function(element, parent, after, options) {
+        parent = parent && jqLite(parent);
+        after = after && jqLite(after);
+        parent = parent || after.parent();
+        domInsert(element, parent, after);
+        return $$animateQueue.push(element, 'move', prepareAnimateOptions(options));
+      },
+
+      /**
+       * @ngdoc method
+       * @name $animate#leave
+       * @kind function
+       * @description Triggers an animation and then removes the element from the DOM.
+       * When the function is called a promise is returned that will be resolved during the next
+       * digest once the animation has completed.
+       *
+       * @param {DOMElement} element the element which will be removed from the DOM
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      leave: function(element, options) {
+        return $$animateQueue.push(element, 'leave', prepareAnimateOptions(options), function() {
+          element.remove();
+        });
+      },
+
+      /**
+       * @ngdoc method
+       * @name $animate#addClass
+       * @kind function
+       *
+       * @description Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon
+       *   execution, the addClass operation will only be handled after the next digest and it will not trigger an
+       *   animation if element already contains the CSS class or if the class is removed at a later step.
+       *   Note that class-based animations are treated differently compared to structural animations
+       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
+       *   depending if CSS or JavaScript animations are used.
+       *
+       * @param {DOMElement} element the element which the CSS classes will be applied to
+       * @param {string} className the CSS class(es) that will be added (multiple classes are separated via spaces)
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} animationRunner the animation runner
+       */
+      addClass: function(element, className, options) {
+        options = prepareAnimateOptions(options);
+        options.addClass = mergeClasses(options.addclass, className);
+        return $$animateQueue.push(element, 'addClass', options);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $animate#removeClass
+       * @kind function
+       *
+       * @description Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon
+       *   execution, the removeClass operation will only be handled after the next digest and it will not trigger an
+       *   animation if element does not contain the CSS class or if the class is added at a later step.
+       *   Note that class-based animations are treated differently compared to structural animations
+       *   (like enter, move and leave) since the CSS classes may be added/removed at different points
+       *   depending if CSS or JavaScript animations are used.
+       *
+       * @param {DOMElement} element the element which the CSS classes will be applied to
+       * @param {string} className the CSS class(es) that will be removed (multiple classes are separated via spaces)
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      removeClass: function(element, className, options) {
+        options = prepareAnimateOptions(options);
+        options.removeClass = mergeClasses(options.removeClass, className);
+        return $$animateQueue.push(element, 'removeClass', options);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $animate#setClass
+       * @kind function
+       *
+       * @description Performs both the addition and removal of a CSS classes on an element and (during the process)
+       *    triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and
+       *    `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has
+       *    passed. Note that class-based animations are treated differently compared to structural animations
+       *    (like enter, move and leave) since the CSS classes may be added/removed at different points
+       *    depending if CSS or JavaScript animations are used.
+       *
+       * @param {DOMElement} element the element which the CSS classes will be applied to
+       * @param {string} add the CSS class(es) that will be added (multiple classes are separated via spaces)
+       * @param {string} remove the CSS class(es) that will be removed (multiple classes are separated via spaces)
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      setClass: function(element, add, remove, options) {
+        options = prepareAnimateOptions(options);
+        options.addClass = mergeClasses(options.addClass, add);
+        options.removeClass = mergeClasses(options.removeClass, remove);
+        return $$animateQueue.push(element, 'setClass', options);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $animate#animate
+       * @kind function
+       *
+       * @description Performs an inline animation on the element which applies the provided to and from CSS styles to the element.
+       * If any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take
+       * on the provided styles. For example, if a transition animation is set for the given className, then the provided `from` and
+       * `to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding
+       * style in `to`, the style in `from` is applied immediately, and no animation is run.
+       * If a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`
+       * method (or as part of the `options` parameter):
+       *
+       * ```js
+       * ngModule.animation('.my-inline-animation', function() {
+       *   return {
+       *     animate : function(element, from, to, done, options) {
+       *       //animation
+       *       done();
+       *     }
+       *   }
+       * });
+       * ```
+       *
+       * @param {DOMElement} element the element which the CSS styles will be applied to
+       * @param {object} from the from (starting) CSS styles that will be applied to the element and across the animation.
+       * @param {object} to the to (destination) CSS styles that will be applied to the element and across the animation.
+       * @param {string=} className an optional CSS class that will be applied to the element for the duration of the animation. If
+       *    this value is left as empty then a CSS class of `ng-inline-animate` will be applied to the element.
+       *    (Note that if no animation is detected then this value will not be applied to the element.)
+       * @param {object=} options an optional collection of options/styles that will be applied to the element.
+       *   The object can have the following properties:
+       *
+       *   - **addClass** - `{string}` - space-separated CSS classes to add to element
+       *   - **from** - `{Object}` - CSS properties & values at the beginning of animation. Must have matching `to`
+       *   - **removeClass** - `{string}` - space-separated CSS classes to remove from element
+       *   - **to** - `{Object}` - CSS properties & values at end of animation. Must have matching `from`
+       *
+       * @return {Runner} the animation runner
+       */
+      animate: function(element, from, to, className, options) {
+        options = prepareAnimateOptions(options);
+        options.from = options.from ? extend(options.from, from) : from;
+        options.to   = options.to   ? extend(options.to, to)     : to;
+
+        className = className || 'ng-inline-animate';
+        options.tempClasses = mergeClasses(options.tempClasses, className);
+        return $$animateQueue.push(element, 'animate', options);
+      }
+    };
+  }];
+}];
+
+var $$AnimateAsyncRunFactoryProvider = /** @this */ function() {
+  this.$get = ['$$rAF', function($$rAF) {
+    var waitQueue = [];
+
+    function waitForTick(fn) {
+      waitQueue.push(fn);
+      if (waitQueue.length > 1) return;
+      $$rAF(function() {
+        for (var i = 0; i < waitQueue.length; i++) {
+          waitQueue[i]();
+        }
+        waitQueue = [];
+      });
+    }
+
+    return function() {
+      var passed = false;
+      waitForTick(function() {
+        passed = true;
+      });
+      return function(callback) {
+        if (passed) {
+          callback();
+        } else {
+          waitForTick(callback);
+        }
+      };
+    };
+  }];
+};
+
+var $$AnimateRunnerFactoryProvider = /** @this */ function() {
+  this.$get = ['$q', '$sniffer', '$$animateAsyncRun', '$$isDocumentHidden', '$timeout',
+       function($q,   $sniffer,   $$animateAsyncRun,   $$isDocumentHidden,   $timeout) {
+
+    var INITIAL_STATE = 0;
+    var DONE_PENDING_STATE = 1;
+    var DONE_COMPLETE_STATE = 2;
+
+    AnimateRunner.chain = function(chain, callback) {
+      var index = 0;
+
+      next();
+      function next() {
+        if (index === chain.length) {
+          callback(true);
+          return;
+        }
+
+        chain[index](function(response) {
+          if (response === false) {
+            callback(false);
+            return;
+          }
+          index++;
+          next();
+        });
+      }
+    };
+
+    AnimateRunner.all = function(runners, callback) {
+      var count = 0;
+      var status = true;
+      forEach(runners, function(runner) {
+        runner.done(onProgress);
+      });
+
+      function onProgress(response) {
+        status = status && response;
+        if (++count === runners.length) {
+          callback(status);
+        }
+      }
+    };
+
+    function AnimateRunner(host) {
+      this.setHost(host);
+
+      var rafTick = $$animateAsyncRun();
+      var timeoutTick = function(fn) {
+        $timeout(fn, 0, false);
+      };
+
+      this._doneCallbacks = [];
+      this._tick = function(fn) {
+        if ($$isDocumentHidden()) {
+          timeoutTick(fn);
+        } else {
+          rafTick(fn);
+        }
+      };
+      this._state = 0;
+    }
+
+    AnimateRunner.prototype = {
+      setHost: function(host) {
+        this.host = host || {};
+      },
+
+      done: function(fn) {
+        if (this._state === DONE_COMPLETE_STATE) {
+          fn();
+        } else {
+          this._doneCallbacks.push(fn);
+        }
+      },
+
+      progress: noop,
+
+      getPromise: function() {
+        if (!this.promise) {
+          var self = this;
+          this.promise = $q(function(resolve, reject) {
+            self.done(function(status) {
+              if (status === false) {
+                reject();
+              } else {
+                resolve();
+              }
+            });
+          });
+        }
+        return this.promise;
+      },
+
+      then: function(resolveHandler, rejectHandler) {
+        return this.getPromise().then(resolveHandler, rejectHandler);
+      },
+
+      'catch': function(handler) {
+        return this.getPromise()['catch'](handler);
+      },
+
+      'finally': function(handler) {
+        return this.getPromise()['finally'](handler);
+      },
+
+      pause: function() {
+        if (this.host.pause) {
+          this.host.pause();
+        }
+      },
+
+      resume: function() {
+        if (this.host.resume) {
+          this.host.resume();
+        }
+      },
+
+      end: function() {
+        if (this.host.end) {
+          this.host.end();
+        }
+        this._resolve(true);
+      },
+
+      cancel: function() {
+        if (this.host.cancel) {
+          this.host.cancel();
+        }
+        this._resolve(false);
+      },
+
+      complete: function(response) {
+        var self = this;
+        if (self._state === INITIAL_STATE) {
+          self._state = DONE_PENDING_STATE;
+          self._tick(function() {
+            self._resolve(response);
+          });
+        }
+      },
+
+      _resolve: function(response) {
+        if (this._state !== DONE_COMPLETE_STATE) {
+          forEach(this._doneCallbacks, function(fn) {
+            fn(response);
+          });
+          this._doneCallbacks.length = 0;
+          this._state = DONE_COMPLETE_STATE;
+        }
+      }
+    };
+
+    return AnimateRunner;
+  }];
+};
+
+/* exported $CoreAnimateCssProvider */
+
+/**
+ * @ngdoc service
+ * @name $animateCss
+ * @kind object
+ * @this
+ *
+ * @description
+ * This is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,
+ * then the `$animateCss` service will actually perform animations.
+ *
+ * Click here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.
+ */
+var $CoreAnimateCssProvider = function() {
+  this.$get = ['$$rAF', '$q', '$$AnimateRunner', function($$rAF, $q, $$AnimateRunner) {
+
+    return function(element, initialOptions) {
+      // all of the animation functions should create
+      // a copy of the options data, however, if a
+      // parent service has already created a copy then
+      // we should stick to using that
+      var options = initialOptions || {};
+      if (!options.$$prepared) {
+        options = copy(options);
+      }
+
+      // there is no point in applying the styles since
+      // there is no animation that goes on at all in
+      // this version of $animateCss.
+      if (options.cleanupStyles) {
+        options.from = options.to = null;
+      }
+
+      if (options.from) {
+        element.css(options.from);
+        options.from = null;
+      }
+
+      var closed, runner = new $$AnimateRunner();
+      return {
+        start: run,
+        end: run
+      };
+
+      function run() {
+        $$rAF(function() {
+          applyAnimationContents();
+          if (!closed) {
+            runner.complete();
+          }
+          closed = true;
+        });
+        return runner;
+      }
+
+      function applyAnimationContents() {
+        if (options.addClass) {
+          element.addClass(options.addClass);
+          options.addClass = null;
+        }
+        if (options.removeClass) {
+          element.removeClass(options.removeClass);
+          options.removeClass = null;
+        }
+        if (options.to) {
+          element.css(options.to);
+          options.to = null;
+        }
+      }
+    };
+  }];
+};
+
+/* global getHash: true, stripHash: false */
+
+function getHash(url) {
+  var index = url.indexOf('#');
+  return index === -1 ? '' : url.substr(index);
+}
+
+function trimEmptyHash(url) {
+  return url.replace(/#$/, '');
+}
+
+/**
+ * ! This is a private undocumented service !
+ *
+ * @name $browser
+ * @requires $log
+ * @description
+ * This object has two goals:
+ *
+ * - hide all the global state in the browser caused by the window object
+ * - abstract away all the browser specific features and inconsistencies
+ *
+ * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`
+ * service, which can be used for convenient testing of the application without the interaction with
+ * the real browser apis.
+ */
+/**
+ * @param {object} window The global window object.
+ * @param {object} document jQuery wrapped document.
+ * @param {object} $log window.console or an object with the same interface.
+ * @param {object} $sniffer $sniffer service
+ */
+function Browser(window, document, $log, $sniffer, $$taskTrackerFactory) {
+  var self = this,
+      location = window.location,
+      history = window.history,
+      setTimeout = window.setTimeout,
+      clearTimeout = window.clearTimeout,
+      pendingDeferIds = {},
+      taskTracker = $$taskTrackerFactory($log);
+
+  self.isMock = false;
+
+  //////////////////////////////////////////////////////////////
+  // Task-tracking API
+  //////////////////////////////////////////////////////////////
+
+  // TODO(vojta): remove this temporary api
+  self.$$completeOutstandingRequest = taskTracker.completeTask;
+  self.$$incOutstandingRequestCount = taskTracker.incTaskCount;
+
+  // TODO(vojta): prefix this method with $$ ?
+  self.notifyWhenNoOutstandingRequests = taskTracker.notifyWhenNoPendingTasks;
+
+  //////////////////////////////////////////////////////////////
+  // URL API
+  //////////////////////////////////////////////////////////////
+
+  var cachedState, lastHistoryState,
+      lastBrowserUrl = location.href,
+      baseElement = document.find('base'),
+      pendingLocation = null,
+      getCurrentState = !$sniffer.history ? noop : function getCurrentState() {
+        try {
+          return history.state;
+        } catch (e) {
+          // MSIE can reportedly throw when there is no state (UNCONFIRMED).
+        }
+      };
+
+  cacheState();
+
+  /**
+   * @name $browser#url
+   *
+   * @description
+   * GETTER:
+   * Without any argument, this method just returns current value of `location.href` (with a
+   * trailing `#` stripped of if the hash is empty).
+   *
+   * SETTER:
+   * With at least one argument, this method sets url to new value.
+   * If html5 history api supported, `pushState`/`replaceState` is used, otherwise
+   * `location.href`/`location.replace` is used.
+   * Returns its own instance to allow chaining.
+   *
+   * NOTE: this api is intended for use only by the `$location` service. Please use the
+   * {@link ng.$location $location service} to change url.
+   *
+   * @param {string} url New url (when used as setter)
+   * @param {boolean=} replace Should new url replace current history record?
+   * @param {object=} state State object to use with `pushState`/`replaceState`
+   */
+  self.url = function(url, replace, state) {
+    // In modern browsers `history.state` is `null` by default; treating it separately
+    // from `undefined` would cause `$browser.url('/foo')` to change `history.state`
+    // to undefined via `pushState`. Instead, let's change `undefined` to `null` here.
+    if (isUndefined(state)) {
+      state = null;
+    }
+
+    // Android Browser BFCache causes location, history reference to become stale.
+    if (location !== window.location) location = window.location;
+    if (history !== window.history) history = window.history;
+
+    // setter
+    if (url) {
+      var sameState = lastHistoryState === state;
+
+      // Normalize the inputted URL
+      url = urlResolve(url).href;
+
+      // Don't change anything if previous and current URLs and states match. This also prevents
+      // IE<10 from getting into redirect loop when in LocationHashbangInHtml5Url mode.
+      // See https://github.com/angular/angular.js/commit/ffb2701
+      if (lastBrowserUrl === url && (!$sniffer.history || sameState)) {
+        return self;
+      }
+      var sameBase = lastBrowserUrl && stripHash(lastBrowserUrl) === stripHash(url);
+      lastBrowserUrl = url;
+      lastHistoryState = state;
+      // Don't use history API if only the hash changed
+      // due to a bug in IE10/IE11 which leads
+      // to not firing a `hashchange` nor `popstate` event
+      // in some cases (see #9143).
+      if ($sniffer.history && (!sameBase || !sameState)) {
+        history[replace ? 'replaceState' : 'pushState'](state, '', url);
+        cacheState();
+      } else {
+        if (!sameBase) {
+          pendingLocation = url;
+        }
+        if (replace) {
+          location.replace(url);
+        } else if (!sameBase) {
+          location.href = url;
+        } else {
+          location.hash = getHash(url);
+        }
+        if (location.href !== url) {
+          pendingLocation = url;
+        }
+      }
+      if (pendingLocation) {
+        pendingLocation = url;
+      }
+      return self;
+    // getter
+    } else {
+      // - pendingLocation is needed as browsers don't allow to read out
+      //   the new location.href if a reload happened or if there is a bug like in iOS 9 (see
+      //   https://openradar.appspot.com/22186109).
+      return trimEmptyHash(pendingLocation || location.href);
+    }
+  };
+
+  /**
+   * @name $browser#state
+   *
+   * @description
+   * This method is a getter.
+   *
+   * Return history.state or null if history.state is undefined.
+   *
+   * @returns {object} state
+   */
+  self.state = function() {
+    return cachedState;
+  };
+
+  var urlChangeListeners = [],
+      urlChangeInit = false;
+
+  function cacheStateAndFireUrlChange() {
+    pendingLocation = null;
+    fireStateOrUrlChange();
+  }
+
+  // This variable should be used *only* inside the cacheState function.
+  var lastCachedState = null;
+  function cacheState() {
+    // This should be the only place in $browser where `history.state` is read.
+    cachedState = getCurrentState();
+    cachedState = isUndefined(cachedState) ? null : cachedState;
+
+    // Prevent callbacks fo fire twice if both hashchange & popstate were fired.
+    if (equals(cachedState, lastCachedState)) {
+      cachedState = lastCachedState;
+    }
+
+    lastCachedState = cachedState;
+    lastHistoryState = cachedState;
+  }
+
+  function fireStateOrUrlChange() {
+    var prevLastHistoryState = lastHistoryState;
+    cacheState();
+
+    if (lastBrowserUrl === self.url() && prevLastHistoryState === cachedState) {
+      return;
+    }
+
+    lastBrowserUrl = self.url();
+    lastHistoryState = cachedState;
+    forEach(urlChangeListeners, function(listener) {
+      listener(self.url(), cachedState);
+    });
+  }
+
+  /**
+   * @name $browser#onUrlChange
+   *
+   * @description
+   * Register callback function that will be called, when url changes.
+   *
+   * It's only called when the url is changed from outside of AngularJS:
+   * - user types different url into address bar
+   * - user clicks on history (forward/back) button
+   * - user clicks on a link
+   *
+   * It's not called when url is changed by $browser.url() method
+   *
+   * The listener gets called with new url as parameter.
+   *
+   * NOTE: this api is intended for use only by the $location service. Please use the
+   * {@link ng.$location $location service} to monitor url changes in AngularJS apps.
+   *
+   * @param {function(string)} listener Listener function to be called when url changes.
+   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.
+   */
+  self.onUrlChange = function(callback) {
+    // TODO(vojta): refactor to use node's syntax for events
+    if (!urlChangeInit) {
+      // We listen on both (hashchange/popstate) when available, as some browsers don't
+      // fire popstate when user changes the address bar and don't fire hashchange when url
+      // changed by push/replaceState
+
+      // html5 history api - popstate event
+      if ($sniffer.history) jqLite(window).on('popstate', cacheStateAndFireUrlChange);
+      // hashchange event
+      jqLite(window).on('hashchange', cacheStateAndFireUrlChange);
+
+      urlChangeInit = true;
+    }
+
+    urlChangeListeners.push(callback);
+    return callback;
+  };
+
+  /**
+   * @private
+   * Remove popstate and hashchange handler from window.
+   *
+   * NOTE: this api is intended for use only by $rootScope.
+   */
+  self.$$applicationDestroyed = function() {
+    jqLite(window).off('hashchange popstate', cacheStateAndFireUrlChange);
+  };
+
+  /**
+   * Checks whether the url has changed outside of AngularJS.
+   * Needs to be exported to be able to check for changes that have been done in sync,
+   * as hashchange/popstate events fire in async.
+   */
+  self.$$checkUrlChange = fireStateOrUrlChange;
+
+  //////////////////////////////////////////////////////////////
+  // Misc API
+  //////////////////////////////////////////////////////////////
+
+  /**
+   * @name $browser#baseHref
+   *
+   * @description
+   * Returns current <base href>
+   * (always relative - without domain)
+   *
+   * @returns {string} The current base href
+   */
+  self.baseHref = function() {
+    var href = baseElement.attr('href');
+    return href ? href.replace(/^(https?:)?\/\/[^/]*/, '') : '';
+  };
+
+  /**
+   * @name $browser#defer
+   * @param {function()} fn A function, who's execution should be deferred.
+   * @param {number=} [delay=0] Number of milliseconds to defer the function execution.
+   * @param {string=} [taskType=DEFAULT_TASK_TYPE] The type of task that is deferred.
+   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.
+   *
+   * @description
+   * Executes a fn asynchronously via `setTimeout(fn, delay)`.
+   *
+   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using
+   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed
+   * via `$browser.defer.flush()`.
+   *
+   */
+  self.defer = function(fn, delay, taskType) {
+    var timeoutId;
+
+    delay = delay || 0;
+    taskType = taskType || taskTracker.DEFAULT_TASK_TYPE;
+
+    taskTracker.incTaskCount(taskType);
+    timeoutId = setTimeout(function() {
+      delete pendingDeferIds[timeoutId];
+      taskTracker.completeTask(fn, taskType);
+    }, delay);
+    pendingDeferIds[timeoutId] = taskType;
+
+    return timeoutId;
+  };
+
+
+  /**
+   * @name $browser#defer.cancel
+   *
+   * @description
+   * Cancels a deferred task identified with `deferId`.
+   *
+   * @param {*} deferId Token returned by the `$browser.defer` function.
+   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
+   *                    canceled.
+   */
+  self.defer.cancel = function(deferId) {
+    if (pendingDeferIds.hasOwnProperty(deferId)) {
+      var taskType = pendingDeferIds[deferId];
+      delete pendingDeferIds[deferId];
+      clearTimeout(deferId);
+      taskTracker.completeTask(noop, taskType);
+      return true;
+    }
+    return false;
+  };
+
+}
+
+/** @this */
+function $BrowserProvider() {
+  this.$get = ['$window', '$log', '$sniffer', '$document', '$$taskTrackerFactory',
+       function($window,   $log,   $sniffer,   $document,   $$taskTrackerFactory) {
+    return new Browser($window, $document, $log, $sniffer, $$taskTrackerFactory);
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $cacheFactory
+ * @this
+ *
+ * @description
+ * Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to
+ * them.
+ *
+ * ```js
+ *
+ *  var cache = $cacheFactory('cacheId');
+ *  expect($cacheFactory.get('cacheId')).toBe(cache);
+ *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();
+ *
+ *  cache.put("key", "value");
+ *  cache.put("another key", "another value");
+ *
+ *  // We've specified no options on creation
+ *  expect(cache.info()).toEqual({id: 'cacheId', size: 2});
+ *
+ * ```
+ *
+ *
+ * @param {string} cacheId Name or id of the newly created cache.
+ * @param {object=} options Options object that specifies the cache behavior. Properties:
+ *
+ *   - `{number=}` `capacity` — turns the cache into LRU cache.
+ *
+ * @returns {object} Newly created cache object with the following set of methods:
+ *
+ * - `{object}` `info()` — Returns id, size, and options of cache.
+ * - `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns
+ *   it.
+ * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.
+ * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.
+ * - `{void}` `removeAll()` — Removes all cached values.
+ * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.
+ *
+ * @example
+   <example module="cacheExampleApp" name="cache-factory">
+     <file name="index.html">
+       <div ng-controller="CacheController">
+         <input ng-model="newCacheKey" placeholder="Key">
+         <input ng-model="newCacheValue" placeholder="Value">
+         <button ng-click="put(newCacheKey, newCacheValue)">Cache</button>
+
+         <p ng-if="keys.length">Cached Values</p>
+         <div ng-repeat="key in keys">
+           <span ng-bind="key"></span>
+           <span>: </span>
+           <b ng-bind="cache.get(key)"></b>
+         </div>
+
+         <p>Cache Info</p>
+         <div ng-repeat="(key, value) in cache.info()">
+           <span ng-bind="key"></span>
+           <span>: </span>
+           <b ng-bind="value"></b>
+         </div>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('cacheExampleApp', []).
+         controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {
+           $scope.keys = [];
+           $scope.cache = $cacheFactory('cacheId');
+           $scope.put = function(key, value) {
+             if (angular.isUndefined($scope.cache.get(key))) {
+               $scope.keys.push(key);
+             }
+             $scope.cache.put(key, angular.isUndefined(value) ? null : value);
+           };
+         }]);
+     </file>
+     <file name="style.css">
+       p {
+         margin: 10px 0 3px;
+       }
+     </file>
+   </example>
+ */
+function $CacheFactoryProvider() {
+
+  this.$get = function() {
+    var caches = {};
+
+    function cacheFactory(cacheId, options) {
+      if (cacheId in caches) {
+        throw minErr('$cacheFactory')('iid', 'CacheId \'{0}\' is already taken!', cacheId);
+      }
+
+      var size = 0,
+          stats = extend({}, options, {id: cacheId}),
+          data = createMap(),
+          capacity = (options && options.capacity) || Number.MAX_VALUE,
+          lruHash = createMap(),
+          freshEnd = null,
+          staleEnd = null;
+
+      /**
+       * @ngdoc type
+       * @name $cacheFactory.Cache
+       *
+       * @description
+       * A cache object used to store and retrieve data, primarily used by
+       * {@link $templateRequest $templateRequest} and the {@link ng.directive:script script}
+       * directive to cache templates and other data.
+       *
+       * ```js
+       *  angular.module('superCache')
+       *    .factory('superCache', ['$cacheFactory', function($cacheFactory) {
+       *      return $cacheFactory('super-cache');
+       *    }]);
+       * ```
+       *
+       * Example test:
+       *
+       * ```js
+       *  it('should behave like a cache', inject(function(superCache) {
+       *    superCache.put('key', 'value');
+       *    superCache.put('another key', 'another value');
+       *
+       *    expect(superCache.info()).toEqual({
+       *      id: 'super-cache',
+       *      size: 2
+       *    });
+       *
+       *    superCache.remove('another key');
+       *    expect(superCache.get('another key')).toBeUndefined();
+       *
+       *    superCache.removeAll();
+       *    expect(superCache.info()).toEqual({
+       *      id: 'super-cache',
+       *      size: 0
+       *    });
+       *  }));
+       * ```
+       */
+      return (caches[cacheId] = {
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#put
+         * @kind function
+         *
+         * @description
+         * Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be
+         * retrieved later, and incrementing the size of the cache if the key was not already
+         * present in the cache. If behaving like an LRU cache, it will also remove stale
+         * entries from the set.
+         *
+         * It will not insert undefined values into the cache.
+         *
+         * @param {string} key the key under which the cached data is stored.
+         * @param {*} value the value to store alongside the key. If it is undefined, the key
+         *    will not be stored.
+         * @returns {*} the value stored.
+         */
+        put: function(key, value) {
+          if (isUndefined(value)) return;
+          if (capacity < Number.MAX_VALUE) {
+            var lruEntry = lruHash[key] || (lruHash[key] = {key: key});
+
+            refresh(lruEntry);
+          }
+
+          if (!(key in data)) size++;
+          data[key] = value;
+
+          if (size > capacity) {
+            this.remove(staleEnd.key);
+          }
+
+          return value;
+        },
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#get
+         * @kind function
+         *
+         * @description
+         * Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.
+         *
+         * @param {string} key the key of the data to be retrieved
+         * @returns {*} the value stored.
+         */
+        get: function(key) {
+          if (capacity < Number.MAX_VALUE) {
+            var lruEntry = lruHash[key];
+
+            if (!lruEntry) return;
+
+            refresh(lruEntry);
+          }
+
+          return data[key];
+        },
+
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#remove
+         * @kind function
+         *
+         * @description
+         * Removes an entry from the {@link $cacheFactory.Cache Cache} object.
+         *
+         * @param {string} key the key of the entry to be removed
+         */
+        remove: function(key) {
+          if (capacity < Number.MAX_VALUE) {
+            var lruEntry = lruHash[key];
+
+            if (!lruEntry) return;
+
+            if (lruEntry === freshEnd) freshEnd = lruEntry.p;
+            if (lruEntry === staleEnd) staleEnd = lruEntry.n;
+            link(lruEntry.n,lruEntry.p);
+
+            delete lruHash[key];
+          }
+
+          if (!(key in data)) return;
+
+          delete data[key];
+          size--;
+        },
+
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#removeAll
+         * @kind function
+         *
+         * @description
+         * Clears the cache object of any entries.
+         */
+        removeAll: function() {
+          data = createMap();
+          size = 0;
+          lruHash = createMap();
+          freshEnd = staleEnd = null;
+        },
+
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#destroy
+         * @kind function
+         *
+         * @description
+         * Destroys the {@link $cacheFactory.Cache Cache} object entirely,
+         * removing it from the {@link $cacheFactory $cacheFactory} set.
+         */
+        destroy: function() {
+          data = null;
+          stats = null;
+          lruHash = null;
+          delete caches[cacheId];
+        },
+
+
+        /**
+         * @ngdoc method
+         * @name $cacheFactory.Cache#info
+         * @kind function
+         *
+         * @description
+         * Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.
+         *
+         * @returns {object} an object with the following properties:
+         *   <ul>
+         *     <li>**id**: the id of the cache instance</li>
+         *     <li>**size**: the number of entries kept in the cache instance</li>
+         *     <li>**...**: any additional properties from the options object when creating the
+         *       cache.</li>
+         *   </ul>
+         */
+        info: function() {
+          return extend({}, stats, {size: size});
+        }
+      });
+
+
+      /**
+       * makes the `entry` the freshEnd of the LRU linked list
+       */
+      function refresh(entry) {
+        if (entry !== freshEnd) {
+          if (!staleEnd) {
+            staleEnd = entry;
+          } else if (staleEnd === entry) {
+            staleEnd = entry.n;
+          }
+
+          link(entry.n, entry.p);
+          link(entry, freshEnd);
+          freshEnd = entry;
+          freshEnd.n = null;
+        }
+      }
+
+
+      /**
+       * bidirectionally links two entries of the LRU linked list
+       */
+      function link(nextEntry, prevEntry) {
+        if (nextEntry !== prevEntry) {
+          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify
+          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify
+        }
+      }
+    }
+
+
+  /**
+   * @ngdoc method
+   * @name $cacheFactory#info
+   *
+   * @description
+   * Get information about all the caches that have been created
+   *
+   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`
+   */
+    cacheFactory.info = function() {
+      var info = {};
+      forEach(caches, function(cache, cacheId) {
+        info[cacheId] = cache.info();
+      });
+      return info;
+    };
+
+
+  /**
+   * @ngdoc method
+   * @name $cacheFactory#get
+   *
+   * @description
+   * Get access to a cache object by the `cacheId` used when it was created.
+   *
+   * @param {string} cacheId Name or id of a cache to access.
+   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.
+   */
+    cacheFactory.get = function(cacheId) {
+      return caches[cacheId];
+    };
+
+
+    return cacheFactory;
+  };
+}
+
+/**
+ * @ngdoc service
+ * @name $templateCache
+ * @this
+ *
+ * @description
+ * `$templateCache` is a {@link $cacheFactory.Cache Cache object} created by the
+ * {@link ng.$cacheFactory $cacheFactory}.
+ *
+ * The first time a template is used, it is loaded in the template cache for quick retrieval. You
+ * can load templates directly into the cache in a `script` tag, by using {@link $templateRequest},
+ * or by consuming the `$templateCache` service directly.
+ *
+ * Adding via the `script` tag:
+ *
+ * ```html
+ *   <script type="text/ng-template" id="templateId.html">
+ *     <p>This is the content of the template</p>
+ *   </script>
+ * ```
+ *
+ * **Note:** the `script` tag containing the template does not need to be included in the `head` of
+ * the document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (e.g.
+ * element with {@link ngApp} attribute), otherwise the template will be ignored.
+ *
+ * Adding via the `$templateCache` service:
+ *
+ * ```js
+ * var myApp = angular.module('myApp', []);
+ * myApp.run(function($templateCache) {
+ *   $templateCache.put('templateId.html', 'This is the content of the template');
+ * });
+ * ```
+ *
+ * To retrieve the template later, simply use it in your component:
+ * ```js
+ * myApp.component('myComponent', {
+ *    templateUrl: 'templateId.html'
+ * });
+ * ```
+ *
+ * or get it via the `$templateCache` service:
+ * ```js
+ * $templateCache.get('templateId.html')
+ * ```
+ *
+ */
+function $TemplateCacheProvider() {
+  this.$get = ['$cacheFactory', function($cacheFactory) {
+    return $cacheFactory('templates');
+  }];
+}
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+ *     Any commits to this file should be reviewed with security in mind.  *
+ *   Changes to this file can potentially create security vulnerabilities. *
+ *          An approval from 2 Core members with history of modifying      *
+ *                         this file is required.                          *
+ *                                                                         *
+ *  Does the change somehow allow for arbitrary javascript to be executed? *
+ *    Or allows for someone to change the prototype of built-in objects?   *
+ *     Or gives undesired access to variables like document or window?    *
+ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
+
+/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!
+ *
+ * DOM-related variables:
+ *
+ * - "node" - DOM Node
+ * - "element" - DOM Element or Node
+ * - "$node" or "$element" - jqLite-wrapped node or element
+ *
+ *
+ * Compiler related stuff:
+ *
+ * - "linkFn" - linking fn of a single directive
+ * - "nodeLinkFn" - function that aggregates all linking fns for a particular node
+ * - "childLinkFn" -  function that aggregates all linking fns for child nodes of a particular node
+ * - "compositeLinkFn" - function that aggregates all linking fns for a compilation root (nodeList)
+ */
+
+
+/**
+ * @ngdoc service
+ * @name $compile
+ * @kind function
+ *
+ * @description
+ * Compiles an HTML string or DOM into a template and produces a template function, which
+ * can then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.
+ *
+ * The compilation is a process of walking the DOM tree and matching DOM elements to
+ * {@link ng.$compileProvider#directive directives}.
+ *
+ * <div class="alert alert-warning">
+ * **Note:** This document is an in-depth reference of all directive options.
+ * For a gentle introduction to directives with examples of common use cases,
+ * see the {@link guide/directive directive guide}.
+ * </div>
+ *
+ * ## Comprehensive Directive API
+ *
+ * There are many different options for a directive.
+ *
+ * The difference resides in the return value of the factory function.
+ * You can either return a {@link $compile#directive-definition-object Directive Definition Object (see below)}
+ * that defines the directive properties, or just the `postLink` function (all other properties will have
+ * the default values).
+ *
+ * <div class="alert alert-success">
+ * **Best Practice:** It's recommended to use the "directive definition object" form.
+ * </div>
+ *
+ * Here's an example directive declared with a Directive Definition Object:
+ *
+ * ```js
+ *   var myModule = angular.module(...);
+ *
+ *   myModule.directive('directiveName', function factory(injectables) {
+ *     var directiveDefinitionObject = {
+ *       {@link $compile#-priority- priority}: 0,
+ *       {@link $compile#-template- template}: '<div></div>', // or // function(tElement, tAttrs) { ... },
+ *       // or
+ *       // {@link $compile#-templateurl- templateUrl}: 'directive.html', // or // function(tElement, tAttrs) { ... },
+ *       {@link $compile#-transclude- transclude}: false,
+ *       {@link $compile#-restrict- restrict}: 'A',
+ *       {@link $compile#-templatenamespace- templateNamespace}: 'html',
+ *       {@link $compile#-scope- scope}: false,
+ *       {@link $compile#-controller- controller}: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },
+ *       {@link $compile#-controlleras- controllerAs}: 'stringIdentifier',
+ *       {@link $compile#-bindtocontroller- bindToController}: false,
+ *       {@link $compile#-require- require}: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],
+ *       {@link $compile#-multielement- multiElement}: false,
+ *       {@link $compile#-compile- compile}: function compile(tElement, tAttrs, transclude) {
+ *         return {
+ *            {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
+ *            {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
+ *         }
+ *         // or
+ *         // return function postLink( ... ) { ... }
+ *       },
+ *       // or
+ *       // {@link $compile#-link- link}: {
+ *       //  {@link $compile#pre-linking-function pre}: function preLink(scope, iElement, iAttrs, controller) { ... },
+ *       //  {@link $compile#post-linking-function post}: function postLink(scope, iElement, iAttrs, controller) { ... }
+ *       // }
+ *       // or
+ *       // {@link $compile#-link- link}: function postLink( ... ) { ... }
+ *     };
+ *     return directiveDefinitionObject;
+ *   });
+ * ```
+ *
+ * <div class="alert alert-warning">
+ * **Note:** Any unspecified options will use the default value. You can see the default values below.
+ * </div>
+ *
+ * Therefore the above can be simplified as:
+ *
+ * ```js
+ *   var myModule = angular.module(...);
+ *
+ *   myModule.directive('directiveName', function factory(injectables) {
+ *     var directiveDefinitionObject = {
+ *       link: function postLink(scope, iElement, iAttrs) { ... }
+ *     };
+ *     return directiveDefinitionObject;
+ *     // or
+ *     // return function postLink(scope, iElement, iAttrs) { ... }
+ *   });
+ * ```
+ *
+ * ### Life-cycle hooks
+ * Directive controllers can provide the following methods that are called by AngularJS at points in the life-cycle of the
+ * directive:
+ * * `$onInit()` - Called on each controller after all the controllers on an element have been constructed and
+ *   had their bindings initialized (and before the pre &amp; post linking functions for the directives on
+ *   this element). This is a good place to put initialization code for your controller.
+ * * `$onChanges(changesObj)` - Called whenever one-way (`<`) or interpolation (`@`) bindings are updated. The
+ *   `changesObj` is a hash whose keys are the names of the bound properties that have changed, and the values are an
+ *   object of the form `{ currentValue, previousValue, isFirstChange() }`. Use this hook to trigger updates within a
+ *   component such as cloning the bound value to prevent accidental mutation of the outer value. Note that this will
+ *   also be called when your bindings are initialized.
+ * * `$doCheck()` - Called on each turn of the digest cycle. Provides an opportunity to detect and act on
+ *   changes. Any actions that you wish to take in response to the changes that you detect must be
+ *   invoked from this hook; implementing this has no effect on when `$onChanges` is called. For example, this hook
+ *   could be useful if you wish to perform a deep equality check, or to check a Date object, changes to which would not
+ *   be detected by AngularJS's change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments;
+ *   if detecting changes, you must store the previous value(s) for comparison to the current values.
+ * * `$onDestroy()` - Called on a controller when its containing scope is destroyed. Use this hook for releasing
+ *   external resources, watches and event handlers. Note that components have their `$onDestroy()` hooks called in
+ *   the same order as the `$scope.$broadcast` events are triggered, which is top down. This means that parent
+ *   components will have their `$onDestroy()` hook called before child components.
+ * * `$postLink()` - Called after this controller's element and its children have been linked. Similar to the post-link
+ *   function this hook can be used to set up DOM event handlers and do direct DOM manipulation.
+ *   Note that child elements that contain `templateUrl` directives will not have been compiled and linked since
+ *   they are waiting for their template to load asynchronously and their own compilation and linking has been
+ *   suspended until that occurs.
+ *
+ * #### Comparison with life-cycle hooks in the new Angular
+ * The new Angular also uses life-cycle hooks for its components. While the AngularJS life-cycle hooks are similar there are
+ * some differences that you should be aware of, especially when it comes to moving your code from AngularJS to Angular:
+ *
+ * * AngularJS hooks are prefixed with `$`, such as `$onInit`. Angular hooks are prefixed with `ng`, such as `ngOnInit`.
+ * * AngularJS hooks can be defined on the controller prototype or added to the controller inside its constructor.
+ *   In Angular you can only define hooks on the prototype of the Component class.
+ * * Due to the differences in change-detection, you may get many more calls to `$doCheck` in AngularJS than you would to
+ *   `ngDoCheck` in Angular.
+ * * Changes to the model inside `$doCheck` will trigger new turns of the digest loop, which will cause the changes to be
+ *   propagated throughout the application.
+ *   Angular does not allow the `ngDoCheck` hook to trigger a change outside of the component. It will either throw an
+ *   error or do nothing depending upon the state of `enableProdMode()`.
+ *
+ * #### Life-cycle hook examples
+ *
+ * This example shows how you can check for mutations to a Date object even though the identity of the object
+ * has not changed.
+ *
+ * <example name="doCheckDateExample" module="do-check-module">
+ *   <file name="app.js">
+ *     angular.module('do-check-module', [])
+ *       .component('app', {
+ *         template:
+ *           'Month: <input ng-model="$ctrl.month" ng-change="$ctrl.updateDate()">' +
+ *           'Date: {{ $ctrl.date }}' +
+ *           '<test date="$ctrl.date"></test>',
+ *         controller: function() {
+ *           this.date = new Date();
+ *           this.month = this.date.getMonth();
+ *           this.updateDate = function() {
+ *             this.date.setMonth(this.month);
+ *           };
+ *         }
+ *       })
+ *       .component('test', {
+ *         bindings: { date: '<' },
+ *         template:
+ *           '<pre>{{ $ctrl.log | json }}</pre>',
+ *         controller: function() {
+ *           var previousValue;
+ *           this.log = [];
+ *           this.$doCheck = function() {
+ *             var currentValue = this.date && this.date.valueOf();
+ *             if (previousValue !== currentValue) {
+ *               this.log.push('doCheck: date mutated: ' + this.date);
+ *               previousValue = currentValue;
+ *             }
+ *           };
+ *         }
+ *       });
+ *   </file>
+ *   <file name="index.html">
+ *     <app></app>
+ *   </file>
+ * </example>
+ *
+ * This example show how you might use `$doCheck` to trigger changes in your component's inputs even if the
+ * actual identity of the component doesn't change. (Be aware that cloning and deep equality checks on large
+ * arrays or objects can have a negative impact on your application performance.)
+ *
+ * <example name="doCheckArrayExample" module="do-check-module">
+ *   <file name="index.html">
+ *     <div ng-init="items = []">
+ *       <button ng-click="items.push(items.length)">Add Item</button>
+ *       <button ng-click="items = []">Reset Items</button>
+ *       <pre>{{ items }}</pre>
+ *       <test items="items"></test>
+ *     </div>
+ *   </file>
+ *   <file name="app.js">
+ *      angular.module('do-check-module', [])
+ *        .component('test', {
+ *          bindings: { items: '<' },
+ *          template:
+ *            '<pre>{{ $ctrl.log | json }}</pre>',
+ *          controller: function() {
+ *            this.log = [];
+ *
+ *            this.$doCheck = function() {
+ *              if (this.items_ref !== this.items) {
+ *                this.log.push('doCheck: items changed');
+ *                this.items_ref = this.items;
+ *              }
+ *              if (!angular.equals(this.items_clone, this.items)) {
+ *                this.log.push('doCheck: items mutated');
+ *                this.items_clone = angular.copy(this.items);
+ *              }
+ *            };
+ *          }
+ *        });
+ *   </file>
+ * </example>
+ *
+ *
+ * ### Directive Definition Object
+ *
+ * The directive definition object provides instructions to the {@link ng.$compile
+ * compiler}. The attributes are:
+ *
+ * #### `multiElement`
+ * When this property is set to true (default is `false`), the HTML compiler will collect DOM nodes between
+ * nodes with the attributes `directive-name-start` and `directive-name-end`, and group them
+ * together as the directive elements. It is recommended that this feature be used on directives
+ * which are not strictly behavioral (such as {@link ngClick}), and which
+ * do not manipulate or replace child nodes (such as {@link ngInclude}).
+ *
+ * #### `priority`
+ * When there are multiple directives defined on a single DOM element, sometimes it
+ * is necessary to specify the order in which the directives are applied. The `priority` is used
+ * to sort the directives before their `compile` functions get called. Priority is defined as a
+ * number. Directives with greater numerical `priority` are compiled first. Pre-link functions
+ * are also run in priority order, but post-link functions are run in reverse order. The order
+ * of directives with the same priority is undefined. The default priority is `0`.
+ *
+ * #### `terminal`
+ * If set to true then the current `priority` will be the last set of directives
+ * which will execute (any directives at the current priority will still execute
+ * as the order of execution on same `priority` is undefined). Note that expressions
+ * and other directives used in the directive's template will also be excluded from execution.
+ *
+ * #### `scope`
+ * The scope property can be `false`, `true`, or an object:
+ *
+ * * **`false` (default):** No scope will be created for the directive. The directive will use its
+ * parent's scope.
+ *
+ * * **`true`:** A new child scope that prototypically inherits from its parent will be created for
+ * the directive's element. If multiple directives on the same element request a new scope,
+ * only one new scope is created.
+ *
+ * * **`{...}` (an object hash):** A new "isolate" scope is created for the directive's template.
+ * The 'isolate' scope differs from normal scope in that it does not prototypically
+ * inherit from its parent scope. This is useful when creating reusable components, which should not
+ * accidentally read or modify data in the parent scope. Note that an isolate scope
+ * directive without a `template` or `templateUrl` will not apply the isolate scope
+ * to its children elements.
+ *
+ * The 'isolate' scope object hash defines a set of local scope properties derived from attributes on the
+ * directive's element. These local properties are useful for aliasing values for templates. The keys in
+ * the object hash map to the name of the property on the isolate scope; the values define how the property
+ * is bound to the parent scope, via matching attributes on the directive's element:
+ *
+ * * `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is
+ *   always a string since DOM attributes are strings. If no `attr` name is specified then the
+ *   attribute name is assumed to be the same as the local name. Given `<my-component
+ *   my-attr="hello {{name}}">` and the isolate scope definition `scope: { localName:'@myAttr' }`,
+ *   the directive's scope property `localName` will reflect the interpolated value of `hello
+ *   {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's
+ *   scope. The `name` is read from the parent scope (not the directive's scope).
+ *
+ * * `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression
+ *   passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.
+ *   If no `attr` name is specified then the attribute name is assumed to be the same as the local
+ *   name. Given `<my-component my-attr="parentModel">` and the isolate scope definition `scope: {
+ *   localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the
+ *   value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in
+ *   `localModel` and vice versa. If the binding expression is non-assignable, or if the attribute
+ *   isn't  optional and doesn't exist, an exception
+ *   ({@link error/$compile/nonassign `$compile:nonassign`}) will be thrown upon discovering changes
+ *   to the local value, since it will be impossible to sync them back to the parent scope.
+ *
+ *   By default, the {@link ng.$rootScope.Scope#$watch `$watch`}
+ *   method is used for tracking changes, and the equality check is based on object identity.
+ *   However, if an object literal or an array literal is passed as the binding expression, the
+ *   equality check is done by value (using the {@link angular.equals} function). It's also possible
+ *   to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection
+ *   `$watchCollection`}: use `=*` or `=*attr`
+ *
+  * * `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an
+ *   expression passed via the attribute `attr`. The expression is evaluated in the context of the
+ *   parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the
+ *   local name.
+ *
+ *   For example, given `<my-component my-attr="parentModel">` and directive definition of
+ *   `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the
+ *   value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected
+ *   in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however
+ *   two caveats:
+ *     1. one-way binding does not copy the value from the parent to the isolate scope, it simply
+ *     sets the same value. That means if your bound value is an object, changes to its properties
+ *     in the isolated scope will be reflected in the parent scope (because both reference the same object).
+ *     2. one-way binding watches changes to the **identity** of the parent value. That means the
+ *     {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference
+ *     to the value has changed. In most cases, this should not be of concern, but can be important
+ *     to know if you one-way bind to an object, and then replace that object in the isolated scope.
+ *     If you now change a property of the object in your parent scope, the change will not be
+ *     propagated to the isolated scope, because the identity of the object on the parent scope
+ *     has not changed. Instead you must assign a new object.
+ *
+ *   One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings
+ *   back to the parent. However, it does not make this completely impossible.
+ *
+ *   By default, the {@link ng.$rootScope.Scope#$watch `$watch`}
+ *   method is used for tracking changes, and the equality check is based on object identity.
+ *   It's also possible to watch the evaluated value shallowly with
+ *   {@link ng.$rootScope.Scope#$watchCollection `$watchCollection`}: use `<*` or `<*attr`
+ *
+ * * `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If
+ *   no `attr` name is specified then the attribute name is assumed to be the same as the local name.
+ *   Given `<my-component my-attr="count = count + value">` and the isolate scope definition `scope: {
+ *   localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for
+ *   the `count = count + value` expression. Often it's desirable to pass data from the isolated scope
+ *   via an expression to the parent scope. This can be done by passing a map of local variable names
+ *   and values into the expression wrapper fn. For example, if the expression is `increment(amount)`
+ *   then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.
+ *
+ * All 4 kinds of bindings (`@`, `=`, `<`, and `&`) can be made optional by adding `?` to the expression.
+ * The marker must come after the mode and before the attribute name.
+ * See the {@link error/$compile/iscp Invalid Isolate Scope Definition error} for definition examples.
+ * This is useful to refine the interface directives provide.
+ * One subtle difference between optional and non-optional happens **when the binding attribute is not
+ * set**:
+ * - the binding is optional: the property will not be defined
+ * - the binding is not optional: the property is defined
+ *
+ * ```js
+ *app.directive('testDir', function() {
+    return {
+      scope: {
+        notoptional: '=',
+        optional: '=?',
+      },
+      bindToController: true,
+      controller: function() {
+        this.$onInit = function() {
+          console.log(this.hasOwnProperty('notoptional')) // true
+          console.log(this.hasOwnProperty('optional')) // false
+        }
+      }
+    }
+  })
+ *```
+ *
+ *
+ * ##### Combining directives with different scope defintions
+ *
+ * In general it's possible to apply more than one directive to one element, but there might be limitations
+ * depending on the type of scope required by the directives. The following points will help explain these limitations.
+ * For simplicity only two directives are taken into account, but it is also applicable for several directives:
+ *
+ * * **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope
+ * * **child scope** + **no scope** =>  Both directives will share one single child scope
+ * * **child scope** + **child scope** =>  Both directives will share one single child scope
+ * * **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use
+ * its parent's scope
+ * * **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot
+ * be applied to the same element.
+ * * **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives
+ * cannot be applied to the same element.
+ *
+ *
+ * #### `bindToController`
+ * This property is used to bind scope properties directly to the controller. It can be either
+ * `true` or an object hash with the same format as the `scope` property.
+ *
+ * When an isolate scope is used for a directive (see above), `bindToController: true` will
+ * allow a component to have its properties bound to the controller, rather than to scope.
+ *
+ * After the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller
+ * properties. You can access these bindings once they have been initialized by providing a controller method called
+ * `$onInit`, which is called after all the controllers on an element have been constructed and had their bindings
+ * initialized.
+ *
+ * It is also possible to set `bindToController` to an object hash with the same format as the `scope` property.
+ * This will set up the scope bindings to the controller directly. Note that `scope` can still be used
+ * to define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate
+ * scope (useful for component directives).
+ *
+ * If both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.
+ *
+ *
+ * #### `controller`
+ * Controller constructor function. The controller is instantiated before the
+ * pre-linking phase and can be accessed by other directives (see
+ * `require` attribute). This allows the directives to communicate with each other and augment
+ * each other's behavior. The controller is injectable (and supports bracket notation) with the following locals:
+ *
+ * * `$scope` - Current scope associated with the element
+ * * `$element` - Current element
+ * * `$attrs` - Current attributes object for the element
+ * * `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:
+ *   `function([scope], cloneLinkingFn, futureParentElement, slotName)`:
+ *    * `scope`: (optional) override the scope.
+ *    * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.
+ *    * `futureParentElement` (optional):
+ *        * defines the parent to which the `cloneLinkingFn` will add the cloned elements.
+ *        * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.
+ *        * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)
+ *          and when the `cloneLinkingFn` is passed,
+ *          as those elements need to created and cloned in a special way when they are defined outside their
+ *          usual containers (e.g. like `<svg>`).
+ *        * See also the `directive.templateNamespace` property.
+ *    * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)
+ *      then the default transclusion is provided.
+ *    The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns
+ *    `true` if the specified slot contains content (i.e. one or more DOM nodes).
+ *
+ * #### `require`
+ * Require another directive and inject its controller as the fourth argument to the linking function. The
+ * `require` property can be a string, an array or an object:
+ * * a **string** containing the name of the directive to pass to the linking function
+ * * an **array** containing the names of directives to pass to the linking function. The argument passed to the
+ * linking function will be an array of controllers in the same order as the names in the `require` property
+ * * an **object** whose property values are the names of the directives to pass to the linking function. The argument
+ * passed to the linking function will also be an object with matching keys, whose values will hold the corresponding
+ * controllers.
+ *
+ * If the `require` property is an object and `bindToController` is truthy, then the required controllers are
+ * bound to the controller using the keys of the `require` property. This binding occurs after all the controllers
+ * have been constructed but before `$onInit` is called.
+ * If the name of the required controller is the same as the local name (the key), the name can be
+ * omitted. For example, `{parentDir: '^^'}` is equivalent to `{parentDir: '^^parentDir'}`.
+ * See the {@link $compileProvider#component} helper for an example of how this can be used.
+ * If no such required directive(s) can be found, or if the directive does not have a controller, then an error is
+ * raised (unless no link function is specified and the required controllers are not being bound to the directive
+ * controller, in which case error checking is skipped). The name can be prefixed with:
+ *
+ * * (no prefix) - Locate the required controller on the current element. Throw an error if not found.
+ * * `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.
+ * * `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.
+ * * `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.
+ * * `?^` - Attempt to locate the required controller by searching the element and its parents or pass
+ *   `null` to the `link` fn if not found.
+ * * `?^^` - Attempt to locate the required controller by searching the element's parents, or pass
+ *   `null` to the `link` fn if not found.
+ *
+ *
+ * #### `controllerAs`
+ * Identifier name for a reference to the controller in the directive's scope.
+ * This allows the controller to be referenced from the directive template. This is especially
+ * useful when a directive is used as component, i.e. with an `isolate` scope. It's also possible
+ * to use it in a directive without an `isolate` / `new` scope, but you need to be aware that the
+ * `controllerAs` reference might overwrite a property that already exists on the parent scope.
+ *
+ *
+ * #### `restrict`
+ * String of subset of `EACM` which restricts the directive to a specific directive
+ * declaration style. If omitted, the defaults (elements and attributes) are used.
+ *
+ * * `E` - Element name (default): `<my-directive></my-directive>`
+ * * `A` - Attribute (default): `<div my-directive="exp"></div>`
+ * * `C` - Class: `<div class="my-directive: exp;"></div>`
+ * * `M` - Comment: `<!-- directive: my-directive exp -->`
+ *
+ *
+ * #### `templateNamespace`
+ * String representing the document type used by the markup in the template.
+ * AngularJS needs this information as those elements need to be created and cloned
+ * in a special way when they are defined outside their usual containers like `<svg>` and `<math>`.
+ *
+ * * `html` - All root nodes in the template are HTML. Root nodes may also be
+ *   top-level elements such as `<svg>` or `<math>`.
+ * * `svg` - The root nodes in the template are SVG elements (excluding `<math>`).
+ * * `math` - The root nodes in the template are MathML elements (excluding `<svg>`).
+ *
+ * If no `templateNamespace` is specified, then the namespace is considered to be `html`.
+ *
+ * #### `template`
+ * HTML markup that may:
+ * * Replace the contents of the directive's element (default).
+ * * Replace the directive's element itself (if `replace` is true - DEPRECATED).
+ * * Wrap the contents of the directive's element (if `transclude` is true).
+ *
+ * Value may be:
+ *
+ * * A string. For example `<div red-on-hover>{{delete_str}}</div>`.
+ * * A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`
+ *   function api below) and returns a string value.
+ *
+ *
+ * #### `templateUrl`
+ * This is similar to `template` but the template is loaded from the specified URL, asynchronously.
+ *
+ * Because template loading is asynchronous the compiler will suspend compilation of directives on that element
+ * for later when the template has been resolved.  In the meantime it will continue to compile and link
+ * sibling and parent elements as though this element had not contained any directives.
+ *
+ * The compiler does not suspend the entire compilation to wait for templates to be loaded because this
+ * would result in the whole app "stalling" until all templates are loaded asynchronously - even in the
+ * case when only one deeply nested directive has `templateUrl`.
+ *
+ * Template loading is asynchronous even if the template has been preloaded into the {@link $templateCache}.
+ *
+ * You can specify `templateUrl` as a string representing the URL or as a function which takes two
+ * arguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns
+ * a string value representing the url.  In either case, the template URL is passed through {@link
+ * $sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.
+ *
+ *
+ * #### `replace`
+ * <div class="alert alert-danger">
+ * **Note:** `replace` is deprecated in AngularJS and has been removed in the new Angular (v2+).
+ * </div>
+ *
+ * Specifies what the template should replace. Defaults to `false`.
+ *
+ * * `true` - the template will replace the directive's element.
+ * * `false` - the template will replace the contents of the directive's element.
+ *
+ * The replacement process migrates all of the attributes / classes from the old element to the new
+ * one. See the {@link guide/directive#template-expanding-directive
+ * Directives Guide} for an example.
+ *
+ * There are very few scenarios where element replacement is required for the application function,
+ * the main one being reusable custom components that are used within SVG contexts
+ * (because SVG doesn't work with custom elements in the DOM tree).
+ *
+ * #### `transclude`
+ * Extract the contents of the element where the directive appears and make it available to the directive.
+ * The contents are compiled and provided to the directive as a **transclusion function**. See the
+ * {@link $compile#transclusion Transclusion} section below.
+ *
+ *
+ * #### `compile`
+ *
+ * ```js
+ *   function compile(tElement, tAttrs, transclude) { ... }
+ * ```
+ *
+ * The compile function deals with transforming the template DOM. Since most directives do not do
+ * template transformation, it is not used often. The compile function takes the following arguments:
+ *
+ *   * `tElement` - template element - The element where the directive has been declared. It is
+ *     safe to do template transformation on the element and child elements only.
+ *
+ *   * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared
+ *     between all directive compile functions.
+ *
+ *   * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`
+ *
+ * <div class="alert alert-warning">
+ * **Note:** The template instance and the link instance may be different objects if the template has
+ * been cloned. For this reason it is **not** safe to do anything other than DOM transformations that
+ * apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration
+ * should be done in a linking function rather than in a compile function.
+ * </div>
+
+ * <div class="alert alert-warning">
+ * **Note:** The compile function cannot handle directives that recursively use themselves in their
+ * own templates or compile functions. Compiling these directives results in an infinite loop and
+ * stack overflow errors.
+ *
+ * This can be avoided by manually using `$compile` in the postLink function to imperatively compile
+ * a directive's template instead of relying on automatic template compilation via `template` or
+ * `templateUrl` declaration or manual compilation inside the compile function.
+ * </div>
+ *
+ * <div class="alert alert-danger">
+ * **Note:** The `transclude` function that is passed to the compile function is deprecated, as it
+ *   e.g. does not know about the right outer scope. Please use the transclude function that is passed
+ *   to the link function instead.
+ * </div>
+
+ * A compile function can have a return value which can be either a function or an object.
+ *
+ * * returning a (post-link) function - is equivalent to registering the linking function via the
+ *   `link` property of the config object when the compile function is empty.
+ *
+ * * returning an object with function(s) registered via `pre` and `post` properties - allows you to
+ *   control when a linking function should be called during the linking phase. See info about
+ *   pre-linking and post-linking functions below.
+ *
+ *
+ * #### `link`
+ * This property is used only if the `compile` property is not defined.
+ *
+ * ```js
+ *   function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }
+ * ```
+ *
+ * The link function is responsible for registering DOM listeners as well as updating the DOM. It is
+ * executed after the template has been cloned. This is where most of the directive logic will be
+ * put.
+ *
+ *   * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the
+ *     directive for registering {@link ng.$rootScope.Scope#$watch watches}.
+ *
+ *   * `iElement` - instance element - The element where the directive is to be used. It is safe to
+ *     manipulate the children of the element only in `postLink` function since the children have
+ *     already been linked.
+ *
+ *   * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared
+ *     between all directive linking functions.
+ *
+ *   * `controller` - the directive's required controller instance(s) - Instances are shared
+ *     among all directives, which allows the directives to use the controllers as a communication
+ *     channel. The exact value depends on the directive's `require` property:
+ *       * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one
+ *       * `string`: the controller instance
+ *       * `array`: array of controller instances
+ *
+ *     If a required controller cannot be found, and it is optional, the instance is `null`,
+ *     otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.
+ *
+ *     Note that you can also require the directive's own controller - it will be made available like
+ *     any other controller.
+ *
+ *   * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.
+ *     This is the same as the `$transclude` parameter of directive controllers,
+ *     see {@link ng.$compile#-controller- the controller section for details}.
+ *     `function([scope], cloneLinkingFn, futureParentElement)`.
+ *
+ * #### Pre-linking function
+ *
+ * Executed before the child elements are linked. Not safe to do DOM transformation since the
+ * compiler linking function will fail to locate the correct elements for linking.
+ *
+ * #### Post-linking function
+ *
+ * Executed after the child elements are linked.
+ *
+ * Note that child elements that contain `templateUrl` directives will not have been compiled
+ * and linked since they are waiting for their template to load asynchronously and their own
+ * compilation and linking has been suspended until that occurs.
+ *
+ * It is safe to do DOM transformation in the post-linking function on elements that are not waiting
+ * for their async templates to be resolved.
+ *
+ *
+ * ### Transclusion
+ *
+ * Transclusion is the process of extracting a collection of DOM elements from one part of the DOM and
+ * copying them to another part of the DOM, while maintaining their connection to the original AngularJS
+ * scope from where they were taken.
+ *
+ * Transclusion is used (often with {@link ngTransclude}) to insert the
+ * original contents of a directive's element into a specified place in the template of the directive.
+ * The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded
+ * content has access to the properties on the scope from which it was taken, even if the directive
+ * has isolated scope.
+ * See the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.
+ *
+ * This makes it possible for the widget to have private state for its template, while the transcluded
+ * content has access to its originating scope.
+ *
+ * <div class="alert alert-warning">
+ * **Note:** When testing an element transclude directive you must not place the directive at the root of the
+ * DOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives
+ * Testing Transclusion Directives}.
+ * </div>
+ *
+ * There are three kinds of transclusion depending upon whether you want to transclude just the contents of the
+ * directive's element, the entire element or multiple parts of the element contents:
+ *
+ * * `true` - transclude the content (i.e. the child nodes) of the directive's element.
+ * * `'element'` - transclude the whole of the directive's element including any directives on this
+ *   element that are defined at a lower priority than this directive. When used, the `template`
+ *   property is ignored.
+ * * **`{...}` (an object hash):** - map elements of the content onto transclusion "slots" in the template.
+ *
+ * **Multi-slot transclusion** is declared by providing an object for the `transclude` property.
+ *
+ * This object is a map where the keys are the name of the slot to fill and the value is an element selector
+ * used to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)
+ * and will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).
+ *
+ * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}.
+ *
+ * If the element selector is prefixed with a `?` then that slot is optional.
+ *
+ * For example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to
+ * the `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.
+ *
+ * Slots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements
+ * in the transclude content. If you wish to know if an optional slot was filled with content, then you can call
+ * `$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and
+ * injectable into the directive's controller.
+ *
+ *
+ * #### Transclusion Functions
+ *
+ * When a directive requests transclusion, the compiler extracts its contents and provides a **transclusion
+ * function** to the directive's `link` function and `controller`. This transclusion function is a special
+ * **linking function** that will return the compiled contents linked to a new transclusion scope.
+ *
+ * <div class="alert alert-info">
+ * If you are just using {@link ngTransclude} then you don't need to worry about this function, since
+ * ngTransclude will deal with it for us.
+ * </div>
+ *
+ * If you want to manually control the insertion and removal of the transcluded content in your directive
+ * then you must use this transclude function. When you call a transclude function it returns a jqLite/JQuery
+ * object that contains the compiled DOM, which is linked to the correct transclusion scope.
+ *
+ * When you call a transclusion function you can pass in a **clone attach function**. This function accepts
+ * two parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded
+ * content and the `scope` is the newly created transclusion scope, which the clone will be linked to.
+ *
+ * <div class="alert alert-info">
+ * **Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function
+ * since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.
+ * </div>
+ *
+ * It is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone
+ * attach function**:
+ *
+ * ```js
+ * var transcludedContent, transclusionScope;
+ *
+ * $transclude(function(clone, scope) {
+ *   element.append(clone);
+ *   transcludedContent = clone;
+ *   transclusionScope = scope;
+ * });
+ * ```
+ *
+ * Later, if you want to remove the transcluded content from your DOM then you should also destroy the
+ * associated transclusion scope:
+ *
+ * ```js
+ * transcludedContent.remove();
+ * transclusionScope.$destroy();
+ * ```
+ *
+ * <div class="alert alert-info">
+ * **Best Practice**: if you intend to add and remove transcluded content manually in your directive
+ * (by calling the transclude function to get the DOM and calling `element.remove()` to remove it),
+ * then you are also responsible for calling `$destroy` on the transclusion scope.
+ * </div>
+ *
+ * The built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}
+ * automatically destroy their transcluded clones as necessary so you do not need to worry about this if
+ * you are simply using {@link ngTransclude} to inject the transclusion into your directive.
+ *
+ *
+ * #### Transclusion Scopes
+ *
+ * When you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion
+ * scope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed
+ * when the directive's scope gets destroyed) but it inherits the properties of the scope from which it
+ * was taken.
+ *
+ * For example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look
+ * like this:
+ *
+ * ```html
+ * <div ng-app>
+ *   <div isolate>
+ *     <div transclusion>
+ *     </div>
+ *   </div>
+ * </div>
+ * ```
+ *
+ * The `$parent` scope hierarchy will look like this:
+ *
+   ```
+   - $rootScope
+     - isolate
+       - transclusion
+   ```
+ *
+ * but the scopes will inherit prototypically from different scopes to their `$parent`.
+ *
+   ```
+   - $rootScope
+     - transclusion
+   - isolate
+   ```
+ *
+ *
+ * ### Attributes
+ *
+ * The {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the
+ * `link()` or `compile()` functions. It has a variety of uses.
+ *
+ * * *Accessing normalized attribute names:* Directives like `ngBind` can be expressed in many ways:
+ *   `ng:bind`, `data-ng-bind`, or `x-ng-bind`. The attributes object allows for normalized access
+ *   to the attributes.
+ *
+ * * *Directive inter-communication:* All directives share the same instance of the attributes
+ *   object which allows the directives to use the attributes object as inter directive
+ *   communication.
+ *
+ * * *Supports interpolation:* Interpolation attributes are assigned to the attribute object
+ *   allowing other directives to read the interpolated value.
+ *
+ * * *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes
+ *   that contain interpolation (e.g. `src="{{bar}}"`). Not only is this very efficient but it's also
+ *   the only way to easily get the actual value because during the linking phase the interpolation
+ *   hasn't been evaluated yet and so the value is at this time set to `undefined`.
+ *
+ * ```js
+ * function linkingFn(scope, elm, attrs, ctrl) {
+ *   // get the attribute value
+ *   console.log(attrs.ngModel);
+ *
+ *   // change the attribute
+ *   attrs.$set('ngModel', 'new value');
+ *
+ *   // observe changes to interpolated attribute
+ *   attrs.$observe('ngModel', function(value) {
+ *     console.log('ngModel has changed value to ' + value);
+ *   });
+ * }
+ * ```
+ *
+ * ## Example
+ *
+ * <div class="alert alert-warning">
+ * **Note**: Typically directives are registered with `module.directive`. The example below is
+ * to illustrate how `$compile` works.
+ * </div>
+ *
+ <example module="compileExample" name="compile">
+   <file name="index.html">
+    <script>
+      angular.module('compileExample', [], function($compileProvider) {
+        // Configure new 'compile' directive by passing a directive
+        // factory function. The factory function injects '$compile'.
+        $compileProvider.directive('compile', function($compile) {
+          // The directive factory creates a link function.
+          return function(scope, element, attrs) {
+            scope.$watch(
+              function(scope) {
+                // Watch the 'compile' expression for changes.
+                return scope.$eval(attrs.compile);
+              },
+              function(value) {
+                // When the 'compile' expression changes
+                // assign it into the current DOM.
+                element.html(value);
+
+                // Compile the new DOM and link it to the current scope.
+                // NOTE: we only compile '.childNodes' so that we
+                // don't get into an infinite loop compiling ourselves.
+                $compile(element.contents())(scope);
+              }
+            );
+          };
+        });
+      })
+      .controller('GreeterController', ['$scope', function($scope) {
+        $scope.name = 'AngularJS';
+        $scope.html = 'Hello {{name}}';
+      }]);
+    </script>
+    <div ng-controller="GreeterController">
+      <input ng-model="name"> <br/>
+      <textarea ng-model="html"></textarea> <br/>
+      <div compile="html"></div>
+    </div>
+   </file>
+   <file name="protractor.js" type="protractor">
+     it('should auto compile', function() {
+       var textarea = $('textarea');
+       var output = $('div[compile]');
+       // The initial state reads 'Hello AngularJS'.
+       expect(output.getText()).toBe('Hello AngularJS');
+       textarea.clear();
+       textarea.sendKeys('{{name}}!');
+       expect(output.getText()).toBe('AngularJS!');
+     });
+   </file>
+ </example>
+
+ *
+ *
+ * @param {string|DOMElement} element Element or HTML string to compile into a template function.
+ * @param {function(angular.Scope, cloneAttachFn=)} transclude function available to directives - DEPRECATED.
+ *
+ * <div class="alert alert-danger">
+ * **Note:** Passing a `transclude` function to the $compile function is deprecated, as it
+ *   e.g. will not use the right outer scope. Please pass the transclude function as a
+ *   `parentBoundTranscludeFn` to the link function instead.
+ * </div>
+ *
+ * @param {number} maxPriority only apply directives lower than given priority (Only effects the
+ *                 root element(s), not their children)
+ * @returns {function(scope, cloneAttachFn=, options=)} a link function which is used to bind template
+ * (a DOM element/tree) to a scope. Where:
+ *
+ *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.
+ *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the
+ *  `template` and call the `cloneAttachFn` function allowing the caller to attach the
+ *  cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is
+ *  called as: <br/> `cloneAttachFn(clonedElement, scope)` where:
+ *
+ *      * `clonedElement` - is a clone of the original `element` passed into the compiler.
+ *      * `scope` - is the current scope with which the linking function is working with.
+ *
+ *  * `options` - An optional object hash with linking options. If `options` is provided, then the following
+ *  keys may be used to control linking behavior:
+ *
+ *      * `parentBoundTranscludeFn` - the transclude function made available to
+ *        directives; if given, it will be passed through to the link functions of
+ *        directives found in `element` during compilation.
+ *      * `transcludeControllers` - an object hash with keys that map controller names
+ *        to a hash with the key `instance`, which maps to the controller instance;
+ *        if given, it will make the controllers available to directives on the compileNode:
+ *        ```
+ *        {
+ *          parent: {
+ *            instance: parentControllerInstance
+ *          }
+ *        }
+ *        ```
+ *      * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add
+ *        the cloned elements; only needed for transcludes that are allowed to contain non HTML
+ *        elements (e.g. SVG elements). See also the `directive.controller` property.
+ *
+ * Calling the linking function returns the element of the template. It is either the original
+ * element passed in, or the clone of the element if the `cloneAttachFn` is provided.
+ *
+ * After linking the view is not updated until after a call to `$digest`, which typically is done by
+ * AngularJS automatically.
+ *
+ * If you need access to the bound view, there are two ways to do it:
+ *
+ * - If you are not asking the linking function to clone the template, create the DOM element(s)
+ *   before you send them to the compiler and keep this reference around.
+ *   ```js
+ *     var element = angular.element('<p>{{total}}</p>');
+ *     $compile(element)(scope);
+ *   ```
+ *
+ * - if on the other hand, you need the element to be cloned, the view reference from the original
+ *   example would not point to the clone, but rather to the original template that was cloned. In
+ *   this case, you can access the clone either via the `cloneAttachFn` or the value returned by the
+ *   linking function:
+ *   ```js
+ *     var templateElement = angular.element('<p>{{total}}</p>');
+ *     var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {
+ *       // Attach the clone to DOM document at the right place.
+ *     });
+ *
+ *     // Now we have reference to the cloned DOM via `clonedElement`.
+ *     // NOTE: The `clonedElement` returned by the linking function is the same as the
+ *     //       `clonedElement` passed to `cloneAttachFn`.
+ *   ```
+ *
+ *
+ * For information on how the compiler works, see the
+ * {@link guide/compiler AngularJS HTML Compiler} section of the Developer Guide.
+ *
+ * @knownIssue
+ *
+ * ### Double Compilation
+ *
+   Double compilation occurs when an already compiled part of the DOM gets
+   compiled again. This is an undesired effect and can lead to misbehaving directives, performance issues,
+   and memory leaks. Refer to the Compiler Guide {@link guide/compiler#double-compilation-and-how-to-avoid-it
+   section on double compilation} for an in-depth explanation and ways to avoid it.
+
+ * @knownIssue
+
+   ### Issues with `replace: true`
+ *
+ * <div class="alert alert-danger">
+ *   **Note**: {@link $compile#-replace- `replace: true`} is deprecated and not recommended to use,
+ *   mainly due to the issues listed here. It has been completely removed in the new Angular.
+ * </div>
+ *
+ * #### Attribute values are not merged
+ *
+ * When a `replace` directive encounters the same attribute on the original and the replace node,
+ * it will simply deduplicate the attribute and join the values with a space or with a `;` in case of
+ * the `style` attribute.
+ * ```html
+ * Original Node: <span class="original" style="color: red;"></span>
+ * Replace Template: <span class="replaced" style="background: blue;"></span>
+ * Result: <span class="original replaced" style="color: red; background: blue;"></span>
+ * ```
+ *
+ * That means attributes that contain AngularJS expressions will not be merged correctly, e.g.
+ * {@link ngShow} or {@link ngClass} will cause a {@link $parse} error:
+ *
+ * ```html
+ * Original Node: <span ng-class="{'something': something}" ng-show="!condition"></span>
+ * Replace Template: <span ng-class="{'else': else}" ng-show="otherCondition"></span>
+ * Result: <span ng-class="{'something': something} {'else': else}" ng-show="!condition otherCondition"></span>
+ * ```
+ *
+ * See issue [#5695](https://github.com/angular/angular.js/issues/5695).
+ *
+ * #### Directives are not deduplicated before compilation
+ *
+ * When the original node and the replace template declare the same directive(s), they will be
+ * {@link guide/compiler#double-compilation-and-how-to-avoid-it compiled twice} because the compiler
+ * does not deduplicate them. In many cases, this is not noticeable, but e.g. {@link ngModel} will
+ * attach `$formatters` and `$parsers` twice.
+ *
+ * See issue [#2573](https://github.com/angular/angular.js/issues/2573).
+ *
+ * #### `transclude: element` in the replace template root can have unexpected effects
+ *
+ * When the replace template has a directive at the root node that uses
+ * {@link $compile#-transclude- `transclude: element`}, e.g.
+ * {@link ngIf} or {@link ngRepeat}, the DOM structure or scope inheritance can be incorrect.
+ * See the following issues:
+ *
+ * - Incorrect scope on replaced element:
+ * [#9837](https://github.com/angular/angular.js/issues/9837)
+ * - Different DOM between `template` and `templateUrl`:
+ * [#10612](https://github.com/angular/angular.js/issues/14326)
+ *
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngProp
+ * @restrict A
+ * @element ANY
+ *
+ * @usage
+ *
+ * ```html
+ * <ANY ng-prop-propname="expression">
+ * </ANY>
+ * ```
+ *
+ * or with uppercase letters in property (e.g. "propName"):
+ *
+ *
+ * ```html
+ * <ANY ng-prop-prop_name="expression">
+ * </ANY>
+ * ```
+ *
+ *
+ * @description
+ * The `ngProp` directive binds an expression to a DOM element property.
+ * `ngProp` allows writing to arbitrary properties by including
+ * the property name in the attribute, e.g. `ng-prop-value="'my value'"` binds 'my value' to
+ * the `value` property.
+ *
+ * Usually, it's not necessary to write to properties in AngularJS, as the built-in directives
+ * handle the most common use cases (instead of the above example, you would use {@link ngValue}).
+ *
+ * However, [custom elements](https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements)
+ * often use custom properties to hold data, and `ngProp` can be used to provide input to these
+ * custom elements.
+ *
+ * ## Binding to camelCase properties
+ *
+ * Since HTML attributes are case-insensitive, camelCase properties like `innerHTML` must be escaped.
+ * AngularJS uses the underscore (_) in front of a character to indicate that it is uppercase, so
+ * `innerHTML`  must be written as `ng-prop-inner_h_t_m_l="expression"` (Note that this is just an
+ * example, and for binding HTML {@link ngBindHtml} should be used.
+ *
+ * ## Security
+ *
+ * Binding expressions to arbitrary properties poses a security risk, as  properties like `innerHTML`
+ * can insert potentially dangerous HTML into the application, e.g. script tags that execute
+ * malicious code.
+ * For this reason, `ngProp` applies Strict Contextual Escaping with the {@link ng.$sce $sce service}.
+ * This means vulnerable properties require their content to be "trusted", based on the
+ * context of the property. For example, the `innerHTML` is in the `HTML` context, and the
+ * `iframe.src` property is in the `RESOURCE_URL` context, which requires that values written to
+ * this property are trusted as a `RESOURCE_URL`.
+ *
+ * This can be set explicitly by calling $sce.trustAs(type, value) on the value that is
+ * trusted before passing it to the `ng-prop-*` directive. There are exist shorthand methods for
+ * each context type in the form of {@link ng.$sce#trustAsResourceUrl $sce.trustAsResourceUrl()} et al.
+ *
+ * In some cases you can also rely upon automatic sanitization of untrusted values - see below.
+ *
+ * Based on the context, other options may exist to mark a value as trusted / configure the behavior
+ * of {@link ng.$sce}. For example, to restrict the `RESOURCE_URL` context to specific origins, use
+ * the {@link $sceDelegateProvider#trustedResourceUrlList trustedResourceUrlList()}
+ * and {@link $sceDelegateProvider#bannedResourceUrlList bannedResourceUrlList()}.
+ *
+ * {@link ng.$sce#what-trusted-context-types-are-supported- Find out more about the different context types}.
+ *
+ * ### HTML Sanitization
+ *
+ * By default, `$sce` will throw an error if it detects untrusted HTML content, and will not bind the
+ * content.
+ * However, if you include the {@link ngSanitize ngSanitize module}, it will try to sanitize the
+ * potentially dangerous HTML, e.g. strip non-trusted tags and attributes when binding to
+ * `innerHTML`.
+ *
+ * @example
+ * ### Binding to different contexts
+ *
+ * <example name="ngProp" module="exampleNgProp">
+ *   <file name="app.js">
+ *     angular.module('exampleNgProp', [])
+ *       .component('main', {
+ *         templateUrl: 'main.html',
+ *         controller: function($sce) {
+ *           this.safeContent = '<strong>Safe content</strong>';
+ *           this.unsafeContent = '<button onclick="alert(\'Hello XSS!\')">Click for XSS</button>';
+ *           this.trustedUnsafeContent = $sce.trustAsHtml(this.unsafeContent);
+ *         }
+ *       });
+ *   </file>
+ *   <file name="main.html">
+ *     <div>
+ *       <div class="prop-unit">
+ *         Binding to a property without security context:
+ *         <div class="prop-binding" ng-prop-inner_text="$ctrl.safeContent"></div>
+ *         <span class="prop-note">innerText</span> (safeContent)
+ *       </div>
+ *
+ *       <div class="prop-unit">
+ *         "Safe" content that requires a security context will throw because the contents could potentially be dangerous ...
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.safeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (safeContent)
+ *       </div>
+ *
+ *       <div class="prop-unit">
+ *         ... so that actually dangerous content cannot be executed:
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.unsafeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (unsafeContent)
+ *       </div>
+ *
+ *       <div class="prop-unit">
+ *         ... but unsafe Content that has been trusted explicitly works - only do this if you are 100% sure!
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.trustedUnsafeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (trustedUnsafeContent)
+ *       </div>
+ *     </div>
+ *   </file>
+ *   <file name="index.html">
+ *     <main></main>
+ *   </file>
+ *   <file name="styles.css">
+ *     .prop-unit {
+ *       margin-bottom: 10px;
+ *     }
+ *
+ *     .prop-binding {
+ *       min-height: 30px;
+ *       border: 1px solid blue;
+ *     }
+ *
+ *     .prop-note {
+ *       font-family: Monospace;
+ *     }
+ *   </file>
+ * </example>
+ *
+ *
+ * @example
+ * ### Binding to innerHTML with ngSanitize
+ *
+ * <example name="ngProp" module="exampleNgProp" deps="angular-sanitize.js">
+ *   <file name="app.js">
+ *     angular.module('exampleNgProp', ['ngSanitize'])
+ *       .component('main', {
+ *         templateUrl: 'main.html',
+ *         controller: function($sce) {
+ *           this.safeContent = '<strong>Safe content</strong>';
+ *           this.unsafeContent = '<button onclick="alert(\'Hello XSS!\')">Click for XSS</button>';
+ *           this.trustedUnsafeContent = $sce.trustAsHtml(this.unsafeContent);
+ *         }
+ *       });
+ *   </file>
+ *   <file name="main.html">
+ *     <div>
+ *       <div class="prop-unit">
+ *         "Safe" content will be sanitized ...
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.safeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (safeContent)
+ *       </div>
+ *
+ *       <div class="prop-unit">
+ *         ... as will dangerous content:
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.unsafeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (unsafeContent)
+ *       </div>
+ *
+ *       <div class="prop-unit">
+ *         ... and content that has been trusted explicitly works the same as without ngSanitize:
+ *         <div class="prop-binding" ng-prop-inner_h_t_m_l="$ctrl.trustedUnsafeContent"></div>
+ *         <span class="prop-note">innerHTML</span> (trustedUnsafeContent)
+ *       </div>
+ *     </div>
+ *   </file>
+ *   <file name="index.html">
+ *     <main></main>
+ *   </file>
+ *   <file name="styles.css">
+ *     .prop-unit {
+ *       margin-bottom: 10px;
+ *     }
+ *
+ *     .prop-binding {
+ *       min-height: 30px;
+ *       border: 1px solid blue;
+ *     }
+ *
+ *     .prop-note {
+ *       font-family: Monospace;
+ *     }
+ *   </file>
+ * </example>
+ *
+ */
+
+/** @ngdoc directive
+ * @name ngOn
+ * @restrict A
+ * @element ANY
+ *
+ * @usage
+ *
+ * ```html
+ * <ANY ng-on-eventname="expression">
+ * </ANY>
+ * ```
+ *
+ * or with uppercase letters in property (e.g. "eventName"):
+ *
+ *
+ * ```html
+ * <ANY ng-on-event_name="expression">
+ * </ANY>
+ * ```
+ *
+ * @description
+ * The `ngOn` directive adds an event listener to a DOM element via
+ * {@link angular.element angular.element().on()}, and evaluates an expression when the event is
+ * fired.
+ * `ngOn` allows adding listeners for arbitrary events by including
+ * the event name in the attribute, e.g. `ng-on-drop="onDrop()"` executes the 'onDrop()' expression
+ * when the `drop` event is fired.
+ *
+ * AngularJS provides specific directives for many events, such as {@link ngClick}, so in most
+ * cases it is not necessary to use `ngOn`. However, AngularJS does not support all events
+ * (e.g. the `drop` event in the example above), and new events might be introduced in later DOM
+ * standards.
+ *
+ * Another use-case for `ngOn` is listening to
+ * [custom events](https://developer.mozilla.org/docs/Web/Guide/Events/Creating_and_triggering_events)
+ * fired by
+ * [custom elements](https://developer.mozilla.org/docs/Web/Web_Components/Using_custom_elements).
+ *
+ * ## Binding to camelCase properties
+ *
+ * Since HTML attributes are case-insensitive, camelCase properties like `myEvent` must be escaped.
+ * AngularJS uses the underscore (_) in front of a character to indicate that it is uppercase, so
+ * `myEvent` must be written as `ng-on-my_event="expression"`.
+ *
+ * @example
+ * ### Bind to built-in DOM events
+ *
+ * <example name="ngOn" module="exampleNgOn">
+ *   <file name="app.js">
+ *     angular.module('exampleNgOn', [])
+ *       .component('main', {
+ *         templateUrl: 'main.html',
+ *         controller: function() {
+ *           this.clickCount = 0;
+ *           this.mouseoverCount = 0;
+ *
+ *           this.loadingState = 0;
+ *         }
+ *       });
+ *   </file>
+ *   <file name="main.html">
+ *     <div>
+ *       This is equivalent to `ngClick` and `ngMouseover`:<br>
+ *       <button
+ *         ng-on-click="$ctrl.clickCount = $ctrl.clickCount + 1"
+ *         ng-on-mouseover="$ctrl.mouseoverCount = $ctrl.mouseoverCount + 1">Click or mouseover</button><br>
+ *       clickCount: {{$ctrl.clickCount}}<br>
+ *       mouseover: {{$ctrl.mouseoverCount}}
+ *
+ *       <hr>
+ *
+ *       For the `error` and `load` event on images no built-in AngularJS directives exist:<br>
+ *       <img src="thisimagedoesnotexist.png" ng-on-error="$ctrl.loadingState = -1" ng-on-load="$ctrl.loadingState = 1"><br>
+ *       <div ng-switch="$ctrl.loadingState">
+ *         <span ng-switch-when="0">Image is loading</span>
+ *         <span ng-switch-when="-1">Image load error</span>
+ *         <span ng-switch-when="1">Image loaded successfully</span>
+ *       </div>
+ *     </div>
+ *   </file>
+ *   <file name="index.html">
+ *     <main></main>
+ *   </file>
+ * </example>
+ *
+ *
+ * @example
+ * ### Bind to custom DOM events
+ *
+ * <example name="ngOnCustom" module="exampleNgOn">
+ *   <file name="app.js">
+ *     angular.module('exampleNgOn', [])
+ *       .component('main', {
+ *         templateUrl: 'main.html',
+ *         controller: function() {
+ *           this.eventLog = '';
+ *
+ *           this.listener = function($event) {
+ *             this.eventLog = 'Event with type "' + $event.type + '" fired at ' + $event.detail;
+ *           };
+ *         }
+ *       })
+ *       .component('childComponent', {
+ *         templateUrl: 'child.html',
+ *         controller: function($element) {
+ *           this.fireEvent = function() {
+ *             var event = new CustomEvent('customtype', { detail: new Date()});
+ *
+ *             $element[0].dispatchEvent(event);
+ *           };
+ *         }
+ *       });
+ *   </file>
+ *   <file name="main.html">
+ *     <child-component ng-on-customtype="$ctrl.listener($event)"></child-component><br>
+ *     <span>Event log: {{$ctrl.eventLog}}</span>
+ *   </file>
+ *   <file name="child.html">
+      <button ng-click="$ctrl.fireEvent()">Fire custom event</button>
+ *   </file>
+ *   <file name="index.html">
+ *     <main></main>
+ *   </file>
+ * </example>
+ */
+
+var $compileMinErr = minErr('$compile');
+
+function UNINITIALIZED_VALUE() {}
+var _UNINITIALIZED_VALUE = new UNINITIALIZED_VALUE();
+
+/**
+ * @ngdoc provider
+ * @name $compileProvider
+ *
+ * @description
+ */
+$CompileProvider.$inject = ['$provide', '$$sanitizeUriProvider'];
+/** @this */
+function $CompileProvider($provide, $$sanitizeUriProvider) {
+  var hasDirectives = {},
+      Suffix = 'Directive',
+      COMMENT_DIRECTIVE_REGEXP = /^\s*directive:\s*([\w-]+)\s+(.*)$/,
+      CLASS_DIRECTIVE_REGEXP = /(([\w-]+)(?::([^;]+))?;?)/,
+      ALL_OR_NOTHING_ATTRS = makeMap('ngSrc,ngSrcset,src,srcset'),
+      REQUIRE_PREFIX_REGEXP = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/;
+
+  // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes
+  // The assumption is that future DOM event attribute names will begin with
+  // 'on' and be composed of only English letters.
+  var EVENT_HANDLER_ATTR_REGEXP = /^(on[a-z]+|formaction)$/;
+  var bindingCache = createMap();
+
+  function parseIsolateBindings(scope, directiveName, isController) {
+    var LOCAL_REGEXP = /^([@&]|[=<](\*?))(\??)\s*([\w$]*)$/;
+
+    var bindings = createMap();
+
+    forEach(scope, function(definition, scopeName) {
+      definition = definition.trim();
+
+      if (definition in bindingCache) {
+        bindings[scopeName] = bindingCache[definition];
+        return;
+      }
+      var match = definition.match(LOCAL_REGEXP);
+
+      if (!match) {
+        throw $compileMinErr('iscp',
+            'Invalid {3} for directive \'{0}\'.' +
+            ' Definition: {... {1}: \'{2}\' ...}',
+            directiveName, scopeName, definition,
+            (isController ? 'controller bindings definition' :
+            'isolate scope definition'));
+      }
+
+      bindings[scopeName] = {
+        mode: match[1][0],
+        collection: match[2] === '*',
+        optional: match[3] === '?',
+        attrName: match[4] || scopeName
+      };
+      if (match[4]) {
+        bindingCache[definition] = bindings[scopeName];
+      }
+    });
+
+    return bindings;
+  }
+
+  function parseDirectiveBindings(directive, directiveName) {
+    var bindings = {
+      isolateScope: null,
+      bindToController: null
+    };
+    if (isObject(directive.scope)) {
+      if (directive.bindToController === true) {
+        bindings.bindToController = parseIsolateBindings(directive.scope,
+                                                         directiveName, true);
+        bindings.isolateScope = {};
+      } else {
+        bindings.isolateScope = parseIsolateBindings(directive.scope,
+                                                     directiveName, false);
+      }
+    }
+    if (isObject(directive.bindToController)) {
+      bindings.bindToController =
+          parseIsolateBindings(directive.bindToController, directiveName, true);
+    }
+    if (bindings.bindToController && !directive.controller) {
+      // There is no controller
+      throw $compileMinErr('noctrl',
+            'Cannot bind to controller without directive \'{0}\'s controller.',
+            directiveName);
+    }
+    return bindings;
+  }
+
+  function assertValidDirectiveName(name) {
+    var letter = name.charAt(0);
+    if (!letter || letter !== lowercase(letter)) {
+      throw $compileMinErr('baddir', 'Directive/Component name \'{0}\' is invalid. The first character must be a lowercase letter', name);
+    }
+    if (name !== name.trim()) {
+      throw $compileMinErr('baddir',
+            'Directive/Component name \'{0}\' is invalid. The name should not contain leading or trailing whitespaces',
+            name);
+    }
+  }
+
+  function getDirectiveRequire(directive) {
+    var require = directive.require || (directive.controller && directive.name);
+
+    if (!isArray(require) && isObject(require)) {
+      forEach(require, function(value, key) {
+        var match = value.match(REQUIRE_PREFIX_REGEXP);
+        var name = value.substring(match[0].length);
+        if (!name) require[key] = match[0] + key;
+      });
+    }
+
+    return require;
+  }
+
+  function getDirectiveRestrict(restrict, name) {
+    if (restrict && !(isString(restrict) && /[EACM]/.test(restrict))) {
+      throw $compileMinErr('badrestrict',
+          'Restrict property \'{0}\' of directive \'{1}\' is invalid',
+          restrict,
+          name);
+    }
+
+    return restrict || 'EA';
+  }
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#directive
+   * @kind function
+   *
+   * @description
+   * Register a new directive with the compiler.
+   *
+   * @param {string|Object} name Name of the directive in camel-case (i.e. `ngBind` which will match
+   *    as `ng-bind`), or an object map of directives where the keys are the names and the values
+   *    are the factories.
+   * @param {Function|Array} directiveFactory An injectable directive factory function. See the
+   *    {@link guide/directive directive guide} and the {@link $compile compile API} for more info.
+   * @returns {ng.$compileProvider} Self for chaining.
+   */
+  this.directive = function registerDirective(name, directiveFactory) {
+    assertArg(name, 'name');
+    assertNotHasOwnProperty(name, 'directive');
+    if (isString(name)) {
+      assertValidDirectiveName(name);
+      assertArg(directiveFactory, 'directiveFactory');
+      if (!hasDirectives.hasOwnProperty(name)) {
+        hasDirectives[name] = [];
+        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',
+          function($injector, $exceptionHandler) {
+            var directives = [];
+            forEach(hasDirectives[name], function(directiveFactory, index) {
+              try {
+                var directive = $injector.invoke(directiveFactory);
+                if (isFunction(directive)) {
+                  directive = { compile: valueFn(directive) };
+                } else if (!directive.compile && directive.link) {
+                  directive.compile = valueFn(directive.link);
+                }
+                directive.priority = directive.priority || 0;
+                directive.index = index;
+                directive.name = directive.name || name;
+                directive.require = getDirectiveRequire(directive);
+                directive.restrict = getDirectiveRestrict(directive.restrict, name);
+                directive.$$moduleName = directiveFactory.$$moduleName;
+                directives.push(directive);
+              } catch (e) {
+                $exceptionHandler(e);
+              }
+            });
+            return directives;
+          }]);
+      }
+      hasDirectives[name].push(directiveFactory);
+    } else {
+      forEach(name, reverseParams(registerDirective));
+    }
+    return this;
+  };
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#component
+   * @module ng
+   * @param {string|Object} name Name of the component in camelCase (i.e. `myComp` which will match `<my-comp>`),
+   *    or an object map of components where the keys are the names and the values are the component definition objects.
+   * @param {Object} options Component definition object (a simplified
+   *    {@link ng.$compile#directive-definition-object directive definition object}),
+   *    with the following properties (all optional):
+   *
+   *    - `controller` – `{(string|function()=}` – controller constructor function that should be
+   *      associated with newly created scope or the name of a {@link ng.$compile#-controller-
+   *      registered controller} if passed as a string. An empty `noop` function by default.
+   *    - `controllerAs` – `{string=}` – identifier name for to reference the controller in the component's scope.
+   *      If present, the controller will be published to scope under the `controllerAs` name.
+   *      If not present, this will default to be `$ctrl`.
+   *    - `template` – `{string=|function()=}` – html template as a string or a function that
+   *      returns an html template as a string which should be used as the contents of this component.
+   *      Empty string by default.
+   *
+   *      If `template` is a function, then it is {@link auto.$injector#invoke injected} with
+   *      the following locals:
+   *
+   *      - `$element` - Current element
+   *      - `$attrs` - Current attributes object for the element
+   *
+   *    - `templateUrl` – `{string=|function()=}` – path or function that returns a path to an html
+   *      template that should be used  as the contents of this component.
+   *
+   *      If `templateUrl` is a function, then it is {@link auto.$injector#invoke injected} with
+   *      the following locals:
+   *
+   *      - `$element` - Current element
+   *      - `$attrs` - Current attributes object for the element
+   *
+   *    - `bindings` – `{object=}` – defines bindings between DOM attributes and component properties.
+   *      Component properties are always bound to the component controller and not to the scope.
+   *      See {@link ng.$compile#-bindtocontroller- `bindToController`}.
+   *    - `transclude` – `{boolean=}` – whether {@link $compile#transclusion content transclusion} is enabled.
+   *      Disabled by default.
+   *    - `require` - `{Object<string, string>=}` - requires the controllers of other directives and binds them to
+   *      this component's controller. The object keys specify the property names under which the required
+   *      controllers (object values) will be bound. See {@link ng.$compile#-require- `require`}.
+   *    - `$...` – additional properties to attach to the directive factory function and the controller
+   *      constructor function. (This is used by the component router to annotate)
+   *
+   * @returns {ng.$compileProvider} the compile provider itself, for chaining of function calls.
+   * @description
+   * Register a **component definition** with the compiler. This is a shorthand for registering a special
+   * type of directive, which represents a self-contained UI component in your application. Such components
+   * are always isolated (i.e. `scope: {}`) and are always restricted to elements (i.e. `restrict: 'E'`).
+   *
+   * Component definitions are very simple and do not require as much configuration as defining general
+   * directives. Component definitions usually consist only of a template and a controller backing it.
+   *
+   * In order to make the definition easier, components enforce best practices like use of `controllerAs`,
+   * `bindToController`. They always have **isolate scope** and are restricted to elements.
+   *
+   * Here are a few examples of how you would usually define components:
+   *
+   * ```js
+   *   var myMod = angular.module(...);
+   *   myMod.component('myComp', {
+   *     template: '<div>My name is {{$ctrl.name}}</div>',
+   *     controller: function() {
+   *       this.name = 'shahar';
+   *     }
+   *   });
+   *
+   *   myMod.component('myComp', {
+   *     template: '<div>My name is {{$ctrl.name}}</div>',
+   *     bindings: {name: '@'}
+   *   });
+   *
+   *   myMod.component('myComp', {
+   *     templateUrl: 'views/my-comp.html',
+   *     controller: 'MyCtrl',
+   *     controllerAs: 'ctrl',
+   *     bindings: {name: '@'}
+   *   });
+   *
+   * ```
+   * For more examples, and an in-depth guide, see the {@link guide/component component guide}.
+   *
+   * <br />
+   * See also {@link ng.$compileProvider#directive $compileProvider.directive()}.
+   */
+  this.component = function registerComponent(name, options) {
+    if (!isString(name)) {
+      forEach(name, reverseParams(bind(this, registerComponent)));
+      return this;
+    }
+
+    var controller = options.controller || function() {};
+
+    function factory($injector) {
+      function makeInjectable(fn) {
+        if (isFunction(fn) || isArray(fn)) {
+          return /** @this */ function(tElement, tAttrs) {
+            return $injector.invoke(fn, this, {$element: tElement, $attrs: tAttrs});
+          };
+        } else {
+          return fn;
+        }
+      }
+
+      var template = (!options.template && !options.templateUrl ? '' : options.template);
+      var ddo = {
+        controller: controller,
+        controllerAs: identifierForController(options.controller) || options.controllerAs || '$ctrl',
+        template: makeInjectable(template),
+        templateUrl: makeInjectable(options.templateUrl),
+        transclude: options.transclude,
+        scope: {},
+        bindToController: options.bindings || {},
+        restrict: 'E',
+        require: options.require
+      };
+
+      // Copy annotations (starting with $) over to the DDO
+      forEach(options, function(val, key) {
+        if (key.charAt(0) === '$') ddo[key] = val;
+      });
+
+      return ddo;
+    }
+
+    // TODO(pete) remove the following `forEach` before we release 1.6.0
+    // The component-router@0.2.0 looks for the annotations on the controller constructor
+    // Nothing in AngularJS looks for annotations on the factory function but we can't remove
+    // it from 1.5.x yet.
+
+    // Copy any annotation properties (starting with $) over to the factory and controller constructor functions
+    // These could be used by libraries such as the new component router
+    forEach(options, function(val, key) {
+      if (key.charAt(0) === '$') {
+        factory[key] = val;
+        // Don't try to copy over annotations to named controller
+        if (isFunction(controller)) controller[key] = val;
+      }
+    });
+
+    factory.$inject = ['$injector'];
+
+    return this.directive(name, factory);
+  };
+
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#aHrefSanitizationTrustedUrlList
+   * @kind function
+   *
+   * @description
+   * Retrieves or overrides the default regular expression that is used for determining trusted safe
+   * urls during a[href] sanitization.
+   *
+   * The sanitization is a security measure aimed at preventing XSS attacks via html links.
+   *
+   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into
+   * an absolute url. Afterwards, the url is matched against the `aHrefSanitizationTrustedUrlList`
+   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
+   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
+   *
+   * @param {RegExp=} regexp New regexp to trust urls with.
+   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
+   *    chaining otherwise.
+   */
+  this.aHrefSanitizationTrustedUrlList = function(regexp) {
+    if (isDefined(regexp)) {
+      $$sanitizeUriProvider.aHrefSanitizationTrustedUrlList(regexp);
+      return this;
+    } else {
+      return $$sanitizeUriProvider.aHrefSanitizationTrustedUrlList();
+    }
+  };
+
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#aHrefSanitizationWhitelist
+   * @kind function
+   *
+   * @deprecated
+   * sinceVersion="1.8.1"
+   *
+   * This method is deprecated. Use {@link $compileProvider#aHrefSanitizationTrustedUrlList
+   * aHrefSanitizationTrustedUrlList} instead.
+   */
+  Object.defineProperty(this, 'aHrefSanitizationWhitelist', {
+    get: function() {
+      return this.aHrefSanitizationTrustedUrlList;
+    },
+    set: function(value) {
+      this.aHrefSanitizationTrustedUrlList = value;
+    }
+  });
+
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#imgSrcSanitizationTrustedUrlList
+   * @kind function
+   *
+   * @description
+   * Retrieves or overrides the default regular expression that is used for determining trusted safe
+   * urls during img[src] sanitization.
+   *
+   * The sanitization is a security measure aimed at prevent XSS attacks via html links.
+   *
+   * Any url about to be assigned to img[src] via data-binding is first normalized and turned into
+   * an absolute url. Afterwards, the url is matched against the `imgSrcSanitizationTrustedUrlList`
+   * regular expression. If a match is found, the original url is written into the dom. Otherwise,
+   * the absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.
+   *
+   * @param {RegExp=} regexp New regexp to trust urls with.
+   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
+   *    chaining otherwise.
+   */
+  this.imgSrcSanitizationTrustedUrlList = function(regexp) {
+    if (isDefined(regexp)) {
+      $$sanitizeUriProvider.imgSrcSanitizationTrustedUrlList(regexp);
+      return this;
+    } else {
+      return $$sanitizeUriProvider.imgSrcSanitizationTrustedUrlList();
+    }
+  };
+
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#imgSrcSanitizationWhitelist
+   * @kind function
+   *
+   * @deprecated
+   * sinceVersion="1.8.1"
+   *
+   * This method is deprecated. Use {@link $compileProvider#imgSrcSanitizationTrustedUrlList
+   * imgSrcSanitizationTrustedUrlList} instead.
+   */
+  Object.defineProperty(this, 'imgSrcSanitizationWhitelist', {
+    get: function() {
+      return this.imgSrcSanitizationTrustedUrlList;
+    },
+    set: function(value) {
+      this.imgSrcSanitizationTrustedUrlList = value;
+    }
+  });
+
+  /**
+   * @ngdoc method
+   * @name  $compileProvider#debugInfoEnabled
+   *
+   * @param {boolean=} enabled update the debugInfoEnabled state if provided, otherwise just return the
+   * current debugInfoEnabled state
+   * @returns {*} current value if used as getter or itself (chaining) if used as setter
+   *
+   * @kind function
+   *
+   * @description
+   * Call this method to enable/disable various debug runtime information in the compiler such as adding
+   * binding information and a reference to the current scope on to DOM elements.
+   * If enabled, the compiler will add the following to DOM elements that have been bound to the scope
+   * * `ng-binding` CSS class
+   * * `ng-scope` and `ng-isolated-scope` CSS classes
+   * * `$binding` data property containing an array of the binding expressions
+   * * Data properties used by the {@link angular.element#methods `scope()`/`isolateScope()` methods} to return
+   *   the element's scope.
+   * * Placeholder comments will contain information about what directive and binding caused the placeholder.
+   *   E.g. `<!-- ngIf: shouldShow() -->`.
+   *
+   * You may want to disable this in production for a significant performance boost. See
+   * {@link guide/production#disabling-debug-data Disabling Debug Data} for more.
+   *
+   * The default value is true.
+   */
+  var debugInfoEnabled = true;
+  this.debugInfoEnabled = function(enabled) {
+    if (isDefined(enabled)) {
+      debugInfoEnabled = enabled;
+      return this;
+    }
+    return debugInfoEnabled;
+  };
+
+  /**
+   * @ngdoc method
+   * @name  $compileProvider#strictComponentBindingsEnabled
+   *
+   * @param {boolean=} enabled update the strictComponentBindingsEnabled state if provided,
+   * otherwise return the current strictComponentBindingsEnabled state.
+   * @returns {*} current value if used as getter or itself (chaining) if used as setter
+   *
+   * @kind function
+   *
+   * @description
+   * Call this method to enable / disable the strict component bindings check. If enabled, the
+   * compiler will enforce that all scope / controller bindings of a
+   * {@link $compileProvider#directive directive} / {@link $compileProvider#component component}
+   * that are not set as optional with `?`, must be provided when the directive is instantiated.
+   * If not provided, the compiler will throw the
+   * {@link error/$compile/missingattr $compile:missingattr error}.
+   *
+   * The default value is false.
+   */
+  var strictComponentBindingsEnabled = false;
+  this.strictComponentBindingsEnabled = function(enabled) {
+    if (isDefined(enabled)) {
+      strictComponentBindingsEnabled = enabled;
+      return this;
+    }
+    return strictComponentBindingsEnabled;
+  };
+
+  var TTL = 10;
+  /**
+   * @ngdoc method
+   * @name $compileProvider#onChangesTtl
+   * @description
+   *
+   * Sets the number of times `$onChanges` hooks can trigger new changes before giving up and
+   * assuming that the model is unstable.
+   *
+   * The current default is 10 iterations.
+   *
+   * In complex applications it's possible that dependencies between `$onChanges` hooks and bindings will result
+   * in several iterations of calls to these hooks. However if an application needs more than the default 10
+   * iterations to stabilize then you should investigate what is causing the model to continuously change during
+   * the `$onChanges` hook execution.
+   *
+   * Increasing the TTL could have performance implications, so you should not change it without proper justification.
+   *
+   * @param {number} limit The number of `$onChanges` hook iterations.
+   * @returns {number|object} the current limit (or `this` if called as a setter for chaining)
+   */
+  this.onChangesTtl = function(value) {
+    if (arguments.length) {
+      TTL = value;
+      return this;
+    }
+    return TTL;
+  };
+
+  var commentDirectivesEnabledConfig = true;
+  /**
+   * @ngdoc method
+   * @name $compileProvider#commentDirectivesEnabled
+   * @description
+   *
+   * It indicates to the compiler
+   * whether or not directives on comments should be compiled.
+   * Defaults to `true`.
+   *
+   * Calling this function with false disables the compilation of directives
+   * on comments for the whole application.
+   * This results in a compilation performance gain,
+   * as the compiler doesn't have to check comments when looking for directives.
+   * This should however only be used if you are sure that no comment directives are used in
+   * the application (including any 3rd party directives).
+   *
+   * @param {boolean} enabled `false` if the compiler may ignore directives on comments
+   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
+   */
+  this.commentDirectivesEnabled = function(value) {
+    if (arguments.length) {
+      commentDirectivesEnabledConfig = value;
+      return this;
+    }
+    return commentDirectivesEnabledConfig;
+  };
+
+
+  var cssClassDirectivesEnabledConfig = true;
+  /**
+   * @ngdoc method
+   * @name $compileProvider#cssClassDirectivesEnabled
+   * @description
+   *
+   * It indicates to the compiler
+   * whether or not directives on element classes should be compiled.
+   * Defaults to `true`.
+   *
+   * Calling this function with false disables the compilation of directives
+   * on element classes for the whole application.
+   * This results in a compilation performance gain,
+   * as the compiler doesn't have to check element classes when looking for directives.
+   * This should however only be used if you are sure that no class directives are used in
+   * the application (including any 3rd party directives).
+   *
+   * @param {boolean} enabled `false` if the compiler may ignore directives on element classes
+   * @returns {boolean|object} the current value (or `this` if called as a setter for chaining)
+   */
+  this.cssClassDirectivesEnabled = function(value) {
+    if (arguments.length) {
+      cssClassDirectivesEnabledConfig = value;
+      return this;
+    }
+    return cssClassDirectivesEnabledConfig;
+  };
+
+
+  /**
+   * The security context of DOM Properties.
+   * @private
+   */
+  var PROP_CONTEXTS = createMap();
+
+  /**
+   * @ngdoc method
+   * @name $compileProvider#addPropertySecurityContext
+   * @description
+   *
+   * Defines the security context for DOM properties bound by ng-prop-*.
+   *
+   * @param {string} elementName The element name or '*' to match any element.
+   * @param {string} propertyName The DOM property name.
+   * @param {string} ctx The {@link $sce} security context in which this value is safe for use, e.g. `$sce.URL`
+   * @returns {object} `this` for chaining
+   */
+  this.addPropertySecurityContext = function(elementName, propertyName, ctx) {
+    var key = (elementName.toLowerCase() + '|' + propertyName.toLowerCase());
+
+    if (key in PROP_CONTEXTS && PROP_CONTEXTS[key] !== ctx) {
+      throw $compileMinErr('ctxoverride', 'Property context \'{0}.{1}\' already set to \'{2}\', cannot override to \'{3}\'.', elementName, propertyName, PROP_CONTEXTS[key], ctx);
+    }
+
+    PROP_CONTEXTS[key] = ctx;
+    return this;
+  };
+
+  /* Default property contexts.
+   *
+   * Copy of https://github.com/angular/angular/blob/6.0.6/packages/compiler/src/schema/dom_security_schema.ts#L31-L58
+   * Changing:
+   * - SecurityContext.* => SCE_CONTEXTS/$sce.*
+   * - STYLE => CSS
+   * - various URL => MEDIA_URL
+   * - *|formAction, form|action URL => RESOURCE_URL (like the attribute)
+   */
+  (function registerNativePropertyContexts() {
+    function registerContext(ctx, values) {
+      forEach(values, function(v) { PROP_CONTEXTS[v.toLowerCase()] = ctx; });
+    }
+
+    registerContext(SCE_CONTEXTS.HTML, [
+      'iframe|srcdoc',
+      '*|innerHTML',
+      '*|outerHTML'
+    ]);
+    registerContext(SCE_CONTEXTS.CSS, ['*|style']);
+    registerContext(SCE_CONTEXTS.URL, [
+      'area|href',       'area|ping',
+      'a|href',          'a|ping',
+      'blockquote|cite',
+      'body|background',
+      'del|cite',
+      'input|src',
+      'ins|cite',
+      'q|cite'
+    ]);
+    registerContext(SCE_CONTEXTS.MEDIA_URL, [
+      'audio|src',
+      'img|src',    'img|srcset',
+      'source|src', 'source|srcset',
+      'track|src',
+      'video|src',  'video|poster'
+    ]);
+    registerContext(SCE_CONTEXTS.RESOURCE_URL, [
+      '*|formAction',
+      'applet|code',      'applet|codebase',
+      'base|href',
+      'embed|src',
+      'frame|src',
+      'form|action',
+      'head|profile',
+      'html|manifest',
+      'iframe|src',
+      'link|href',
+      'media|src',
+      'object|codebase',  'object|data',
+      'script|src'
+    ]);
+  })();
+
+
+  this.$get = [
+            '$injector', '$interpolate', '$exceptionHandler', '$templateRequest', '$parse',
+            '$controller', '$rootScope', '$sce', '$animate',
+    function($injector,   $interpolate,   $exceptionHandler,   $templateRequest,   $parse,
+             $controller,   $rootScope,   $sce,   $animate) {
+
+    var SIMPLE_ATTR_NAME = /^\w/;
+    var specialAttrHolder = window.document.createElement('div');
+
+
+    var commentDirectivesEnabled = commentDirectivesEnabledConfig;
+    var cssClassDirectivesEnabled = cssClassDirectivesEnabledConfig;
+
+
+    var onChangesTtl = TTL;
+    // The onChanges hooks should all be run together in a single digest
+    // When changes occur, the call to trigger their hooks will be added to this queue
+    var onChangesQueue;
+
+    // This function is called in a $$postDigest to trigger all the onChanges hooks in a single digest
+    function flushOnChangesQueue() {
+      try {
+        if (!(--onChangesTtl)) {
+          // We have hit the TTL limit so reset everything
+          onChangesQueue = undefined;
+          throw $compileMinErr('infchng', '{0} $onChanges() iterations reached. Aborting!\n', TTL);
+        }
+        // We must run this hook in an apply since the $$postDigest runs outside apply
+        $rootScope.$apply(function() {
+          for (var i = 0, ii = onChangesQueue.length; i < ii; ++i) {
+            try {
+              onChangesQueue[i]();
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          }
+          // Reset the queue to trigger a new schedule next time there is a change
+          onChangesQueue = undefined;
+        });
+      } finally {
+        onChangesTtl++;
+      }
+    }
+
+
+    function sanitizeSrcset(value, invokeType) {
+      if (!value) {
+        return value;
+      }
+      if (!isString(value)) {
+        throw $compileMinErr('srcset', 'Can\'t pass trusted values to `{0}`: "{1}"', invokeType, value.toString());
+      }
+
+      // Such values are a bit too complex to handle automatically inside $sce.
+      // Instead, we sanitize each of the URIs individually, which works, even dynamically.
+
+      // It's not possible to work around this using `$sce.trustAsMediaUrl`.
+      // If you want to programmatically set explicitly trusted unsafe URLs, you should use
+      // `$sce.trustAsHtml` on the whole `img` tag and inject it into the DOM using the
+      // `ng-bind-html` directive.
+
+      var result = '';
+
+      // first check if there are spaces because it's not the same pattern
+      var trimmedSrcset = trim(value);
+      //                (   999x   ,|   999w   ,|   ,|,   )
+      var srcPattern = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;
+      var pattern = /\s/.test(trimmedSrcset) ? srcPattern : /(,)/;
+
+      // split srcset into tuple of uri and descriptor except for the last item
+      var rawUris = trimmedSrcset.split(pattern);
+
+      // for each tuples
+      var nbrUrisWith2parts = Math.floor(rawUris.length / 2);
+      for (var i = 0; i < nbrUrisWith2parts; i++) {
+        var innerIdx = i * 2;
+        // sanitize the uri
+        result += $sce.getTrustedMediaUrl(trim(rawUris[innerIdx]));
+        // add the descriptor
+        result += ' ' + trim(rawUris[innerIdx + 1]);
+      }
+
+      // split the last item into uri and descriptor
+      var lastTuple = trim(rawUris[i * 2]).split(/\s/);
+
+      // sanitize the last uri
+      result += $sce.getTrustedMediaUrl(trim(lastTuple[0]));
+
+      // and add the last descriptor if any
+      if (lastTuple.length === 2) {
+        result += (' ' + trim(lastTuple[1]));
+      }
+      return result;
+    }
+
+
+    function Attributes(element, attributesToCopy) {
+      if (attributesToCopy) {
+        var keys = Object.keys(attributesToCopy);
+        var i, l, key;
+
+        for (i = 0, l = keys.length; i < l; i++) {
+          key = keys[i];
+          this[key] = attributesToCopy[key];
+        }
+      } else {
+        this.$attr = {};
+      }
+
+      this.$$element = element;
+    }
+
+    Attributes.prototype = {
+      /**
+       * @ngdoc method
+       * @name $compile.directive.Attributes#$normalize
+       * @kind function
+       *
+       * @description
+       * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or
+       * `data-`) to its normalized, camelCase form.
+       *
+       * Also there is special case for Moz prefix starting with upper case letter.
+       *
+       * For further information check out the guide on {@link guide/directive#matching-directives Matching Directives}
+       *
+       * @param {string} name Name to normalize
+       */
+      $normalize: directiveNormalize,
+
+
+      /**
+       * @ngdoc method
+       * @name $compile.directive.Attributes#$addClass
+       * @kind function
+       *
+       * @description
+       * Adds the CSS class value specified by the classVal parameter to the element. If animations
+       * are enabled then an animation will be triggered for the class addition.
+       *
+       * @param {string} classVal The className value that will be added to the element
+       */
+      $addClass: function(classVal) {
+        if (classVal && classVal.length > 0) {
+          $animate.addClass(this.$$element, classVal);
+        }
+      },
+
+      /**
+       * @ngdoc method
+       * @name $compile.directive.Attributes#$removeClass
+       * @kind function
+       *
+       * @description
+       * Removes the CSS class value specified by the classVal parameter from the element. If
+       * animations are enabled then an animation will be triggered for the class removal.
+       *
+       * @param {string} classVal The className value that will be removed from the element
+       */
+      $removeClass: function(classVal) {
+        if (classVal && classVal.length > 0) {
+          $animate.removeClass(this.$$element, classVal);
+        }
+      },
+
+      /**
+       * @ngdoc method
+       * @name $compile.directive.Attributes#$updateClass
+       * @kind function
+       *
+       * @description
+       * Adds and removes the appropriate CSS class values to the element based on the difference
+       * between the new and old CSS class values (specified as newClasses and oldClasses).
+       *
+       * @param {string} newClasses The current CSS className value
+       * @param {string} oldClasses The former CSS className value
+       */
+      $updateClass: function(newClasses, oldClasses) {
+        var toAdd = tokenDifference(newClasses, oldClasses);
+        if (toAdd && toAdd.length) {
+          $animate.addClass(this.$$element, toAdd);
+        }
+
+        var toRemove = tokenDifference(oldClasses, newClasses);
+        if (toRemove && toRemove.length) {
+          $animate.removeClass(this.$$element, toRemove);
+        }
+      },
+
+      /**
+       * Set a normalized attribute on the element in a way such that all directives
+       * can share the attribute. This function properly handles boolean attributes.
+       * @param {string} key Normalized key. (ie ngAttribute)
+       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.
+       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.
+       *     Defaults to true.
+       * @param {string=} attrName Optional none normalized name. Defaults to key.
+       */
+      $set: function(key, value, writeAttr, attrName) {
+        // TODO: decide whether or not to throw an error if "class"
+        // is set through this function since it may cause $updateClass to
+        // become unstable.
+
+        var node = this.$$element[0],
+            booleanKey = getBooleanAttrName(node, key),
+            aliasedKey = getAliasedAttrName(key),
+            observer = key,
+            nodeName;
+
+        if (booleanKey) {
+          this.$$element.prop(key, value);
+          attrName = booleanKey;
+        } else if (aliasedKey) {
+          this[aliasedKey] = value;
+          observer = aliasedKey;
+        }
+
+        this[key] = value;
+
+        // translate normalized key to actual key
+        if (attrName) {
+          this.$attr[key] = attrName;
+        } else {
+          attrName = this.$attr[key];
+          if (!attrName) {
+            this.$attr[key] = attrName = snake_case(key, '-');
+          }
+        }
+
+        nodeName = nodeName_(this.$$element);
+
+        // Sanitize img[srcset] values.
+        if (nodeName === 'img' && key === 'srcset') {
+          this[key] = value = sanitizeSrcset(value, '$set(\'srcset\', value)');
+        }
+
+        if (writeAttr !== false) {
+          if (value === null || isUndefined(value)) {
+            this.$$element.removeAttr(attrName);
+          } else {
+            if (SIMPLE_ATTR_NAME.test(attrName)) {
+              // jQuery skips special boolean attrs treatment in XML nodes for
+              // historical reasons and hence AngularJS cannot freely call
+              // `.attr(attrName, false) with such attributes. To avoid issues
+              // in XHTML, call `removeAttr` in such cases instead.
+              // See https://github.com/jquery/jquery/issues/4249
+              if (booleanKey && value === false) {
+                this.$$element.removeAttr(attrName);
+              } else {
+                this.$$element.attr(attrName, value);
+              }
+            } else {
+              setSpecialAttr(this.$$element[0], attrName, value);
+            }
+          }
+        }
+
+        // fire observers
+        var $$observers = this.$$observers;
+        if ($$observers) {
+          forEach($$observers[observer], function(fn) {
+            try {
+              fn(value);
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          });
+        }
+      },
+
+
+      /**
+       * @ngdoc method
+       * @name $compile.directive.Attributes#$observe
+       * @kind function
+       *
+       * @description
+       * Observes an interpolated attribute.
+       *
+       * The observer function will be invoked once during the next `$digest` following
+       * compilation. The observer is then invoked whenever the interpolated value
+       * changes.
+       *
+       * @param {string} key Normalized key. (ie ngAttribute) .
+       * @param {function(interpolatedValue)} fn Function that will be called whenever
+                the interpolated value of the attribute changes.
+       *        See the {@link guide/interpolation#how-text-and-attribute-bindings-work Interpolation
+       *        guide} for more info.
+       * @returns {function()} Returns a deregistration function for this observer.
+       */
+      $observe: function(key, fn) {
+        var attrs = this,
+            $$observers = (attrs.$$observers || (attrs.$$observers = createMap())),
+            listeners = ($$observers[key] || ($$observers[key] = []));
+
+        listeners.push(fn);
+        $rootScope.$evalAsync(function() {
+          if (!listeners.$$inter && attrs.hasOwnProperty(key) && !isUndefined(attrs[key])) {
+            // no one registered attribute interpolation function, so lets call it manually
+            fn(attrs[key]);
+          }
+        });
+
+        return function() {
+          arrayRemove(listeners, fn);
+        };
+      }
+    };
+
+    function setSpecialAttr(element, attrName, value) {
+      // Attributes names that do not start with letters (such as `(click)`) cannot be set using `setAttribute`
+      // so we have to jump through some hoops to get such an attribute
+      // https://github.com/angular/angular.js/pull/13318
+      specialAttrHolder.innerHTML = '<span ' + attrName + '>';
+      var attributes = specialAttrHolder.firstChild.attributes;
+      var attribute = attributes[0];
+      // We have to remove the attribute from its container element before we can add it to the destination element
+      attributes.removeNamedItem(attribute.name);
+      attribute.value = value;
+      element.attributes.setNamedItem(attribute);
+    }
+
+    function safeAddClass($element, className) {
+      try {
+        $element.addClass(className);
+      } catch (e) {
+        // ignore, since it means that we are trying to set class on
+        // SVG element, where class name is read-only.
+      }
+    }
+
+
+    var startSymbol = $interpolate.startSymbol(),
+        endSymbol = $interpolate.endSymbol(),
+        denormalizeTemplate = (startSymbol === '{{' && endSymbol  === '}}')
+            ? identity
+            : function denormalizeTemplate(template) {
+              return template.replace(/\{\{/g, startSymbol).replace(/}}/g, endSymbol);
+        },
+        NG_PREFIX_BINDING = /^ng(Attr|Prop|On)([A-Z].*)$/;
+    var MULTI_ELEMENT_DIR_RE = /^(.+)Start$/;
+
+    compile.$$addBindingInfo = debugInfoEnabled ? function $$addBindingInfo($element, binding) {
+      var bindings = $element.data('$binding') || [];
+
+      if (isArray(binding)) {
+        bindings = bindings.concat(binding);
+      } else {
+        bindings.push(binding);
+      }
+
+      $element.data('$binding', bindings);
+    } : noop;
+
+    compile.$$addBindingClass = debugInfoEnabled ? function $$addBindingClass($element) {
+      safeAddClass($element, 'ng-binding');
+    } : noop;
+
+    compile.$$addScopeInfo = debugInfoEnabled ? function $$addScopeInfo($element, scope, isolated, noTemplate) {
+      var dataName = isolated ? (noTemplate ? '$isolateScopeNoTemplate' : '$isolateScope') : '$scope';
+      $element.data(dataName, scope);
+    } : noop;
+
+    compile.$$addScopeClass = debugInfoEnabled ? function $$addScopeClass($element, isolated) {
+      safeAddClass($element, isolated ? 'ng-isolate-scope' : 'ng-scope');
+    } : noop;
+
+    compile.$$createComment = function(directiveName, comment) {
+      var content = '';
+      if (debugInfoEnabled) {
+        content = ' ' + (directiveName || '') + ': ';
+        if (comment) content += comment + ' ';
+      }
+      return window.document.createComment(content);
+    };
+
+    return compile;
+
+    //================================
+
+    function compile($compileNodes, transcludeFn, maxPriority, ignoreDirective,
+                        previousCompileContext) {
+      if (!($compileNodes instanceof jqLite)) {
+        // jquery always rewraps, whereas we need to preserve the original selector so that we can
+        // modify it.
+        $compileNodes = jqLite($compileNodes);
+      }
+      var compositeLinkFn =
+              compileNodes($compileNodes, transcludeFn, $compileNodes,
+                           maxPriority, ignoreDirective, previousCompileContext);
+      compile.$$addScopeClass($compileNodes);
+      var namespace = null;
+      return function publicLinkFn(scope, cloneConnectFn, options) {
+        if (!$compileNodes) {
+          throw $compileMinErr('multilink', 'This element has already been linked.');
+        }
+        assertArg(scope, 'scope');
+
+        if (previousCompileContext && previousCompileContext.needsNewScope) {
+          // A parent directive did a replace and a directive on this element asked
+          // for transclusion, which caused us to lose a layer of element on which
+          // we could hold the new transclusion scope, so we will create it manually
+          // here.
+          scope = scope.$parent.$new();
+        }
+
+        options = options || {};
+        var parentBoundTranscludeFn = options.parentBoundTranscludeFn,
+          transcludeControllers = options.transcludeControllers,
+          futureParentElement = options.futureParentElement;
+
+        // When `parentBoundTranscludeFn` is passed, it is a
+        // `controllersBoundTransclude` function (it was previously passed
+        // as `transclude` to directive.link) so we must unwrap it to get
+        // its `boundTranscludeFn`
+        if (parentBoundTranscludeFn && parentBoundTranscludeFn.$$boundTransclude) {
+          parentBoundTranscludeFn = parentBoundTranscludeFn.$$boundTransclude;
+        }
+
+        if (!namespace) {
+          namespace = detectNamespaceForChildElements(futureParentElement);
+        }
+        var $linkNode;
+        if (namespace !== 'html') {
+          // When using a directive with replace:true and templateUrl the $compileNodes
+          // (or a child element inside of them)
+          // might change, so we need to recreate the namespace adapted compileNodes
+          // for call to the link function.
+          // Note: This will already clone the nodes...
+          $linkNode = jqLite(
+            wrapTemplate(namespace, jqLite('<div></div>').append($compileNodes).html())
+          );
+        } else if (cloneConnectFn) {
+          // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart
+          // and sometimes changes the structure of the DOM.
+          $linkNode = JQLitePrototype.clone.call($compileNodes);
+        } else {
+          $linkNode = $compileNodes;
+        }
+
+        if (transcludeControllers) {
+          for (var controllerName in transcludeControllers) {
+            $linkNode.data('$' + controllerName + 'Controller', transcludeControllers[controllerName].instance);
+          }
+        }
+
+        compile.$$addScopeInfo($linkNode, scope);
+
+        if (cloneConnectFn) cloneConnectFn($linkNode, scope);
+        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode, parentBoundTranscludeFn);
+
+        if (!cloneConnectFn) {
+          $compileNodes = compositeLinkFn = null;
+        }
+        return $linkNode;
+      };
+    }
+
+    function detectNamespaceForChildElements(parentElement) {
+      // TODO: Make this detect MathML as well...
+      var node = parentElement && parentElement[0];
+      if (!node) {
+        return 'html';
+      } else {
+        return nodeName_(node) !== 'foreignobject' && toString.call(node).match(/SVG/) ? 'svg' : 'html';
+      }
+    }
+
+    /**
+     * Compile function matches each node in nodeList against the directives. Once all directives
+     * for a particular node are collected their compile functions are executed. The compile
+     * functions return values - the linking functions - are combined into a composite linking
+     * function, which is the a linking function for the node.
+     *
+     * @param {NodeList} nodeList an array of nodes or NodeList to compile
+     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
+     *        scope argument is auto-generated to the new child of the transcluded parent scope.
+     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then
+     *        the rootElement must be set the jqLite collection of the compile root. This is
+     *        needed so that the jqLite collection items can be replaced with widgets.
+     * @param {number=} maxPriority Max directive priority.
+     * @returns {Function} A composite linking function of all of the matched directives or null.
+     */
+    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority, ignoreDirective,
+                            previousCompileContext) {
+      var linkFns = [],
+          // `nodeList` can be either an element's `.childNodes` (live NodeList)
+          // or a jqLite/jQuery collection or an array
+          notLiveList = isArray(nodeList) || (nodeList instanceof jqLite),
+          attrs, directives, nodeLinkFn, childNodes, childLinkFn, linkFnFound, nodeLinkFnFound;
+
+
+      for (var i = 0; i < nodeList.length; i++) {
+        attrs = new Attributes();
+
+        // Support: IE 11 only
+        // Workaround for #11781 and #14924
+        if (msie === 11) {
+          mergeConsecutiveTextNodes(nodeList, i, notLiveList);
+        }
+
+        // We must always refer to `nodeList[i]` hereafter,
+        // since the nodes can be replaced underneath us.
+        directives = collectDirectives(nodeList[i], [], attrs, i === 0 ? maxPriority : undefined,
+                                        ignoreDirective);
+
+        nodeLinkFn = (directives.length)
+            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement,
+                                      null, [], [], previousCompileContext)
+            : null;
+
+        if (nodeLinkFn && nodeLinkFn.scope) {
+          compile.$$addScopeClass(attrs.$$element);
+        }
+
+        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal ||
+                      !(childNodes = nodeList[i].childNodes) ||
+                      !childNodes.length)
+            ? null
+            : compileNodes(childNodes,
+                 nodeLinkFn ? (
+                  (nodeLinkFn.transcludeOnThisElement || !nodeLinkFn.templateOnThisElement)
+                     && nodeLinkFn.transclude) : transcludeFn);
+
+        if (nodeLinkFn || childLinkFn) {
+          linkFns.push(i, nodeLinkFn, childLinkFn);
+          linkFnFound = true;
+          nodeLinkFnFound = nodeLinkFnFound || nodeLinkFn;
+        }
+
+        //use the previous context only for the first element in the virtual group
+        previousCompileContext = null;
+      }
+
+      // return a linking function if we have found anything, null otherwise
+      return linkFnFound ? compositeLinkFn : null;
+
+      function compositeLinkFn(scope, nodeList, $rootElement, parentBoundTranscludeFn) {
+        var nodeLinkFn, childLinkFn, node, childScope, i, ii, idx, childBoundTranscludeFn;
+        var stableNodeList;
+
+
+        if (nodeLinkFnFound) {
+          // copy nodeList so that if a nodeLinkFn removes or adds an element at this DOM level our
+          // offsets don't get screwed up
+          var nodeListLength = nodeList.length;
+          stableNodeList = new Array(nodeListLength);
+
+          // create a sparse array by only copying the elements which have a linkFn
+          for (i = 0; i < linkFns.length; i += 3) {
+            idx = linkFns[i];
+            stableNodeList[idx] = nodeList[idx];
+          }
+        } else {
+          stableNodeList = nodeList;
+        }
+
+        for (i = 0, ii = linkFns.length; i < ii;) {
+          node = stableNodeList[linkFns[i++]];
+          nodeLinkFn = linkFns[i++];
+          childLinkFn = linkFns[i++];
+
+          if (nodeLinkFn) {
+            if (nodeLinkFn.scope) {
+              childScope = scope.$new();
+              compile.$$addScopeInfo(jqLite(node), childScope);
+            } else {
+              childScope = scope;
+            }
+
+            if (nodeLinkFn.transcludeOnThisElement) {
+              childBoundTranscludeFn = createBoundTranscludeFn(
+                  scope, nodeLinkFn.transclude, parentBoundTranscludeFn);
+
+            } else if (!nodeLinkFn.templateOnThisElement && parentBoundTranscludeFn) {
+              childBoundTranscludeFn = parentBoundTranscludeFn;
+
+            } else if (!parentBoundTranscludeFn && transcludeFn) {
+              childBoundTranscludeFn = createBoundTranscludeFn(scope, transcludeFn);
+
+            } else {
+              childBoundTranscludeFn = null;
+            }
+
+            nodeLinkFn(childLinkFn, childScope, node, $rootElement, childBoundTranscludeFn);
+
+          } else if (childLinkFn) {
+            childLinkFn(scope, node.childNodes, undefined, parentBoundTranscludeFn);
+          }
+        }
+      }
+    }
+
+    function mergeConsecutiveTextNodes(nodeList, idx, notLiveList) {
+      var node = nodeList[idx];
+      var parent = node.parentNode;
+      var sibling;
+
+      if (node.nodeType !== NODE_TYPE_TEXT) {
+        return;
+      }
+
+      while (true) {
+        sibling = parent ? node.nextSibling : nodeList[idx + 1];
+        if (!sibling || sibling.nodeType !== NODE_TYPE_TEXT) {
+          break;
+        }
+
+        node.nodeValue = node.nodeValue + sibling.nodeValue;
+
+        if (sibling.parentNode) {
+          sibling.parentNode.removeChild(sibling);
+        }
+        if (notLiveList && sibling === nodeList[idx + 1]) {
+          nodeList.splice(idx + 1, 1);
+        }
+      }
+    }
+
+    function createBoundTranscludeFn(scope, transcludeFn, previousBoundTranscludeFn) {
+      function boundTranscludeFn(transcludedScope, cloneFn, controllers, futureParentElement, containingScope) {
+
+        if (!transcludedScope) {
+          transcludedScope = scope.$new(false, containingScope);
+          transcludedScope.$$transcluded = true;
+        }
+
+        return transcludeFn(transcludedScope, cloneFn, {
+          parentBoundTranscludeFn: previousBoundTranscludeFn,
+          transcludeControllers: controllers,
+          futureParentElement: futureParentElement
+        });
+      }
+
+      // We need  to attach the transclusion slots onto the `boundTranscludeFn`
+      // so that they are available inside the `controllersBoundTransclude` function
+      var boundSlots = boundTranscludeFn.$$slots = createMap();
+      for (var slotName in transcludeFn.$$slots) {
+        if (transcludeFn.$$slots[slotName]) {
+          boundSlots[slotName] = createBoundTranscludeFn(scope, transcludeFn.$$slots[slotName], previousBoundTranscludeFn);
+        } else {
+          boundSlots[slotName] = null;
+        }
+      }
+
+      return boundTranscludeFn;
+    }
+
+    /**
+     * Looks for directives on the given node and adds them to the directive collection which is
+     * sorted.
+     *
+     * @param node Node to search.
+     * @param directives An array to which the directives are added to. This array is sorted before
+     *        the function returns.
+     * @param attrs The shared attrs object which is used to populate the normalized attributes.
+     * @param {number=} maxPriority Max directive priority.
+     */
+    function collectDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
+      var nodeType = node.nodeType,
+          attrsMap = attrs.$attr,
+          match,
+          nodeName,
+          className;
+
+      switch (nodeType) {
+        case NODE_TYPE_ELEMENT: /* Element */
+
+          nodeName = nodeName_(node);
+
+          // use the node name: <directive>
+          addDirective(directives,
+              directiveNormalize(nodeName), 'E', maxPriority, ignoreDirective);
+
+          // iterate over the attributes
+          for (var attr, name, nName, value, ngPrefixMatch, nAttrs = node.attributes,
+                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {
+            var attrStartName = false;
+            var attrEndName = false;
+
+            var isNgAttr = false, isNgProp = false, isNgEvent = false;
+            var multiElementMatch;
+
+            attr = nAttrs[j];
+            name = attr.name;
+            value = attr.value;
+
+            nName = directiveNormalize(name.toLowerCase());
+
+            // Support ng-attr-*, ng-prop-* and ng-on-*
+            if ((ngPrefixMatch = nName.match(NG_PREFIX_BINDING))) {
+              isNgAttr = ngPrefixMatch[1] === 'Attr';
+              isNgProp = ngPrefixMatch[1] === 'Prop';
+              isNgEvent = ngPrefixMatch[1] === 'On';
+
+              // Normalize the non-prefixed name
+              name = name.replace(PREFIX_REGEXP, '')
+                .toLowerCase()
+                .substr(4 + ngPrefixMatch[1].length).replace(/_(.)/g, function(match, letter) {
+                  return letter.toUpperCase();
+                });
+
+            // Support *-start / *-end multi element directives
+            } else if ((multiElementMatch = nName.match(MULTI_ELEMENT_DIR_RE)) && directiveIsMultiElement(multiElementMatch[1])) {
+              attrStartName = name;
+              attrEndName = name.substr(0, name.length - 5) + 'end';
+              name = name.substr(0, name.length - 6);
+            }
+
+            if (isNgProp || isNgEvent) {
+              attrs[nName] = value;
+              attrsMap[nName] = attr.name;
+
+              if (isNgProp) {
+                addPropertyDirective(node, directives, nName, name);
+              } else {
+                addEventDirective(directives, nName, name);
+              }
+            } else {
+              // Update nName for cases where a prefix was removed
+              // NOTE: the .toLowerCase() is unnecessary and causes https://github.com/angular/angular.js/issues/16624 for ng-attr-*
+              nName = directiveNormalize(name.toLowerCase());
+              attrsMap[nName] = name;
+
+              if (isNgAttr || !attrs.hasOwnProperty(nName)) {
+                attrs[nName] = value;
+                if (getBooleanAttrName(node, nName)) {
+                  attrs[nName] = true; // presence means true
+                }
+              }
+
+              addAttrInterpolateDirective(node, directives, value, nName, isNgAttr);
+              addDirective(directives, nName, 'A', maxPriority, ignoreDirective, attrStartName,
+                            attrEndName);
+            }
+          }
+
+          if (nodeName === 'input' && node.getAttribute('type') === 'hidden') {
+            // Hidden input elements can have strange behaviour when navigating back to the page
+            // This tells the browser not to try to cache and reinstate previous values
+            node.setAttribute('autocomplete', 'off');
+          }
+
+          // use class as directive
+          if (!cssClassDirectivesEnabled) break;
+          className = node.className;
+          if (isObject(className)) {
+              // Maybe SVGAnimatedString
+              className = className.animVal;
+          }
+          if (isString(className) && className !== '') {
+            while ((match = CLASS_DIRECTIVE_REGEXP.exec(className))) {
+              nName = directiveNormalize(match[2]);
+              if (addDirective(directives, nName, 'C', maxPriority, ignoreDirective)) {
+                attrs[nName] = trim(match[3]);
+              }
+              className = className.substr(match.index + match[0].length);
+            }
+          }
+          break;
+        case NODE_TYPE_TEXT: /* Text Node */
+          addTextInterpolateDirective(directives, node.nodeValue);
+          break;
+        case NODE_TYPE_COMMENT: /* Comment */
+          if (!commentDirectivesEnabled) break;
+          collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective);
+          break;
+      }
+
+      directives.sort(byPriority);
+      return directives;
+    }
+
+    function collectCommentDirectives(node, directives, attrs, maxPriority, ignoreDirective) {
+      // function created because of performance, try/catch disables
+      // the optimization of the whole function #14848
+      try {
+        var match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);
+        if (match) {
+          var nName = directiveNormalize(match[1]);
+          if (addDirective(directives, nName, 'M', maxPriority, ignoreDirective)) {
+            attrs[nName] = trim(match[2]);
+          }
+        }
+      } catch (e) {
+        // turns out that under some circumstances IE9 throws errors when one attempts to read
+        // comment's node value.
+        // Just ignore it and continue. (Can't seem to reproduce in test case.)
+      }
+    }
+
+    /**
+     * Given a node with a directive-start it collects all of the siblings until it finds
+     * directive-end.
+     * @param node
+     * @param attrStart
+     * @param attrEnd
+     * @returns {*}
+     */
+    function groupScan(node, attrStart, attrEnd) {
+      var nodes = [];
+      var depth = 0;
+      if (attrStart && node.hasAttribute && node.hasAttribute(attrStart)) {
+        do {
+          if (!node) {
+            throw $compileMinErr('uterdir',
+                      'Unterminated attribute, found \'{0}\' but no matching \'{1}\' found.',
+                      attrStart, attrEnd);
+          }
+          if (node.nodeType === NODE_TYPE_ELEMENT) {
+            if (node.hasAttribute(attrStart)) depth++;
+            if (node.hasAttribute(attrEnd)) depth--;
+          }
+          nodes.push(node);
+          node = node.nextSibling;
+        } while (depth > 0);
+      } else {
+        nodes.push(node);
+      }
+
+      return jqLite(nodes);
+    }
+
+    /**
+     * Wrapper for linking function which converts normal linking function into a grouped
+     * linking function.
+     * @param linkFn
+     * @param attrStart
+     * @param attrEnd
+     * @returns {Function}
+     */
+    function groupElementsLinkFnWrapper(linkFn, attrStart, attrEnd) {
+      return function groupedElementsLink(scope, element, attrs, controllers, transcludeFn) {
+        element = groupScan(element[0], attrStart, attrEnd);
+        return linkFn(scope, element, attrs, controllers, transcludeFn);
+      };
+    }
+
+    /**
+     * A function generator that is used to support both eager and lazy compilation
+     * linking function.
+     * @param eager
+     * @param $compileNodes
+     * @param transcludeFn
+     * @param maxPriority
+     * @param ignoreDirective
+     * @param previousCompileContext
+     * @returns {Function}
+     */
+    function compilationGenerator(eager, $compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext) {
+      var compiled;
+
+      if (eager) {
+        return compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);
+      }
+      return /** @this */ function lazyCompilation() {
+        if (!compiled) {
+          compiled = compile($compileNodes, transcludeFn, maxPriority, ignoreDirective, previousCompileContext);
+
+          // Null out all of these references in order to make them eligible for garbage collection
+          // since this is a potentially long lived closure
+          $compileNodes = transcludeFn = previousCompileContext = null;
+        }
+        return compiled.apply(this, arguments);
+      };
+    }
+
+    /**
+     * Once the directives have been collected, their compile functions are executed. This method
+     * is responsible for inlining directive templates as well as terminating the application
+     * of the directives if the terminal directive has been reached.
+     *
+     * @param {Array} directives Array of collected directives to execute their compile function.
+     *        this needs to be pre-sorted by priority order.
+     * @param {Node} compileNode The raw DOM node to apply the compile functions to
+     * @param {Object} templateAttrs The shared attribute function
+     * @param {function(angular.Scope, cloneAttachFn=)} transcludeFn A linking function, where the
+     *                                                  scope argument is auto-generated to the new
+     *                                                  child of the transcluded parent scope.
+     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this
+     *                              argument has the root jqLite array so that we can replace nodes
+     *                              on it.
+     * @param {Object=} originalReplaceDirective An optional directive that will be ignored when
+     *                                           compiling the transclusion.
+     * @param {Array.<Function>} preLinkFns
+     * @param {Array.<Function>} postLinkFns
+     * @param {Object} previousCompileContext Context used for previous compilation of the current
+     *                                        node
+     * @returns {Function} linkFn
+     */
+    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn,
+                                   jqCollection, originalReplaceDirective, preLinkFns, postLinkFns,
+                                   previousCompileContext) {
+      previousCompileContext = previousCompileContext || {};
+
+      var terminalPriority = -Number.MAX_VALUE,
+          newScopeDirective = previousCompileContext.newScopeDirective,
+          controllerDirectives = previousCompileContext.controllerDirectives,
+          newIsolateScopeDirective = previousCompileContext.newIsolateScopeDirective,
+          templateDirective = previousCompileContext.templateDirective,
+          nonTlbTranscludeDirective = previousCompileContext.nonTlbTranscludeDirective,
+          hasTranscludeDirective = false,
+          hasTemplate = false,
+          hasElementTranscludeDirective = previousCompileContext.hasElementTranscludeDirective,
+          $compileNode = templateAttrs.$$element = jqLite(compileNode),
+          directive,
+          directiveName,
+          $template,
+          replaceDirective = originalReplaceDirective,
+          childTranscludeFn = transcludeFn,
+          linkFn,
+          didScanForMultipleTransclusion = false,
+          mightHaveMultipleTransclusionError = false,
+          directiveValue;
+
+      // executes all directives on the current element
+      for (var i = 0, ii = directives.length; i < ii; i++) {
+        directive = directives[i];
+        var attrStart = directive.$$start;
+        var attrEnd = directive.$$end;
+
+        // collect multiblock sections
+        if (attrStart) {
+          $compileNode = groupScan(compileNode, attrStart, attrEnd);
+        }
+        $template = undefined;
+
+        if (terminalPriority > directive.priority) {
+          break; // prevent further processing of directives
+        }
+
+        directiveValue = directive.scope;
+
+        if (directiveValue) {
+
+          // skip the check for directives with async templates, we'll check the derived sync
+          // directive when the template arrives
+          if (!directive.templateUrl) {
+            if (isObject(directiveValue)) {
+              // This directive is trying to add an isolated scope.
+              // Check that there is no scope of any kind already
+              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective || newScopeDirective,
+                                directive, $compileNode);
+              newIsolateScopeDirective = directive;
+            } else {
+              // This directive is trying to add a child scope.
+              // Check that there is no isolated scope already
+              assertNoDuplicate('new/isolated scope', newIsolateScopeDirective, directive,
+                                $compileNode);
+            }
+          }
+
+          newScopeDirective = newScopeDirective || directive;
+        }
+
+        directiveName = directive.name;
+
+        // If we encounter a condition that can result in transclusion on the directive,
+        // then scan ahead in the remaining directives for others that may cause a multiple
+        // transclusion error to be thrown during the compilation process.  If a matching directive
+        // is found, then we know that when we encounter a transcluded directive, we need to eagerly
+        // compile the `transclude` function rather than doing it lazily in order to throw
+        // exceptions at the correct time
+        if (!didScanForMultipleTransclusion && ((directive.replace && (directive.templateUrl || directive.template))
+            || (directive.transclude && !directive.$$tlb))) {
+                var candidateDirective;
+
+                for (var scanningIndex = i + 1; (candidateDirective = directives[scanningIndex++]);) {
+                    if ((candidateDirective.transclude && !candidateDirective.$$tlb)
+                        || (candidateDirective.replace && (candidateDirective.templateUrl || candidateDirective.template))) {
+                        mightHaveMultipleTransclusionError = true;
+                        break;
+                    }
+                }
+
+                didScanForMultipleTransclusion = true;
+        }
+
+        if (!directive.templateUrl && directive.controller) {
+          controllerDirectives = controllerDirectives || createMap();
+          assertNoDuplicate('\'' + directiveName + '\' controller',
+              controllerDirectives[directiveName], directive, $compileNode);
+          controllerDirectives[directiveName] = directive;
+        }
+
+        directiveValue = directive.transclude;
+
+        if (directiveValue) {
+          hasTranscludeDirective = true;
+
+          // Special case ngIf and ngRepeat so that we don't complain about duplicate transclusion.
+          // This option should only be used by directives that know how to safely handle element transclusion,
+          // where the transcluded nodes are added or replaced after linking.
+          if (!directive.$$tlb) {
+            assertNoDuplicate('transclusion', nonTlbTranscludeDirective, directive, $compileNode);
+            nonTlbTranscludeDirective = directive;
+          }
+
+          if (directiveValue === 'element') {
+            hasElementTranscludeDirective = true;
+            terminalPriority = directive.priority;
+            $template = $compileNode;
+            $compileNode = templateAttrs.$$element =
+                jqLite(compile.$$createComment(directiveName, templateAttrs[directiveName]));
+            compileNode = $compileNode[0];
+            replaceWith(jqCollection, sliceArgs($template), compileNode);
+
+            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, terminalPriority,
+                                        replaceDirective && replaceDirective.name, {
+                                          // Don't pass in:
+                                          // - controllerDirectives - otherwise we'll create duplicates controllers
+                                          // - newIsolateScopeDirective or templateDirective - combining templates with
+                                          //   element transclusion doesn't make sense.
+                                          //
+                                          // We need only nonTlbTranscludeDirective so that we prevent putting transclusion
+                                          // on the same element more than once.
+                                          nonTlbTranscludeDirective: nonTlbTranscludeDirective
+                                        });
+          } else {
+
+            var slots = createMap();
+
+            if (!isObject(directiveValue)) {
+              $template = jqLite(jqLiteClone(compileNode)).contents();
+            } else {
+
+              // We have transclusion slots,
+              // collect them up, compile them and store their transclusion functions
+              $template = window.document.createDocumentFragment();
+
+              var slotMap = createMap();
+              var filledSlots = createMap();
+
+              // Parse the element selectors
+              forEach(directiveValue, function(elementSelector, slotName) {
+                // If an element selector starts with a ? then it is optional
+                var optional = (elementSelector.charAt(0) === '?');
+                elementSelector = optional ? elementSelector.substring(1) : elementSelector;
+
+                slotMap[elementSelector] = slotName;
+
+                // We explicitly assign `null` since this implies that a slot was defined but not filled.
+                // Later when calling boundTransclusion functions with a slot name we only error if the
+                // slot is `undefined`
+                slots[slotName] = null;
+
+                // filledSlots contains `true` for all slots that are either optional or have been
+                // filled. This is used to check that we have not missed any required slots
+                filledSlots[slotName] = optional;
+              });
+
+              // Add the matching elements into their slot
+              forEach($compileNode.contents(), function(node) {
+                var slotName = slotMap[directiveNormalize(nodeName_(node))];
+                if (slotName) {
+                  filledSlots[slotName] = true;
+                  slots[slotName] = slots[slotName] || window.document.createDocumentFragment();
+                  slots[slotName].appendChild(node);
+                } else {
+                  $template.appendChild(node);
+                }
+              });
+
+              // Check for required slots that were not filled
+              forEach(filledSlots, function(filled, slotName) {
+                if (!filled) {
+                  throw $compileMinErr('reqslot', 'Required transclusion slot `{0}` was not filled.', slotName);
+                }
+              });
+
+              for (var slotName in slots) {
+                if (slots[slotName]) {
+                  // Only define a transclusion function if the slot was filled
+                  var slotCompileNodes = jqLite(slots[slotName].childNodes);
+                  slots[slotName] = compilationGenerator(mightHaveMultipleTransclusionError, slotCompileNodes, transcludeFn);
+                }
+              }
+
+              $template = jqLite($template.childNodes);
+            }
+
+            $compileNode.empty(); // clear contents
+            childTranscludeFn = compilationGenerator(mightHaveMultipleTransclusionError, $template, transcludeFn, undefined,
+                undefined, { needsNewScope: directive.$$isolateScope || directive.$$newScope});
+            childTranscludeFn.$$slots = slots;
+          }
+        }
+
+        if (directive.template) {
+          hasTemplate = true;
+          assertNoDuplicate('template', templateDirective, directive, $compileNode);
+          templateDirective = directive;
+
+          directiveValue = (isFunction(directive.template))
+              ? directive.template($compileNode, templateAttrs)
+              : directive.template;
+
+          directiveValue = denormalizeTemplate(directiveValue);
+
+          if (directive.replace) {
+            replaceDirective = directive;
+            if (jqLiteIsTextNode(directiveValue)) {
+              $template = [];
+            } else {
+              $template = removeComments(wrapTemplate(directive.templateNamespace, trim(directiveValue)));
+            }
+            compileNode = $template[0];
+
+            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {
+              throw $compileMinErr('tplrt',
+                  'Template for directive \'{0}\' must have exactly one root element. {1}',
+                  directiveName, '');
+            }
+
+            replaceWith(jqCollection, $compileNode, compileNode);
+
+            var newTemplateAttrs = {$attr: {}};
+
+            // combine directives from the original node and from the template:
+            // - take the array of directives for this element
+            // - split it into two parts, those that already applied (processed) and those that weren't (unprocessed)
+            // - collect directives from the template and sort them by priority
+            // - combine directives as: processed + template + unprocessed
+            var templateDirectives = collectDirectives(compileNode, [], newTemplateAttrs);
+            var unprocessedDirectives = directives.splice(i + 1, directives.length - (i + 1));
+
+            if (newIsolateScopeDirective || newScopeDirective) {
+              // The original directive caused the current element to be replaced but this element
+              // also needs to have a new scope, so we need to tell the template directives
+              // that they would need to get their scope from further up, if they require transclusion
+              markDirectiveScope(templateDirectives, newIsolateScopeDirective, newScopeDirective);
+            }
+            directives = directives.concat(templateDirectives).concat(unprocessedDirectives);
+            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);
+
+            ii = directives.length;
+          } else {
+            $compileNode.html(directiveValue);
+          }
+        }
+
+        if (directive.templateUrl) {
+          hasTemplate = true;
+          assertNoDuplicate('template', templateDirective, directive, $compileNode);
+          templateDirective = directive;
+
+          if (directive.replace) {
+            replaceDirective = directive;
+          }
+
+          // eslint-disable-next-line no-func-assign
+          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i), $compileNode,
+              templateAttrs, jqCollection, hasTranscludeDirective && childTranscludeFn, preLinkFns, postLinkFns, {
+                controllerDirectives: controllerDirectives,
+                newScopeDirective: (newScopeDirective !== directive) && newScopeDirective,
+                newIsolateScopeDirective: newIsolateScopeDirective,
+                templateDirective: templateDirective,
+                nonTlbTranscludeDirective: nonTlbTranscludeDirective
+              });
+          ii = directives.length;
+        } else if (directive.compile) {
+          try {
+            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);
+            var context = directive.$$originalDirective || directive;
+            if (isFunction(linkFn)) {
+              addLinkFns(null, bind(context, linkFn), attrStart, attrEnd);
+            } else if (linkFn) {
+              addLinkFns(bind(context, linkFn.pre), bind(context, linkFn.post), attrStart, attrEnd);
+            }
+          } catch (e) {
+            $exceptionHandler(e, startingTag($compileNode));
+          }
+        }
+
+        if (directive.terminal) {
+          nodeLinkFn.terminal = true;
+          terminalPriority = Math.max(terminalPriority, directive.priority);
+        }
+
+      }
+
+      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope === true;
+      nodeLinkFn.transcludeOnThisElement = hasTranscludeDirective;
+      nodeLinkFn.templateOnThisElement = hasTemplate;
+      nodeLinkFn.transclude = childTranscludeFn;
+
+      previousCompileContext.hasElementTranscludeDirective = hasElementTranscludeDirective;
+
+      // might be normal or delayed nodeLinkFn depending on if templateUrl is present
+      return nodeLinkFn;
+
+      ////////////////////
+
+      function addLinkFns(pre, post, attrStart, attrEnd) {
+        if (pre) {
+          if (attrStart) pre = groupElementsLinkFnWrapper(pre, attrStart, attrEnd);
+          pre.require = directive.require;
+          pre.directiveName = directiveName;
+          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
+            pre = cloneAndAnnotateFn(pre, {isolateScope: true});
+          }
+          preLinkFns.push(pre);
+        }
+        if (post) {
+          if (attrStart) post = groupElementsLinkFnWrapper(post, attrStart, attrEnd);
+          post.require = directive.require;
+          post.directiveName = directiveName;
+          if (newIsolateScopeDirective === directive || directive.$$isolateScope) {
+            post = cloneAndAnnotateFn(post, {isolateScope: true});
+          }
+          postLinkFns.push(post);
+        }
+      }
+
+      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {
+        var i, ii, linkFn, isolateScope, controllerScope, elementControllers, transcludeFn, $element,
+            attrs, scopeBindingInfo;
+
+        if (compileNode === linkNode) {
+          attrs = templateAttrs;
+          $element = templateAttrs.$$element;
+        } else {
+          $element = jqLite(linkNode);
+          attrs = new Attributes($element, templateAttrs);
+        }
+
+        controllerScope = scope;
+        if (newIsolateScopeDirective) {
+          isolateScope = scope.$new(true);
+        } else if (newScopeDirective) {
+          controllerScope = scope.$parent;
+        }
+
+        if (boundTranscludeFn) {
+          // track `boundTranscludeFn` so it can be unwrapped if `transcludeFn`
+          // is later passed as `parentBoundTranscludeFn` to `publicLinkFn`
+          transcludeFn = controllersBoundTransclude;
+          transcludeFn.$$boundTransclude = boundTranscludeFn;
+          // expose the slots on the `$transclude` function
+          transcludeFn.isSlotFilled = function(slotName) {
+            return !!boundTranscludeFn.$$slots[slotName];
+          };
+        }
+
+        if (controllerDirectives) {
+          elementControllers = setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective);
+        }
+
+        if (newIsolateScopeDirective) {
+          // Initialize isolate scope bindings for new isolate scope directive.
+          compile.$$addScopeInfo($element, isolateScope, true, !(templateDirective && (templateDirective === newIsolateScopeDirective ||
+              templateDirective === newIsolateScopeDirective.$$originalDirective)));
+          compile.$$addScopeClass($element, true);
+          isolateScope.$$isolateBindings =
+              newIsolateScopeDirective.$$isolateBindings;
+          scopeBindingInfo = initializeDirectiveBindings(scope, attrs, isolateScope,
+                                        isolateScope.$$isolateBindings,
+                                        newIsolateScopeDirective);
+          if (scopeBindingInfo.removeWatches) {
+            isolateScope.$on('$destroy', scopeBindingInfo.removeWatches);
+          }
+        }
+
+        // Initialize bindToController bindings
+        for (var name in elementControllers) {
+          var controllerDirective = controllerDirectives[name];
+          var controller = elementControllers[name];
+          var bindings = controllerDirective.$$bindings.bindToController;
+
+          controller.instance = controller();
+          $element.data('$' + controllerDirective.name + 'Controller', controller.instance);
+          controller.bindingInfo =
+            initializeDirectiveBindings(controllerScope, attrs, controller.instance, bindings, controllerDirective);
+          }
+
+        // Bind the required controllers to the controller, if `require` is an object and `bindToController` is truthy
+        forEach(controllerDirectives, function(controllerDirective, name) {
+          var require = controllerDirective.require;
+          if (controllerDirective.bindToController && !isArray(require) && isObject(require)) {
+            extend(elementControllers[name].instance, getControllers(name, require, $element, elementControllers));
+          }
+        });
+
+        // Handle the init and destroy lifecycle hooks on all controllers that have them
+        forEach(elementControllers, function(controller) {
+          var controllerInstance = controller.instance;
+          if (isFunction(controllerInstance.$onChanges)) {
+            try {
+              controllerInstance.$onChanges(controller.bindingInfo.initialChanges);
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          }
+          if (isFunction(controllerInstance.$onInit)) {
+            try {
+              controllerInstance.$onInit();
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          }
+          if (isFunction(controllerInstance.$doCheck)) {
+            controllerScope.$watch(function() { controllerInstance.$doCheck(); });
+            controllerInstance.$doCheck();
+          }
+          if (isFunction(controllerInstance.$onDestroy)) {
+            controllerScope.$on('$destroy', function callOnDestroyHook() {
+              controllerInstance.$onDestroy();
+            });
+          }
+        });
+
+        // PRELINKING
+        for (i = 0, ii = preLinkFns.length; i < ii; i++) {
+          linkFn = preLinkFns[i];
+          invokeLinkFn(linkFn,
+              linkFn.isolateScope ? isolateScope : scope,
+              $element,
+              attrs,
+              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),
+              transcludeFn
+          );
+        }
+
+        // RECURSION
+        // We only pass the isolate scope, if the isolate directive has a template,
+        // otherwise the child elements do not belong to the isolate directive.
+        var scopeToChild = scope;
+        if (newIsolateScopeDirective && (newIsolateScopeDirective.template || newIsolateScopeDirective.templateUrl === null)) {
+          scopeToChild = isolateScope;
+        }
+        if (childLinkFn) {
+          childLinkFn(scopeToChild, linkNode.childNodes, undefined, boundTranscludeFn);
+        }
+
+        // POSTLINKING
+        for (i = postLinkFns.length - 1; i >= 0; i--) {
+          linkFn = postLinkFns[i];
+          invokeLinkFn(linkFn,
+              linkFn.isolateScope ? isolateScope : scope,
+              $element,
+              attrs,
+              linkFn.require && getControllers(linkFn.directiveName, linkFn.require, $element, elementControllers),
+              transcludeFn
+          );
+        }
+
+        // Trigger $postLink lifecycle hooks
+        forEach(elementControllers, function(controller) {
+          var controllerInstance = controller.instance;
+          if (isFunction(controllerInstance.$postLink)) {
+            controllerInstance.$postLink();
+          }
+        });
+
+        // This is the function that is injected as `$transclude`.
+        // Note: all arguments are optional!
+        function controllersBoundTransclude(scope, cloneAttachFn, futureParentElement, slotName) {
+          var transcludeControllers;
+          // No scope passed in:
+          if (!isScope(scope)) {
+            slotName = futureParentElement;
+            futureParentElement = cloneAttachFn;
+            cloneAttachFn = scope;
+            scope = undefined;
+          }
+
+          if (hasElementTranscludeDirective) {
+            transcludeControllers = elementControllers;
+          }
+          if (!futureParentElement) {
+            futureParentElement = hasElementTranscludeDirective ? $element.parent() : $element;
+          }
+          if (slotName) {
+            // slotTranscludeFn can be one of three things:
+            //  * a transclude function - a filled slot
+            //  * `null` - an optional slot that was not filled
+            //  * `undefined` - a slot that was not declared (i.e. invalid)
+            var slotTranscludeFn = boundTranscludeFn.$$slots[slotName];
+            if (slotTranscludeFn) {
+              return slotTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
+            } else if (isUndefined(slotTranscludeFn)) {
+              throw $compileMinErr('noslot',
+               'No parent directive that requires a transclusion with slot name "{0}". ' +
+               'Element: {1}',
+               slotName, startingTag($element));
+            }
+          } else {
+            return boundTranscludeFn(scope, cloneAttachFn, transcludeControllers, futureParentElement, scopeToChild);
+          }
+        }
+      }
+    }
+
+    function getControllers(directiveName, require, $element, elementControllers) {
+      var value;
+
+      if (isString(require)) {
+        var match = require.match(REQUIRE_PREFIX_REGEXP);
+        var name = require.substring(match[0].length);
+        var inheritType = match[1] || match[3];
+        var optional = match[2] === '?';
+
+        //If only parents then start at the parent element
+        if (inheritType === '^^') {
+          $element = $element.parent();
+        //Otherwise attempt getting the controller from elementControllers in case
+        //the element is transcluded (and has no data) and to avoid .data if possible
+        } else {
+          value = elementControllers && elementControllers[name];
+          value = value && value.instance;
+        }
+
+        if (!value) {
+          var dataName = '$' + name + 'Controller';
+
+          if (inheritType === '^^' && $element[0] && $element[0].nodeType === NODE_TYPE_DOCUMENT) {
+            // inheritedData() uses the documentElement when it finds the document, so we would
+            // require from the element itself.
+            value = null;
+          } else {
+            value = inheritType ? $element.inheritedData(dataName) : $element.data(dataName);
+          }
+        }
+
+        if (!value && !optional) {
+          throw $compileMinErr('ctreq',
+              'Controller \'{0}\', required by directive \'{1}\', can\'t be found!',
+              name, directiveName);
+        }
+      } else if (isArray(require)) {
+        value = [];
+        for (var i = 0, ii = require.length; i < ii; i++) {
+          value[i] = getControllers(directiveName, require[i], $element, elementControllers);
+        }
+      } else if (isObject(require)) {
+        value = {};
+        forEach(require, function(controller, property) {
+          value[property] = getControllers(directiveName, controller, $element, elementControllers);
+        });
+      }
+
+      return value || null;
+    }
+
+    function setupControllers($element, attrs, transcludeFn, controllerDirectives, isolateScope, scope, newIsolateScopeDirective) {
+      var elementControllers = createMap();
+      for (var controllerKey in controllerDirectives) {
+        var directive = controllerDirectives[controllerKey];
+        var locals = {
+          $scope: directive === newIsolateScopeDirective || directive.$$isolateScope ? isolateScope : scope,
+          $element: $element,
+          $attrs: attrs,
+          $transclude: transcludeFn
+        };
+
+        var controller = directive.controller;
+        if (controller === '@') {
+          controller = attrs[directive.name];
+        }
+
+        var controllerInstance = $controller(controller, locals, true, directive.controllerAs);
+
+        // For directives with element transclusion the element is a comment.
+        // In this case .data will not attach any data.
+        // Instead, we save the controllers for the element in a local hash and attach to .data
+        // later, once we have the actual element.
+        elementControllers[directive.name] = controllerInstance;
+        $element.data('$' + directive.name + 'Controller', controllerInstance.instance);
+      }
+      return elementControllers;
+    }
+
+    // Depending upon the context in which a directive finds itself it might need to have a new isolated
+    // or child scope created. For instance:
+    // * if the directive has been pulled into a template because another directive with a higher priority
+    // asked for element transclusion
+    // * if the directive itself asks for transclusion but it is at the root of a template and the original
+    // element was replaced. See https://github.com/angular/angular.js/issues/12936
+    function markDirectiveScope(directives, isolateScope, newScope) {
+      for (var j = 0, jj = directives.length; j < jj; j++) {
+        directives[j] = inherit(directives[j], {$$isolateScope: isolateScope, $$newScope: newScope});
+      }
+    }
+
+    /**
+     * looks up the directive and decorates it with exception handling and proper parameters. We
+     * call this the boundDirective.
+     *
+     * @param {string} name name of the directive to look up.
+     * @param {string} location The directive must be found in specific format.
+     *   String containing any of theses characters:
+     *
+     *   * `E`: element name
+     *   * `A': attribute
+     *   * `C`: class
+     *   * `M`: comment
+     * @returns {boolean} true if directive was added.
+     */
+    function addDirective(tDirectives, name, location, maxPriority, ignoreDirective, startAttrName,
+                          endAttrName) {
+      if (name === ignoreDirective) return null;
+      var match = null;
+      if (hasDirectives.hasOwnProperty(name)) {
+        for (var directive, directives = $injector.get(name + Suffix),
+            i = 0, ii = directives.length; i < ii; i++) {
+          directive = directives[i];
+          if ((isUndefined(maxPriority) || maxPriority > directive.priority) &&
+               directive.restrict.indexOf(location) !== -1) {
+            if (startAttrName) {
+              directive = inherit(directive, {$$start: startAttrName, $$end: endAttrName});
+            }
+            if (!directive.$$bindings) {
+              var bindings = directive.$$bindings =
+                  parseDirectiveBindings(directive, directive.name);
+              if (isObject(bindings.isolateScope)) {
+                directive.$$isolateBindings = bindings.isolateScope;
+              }
+            }
+            tDirectives.push(directive);
+            match = directive;
+          }
+        }
+      }
+      return match;
+    }
+
+
+    /**
+     * looks up the directive and returns true if it is a multi-element directive,
+     * and therefore requires DOM nodes between -start and -end markers to be grouped
+     * together.
+     *
+     * @param {string} name name of the directive to look up.
+     * @returns true if directive was registered as multi-element.
+     */
+    function directiveIsMultiElement(name) {
+      if (hasDirectives.hasOwnProperty(name)) {
+        for (var directive, directives = $injector.get(name + Suffix),
+            i = 0, ii = directives.length; i < ii; i++) {
+          directive = directives[i];
+          if (directive.multiElement) {
+            return true;
+          }
+        }
+      }
+      return false;
+    }
+
+    /**
+     * When the element is replaced with HTML template then the new attributes
+     * on the template need to be merged with the existing attributes in the DOM.
+     * The desired effect is to have both of the attributes present.
+     *
+     * @param {object} dst destination attributes (original DOM)
+     * @param {object} src source attributes (from the directive template)
+     */
+    function mergeTemplateAttributes(dst, src) {
+      var srcAttr = src.$attr,
+          dstAttr = dst.$attr;
+
+      // reapply the old attributes to the new element
+      forEach(dst, function(value, key) {
+        if (key.charAt(0) !== '$') {
+          if (src[key] && src[key] !== value) {
+            if (value.length) {
+              value += (key === 'style' ? ';' : ' ') + src[key];
+            } else {
+              value = src[key];
+            }
+          }
+          dst.$set(key, value, true, srcAttr[key]);
+        }
+      });
+
+      // copy the new attributes on the old attrs object
+      forEach(src, function(value, key) {
+        // Check if we already set this attribute in the loop above.
+        // `dst` will never contain hasOwnProperty as DOM parser won't let it.
+        // You will get an "InvalidCharacterError: DOM Exception 5" error if you
+        // have an attribute like "has-own-property" or "data-has-own-property", etc.
+        if (!dst.hasOwnProperty(key) && key.charAt(0) !== '$') {
+          dst[key] = value;
+
+          if (key !== 'class' && key !== 'style') {
+            dstAttr[key] = srcAttr[key];
+          }
+        }
+      });
+    }
+
+
+    function compileTemplateUrl(directives, $compileNode, tAttrs,
+        $rootElement, childTranscludeFn, preLinkFns, postLinkFns, previousCompileContext) {
+      var linkQueue = [],
+          afterTemplateNodeLinkFn,
+          afterTemplateChildLinkFn,
+          beforeTemplateCompileNode = $compileNode[0],
+          origAsyncDirective = directives.shift(),
+          derivedSyncDirective = inherit(origAsyncDirective, {
+            templateUrl: null, transclude: null, replace: null, $$originalDirective: origAsyncDirective
+          }),
+          templateUrl = (isFunction(origAsyncDirective.templateUrl))
+              ? origAsyncDirective.templateUrl($compileNode, tAttrs)
+              : origAsyncDirective.templateUrl,
+          templateNamespace = origAsyncDirective.templateNamespace;
+
+      $compileNode.empty();
+
+      $templateRequest(templateUrl)
+        .then(function(content) {
+          var compileNode, tempTemplateAttrs, $template, childBoundTranscludeFn;
+
+          content = denormalizeTemplate(content);
+
+          if (origAsyncDirective.replace) {
+            if (jqLiteIsTextNode(content)) {
+              $template = [];
+            } else {
+              $template = removeComments(wrapTemplate(templateNamespace, trim(content)));
+            }
+            compileNode = $template[0];
+
+            if ($template.length !== 1 || compileNode.nodeType !== NODE_TYPE_ELEMENT) {
+              throw $compileMinErr('tplrt',
+                  'Template for directive \'{0}\' must have exactly one root element. {1}',
+                  origAsyncDirective.name, templateUrl);
+            }
+
+            tempTemplateAttrs = {$attr: {}};
+            replaceWith($rootElement, $compileNode, compileNode);
+            var templateDirectives = collectDirectives(compileNode, [], tempTemplateAttrs);
+
+            if (isObject(origAsyncDirective.scope)) {
+              // the original directive that caused the template to be loaded async required
+              // an isolate scope
+              markDirectiveScope(templateDirectives, true);
+            }
+            directives = templateDirectives.concat(directives);
+            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);
+          } else {
+            compileNode = beforeTemplateCompileNode;
+            $compileNode.html(content);
+          }
+
+          directives.unshift(derivedSyncDirective);
+
+          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs,
+              childTranscludeFn, $compileNode, origAsyncDirective, preLinkFns, postLinkFns,
+              previousCompileContext);
+          forEach($rootElement, function(node, i) {
+            if (node === compileNode) {
+              $rootElement[i] = $compileNode[0];
+            }
+          });
+          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);
+
+          while (linkQueue.length) {
+            var scope = linkQueue.shift(),
+                beforeTemplateLinkNode = linkQueue.shift(),
+                linkRootElement = linkQueue.shift(),
+                boundTranscludeFn = linkQueue.shift(),
+                linkNode = $compileNode[0];
+
+            if (scope.$$destroyed) continue;
+
+            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {
+              var oldClasses = beforeTemplateLinkNode.className;
+
+              if (!(previousCompileContext.hasElementTranscludeDirective &&
+                  origAsyncDirective.replace)) {
+                // it was cloned therefore we have to clone as well.
+                linkNode = jqLiteClone(compileNode);
+              }
+              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);
+
+              // Copy in CSS classes from original node
+              safeAddClass(jqLite(linkNode), oldClasses);
+            }
+            if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
+              childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
+            } else {
+              childBoundTranscludeFn = boundTranscludeFn;
+            }
+            afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement,
+              childBoundTranscludeFn);
+          }
+          linkQueue = null;
+        }).catch(function(error) {
+          if (isError(error)) {
+            $exceptionHandler(error);
+          }
+        });
+
+      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, boundTranscludeFn) {
+        var childBoundTranscludeFn = boundTranscludeFn;
+        if (scope.$$destroyed) return;
+        if (linkQueue) {
+          linkQueue.push(scope,
+                         node,
+                         rootElement,
+                         childBoundTranscludeFn);
+        } else {
+          if (afterTemplateNodeLinkFn.transcludeOnThisElement) {
+            childBoundTranscludeFn = createBoundTranscludeFn(scope, afterTemplateNodeLinkFn.transclude, boundTranscludeFn);
+          }
+          afterTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, childBoundTranscludeFn);
+        }
+      };
+    }
+
+
+    /**
+     * Sorting function for bound directives.
+     */
+    function byPriority(a, b) {
+      var diff = b.priority - a.priority;
+      if (diff !== 0) return diff;
+      if (a.name !== b.name) return (a.name < b.name) ? -1 : 1;
+      return a.index - b.index;
+    }
+
+    function assertNoDuplicate(what, previousDirective, directive, element) {
+
+      function wrapModuleNameIfDefined(moduleName) {
+        return moduleName ?
+          (' (module: ' + moduleName + ')') :
+          '';
+      }
+
+      if (previousDirective) {
+        throw $compileMinErr('multidir', 'Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}',
+            previousDirective.name, wrapModuleNameIfDefined(previousDirective.$$moduleName),
+            directive.name, wrapModuleNameIfDefined(directive.$$moduleName), what, startingTag(element));
+      }
+    }
+
+
+    function addTextInterpolateDirective(directives, text) {
+      var interpolateFn = $interpolate(text, true);
+      if (interpolateFn) {
+        directives.push({
+          priority: 0,
+          compile: function textInterpolateCompileFn(templateNode) {
+            var templateNodeParent = templateNode.parent(),
+                hasCompileParent = !!templateNodeParent.length;
+
+            // When transcluding a template that has bindings in the root
+            // we don't have a parent and thus need to add the class during linking fn.
+            if (hasCompileParent) compile.$$addBindingClass(templateNodeParent);
+
+            return function textInterpolateLinkFn(scope, node) {
+              var parent = node.parent();
+              if (!hasCompileParent) compile.$$addBindingClass(parent);
+              compile.$$addBindingInfo(parent, interpolateFn.expressions);
+              scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {
+                node[0].nodeValue = value;
+              });
+            };
+          }
+        });
+      }
+    }
+
+
+    function wrapTemplate(type, template) {
+      type = lowercase(type || 'html');
+      switch (type) {
+      case 'svg':
+      case 'math':
+        var wrapper = window.document.createElement('div');
+        wrapper.innerHTML = '<' + type + '>' + template + '</' + type + '>';
+        return wrapper.childNodes[0].childNodes;
+      default:
+        return template;
+      }
+    }
+
+
+    function getTrustedAttrContext(nodeName, attrNormalizedName) {
+      if (attrNormalizedName === 'srcdoc') {
+        return $sce.HTML;
+      }
+      // All nodes with src attributes require a RESOURCE_URL value, except for
+      // img and various html5 media nodes, which require the MEDIA_URL context.
+      if (attrNormalizedName === 'src' || attrNormalizedName === 'ngSrc') {
+        if (['img', 'video', 'audio', 'source', 'track'].indexOf(nodeName) === -1) {
+          return $sce.RESOURCE_URL;
+        }
+        return $sce.MEDIA_URL;
+      } else if (attrNormalizedName === 'xlinkHref') {
+        // Some xlink:href are okay, most aren't
+        if (nodeName === 'image') return $sce.MEDIA_URL;
+        if (nodeName === 'a') return $sce.URL;
+        return $sce.RESOURCE_URL;
+      } else if (
+          // Formaction
+          (nodeName === 'form' && attrNormalizedName === 'action') ||
+          // If relative URLs can go where they are not expected to, then
+          // all sorts of trust issues can arise.
+          (nodeName === 'base' && attrNormalizedName === 'href') ||
+          // links can be stylesheets or imports, which can run script in the current origin
+          (nodeName === 'link' && attrNormalizedName === 'href')
+      ) {
+        return $sce.RESOURCE_URL;
+      } else if (nodeName === 'a' && (attrNormalizedName === 'href' ||
+                                 attrNormalizedName === 'ngHref')) {
+        return $sce.URL;
+      }
+    }
+
+    function getTrustedPropContext(nodeName, propNormalizedName) {
+      var prop = propNormalizedName.toLowerCase();
+      return PROP_CONTEXTS[nodeName + '|' + prop] || PROP_CONTEXTS['*|' + prop];
+    }
+
+    function sanitizeSrcsetPropertyValue(value) {
+      return sanitizeSrcset($sce.valueOf(value), 'ng-prop-srcset');
+    }
+    function addPropertyDirective(node, directives, attrName, propName) {
+      if (EVENT_HANDLER_ATTR_REGEXP.test(propName)) {
+        throw $compileMinErr('nodomevents', 'Property bindings for HTML DOM event properties are disallowed');
+      }
+
+      var nodeName = nodeName_(node);
+      var trustedContext = getTrustedPropContext(nodeName, propName);
+
+      var sanitizer = identity;
+      // Sanitize img[srcset] + source[srcset] values.
+      if (propName === 'srcset' && (nodeName === 'img' || nodeName === 'source')) {
+        sanitizer = sanitizeSrcsetPropertyValue;
+      } else if (trustedContext) {
+        sanitizer = $sce.getTrusted.bind($sce, trustedContext);
+      }
+
+      directives.push({
+        priority: 100,
+        compile: function ngPropCompileFn(_, attr) {
+          var ngPropGetter = $parse(attr[attrName]);
+          var ngPropWatch = $parse(attr[attrName], function sceValueOf(val) {
+            // Unwrap the value to compare the actual inner safe value, not the wrapper object.
+            return $sce.valueOf(val);
+          });
+
+          return {
+            pre: function ngPropPreLinkFn(scope, $element) {
+              function applyPropValue() {
+                var propValue = ngPropGetter(scope);
+                $element[0][propName] = sanitizer(propValue);
+              }
+
+              applyPropValue();
+              scope.$watch(ngPropWatch, applyPropValue);
+            }
+          };
+        }
+      });
+    }
+
+    function addEventDirective(directives, attrName, eventName) {
+      directives.push(
+        createEventDirective($parse, $rootScope, $exceptionHandler, attrName, eventName, /*forceAsync=*/false)
+      );
+    }
+
+    function addAttrInterpolateDirective(node, directives, value, name, isNgAttr) {
+      var nodeName = nodeName_(node);
+      var trustedContext = getTrustedAttrContext(nodeName, name);
+      var mustHaveExpression = !isNgAttr;
+      var allOrNothing = ALL_OR_NOTHING_ATTRS[name] || isNgAttr;
+
+      var interpolateFn = $interpolate(value, mustHaveExpression, trustedContext, allOrNothing);
+
+      // no interpolation found -> ignore
+      if (!interpolateFn) return;
+
+      if (name === 'multiple' && nodeName === 'select') {
+        throw $compileMinErr('selmulti',
+            'Binding to the \'multiple\' attribute is not supported. Element: {0}',
+            startingTag(node));
+      }
+
+      if (EVENT_HANDLER_ATTR_REGEXP.test(name)) {
+        throw $compileMinErr('nodomevents', 'Interpolations for HTML DOM event attributes are disallowed');
+      }
+
+      directives.push({
+        priority: 100,
+        compile: function() {
+            return {
+              pre: function attrInterpolatePreLinkFn(scope, element, attr) {
+                var $$observers = (attr.$$observers || (attr.$$observers = createMap()));
+
+                // If the attribute has changed since last $interpolate()ed
+                var newValue = attr[name];
+                if (newValue !== value) {
+                  // we need to interpolate again since the attribute value has been updated
+                  // (e.g. by another directive's compile function)
+                  // ensure unset/empty values make interpolateFn falsy
+                  interpolateFn = newValue && $interpolate(newValue, true, trustedContext, allOrNothing);
+                  value = newValue;
+                }
+
+                // if attribute was updated so that there is no interpolation going on we don't want to
+                // register any observers
+                if (!interpolateFn) return;
+
+                // initialize attr object so that it's ready in case we need the value for isolate
+                // scope initialization, otherwise the value would not be available from isolate
+                // directive's linking fn during linking phase
+                attr[name] = interpolateFn(scope);
+
+                ($$observers[name] || ($$observers[name] = [])).$$inter = true;
+                (attr.$$observers && attr.$$observers[name].$$scope || scope).
+                  $watch(interpolateFn, function interpolateFnWatchAction(newValue, oldValue) {
+                    //special case for class attribute addition + removal
+                    //so that class changes can tap into the animation
+                    //hooks provided by the $animate service. Be sure to
+                    //skip animations when the first digest occurs (when
+                    //both the new and the old values are the same) since
+                    //the CSS classes are the non-interpolated values
+                    if (name === 'class' && newValue !== oldValue) {
+                      attr.$updateClass(newValue, oldValue);
+                    } else {
+                      attr.$set(name, newValue);
+                    }
+                  });
+              }
+            };
+          }
+      });
+    }
+
+
+    /**
+     * This is a special jqLite.replaceWith, which can replace items which
+     * have no parents, provided that the containing jqLite collection is provided.
+     *
+     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes
+     *                               in the root of the tree.
+     * @param {JqLite} elementsToRemove The jqLite element which we are going to replace. We keep
+     *                                  the shell, but replace its DOM node reference.
+     * @param {Node} newNode The new DOM node.
+     */
+    function replaceWith($rootElement, elementsToRemove, newNode) {
+      var firstElementToRemove = elementsToRemove[0],
+          removeCount = elementsToRemove.length,
+          parent = firstElementToRemove.parentNode,
+          i, ii;
+
+      if ($rootElement) {
+        for (i = 0, ii = $rootElement.length; i < ii; i++) {
+          if ($rootElement[i] === firstElementToRemove) {
+            $rootElement[i++] = newNode;
+            for (var j = i, j2 = j + removeCount - 1,
+                     jj = $rootElement.length;
+                 j < jj; j++, j2++) {
+              if (j2 < jj) {
+                $rootElement[j] = $rootElement[j2];
+              } else {
+                delete $rootElement[j];
+              }
+            }
+            $rootElement.length -= removeCount - 1;
+
+            // If the replaced element is also the jQuery .context then replace it
+            // .context is a deprecated jQuery api, so we should set it only when jQuery set it
+            // http://api.jquery.com/context/
+            if ($rootElement.context === firstElementToRemove) {
+              $rootElement.context = newNode;
+            }
+            break;
+          }
+        }
+      }
+
+      if (parent) {
+        parent.replaceChild(newNode, firstElementToRemove);
+      }
+
+      // Append all the `elementsToRemove` to a fragment. This will...
+      // - remove them from the DOM
+      // - allow them to still be traversed with .nextSibling
+      // - allow a single fragment.qSA to fetch all elements being removed
+      var fragment = window.document.createDocumentFragment();
+      for (i = 0; i < removeCount; i++) {
+        fragment.appendChild(elementsToRemove[i]);
+      }
+
+      if (jqLite.hasData(firstElementToRemove)) {
+        // Copy over user data (that includes AngularJS's $scope etc.). Don't copy private
+        // data here because there's no public interface in jQuery to do that and copying over
+        // event listeners (which is the main use of private data) wouldn't work anyway.
+        jqLite.data(newNode, jqLite.data(firstElementToRemove));
+
+        // Remove $destroy event listeners from `firstElementToRemove`
+        jqLite(firstElementToRemove).off('$destroy');
+      }
+
+      // Cleanup any data/listeners on the elements and children.
+      // This includes invoking the $destroy event on any elements with listeners.
+      jqLite.cleanData(fragment.querySelectorAll('*'));
+
+      // Update the jqLite collection to only contain the `newNode`
+      for (i = 1; i < removeCount; i++) {
+        delete elementsToRemove[i];
+      }
+      elementsToRemove[0] = newNode;
+      elementsToRemove.length = 1;
+    }
+
+
+    function cloneAndAnnotateFn(fn, annotation) {
+      return extend(function() { return fn.apply(null, arguments); }, fn, annotation);
+    }
+
+
+    function invokeLinkFn(linkFn, scope, $element, attrs, controllers, transcludeFn) {
+      try {
+        linkFn(scope, $element, attrs, controllers, transcludeFn);
+      } catch (e) {
+        $exceptionHandler(e, startingTag($element));
+      }
+    }
+
+    function strictBindingsCheck(attrName, directiveName) {
+      if (strictComponentBindingsEnabled) {
+        throw $compileMinErr('missingattr',
+          'Attribute \'{0}\' of \'{1}\' is non-optional and must be set!',
+          attrName, directiveName);
+      }
+    }
+
+    // Set up $watches for isolate scope and controller bindings.
+    function initializeDirectiveBindings(scope, attrs, destination, bindings, directive) {
+      var removeWatchCollection = [];
+      var initialChanges = {};
+      var changes;
+
+      forEach(bindings, function initializeBinding(definition, scopeName) {
+        var attrName = definition.attrName,
+        optional = definition.optional,
+        mode = definition.mode, // @, =, <, or &
+        lastValue,
+        parentGet, parentSet, compare, removeWatch;
+
+        switch (mode) {
+
+          case '@':
+            if (!optional && !hasOwnProperty.call(attrs, attrName)) {
+              strictBindingsCheck(attrName, directive.name);
+              destination[scopeName] = attrs[attrName] = undefined;
+
+            }
+            removeWatch = attrs.$observe(attrName, function(value) {
+              if (isString(value) || isBoolean(value)) {
+                var oldValue = destination[scopeName];
+                recordChanges(scopeName, value, oldValue);
+                destination[scopeName] = value;
+              }
+            });
+            attrs.$$observers[attrName].$$scope = scope;
+            lastValue = attrs[attrName];
+            if (isString(lastValue)) {
+              // If the attribute has been provided then we trigger an interpolation to ensure
+              // the value is there for use in the link fn
+              destination[scopeName] = $interpolate(lastValue)(scope);
+            } else if (isBoolean(lastValue)) {
+              // If the attributes is one of the BOOLEAN_ATTR then AngularJS will have converted
+              // the value to boolean rather than a string, so we special case this situation
+              destination[scopeName] = lastValue;
+            }
+            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);
+            removeWatchCollection.push(removeWatch);
+            break;
+
+          case '=':
+            if (!hasOwnProperty.call(attrs, attrName)) {
+              if (optional) break;
+              strictBindingsCheck(attrName, directive.name);
+              attrs[attrName] = undefined;
+            }
+            if (optional && !attrs[attrName]) break;
+
+            parentGet = $parse(attrs[attrName]);
+            if (parentGet.literal) {
+              compare = equals;
+            } else {
+              compare = simpleCompare;
+            }
+            parentSet = parentGet.assign || function() {
+              // reset the change, or we will throw this exception on every $digest
+              lastValue = destination[scopeName] = parentGet(scope);
+              throw $compileMinErr('nonassign',
+                  'Expression \'{0}\' in attribute \'{1}\' used with directive \'{2}\' is non-assignable!',
+                  attrs[attrName], attrName, directive.name);
+            };
+            lastValue = destination[scopeName] = parentGet(scope);
+            var parentValueWatch = function parentValueWatch(parentValue) {
+              if (!compare(parentValue, destination[scopeName])) {
+                // we are out of sync and need to copy
+                if (!compare(parentValue, lastValue)) {
+                  // parent changed and it has precedence
+                  destination[scopeName] = parentValue;
+                } else {
+                  // if the parent can be assigned then do so
+                  parentSet(scope, parentValue = destination[scopeName]);
+                }
+              }
+              lastValue = parentValue;
+              return lastValue;
+            };
+            parentValueWatch.$stateful = true;
+            if (definition.collection) {
+              removeWatch = scope.$watchCollection(attrs[attrName], parentValueWatch);
+            } else {
+              removeWatch = scope.$watch($parse(attrs[attrName], parentValueWatch), null, parentGet.literal);
+            }
+            removeWatchCollection.push(removeWatch);
+            break;
+
+          case '<':
+            if (!hasOwnProperty.call(attrs, attrName)) {
+              if (optional) break;
+              strictBindingsCheck(attrName, directive.name);
+              attrs[attrName] = undefined;
+            }
+            if (optional && !attrs[attrName]) break;
+
+            parentGet = $parse(attrs[attrName]);
+            var isLiteral = parentGet.literal;
+
+            var initialValue = destination[scopeName] = parentGet(scope);
+            initialChanges[scopeName] = new SimpleChange(_UNINITIALIZED_VALUE, destination[scopeName]);
+
+            removeWatch = scope[definition.collection ? '$watchCollection' : '$watch'](parentGet, function parentValueWatchAction(newValue, oldValue) {
+              if (oldValue === newValue) {
+                if (oldValue === initialValue || (isLiteral && equals(oldValue, initialValue))) {
+                  return;
+                }
+                oldValue = initialValue;
+              }
+              recordChanges(scopeName, newValue, oldValue);
+              destination[scopeName] = newValue;
+            });
+
+            removeWatchCollection.push(removeWatch);
+            break;
+
+          case '&':
+            if (!optional && !hasOwnProperty.call(attrs, attrName)) {
+              strictBindingsCheck(attrName, directive.name);
+            }
+            // Don't assign Object.prototype method to scope
+            parentGet = attrs.hasOwnProperty(attrName) ? $parse(attrs[attrName]) : noop;
+
+            // Don't assign noop to destination if expression is not valid
+            if (parentGet === noop && optional) break;
+
+            destination[scopeName] = function(locals) {
+              return parentGet(scope, locals);
+            };
+            break;
+        }
+      });
+
+      function recordChanges(key, currentValue, previousValue) {
+        if (isFunction(destination.$onChanges) && !simpleCompare(currentValue, previousValue)) {
+          // If we have not already scheduled the top level onChangesQueue handler then do so now
+          if (!onChangesQueue) {
+            scope.$$postDigest(flushOnChangesQueue);
+            onChangesQueue = [];
+          }
+          // If we have not already queued a trigger of onChanges for this controller then do so now
+          if (!changes) {
+            changes = {};
+            onChangesQueue.push(triggerOnChangesHook);
+          }
+          // If the has been a change on this property already then we need to reuse the previous value
+          if (changes[key]) {
+            previousValue = changes[key].previousValue;
+          }
+          // Store this change
+          changes[key] = new SimpleChange(previousValue, currentValue);
+        }
+      }
+
+      function triggerOnChangesHook() {
+        destination.$onChanges(changes);
+        // Now clear the changes so that we schedule onChanges when more changes arrive
+        changes = undefined;
+      }
+
+      return {
+        initialChanges: initialChanges,
+        removeWatches: removeWatchCollection.length && function removeWatches() {
+          for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) {
+            removeWatchCollection[i]();
+          }
+        }
+      };
+    }
+  }];
+}
+
+function SimpleChange(previous, current) {
+  this.previousValue = previous;
+  this.currentValue = current;
+}
+SimpleChange.prototype.isFirstChange = function() { return this.previousValue === _UNINITIALIZED_VALUE; };
+
+
+var PREFIX_REGEXP = /^((?:x|data)[:\-_])/i;
+var SPECIAL_CHARS_REGEXP = /[:\-_]+(.)/g;
+
+/**
+ * Converts all accepted directives format into proper directive name.
+ * @param name Name to normalize
+ */
+function directiveNormalize(name) {
+  return name
+    .replace(PREFIX_REGEXP, '')
+    .replace(SPECIAL_CHARS_REGEXP, function(_, letter, offset) {
+      return offset ? letter.toUpperCase() : letter;
+    });
+}
+
+/**
+ * @ngdoc type
+ * @name $compile.directive.Attributes
+ *
+ * @description
+ * A shared object between directive compile / linking functions which contains normalized DOM
+ * element attributes. The values reflect current binding state `{{ }}`. The normalization is
+ * needed since all of these are treated as equivalent in AngularJS:
+ *
+ * ```
+ *    <span ng:bind="a" ng-bind="a" data-ng-bind="a" x-ng-bind="a">
+ * ```
+ */
+
+/**
+ * @ngdoc property
+ * @name $compile.directive.Attributes#$attr
+ *
+ * @description
+ * A map of DOM element attribute names to the normalized name. This is
+ * needed to do reverse lookup from normalized name back to actual name.
+ */
+
+
+/**
+ * @ngdoc method
+ * @name $compile.directive.Attributes#$set
+ * @kind function
+ *
+ * @description
+ * Set DOM element attribute value.
+ *
+ *
+ * @param {string} name Normalized element attribute name of the property to modify. The name is
+ *          reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}
+ *          property to the original name.
+ * @param {string} value Value to set the attribute to. The value can be an interpolated string.
+ */
+
+
+
+/**
+ * Closure compiler type information
+ */
+
+function nodesetLinkingFn(
+  /* angular.Scope */ scope,
+  /* NodeList */ nodeList,
+  /* Element */ rootElement,
+  /* function(Function) */ boundTranscludeFn
+) {}
+
+function directiveLinkingFn(
+  /* nodesetLinkingFn */ nodesetLinkingFn,
+  /* angular.Scope */ scope,
+  /* Node */ node,
+  /* Element */ rootElement,
+  /* function(Function) */ boundTranscludeFn
+) {}
+
+function tokenDifference(str1, str2) {
+  var values = '',
+      tokens1 = str1.split(/\s+/),
+      tokens2 = str2.split(/\s+/);
+
+  outer:
+  for (var i = 0; i < tokens1.length; i++) {
+    var token = tokens1[i];
+    for (var j = 0; j < tokens2.length; j++) {
+      if (token === tokens2[j]) continue outer;
+    }
+    values += (values.length > 0 ? ' ' : '') + token;
+  }
+  return values;
+}
+
+function removeComments(jqNodes) {
+  jqNodes = jqLite(jqNodes);
+  var i = jqNodes.length;
+
+  if (i <= 1) {
+    return jqNodes;
+  }
+
+  while (i--) {
+    var node = jqNodes[i];
+    if (node.nodeType === NODE_TYPE_COMMENT ||
+       (node.nodeType === NODE_TYPE_TEXT && node.nodeValue.trim() === '')) {
+         splice.call(jqNodes, i, 1);
+    }
+  }
+  return jqNodes;
+}
+
+var $controllerMinErr = minErr('$controller');
+
+
+var CNTRL_REG = /^(\S+)(\s+as\s+([\w$]+))?$/;
+function identifierForController(controller, ident) {
+  if (ident && isString(ident)) return ident;
+  if (isString(controller)) {
+    var match = CNTRL_REG.exec(controller);
+    if (match) return match[3];
+  }
+}
+
+
+/**
+ * @ngdoc provider
+ * @name $controllerProvider
+ * @this
+ *
+ * @description
+ * The {@link ng.$controller $controller service} is used by AngularJS to create new
+ * controllers.
+ *
+ * This provider allows controller registration via the
+ * {@link ng.$controllerProvider#register register} method.
+ */
+function $ControllerProvider() {
+  var controllers = {};
+
+  /**
+   * @ngdoc method
+   * @name $controllerProvider#has
+   * @param {string} name Controller name to check.
+   */
+  this.has = function(name) {
+    return controllers.hasOwnProperty(name);
+  };
+
+  /**
+   * @ngdoc method
+   * @name $controllerProvider#register
+   * @param {string|Object} name Controller name, or an object map of controllers where the keys are
+   *    the names and the values are the constructors.
+   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI
+   *    annotations in the array notation).
+   */
+  this.register = function(name, constructor) {
+    assertNotHasOwnProperty(name, 'controller');
+    if (isObject(name)) {
+      extend(controllers, name);
+    } else {
+      controllers[name] = constructor;
+    }
+  };
+
+  this.$get = ['$injector', function($injector) {
+
+    /**
+     * @ngdoc service
+     * @name $controller
+     * @requires $injector
+     *
+     * @param {Function|string} constructor If called with a function then it's considered to be the
+     *    controller constructor function. Otherwise it's considered to be a string which is used
+     *    to retrieve the controller constructor using the following steps:
+     *
+     *    * check if a controller with given name is registered via `$controllerProvider`
+     *    * check if evaluating the string on the current scope returns a constructor
+     *
+     *    The string can use the `controller as property` syntax, where the controller instance is published
+     *    as the specified property on the `scope`; the `scope` must be injected into `locals` param for this
+     *    to work correctly.
+     *
+     * @param {Object} locals Injection locals for Controller.
+     * @return {Object} Instance of given controller.
+     *
+     * @description
+     * `$controller` service is responsible for instantiating controllers.
+     *
+     * It's just a simple call to {@link auto.$injector $injector}, but extracted into
+     * a service, so that one can override this service with [BC version](https://gist.github.com/1649788).
+     */
+    return function $controller(expression, locals, later, ident) {
+      // PRIVATE API:
+      //   param `later` --- indicates that the controller's constructor is invoked at a later time.
+      //                     If true, $controller will allocate the object with the correct
+      //                     prototype chain, but will not invoke the controller until a returned
+      //                     callback is invoked.
+      //   param `ident` --- An optional label which overrides the label parsed from the controller
+      //                     expression, if any.
+      var instance, match, constructor, identifier;
+      later = later === true;
+      if (ident && isString(ident)) {
+        identifier = ident;
+      }
+
+      if (isString(expression)) {
+        match = expression.match(CNTRL_REG);
+        if (!match) {
+          throw $controllerMinErr('ctrlfmt',
+            'Badly formed controller string \'{0}\'. ' +
+            'Must match `__name__ as __id__` or `__name__`.', expression);
+        }
+        constructor = match[1];
+        identifier = identifier || match[3];
+        expression = controllers.hasOwnProperty(constructor)
+            ? controllers[constructor]
+            : getter(locals.$scope, constructor, true);
+
+        if (!expression) {
+          throw $controllerMinErr('ctrlreg',
+            'The controller with the name \'{0}\' is not registered.', constructor);
+        }
+
+        assertArgFn(expression, constructor, true);
+      }
+
+      if (later) {
+        // Instantiate controller later:
+        // This machinery is used to create an instance of the object before calling the
+        // controller's constructor itself.
+        //
+        // This allows properties to be added to the controller before the constructor is
+        // invoked. Primarily, this is used for isolate scope bindings in $compile.
+        //
+        // This feature is not intended for use by applications, and is thus not documented
+        // publicly.
+        // Object creation: http://jsperf.com/create-constructor/2
+        var controllerPrototype = (isArray(expression) ?
+          expression[expression.length - 1] : expression).prototype;
+        instance = Object.create(controllerPrototype || null);
+
+        if (identifier) {
+          addIdentifier(locals, identifier, instance, constructor || expression.name);
+        }
+
+        return extend(function $controllerInit() {
+          var result = $injector.invoke(expression, instance, locals, constructor);
+          if (result !== instance && (isObject(result) || isFunction(result))) {
+            instance = result;
+            if (identifier) {
+              // If result changed, re-assign controllerAs value to scope.
+              addIdentifier(locals, identifier, instance, constructor || expression.name);
+            }
+          }
+          return instance;
+        }, {
+          instance: instance,
+          identifier: identifier
+        });
+      }
+
+      instance = $injector.instantiate(expression, locals, constructor);
+
+      if (identifier) {
+        addIdentifier(locals, identifier, instance, constructor || expression.name);
+      }
+
+      return instance;
+    };
+
+    function addIdentifier(locals, identifier, instance, name) {
+      if (!(locals && isObject(locals.$scope))) {
+        throw minErr('$controller')('noscp',
+          'Cannot export controller \'{0}\' as \'{1}\'! No $scope object provided via `locals`.',
+          name, identifier);
+      }
+
+      locals.$scope[identifier] = instance;
+    }
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $document
+ * @requires $window
+ * @this
+ *
+ * @description
+ * A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.
+ *
+ * @example
+   <example module="documentExample" name="document">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <p>$document title: <b ng-bind="title"></b></p>
+         <p>window.document title: <b ng-bind="windowTitle"></b></p>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('documentExample', [])
+         .controller('ExampleController', ['$scope', '$document', function($scope, $document) {
+           $scope.title = $document[0].title;
+           $scope.windowTitle = angular.element(window.document)[0].title;
+         }]);
+     </file>
+   </example>
+ */
+function $DocumentProvider() {
+  this.$get = ['$window', function(window) {
+    return jqLite(window.document);
+  }];
+}
+
+
+/**
+ * @private
+ * @this
+ * Listens for document visibility change and makes the current status accessible.
+ */
+function $$IsDocumentHiddenProvider() {
+  this.$get = ['$document', '$rootScope', function($document, $rootScope) {
+    var doc = $document[0];
+    var hidden = doc && doc.hidden;
+
+    $document.on('visibilitychange', changeListener);
+
+    $rootScope.$on('$destroy', function() {
+      $document.off('visibilitychange', changeListener);
+    });
+
+    function changeListener() {
+      hidden = doc.hidden;
+    }
+
+    return function() {
+      return hidden;
+    };
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $exceptionHandler
+ * @requires ng.$log
+ * @this
+ *
+ * @description
+ * Any uncaught exception in AngularJS expressions is delegated to this service.
+ * The default implementation simply delegates to `$log.error` which logs it into
+ * the browser console.
+ *
+ * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by
+ * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.
+ *
+ * ## Example:
+ *
+ * The example below will overwrite the default `$exceptionHandler` in order to (a) log uncaught
+ * errors to the backend for later inspection by the developers and (b) to use `$log.warn()` instead
+ * of `$log.error()`.
+ *
+ * ```js
+ *   angular.
+ *     module('exceptionOverwrite', []).
+ *     factory('$exceptionHandler', ['$log', 'logErrorsToBackend', function($log, logErrorsToBackend) {
+ *       return function myExceptionHandler(exception, cause) {
+ *         logErrorsToBackend(exception, cause);
+ *         $log.warn(exception, cause);
+ *       };
+ *     }]);
+ * ```
+ *
+ * <hr />
+ * Note, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`
+ * methods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}
+ * (unless executed during a digest).
+ *
+ * If you wish, you can manually delegate exceptions, e.g.
+ * `try { ... } catch(e) { $exceptionHandler(e); }`
+ *
+ * @param {Error} exception Exception associated with the error.
+ * @param {string=} cause Optional information about the context in which
+ *       the error was thrown.
+ *
+ */
+function $ExceptionHandlerProvider() {
+  this.$get = ['$log', function($log) {
+    return function(exception, cause) {
+      $log.error.apply($log, arguments);
+    };
+  }];
+}
+
+var $$ForceReflowProvider = /** @this */ function() {
+  this.$get = ['$document', function($document) {
+    return function(domNode) {
+      //the line below will force the browser to perform a repaint so
+      //that all the animated elements within the animation frame will
+      //be properly updated and drawn on screen. This is required to
+      //ensure that the preparation animation is properly flushed so that
+      //the active state picks up from there. DO NOT REMOVE THIS LINE.
+      //DO NOT OPTIMIZE THIS LINE. THE MINIFIER WILL REMOVE IT OTHERWISE WHICH
+      //WILL RESULT IN AN UNPREDICTABLE BUG THAT IS VERY HARD TO TRACK DOWN AND
+      //WILL TAKE YEARS AWAY FROM YOUR LIFE.
+      if (domNode) {
+        if (!domNode.nodeType && domNode instanceof jqLite) {
+          domNode = domNode[0];
+        }
+      } else {
+        domNode = $document[0].body;
+      }
+      return domNode.offsetWidth + 1;
+    };
+  }];
+};
+
+var APPLICATION_JSON = 'application/json';
+var CONTENT_TYPE_APPLICATION_JSON = {'Content-Type': APPLICATION_JSON + ';charset=utf-8'};
+var JSON_START = /^\[|^\{(?!\{)/;
+var JSON_ENDS = {
+  '[': /]$/,
+  '{': /}$/
+};
+var JSON_PROTECTION_PREFIX = /^\)]\}',?\n/;
+var $httpMinErr = minErr('$http');
+
+function serializeValue(v) {
+  if (isObject(v)) {
+    return isDate(v) ? v.toISOString() : toJson(v);
+  }
+  return v;
+}
+
+
+/** @this */
+function $HttpParamSerializerProvider() {
+  /**
+   * @ngdoc service
+   * @name $httpParamSerializer
+   * @description
+   *
+   * Default {@link $http `$http`} params serializer that converts objects to strings
+   * according to the following rules:
+   *
+   * * `{'foo': 'bar'}` results in `foo=bar`
+   * * `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)
+   * * `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)
+   * * `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D` (stringified and encoded representation of an object)
+   *
+   * Note that serializer will sort the request parameters alphabetically.
+   */
+
+  this.$get = function() {
+    return function ngParamSerializer(params) {
+      if (!params) return '';
+      var parts = [];
+      forEachSorted(params, function(value, key) {
+        if (value === null || isUndefined(value) || isFunction(value)) return;
+        if (isArray(value)) {
+          forEach(value, function(v) {
+            parts.push(encodeUriQuery(key)  + '=' + encodeUriQuery(serializeValue(v)));
+          });
+        } else {
+          parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(serializeValue(value)));
+        }
+      });
+
+      return parts.join('&');
+    };
+  };
+}
+
+/** @this */
+function $HttpParamSerializerJQLikeProvider() {
+  /**
+   * @ngdoc service
+   * @name $httpParamSerializerJQLike
+   *
+   * @description
+   *
+   * Alternative {@link $http `$http`} params serializer that follows
+   * jQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.
+   * The serializer will also sort the params alphabetically.
+   *
+   * To use it for serializing `$http` request parameters, set it as the `paramSerializer` property:
+   *
+   * ```js
+   * $http({
+   *   url: myUrl,
+   *   method: 'GET',
+   *   params: myParams,
+   *   paramSerializer: '$httpParamSerializerJQLike'
+   * });
+   * ```
+   *
+   * It is also possible to set it as the default `paramSerializer` in the
+   * {@link $httpProvider#defaults `$httpProvider`}.
+   *
+   * Additionally, you can inject the serializer and use it explicitly, for example to serialize
+   * form data for submission:
+   *
+   * ```js
+   * .controller(function($http, $httpParamSerializerJQLike) {
+   *   //...
+   *
+   *   $http({
+   *     url: myUrl,
+   *     method: 'POST',
+   *     data: $httpParamSerializerJQLike(myData),
+   *     headers: {
+   *       'Content-Type': 'application/x-www-form-urlencoded'
+   *     }
+   *   });
+   *
+   * });
+   * ```
+   *
+   */
+  this.$get = function() {
+    return function jQueryLikeParamSerializer(params) {
+      if (!params) return '';
+      var parts = [];
+      serialize(params, '', true);
+      return parts.join('&');
+
+      function serialize(toSerialize, prefix, topLevel) {
+        if (isArray(toSerialize)) {
+          forEach(toSerialize, function(value, index) {
+            serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');
+          });
+        } else if (isObject(toSerialize) && !isDate(toSerialize)) {
+          forEachSorted(toSerialize, function(value, key) {
+            serialize(value, prefix +
+                (topLevel ? '' : '[') +
+                key +
+                (topLevel ? '' : ']'));
+          });
+        } else {
+          if (isFunction(toSerialize)) {
+            toSerialize = toSerialize();
+          }
+          parts.push(encodeUriQuery(prefix) + '=' +
+              (toSerialize == null ? '' : encodeUriQuery(serializeValue(toSerialize))));
+        }
+      }
+    };
+  };
+}
+
+function defaultHttpResponseTransform(data, headers) {
+  if (isString(data)) {
+    // Strip json vulnerability protection prefix and trim whitespace
+    var tempData = data.replace(JSON_PROTECTION_PREFIX, '').trim();
+
+    if (tempData) {
+      var contentType = headers('Content-Type');
+      var hasJsonContentType = contentType && (contentType.indexOf(APPLICATION_JSON) === 0);
+
+      if (hasJsonContentType || isJsonLike(tempData)) {
+        try {
+          data = fromJson(tempData);
+        } catch (e) {
+          if (!hasJsonContentType) {
+            return data;
+          }
+          throw $httpMinErr('baddata', 'Data must be a valid JSON object. Received: "{0}". ' +
+          'Parse error: "{1}"', data, e);
+        }
+      }
+    }
+  }
+
+  return data;
+}
+
+function isJsonLike(str) {
+    var jsonStart = str.match(JSON_START);
+    return jsonStart && JSON_ENDS[jsonStart[0]].test(str);
+}
+
+/**
+ * Parse headers into key value object
+ *
+ * @param {string} headers Raw headers as a string
+ * @returns {Object} Parsed headers as key value object
+ */
+function parseHeaders(headers) {
+  var parsed = createMap(), i;
+
+  function fillInParsed(key, val) {
+    if (key) {
+      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
+    }
+  }
+
+  if (isString(headers)) {
+    forEach(headers.split('\n'), function(line) {
+      i = line.indexOf(':');
+      fillInParsed(lowercase(trim(line.substr(0, i))), trim(line.substr(i + 1)));
+    });
+  } else if (isObject(headers)) {
+    forEach(headers, function(headerVal, headerKey) {
+      fillInParsed(lowercase(headerKey), trim(headerVal));
+    });
+  }
+
+  return parsed;
+}
+
+
+/**
+ * Returns a function that provides access to parsed headers.
+ *
+ * Headers are lazy parsed when first requested.
+ * @see parseHeaders
+ *
+ * @param {(string|Object)} headers Headers to provide access to.
+ * @returns {function(string=)} Returns a getter function which if called with:
+ *
+ *   - if called with an argument returns a single header value or null
+ *   - if called with no arguments returns an object containing all headers.
+ */
+function headersGetter(headers) {
+  var headersObj;
+
+  return function(name) {
+    if (!headersObj) headersObj =  parseHeaders(headers);
+
+    if (name) {
+      var value = headersObj[lowercase(name)];
+      if (value === undefined) {
+        value = null;
+      }
+      return value;
+    }
+
+    return headersObj;
+  };
+}
+
+
+/**
+ * Chain all given functions
+ *
+ * This function is used for both request and response transforming
+ *
+ * @param {*} data Data to transform.
+ * @param {function(string=)} headers HTTP headers getter fn.
+ * @param {number} status HTTP status code of the response.
+ * @param {(Function|Array.<Function>)} fns Function or an array of functions.
+ * @returns {*} Transformed data.
+ */
+function transformData(data, headers, status, fns) {
+  if (isFunction(fns)) {
+    return fns(data, headers, status);
+  }
+
+  forEach(fns, function(fn) {
+    data = fn(data, headers, status);
+  });
+
+  return data;
+}
+
+
+function isSuccess(status) {
+  return 200 <= status && status < 300;
+}
+
+
+/**
+ * @ngdoc provider
+ * @name $httpProvider
+ * @this
+ *
+ * @description
+ * Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.
+ */
+function $HttpProvider() {
+  /**
+   * @ngdoc property
+   * @name $httpProvider#defaults
+   * @description
+   *
+   * Object containing default values for all {@link ng.$http $http} requests.
+   *
+   * - **`defaults.cache`** - {boolean|Object} - A boolean value or object created with
+   * {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of HTTP responses
+   * by default. See {@link $http#caching $http Caching} for more information.
+   *
+   * - **`defaults.headers`** - {Object} - Default headers for all $http requests.
+   * Refer to {@link ng.$http#setting-http-headers $http} for documentation on
+   * setting default headers.
+   *     - **`defaults.headers.common`**
+   *     - **`defaults.headers.post`**
+   *     - **`defaults.headers.put`**
+   *     - **`defaults.headers.patch`**
+   *
+   * - **`defaults.jsonpCallbackParam`** - `{string}` - the name of the query parameter that passes the name of the
+   * callback in a JSONP request. The value of this parameter will be replaced with the expression generated by the
+   * {@link $jsonpCallbacks} service. Defaults to `'callback'`.
+   *
+   * - **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function
+   *  used to the prepare string representation of request parameters (specified as an object).
+   *  If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.
+   *  Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.
+   *
+   * - **`defaults.transformRequest`** -
+   * `{Array<function(data, headersGetter)>|function(data, headersGetter)}` -
+   * An array of functions (or a single function) which are applied to the request data.
+   * By default, this is an array with one request transformation function:
+   *
+   *   - If the `data` property of the request configuration object contains an object, serialize it
+   *     into JSON format.
+   *
+   * - **`defaults.transformResponse`** -
+   * `{Array<function(data, headersGetter, status)>|function(data, headersGetter, status)}` -
+   * An array of functions (or a single function) which are applied to the response data. By default,
+   * this is an array which applies one response transformation function that does two things:
+   *
+   *  - If XSRF prefix is detected, strip it
+   *    (see {@link ng.$http#security-considerations Security Considerations in the $http docs}).
+   *  - If the `Content-Type` is `application/json` or the response looks like JSON,
+   *    deserialize it using a JSON parser.
+   *
+   * - **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.
+   * Defaults value is `'XSRF-TOKEN'`.
+   *
+   * - **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the
+   * XSRF token. Defaults value is `'X-XSRF-TOKEN'`.
+   *
+   */
+  var defaults = this.defaults = {
+    // transform incoming response data
+    transformResponse: [defaultHttpResponseTransform],
+
+    // transform outgoing request data
+    transformRequest: [function(d) {
+      return isObject(d) && !isFile(d) && !isBlob(d) && !isFormData(d) ? toJson(d) : d;
+    }],
+
+    // default headers
+    headers: {
+      common: {
+        'Accept': 'application/json, text/plain, */*'
+      },
+      post:   shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
+      put:    shallowCopy(CONTENT_TYPE_APPLICATION_JSON),
+      patch:  shallowCopy(CONTENT_TYPE_APPLICATION_JSON)
+    },
+
+    xsrfCookieName: 'XSRF-TOKEN',
+    xsrfHeaderName: 'X-XSRF-TOKEN',
+
+    paramSerializer: '$httpParamSerializer',
+
+    jsonpCallbackParam: 'callback'
+  };
+
+  var useApplyAsync = false;
+  /**
+   * @ngdoc method
+   * @name $httpProvider#useApplyAsync
+   * @description
+   *
+   * Configure $http service to combine processing of multiple http responses received at around
+   * the same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in
+   * significant performance improvement for bigger applications that make many HTTP requests
+   * concurrently (common during application bootstrap).
+   *
+   * Defaults to false. If no value is specified, returns the current configured value.
+   *
+   * @param {boolean=} value If true, when requests are loaded, they will schedule a deferred
+   *    "apply" on the next tick, giving time for subsequent requests in a roughly ~10ms window
+   *    to load and share the same digest cycle.
+   *
+   * @returns {boolean|Object} If a value is specified, returns the $httpProvider for chaining.
+   *    otherwise, returns the current configured value.
+   */
+  this.useApplyAsync = function(value) {
+    if (isDefined(value)) {
+      useApplyAsync = !!value;
+      return this;
+    }
+    return useApplyAsync;
+  };
+
+  /**
+   * @ngdoc property
+   * @name $httpProvider#interceptors
+   * @description
+   *
+   * Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}
+   * pre-processing of request or postprocessing of responses.
+   *
+   * These service factories are ordered by request, i.e. they are applied in the same order as the
+   * array, on request, but reverse order, on response.
+   *
+   * {@link ng.$http#interceptors Interceptors detailed info}
+   */
+  var interceptorFactories = this.interceptors = [];
+
+  /**
+   * @ngdoc property
+   * @name $httpProvider#xsrfTrustedOrigins
+   * @description
+   *
+   * Array containing URLs whose origins are trusted to receive the XSRF token. See the
+   * {@link ng.$http#security-considerations Security Considerations} sections for more details on
+   * XSRF.
+   *
+   * **Note:** An "origin" consists of the [URI scheme](https://en.wikipedia.org/wiki/URI_scheme),
+   * the [hostname](https://en.wikipedia.org/wiki/Hostname) and the
+   * [port number](https://en.wikipedia.org/wiki/Port_(computer_networking). For `http:` and
+   * `https:`, the port number can be omitted if using th default ports (80 and 443 respectively).
+   * Examples: `http://example.com`, `https://api.example.com:9876`
+   *
+   * <div class="alert alert-warning">
+   *   It is not possible to trust specific URLs/paths. The `path`, `query` and `fragment` parts
+   *   of a URL will be ignored. For example, `https://foo.com/path/bar?query=baz#fragment` will be
+   *   treated as `https://foo.com`, meaning that **all** requests to URLs starting with
+   *   `https://foo.com/` will include the XSRF token.
+   * </div>
+   *
+   * @example
+   *
+   * ```js
+   * // App served from `https://example.com/`.
+   * angular.
+   *   module('xsrfTrustedOriginsExample', []).
+   *   config(['$httpProvider', function($httpProvider) {
+   *     $httpProvider.xsrfTrustedOrigins.push('https://api.example.com');
+   *   }]).
+   *   run(['$http', function($http) {
+   *     // The XSRF token will be sent.
+   *     $http.get('https://api.example.com/preferences').then(...);
+   *
+   *     // The XSRF token will NOT be sent.
+   *     $http.get('https://stats.example.com/activity').then(...);
+   *   }]);
+   * ```
+   */
+  var xsrfTrustedOrigins = this.xsrfTrustedOrigins = [];
+
+  /**
+   * @ngdoc property
+   * @name $httpProvider#xsrfWhitelistedOrigins
+   * @description
+   *
+   * @deprecated
+   * sinceVersion="1.8.1"
+   *
+   * This property is deprecated. Use {@link $httpProvider#xsrfTrustedOrigins xsrfTrustedOrigins}
+   * instead.
+   */
+  Object.defineProperty(this, 'xsrfWhitelistedOrigins', {
+    get: function() {
+      return this.xsrfTrustedOrigins;
+    },
+    set: function(origins) {
+      this.xsrfTrustedOrigins = origins;
+    }
+  });
+
+  this.$get = ['$browser', '$httpBackend', '$$cookieReader', '$cacheFactory', '$rootScope', '$q', '$injector', '$sce',
+      function($browser, $httpBackend, $$cookieReader, $cacheFactory, $rootScope, $q, $injector, $sce) {
+
+    var defaultCache = $cacheFactory('$http');
+
+    /**
+     * Make sure that default param serializer is exposed as a function
+     */
+    defaults.paramSerializer = isString(defaults.paramSerializer) ?
+      $injector.get(defaults.paramSerializer) : defaults.paramSerializer;
+
+    /**
+     * Interceptors stored in reverse order. Inner interceptors before outer interceptors.
+     * The reversal is needed so that we can build up the interception chain around the
+     * server request.
+     */
+    var reversedInterceptors = [];
+
+    forEach(interceptorFactories, function(interceptorFactory) {
+      reversedInterceptors.unshift(isString(interceptorFactory)
+          ? $injector.get(interceptorFactory) : $injector.invoke(interceptorFactory));
+    });
+
+    /**
+     * A function to check request URLs against a list of allowed origins.
+     */
+    var urlIsAllowedOrigin = urlIsAllowedOriginFactory(xsrfTrustedOrigins);
+
+    /**
+     * @ngdoc service
+     * @kind function
+     * @name $http
+     * @requires ng.$httpBackend
+     * @requires $cacheFactory
+     * @requires $rootScope
+     * @requires $q
+     * @requires $injector
+     *
+     * @description
+     * The `$http` service is a core AngularJS service that facilitates communication with the remote
+     * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)
+     * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).
+     *
+     * For unit testing applications that use `$http` service, see
+     * {@link ngMock.$httpBackend $httpBackend mock}.
+     *
+     * For a higher level of abstraction, please check out the {@link ngResource.$resource
+     * $resource} service.
+     *
+     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by
+     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage
+     * it is important to familiarize yourself with these APIs and the guarantees they provide.
+     *
+     *
+     * ## General usage
+     * The `$http` service is a function which takes a single argument — a {@link $http#usage configuration object} —
+     * that is used to generate an HTTP request and returns  a {@link ng.$q promise} that is
+     * resolved (request success) or rejected (request failure) with a
+     * {@link ng.$http#$http-returns response} object.
+     *
+     * ```js
+     *   // Simple GET request example:
+     *   $http({
+     *     method: 'GET',
+     *     url: '/someUrl'
+     *   }).then(function successCallback(response) {
+     *       // this callback will be called asynchronously
+     *       // when the response is available
+     *     }, function errorCallback(response) {
+     *       // called asynchronously if an error occurs
+     *       // or server returns response with an error status.
+     *     });
+     * ```
+     *
+     *
+     * ## Shortcut methods
+     *
+     * Shortcut methods are also available. All shortcut methods require passing in the URL, and
+     * request data must be passed in for POST/PUT requests. An optional config can be passed as the
+     * last argument.
+     *
+     * ```js
+     *   $http.get('/someUrl', config).then(successCallback, errorCallback);
+     *   $http.post('/someUrl', data, config).then(successCallback, errorCallback);
+     * ```
+     *
+     * Complete list of shortcut methods:
+     *
+     * - {@link ng.$http#get $http.get}
+     * - {@link ng.$http#head $http.head}
+     * - {@link ng.$http#post $http.post}
+     * - {@link ng.$http#put $http.put}
+     * - {@link ng.$http#delete $http.delete}
+     * - {@link ng.$http#jsonp $http.jsonp}
+     * - {@link ng.$http#patch $http.patch}
+     *
+     *
+     * ## Writing Unit Tests that use $http
+     * When unit testing (using {@link ngMock ngMock}), it is necessary to call
+     * {@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending
+     * request using trained responses.
+     *
+     * ```
+     * $httpBackend.expectGET(...);
+     * $http.get(...);
+     * $httpBackend.flush();
+     * ```
+     *
+     * ## Setting HTTP Headers
+     *
+     * The $http service will automatically add certain HTTP headers to all requests. These defaults
+     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration
+     * object, which currently contains this default configuration:
+     *
+     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):
+     *   - <code>Accept: application/json, text/plain, \*&#65279;/&#65279;\*</code>
+     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)
+     *   - `Content-Type: application/json`
+     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)
+     *   - `Content-Type: application/json`
+     *
+     * To add or overwrite these defaults, simply add or remove a property from these configuration
+     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object
+     * with the lowercased HTTP method name as the key, e.g.
+     * `$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }`.
+     *
+     * The defaults can also be set at runtime via the `$http.defaults` object in the same
+     * fashion. For example:
+     *
+     * ```
+     * module.run(function($http) {
+     *   $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w';
+     * });
+     * ```
+     *
+     * In addition, you can supply a `headers` property in the config object passed when
+     * calling `$http(config)`, which overrides the defaults without changing them globally.
+     *
+     * To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,
+     * Use the `headers` property, setting the desired header to `undefined`. For example:
+     *
+     * ```js
+     * var req = {
+     *  method: 'POST',
+     *  url: 'http://example.com',
+     *  headers: {
+     *    'Content-Type': undefined
+     *  },
+     *  data: { test: 'test' }
+     * }
+     *
+     * $http(req).then(function(){...}, function(){...});
+     * ```
+     *
+     * ## Transforming Requests and Responses
+     *
+     * Both requests and responses can be transformed using transformation functions: `transformRequest`
+     * and `transformResponse`. These properties can be a single function that returns
+     * the transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,
+     * which allows you to `push` or `unshift` a new transformation function into the transformation chain.
+     *
+     * <div class="alert alert-warning">
+     * **Note:** AngularJS does not make a copy of the `data` parameter before it is passed into the `transformRequest` pipeline.
+     * That means changes to the properties of `data` are not local to the transform function (since Javascript passes objects by reference).
+     * For example, when calling `$http.get(url, $scope.myObject)`, modifications to the object's properties in a transformRequest
+     * function will be reflected on the scope and in any templates where the object is data-bound.
+     * To prevent this, transform functions should have no side-effects.
+     * If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.
+     * </div>
+     *
+     * ### Default Transformations
+     *
+     * The `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and
+     * `defaults.transformResponse` properties. If a request does not provide its own transformations
+     * then these will be applied.
+     *
+     * You can augment or replace the default transformations by modifying these properties by adding to or
+     * replacing the array.
+     *
+     * AngularJS provides the following default transformations:
+     *
+     * Request transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`) is
+     * an array with one function that does the following:
+     *
+     * - If the `data` property of the request configuration object contains an object, serialize it
+     *   into JSON format.
+     *
+     * Response transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`) is
+     * an array with one function that does the following:
+     *
+     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).
+     *  - If the `Content-Type` is `application/json` or the response looks like JSON,
+   *      deserialize it using a JSON parser.
+     *
+     *
+     * ### Overriding the Default Transformations Per Request
+     *
+     * If you wish to override the request/response transformations only for a single request then provide
+     * `transformRequest` and/or `transformResponse` properties on the configuration object passed
+     * into `$http`.
+     *
+     * Note that if you provide these properties on the config object the default transformations will be
+     * overwritten. If you wish to augment the default transformations then you must include them in your
+     * local transformation array.
+     *
+     * The following code demonstrates adding a new response transformation to be run after the default response
+     * transformations have been run.
+     *
+     * ```js
+     * function appendTransform(defaults, transform) {
+     *
+     *   // We can't guarantee that the default transformation is an array
+     *   defaults = angular.isArray(defaults) ? defaults : [defaults];
+     *
+     *   // Append the new transformation to the defaults
+     *   return defaults.concat(transform);
+     * }
+     *
+     * $http({
+     *   url: '...',
+     *   method: 'GET',
+     *   transformResponse: appendTransform($http.defaults.transformResponse, function(value) {
+     *     return doTransform(value);
+     *   })
+     * });
+     * ```
+     *
+     *
+     * ## Caching
+     *
+     * {@link ng.$http `$http`} responses are not cached by default. To enable caching, you must
+     * set the config.cache value or the default cache value to TRUE or to a cache object (created
+     * with {@link ng.$cacheFactory `$cacheFactory`}). If defined, the value of config.cache takes
+     * precedence over the default cache value.
+     *
+     * In order to:
+     *   * cache all responses - set the default cache value to TRUE or to a cache object
+     *   * cache a specific response - set config.cache value to TRUE or to a cache object
+     *
+     * If caching is enabled, but neither the default cache nor config.cache are set to a cache object,
+     * then the default `$cacheFactory("$http")` object is used.
+     *
+     * The default cache value can be set by updating the
+     * {@link ng.$http#defaults `$http.defaults.cache`} property or the
+     * {@link $httpProvider#defaults `$httpProvider.defaults.cache`} property.
+     *
+     * When caching is enabled, {@link ng.$http `$http`} stores the response from the server using
+     * the relevant cache object. The next time the same request is made, the response is returned
+     * from the cache without sending a request to the server.
+     *
+     * Take note that:
+     *
+     *   * Only GET and JSONP requests are cached.
+     *   * The cache key is the request URL including search parameters; headers are not considered.
+     *   * Cached responses are returned asynchronously, in the same way as responses from the server.
+     *   * If multiple identical requests are made using the same cache, which is not yet populated,
+     *     one request will be made to the server and remaining requests will return the same response.
+     *   * A cache-control header on the response does not affect if or how responses are cached.
+     *
+     *
+     * ## Interceptors
+     *
+     * Before you start creating interceptors, be sure to understand the
+     * {@link ng.$q $q and deferred/promise APIs}.
+     *
+     * For purposes of global error handling, authentication, or any kind of synchronous or
+     * asynchronous pre-processing of request or postprocessing of responses, it is desirable to be
+     * able to intercept requests before they are handed to the server and
+     * responses before they are handed over to the application code that
+     * initiated these requests. The interceptors leverage the {@link ng.$q
+     * promise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.
+     *
+     * The interceptors are service factories that are registered with the `$httpProvider` by
+     * adding them to the `$httpProvider.interceptors` array. The factory is called and
+     * injected with dependencies (if specified) and returns the interceptor.
+     *
+     * There are two kinds of interceptors (and two kinds of rejection interceptors):
+     *
+     *   * `request`: interceptors get called with a http {@link $http#usage config} object. The function is free to
+     *     modify the `config` object or create a new one. The function needs to return the `config`
+     *     object directly, or a promise containing the `config` or a new `config` object.
+     *   * `requestError`: interceptor gets called when a previous interceptor threw an error or
+     *     resolved with a rejection.
+     *   * `response`: interceptors get called with http `response` object. The function is free to
+     *     modify the `response` object or create a new one. The function needs to return the `response`
+     *     object directly, or as a promise containing the `response` or a new `response` object.
+     *   * `responseError`: interceptor gets called when a previous interceptor threw an error or
+     *     resolved with a rejection.
+     *
+     *
+     * ```js
+     *   // register the interceptor as a service
+     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {
+     *     return {
+     *       // optional method
+     *       'request': function(config) {
+     *         // do something on success
+     *         return config;
+     *       },
+     *
+     *       // optional method
+     *      'requestError': function(rejection) {
+     *         // do something on error
+     *         if (canRecover(rejection)) {
+     *           return responseOrNewPromise
+     *         }
+     *         return $q.reject(rejection);
+     *       },
+     *
+     *
+     *
+     *       // optional method
+     *       'response': function(response) {
+     *         // do something on success
+     *         return response;
+     *       },
+     *
+     *       // optional method
+     *      'responseError': function(rejection) {
+     *         // do something on error
+     *         if (canRecover(rejection)) {
+     *           return responseOrNewPromise
+     *         }
+     *         return $q.reject(rejection);
+     *       }
+     *     };
+     *   });
+     *
+     *   $httpProvider.interceptors.push('myHttpInterceptor');
+     *
+     *
+     *   // alternatively, register the interceptor via an anonymous factory
+     *   $httpProvider.interceptors.push(function($q, dependency1, dependency2) {
+     *     return {
+     *      'request': function(config) {
+     *          // same as above
+     *       },
+     *
+     *       'response': function(response) {
+     *          // same as above
+     *       }
+     *     };
+     *   });
+     * ```
+     *
+     * ## Security Considerations
+     *
+     * When designing web applications, consider security threats from:
+     *
+     * - [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
+     * - [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)
+     *
+     * Both server and the client must cooperate in order to eliminate these threats. AngularJS comes
+     * pre-configured with strategies that address these issues, but for this to work backend server
+     * cooperation is required.
+     *
+     * ### JSON Vulnerability Protection
+     *
+     * A [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)
+     * allows third party website to turn your JSON resource URL into
+     * [JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To
+     * counter this your server can prefix all JSON requests with following string `")]}',\n"`.
+     * AngularJS will automatically strip the prefix before processing it as JSON.
+     *
+     * For example if your server needs to return:
+     * ```js
+     * ['one','two']
+     * ```
+     *
+     * which is vulnerable to attack, your server can return:
+     * ```js
+     * )]}',
+     * ['one','two']
+     * ```
+     *
+     * AngularJS will strip the prefix, before processing the JSON.
+     *
+     *
+     * ### Cross Site Request Forgery (XSRF) Protection
+     *
+     * [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is an attack technique by
+     * which the attacker can trick an authenticated user into unknowingly executing actions on your
+     * website. AngularJS provides a mechanism to counter XSRF. When performing XHR requests, the
+     * $http service reads a token from a cookie (by default, `XSRF-TOKEN`) and sets it as an HTTP
+     * header (by default `X-XSRF-TOKEN`). Since only JavaScript that runs on your domain could read
+     * the cookie, your server can be assured that the XHR came from JavaScript running on your
+     * domain.
+     *
+     * To take advantage of this, your server needs to set a token in a JavaScript readable session
+     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the
+     * server can verify that the cookie matches the `X-XSRF-TOKEN` HTTP header, and therefore be
+     * sure that only JavaScript running on your domain could have sent the request. The token must
+     * be unique for each user and must be verifiable by the server (to prevent the JavaScript from
+     * making up its own tokens). We recommend that the token is a digest of your site's
+     * authentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)
+     * for added security.
+     *
+     * The header will &mdash; by default &mdash; **not** be set for cross-domain requests. This
+     * prevents unauthorized servers (e.g. malicious or compromised 3rd-party APIs) from gaining
+     * access to your users' XSRF tokens and exposing them to Cross Site Request Forgery. If you
+     * want to, you can trust additional origins to also receive the XSRF token, by adding them
+     * to {@link ng.$httpProvider#xsrfTrustedOrigins xsrfTrustedOrigins}. This might be
+     * useful, for example, if your application, served from `example.com`, needs to access your API
+     * at `api.example.com`.
+     * See {@link ng.$httpProvider#xsrfTrustedOrigins $httpProvider.xsrfTrustedOrigins} for
+     * more details.
+     *
+     * <div class="alert alert-danger">
+     *   **Warning**<br />
+     *   Only trusted origins that you have control over and make sure you understand the
+     *   implications of doing so.
+     * </div>
+     *
+     * The name of the cookie and the header can be specified using the `xsrfCookieName` and
+     * `xsrfHeaderName` properties of either `$httpProvider.defaults` at config-time,
+     * `$http.defaults` at run-time, or the per-request config object.
+     *
+     * In order to prevent collisions in environments where multiple AngularJS apps share the
+     * same domain or subdomain, we recommend that each application uses a unique cookie name.
+     *
+     *
+     * @param {object} config Object describing the request to be made and how it should be
+     *    processed. The object has following properties:
+     *
+     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)
+     *    - **url** – `{string|TrustedObject}` – Absolute or relative URL of the resource that is being requested;
+     *      or an object created by a call to `$sce.trustAsResourceUrl(url)`.
+     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be serialized
+     *      with the `paramSerializer` and appended as GET parameters.
+     *    - **data** – `{string|Object}` – Data to be sent as the request message data.
+     *    - **headers** – `{Object}` – Map of strings or functions which return strings representing
+     *      HTTP headers to send to the server. If the return value of a function is null, the
+     *      header will not be sent. Functions accept a config object as an argument.
+     *    - **eventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest object.
+     *      To bind events to the XMLHttpRequest upload object, use `uploadEventHandlers`.
+     *      The handler will be called in the context of a `$apply` block.
+     *    - **uploadEventHandlers** - `{Object}` - Event listeners to be bound to the XMLHttpRequest upload
+     *      object. To bind events to the XMLHttpRequest object, use `eventHandlers`.
+     *      The handler will be called in the context of a `$apply` block.
+     *    - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.
+     *    - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.
+     *    - **transformRequest** –
+     *      `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
+     *      transform function or an array of such functions. The transform function takes the http
+     *      request body and headers and returns its transformed (typically serialized) version.
+     *      See {@link ng.$http#overriding-the-default-transformations-per-request
+     *      Overriding the Default Transformations}
+     *    - **transformResponse** –
+     *      `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –
+     *      transform function or an array of such functions. The transform function takes the http
+     *      response body, headers and status and returns its transformed (typically deserialized) version.
+     *      See {@link ng.$http#overriding-the-default-transformations-per-request
+     *      Overriding the Default Transformations}
+     *    - **paramSerializer** - `{string|function(Object<string,string>):string}` - A function used to
+     *      prepare the string representation of request parameters (specified as an object).
+     *      If specified as string, it is interpreted as function registered with the
+     *      {@link $injector $injector}, which means you can create your own serializer
+     *      by registering it as a {@link auto.$provide#service service}.
+     *      The default serializer is the {@link $httpParamSerializer $httpParamSerializer};
+     *      alternatively, you can use the {@link $httpParamSerializerJQLike $httpParamSerializerJQLike}
+     *    - **cache** – `{boolean|Object}` – A boolean value or object created with
+     *      {@link ng.$cacheFactory `$cacheFactory`} to enable or disable caching of the HTTP response.
+     *      See {@link $http#caching $http Caching} for more information.
+     *    - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}
+     *      that should abort the request when resolved.
+     *
+     *      A numerical timeout or a promise returned from {@link ng.$timeout $timeout}, will set
+     *      the `xhrStatus` in the {@link $http#$http-returns response} to "timeout", and any other
+     *      resolved promise will set it to "abort", following standard XMLHttpRequest behavior.
+     *
+     *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the
+     *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)
+     *      for more information.
+     *    - **responseType** - `{string}` - see
+     *      [XMLHttpRequest.responseType](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype).
+     *
+     * @returns {HttpPromise} A {@link ng.$q `Promise}` that will be resolved (request success)
+     *   or rejected (request failure) with a response object.
+     *
+     *   The response object has these properties:
+     *
+     *   - **data** – `{string|Object}` – The response body transformed with
+     *     the transform functions.
+     *   - **status** – `{number}` – HTTP status code of the response.
+     *   - **headers** – `{function([headerName])}` – Header getter function.
+     *   - **config** – `{Object}` – The configuration object that was used
+     *     to generate the request.
+     *   - **statusText** – `{string}` – HTTP status text of the response.
+     *   - **xhrStatus** – `{string}` – Status of the XMLHttpRequest
+     *     (`complete`, `error`, `timeout` or `abort`).
+     *
+     *
+     *   A response status code between 200 and 299 is considered a success status
+     *   and will result in the success callback being called. Any response status
+     *   code outside of that range is considered an error status and will result
+     *   in the error callback being called.
+     *   Also, status codes less than -1 are normalized to zero. -1 usually means
+     *   the request was aborted, e.g. using a `config.timeout`. More information
+     *   about the status might be available in the `xhrStatus` property.
+     *
+     *   Note that if the response is a redirect, XMLHttpRequest will transparently
+     *   follow it, meaning that the outcome (success or error) will be determined
+     *   by the final response status code.
+     *
+     *
+     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending
+     *   requests. This is primarily meant to be used for debugging purposes.
+     *
+     *
+     * @example
+<example module="httpExample" name="http-service">
+<file name="index.html">
+  <div ng-controller="FetchController">
+    <select ng-model="method" aria-label="Request method">
+      <option>GET</option>
+      <option>JSONP</option>
+    </select>
+    <input type="text" ng-model="url" size="80" aria-label="URL" />
+    <button id="fetchbtn" ng-click="fetch()">fetch</button><br>
+    <button id="samplegetbtn" ng-click="updateModel('GET', 'http-hello.html')">Sample GET</button>
+    <button id="samplejsonpbtn"
+      ng-click="updateModel('JSONP',
+                    'https://angularjs.org/greet.php?name=Super%20Hero')">
+      Sample JSONP
+    </button>
+    <button id="invalidjsonpbtn"
+      ng-click="updateModel('JSONP', 'https://angularjs.org/doesntexist')">
+        Invalid JSONP
+      </button>
+    <pre>http status code: {{status}}</pre>
+    <pre>http response data: {{data}}</pre>
+  </div>
+</file>
+<file name="script.js">
+  angular.module('httpExample', [])
+    .config(['$sceDelegateProvider', function($sceDelegateProvider) {
+      // We must add the JSONP endpoint that we are using to the trusted list to show that we trust it
+      $sceDelegateProvider.trustedResourceUrlList([
+        'self',
+        'https://angularjs.org/**'
+      ]);
+    }])
+    .controller('FetchController', ['$scope', '$http', '$templateCache',
+      function($scope, $http, $templateCache) {
+        $scope.method = 'GET';
+        $scope.url = 'http-hello.html';
+
+        $scope.fetch = function() {
+          $scope.code = null;
+          $scope.response = null;
+
+          $http({method: $scope.method, url: $scope.url, cache: $templateCache}).
+            then(function(response) {
+              $scope.status = response.status;
+              $scope.data = response.data;
+            }, function(response) {
+              $scope.data = response.data || 'Request failed';
+              $scope.status = response.status;
+          });
+        };
+
+        $scope.updateModel = function(method, url) {
+          $scope.method = method;
+          $scope.url = url;
+        };
+      }]);
+</file>
+<file name="http-hello.html">
+  Hello, $http!
+</file>
+<file name="protractor.js" type="protractor">
+  var status = element(by.binding('status'));
+  var data = element(by.binding('data'));
+  var fetchBtn = element(by.id('fetchbtn'));
+  var sampleGetBtn = element(by.id('samplegetbtn'));
+  var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));
+
+  it('should make an xhr GET request', function() {
+    sampleGetBtn.click();
+    fetchBtn.click();
+    expect(status.getText()).toMatch('200');
+    expect(data.getText()).toMatch(/Hello, \$http!/);
+  });
+
+// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185
+// it('should make a JSONP request to angularjs.org', function() {
+//   var sampleJsonpBtn = element(by.id('samplejsonpbtn'));
+//   sampleJsonpBtn.click();
+//   fetchBtn.click();
+//   expect(status.getText()).toMatch('200');
+//   expect(data.getText()).toMatch(/Super Hero!/);
+// });
+
+  it('should make JSONP request to invalid URL and invoke the error handler',
+      function() {
+    invalidJsonpBtn.click();
+    fetchBtn.click();
+    expect(status.getText()).toMatch('0');
+    expect(data.getText()).toMatch('Request failed');
+  });
+</file>
+</example>
+     */
+    function $http(requestConfig) {
+
+      if (!isObject(requestConfig)) {
+        throw minErr('$http')('badreq', 'Http request configuration must be an object.  Received: {0}', requestConfig);
+      }
+
+      if (!isString($sce.valueOf(requestConfig.url))) {
+        throw minErr('$http')('badreq', 'Http request configuration url must be a string or a $sce trusted object.  Received: {0}', requestConfig.url);
+      }
+
+      var config = extend({
+        method: 'get',
+        transformRequest: defaults.transformRequest,
+        transformResponse: defaults.transformResponse,
+        paramSerializer: defaults.paramSerializer,
+        jsonpCallbackParam: defaults.jsonpCallbackParam
+      }, requestConfig);
+
+      config.headers = mergeHeaders(requestConfig);
+      config.method = uppercase(config.method);
+      config.paramSerializer = isString(config.paramSerializer) ?
+          $injector.get(config.paramSerializer) : config.paramSerializer;
+
+      $browser.$$incOutstandingRequestCount('$http');
+
+      var requestInterceptors = [];
+      var responseInterceptors = [];
+      var promise = $q.resolve(config);
+
+      // apply interceptors
+      forEach(reversedInterceptors, function(interceptor) {
+        if (interceptor.request || interceptor.requestError) {
+          requestInterceptors.unshift(interceptor.request, interceptor.requestError);
+        }
+        if (interceptor.response || interceptor.responseError) {
+          responseInterceptors.push(interceptor.response, interceptor.responseError);
+        }
+      });
+
+      promise = chainInterceptors(promise, requestInterceptors);
+      promise = promise.then(serverRequest);
+      promise = chainInterceptors(promise, responseInterceptors);
+      promise = promise.finally(completeOutstandingRequest);
+
+      return promise;
+
+
+      function chainInterceptors(promise, interceptors) {
+        for (var i = 0, ii = interceptors.length; i < ii;) {
+          var thenFn = interceptors[i++];
+          var rejectFn = interceptors[i++];
+
+          promise = promise.then(thenFn, rejectFn);
+        }
+
+        interceptors.length = 0;
+
+        return promise;
+      }
+
+      function completeOutstandingRequest() {
+        $browser.$$completeOutstandingRequest(noop, '$http');
+      }
+
+      function executeHeaderFns(headers, config) {
+        var headerContent, processedHeaders = {};
+
+        forEach(headers, function(headerFn, header) {
+          if (isFunction(headerFn)) {
+            headerContent = headerFn(config);
+            if (headerContent != null) {
+              processedHeaders[header] = headerContent;
+            }
+          } else {
+            processedHeaders[header] = headerFn;
+          }
+        });
+
+        return processedHeaders;
+      }
+
+      function mergeHeaders(config) {
+        var defHeaders = defaults.headers,
+            reqHeaders = extend({}, config.headers),
+            defHeaderName, lowercaseDefHeaderName, reqHeaderName;
+
+        defHeaders = extend({}, defHeaders.common, defHeaders[lowercase(config.method)]);
+
+        // using for-in instead of forEach to avoid unnecessary iteration after header has been found
+        defaultHeadersIteration:
+        for (defHeaderName in defHeaders) {
+          lowercaseDefHeaderName = lowercase(defHeaderName);
+
+          for (reqHeaderName in reqHeaders) {
+            if (lowercase(reqHeaderName) === lowercaseDefHeaderName) {
+              continue defaultHeadersIteration;
+            }
+          }
+
+          reqHeaders[defHeaderName] = defHeaders[defHeaderName];
+        }
+
+        // execute if header value is a function for merged headers
+        return executeHeaderFns(reqHeaders, shallowCopy(config));
+      }
+
+      function serverRequest(config) {
+        var headers = config.headers;
+        var reqData = transformData(config.data, headersGetter(headers), undefined, config.transformRequest);
+
+        // strip content-type if data is undefined
+        if (isUndefined(reqData)) {
+          forEach(headers, function(value, header) {
+            if (lowercase(header) === 'content-type') {
+              delete headers[header];
+            }
+          });
+        }
+
+        if (isUndefined(config.withCredentials) && !isUndefined(defaults.withCredentials)) {
+          config.withCredentials = defaults.withCredentials;
+        }
+
+        // send request
+        return sendReq(config, reqData).then(transformResponse, transformResponse);
+      }
+
+      function transformResponse(response) {
+        // make a copy since the response must be cacheable
+        var resp = extend({}, response);
+        resp.data = transformData(response.data, response.headers, response.status,
+                                  config.transformResponse);
+        return (isSuccess(response.status))
+          ? resp
+          : $q.reject(resp);
+      }
+    }
+
+    $http.pendingRequests = [];
+
+    /**
+     * @ngdoc method
+     * @name $http#get
+     *
+     * @description
+     * Shortcut method to perform `GET` request.
+     *
+     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
+     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $http#delete
+     *
+     * @description
+     * Shortcut method to perform `DELETE` request.
+     *
+     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
+     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $http#head
+     *
+     * @description
+     * Shortcut method to perform `HEAD` request.
+     *
+     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
+     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $http#jsonp
+     *
+     * @description
+     * Shortcut method to perform `JSONP` request.
+     *
+     * Note that, since JSONP requests are sensitive because the response is given full access to the browser,
+     * the url must be declared, via {@link $sce} as a trusted resource URL.
+     * You can trust a URL by adding it to the trusted resource URL list via
+     * {@link $sceDelegateProvider#trustedResourceUrlList  `$sceDelegateProvider.trustedResourceUrlList`} or
+     * by explicitly trusting the URL via {@link $sce#trustAsResourceUrl `$sce.trustAsResourceUrl(url)`}.
+     *
+     * You should avoid generating the URL for the JSONP request from user provided data.
+     * Provide additional query parameters via `params` property of the `config` parameter, rather than
+     * modifying the URL itself.
+     *
+     * JSONP requests must specify a callback to be used in the response from the server. This callback
+     * is passed as a query parameter in the request. You must specify the name of this parameter by
+     * setting the `jsonpCallbackParam` property on the request config object.
+     *
+     * ```
+     * $http.jsonp('some/trusted/url', {jsonpCallbackParam: 'callback'})
+     * ```
+     *
+     * You can also specify a default callback parameter name in `$http.defaults.jsonpCallbackParam`.
+     * Initially this is set to `'callback'`.
+     *
+     * <div class="alert alert-danger">
+     * You can no longer use the `JSON_CALLBACK` string as a placeholder for specifying where the callback
+     * parameter value should go.
+     * </div>
+     *
+     * If you would like to customise where and how the callbacks are stored then try overriding
+     * or decorating the {@link $jsonpCallbacks} service.
+     *
+     * @param {string|TrustedObject} url Absolute or relative URL of the resource that is being requested;
+     *                                   or an object created by a call to `$sce.trustAsResourceUrl(url)`.
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+    createShortMethods('get', 'delete', 'head', 'jsonp');
+
+    /**
+     * @ngdoc method
+     * @name $http#post
+     *
+     * @description
+     * Shortcut method to perform `POST` request.
+     *
+     * @param {string} url Relative or absolute URL specifying the destination of the request
+     * @param {*} data Request content
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $http#put
+     *
+     * @description
+     * Shortcut method to perform `PUT` request.
+     *
+     * @param {string} url Relative or absolute URL specifying the destination of the request
+     * @param {*} data Request content
+     * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+     * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+     * See {@link ng.$http#$http-returns `$http()` return value}.
+     */
+
+     /**
+      * @ngdoc method
+      * @name $http#patch
+      *
+      * @description
+      * Shortcut method to perform `PATCH` request.
+      *
+      * @param {string} url Relative or absolute URL specifying the destination of the request
+      * @param {*} data Request content
+      * @param {Object=} config Optional configuration object. See {@link ng.$http#$http-arguments `$http()` arguments}.
+      * @returns {HttpPromise}  A Promise that will be resolved or rejected with a response object.
+      * See {@link ng.$http#$http-returns `$http()` return value}.
+      */
+    createShortMethodsWithData('post', 'put', 'patch');
+
+        /**
+         * @ngdoc property
+         * @name $http#defaults
+         *
+         * @description
+         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of
+         * default headers, withCredentials as well as request and response transformations.
+         *
+         * See "Setting HTTP Headers" and "Transforming Requests and Responses" sections above.
+         */
+    $http.defaults = defaults;
+
+
+    return $http;
+
+
+    function createShortMethods(names) {
+      forEach(arguments, function(name) {
+        $http[name] = function(url, config) {
+          return $http(extend({}, config || {}, {
+            method: name,
+            url: url
+          }));
+        };
+      });
+    }
+
+
+    function createShortMethodsWithData(name) {
+      forEach(arguments, function(name) {
+        $http[name] = function(url, data, config) {
+          return $http(extend({}, config || {}, {
+            method: name,
+            url: url,
+            data: data
+          }));
+        };
+      });
+    }
+
+
+    /**
+     * Makes the request.
+     *
+     * !!! ACCESSES CLOSURE VARS:
+     * $httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests
+     */
+    function sendReq(config, reqData) {
+      var deferred = $q.defer(),
+          promise = deferred.promise,
+          cache,
+          cachedResp,
+          reqHeaders = config.headers,
+          isJsonp = lowercase(config.method) === 'jsonp',
+          url = config.url;
+
+      if (isJsonp) {
+        // JSONP is a pretty sensitive operation where we're allowing a script to have full access to
+        // our DOM and JS space.  So we require that the URL satisfies SCE.RESOURCE_URL.
+        url = $sce.getTrustedResourceUrl(url);
+      } else if (!isString(url)) {
+        // If it is not a string then the URL must be a $sce trusted object
+        url = $sce.valueOf(url);
+      }
+
+      url = buildUrl(url, config.paramSerializer(config.params));
+
+      if (isJsonp) {
+        // Check the url and add the JSONP callback placeholder
+        url = sanitizeJsonpCallbackParam(url, config.jsonpCallbackParam);
+      }
+
+      $http.pendingRequests.push(config);
+      promise.then(removePendingReq, removePendingReq);
+
+      if ((config.cache || defaults.cache) && config.cache !== false &&
+          (config.method === 'GET' || config.method === 'JSONP')) {
+        cache = isObject(config.cache) ? config.cache
+            : isObject(/** @type {?} */ (defaults).cache)
+              ? /** @type {?} */ (defaults).cache
+              : defaultCache;
+      }
+
+      if (cache) {
+        cachedResp = cache.get(url);
+        if (isDefined(cachedResp)) {
+          if (isPromiseLike(cachedResp)) {
+            // cached request has already been sent, but there is no response yet
+            cachedResp.then(resolvePromiseWithResult, resolvePromiseWithResult);
+          } else {
+            // serving from cache
+            if (isArray(cachedResp)) {
+              resolvePromise(cachedResp[1], cachedResp[0], shallowCopy(cachedResp[2]), cachedResp[3], cachedResp[4]);
+            } else {
+              resolvePromise(cachedResp, 200, {}, 'OK', 'complete');
+            }
+          }
+        } else {
+          // put the promise for the non-transformed response into cache as a placeholder
+          cache.put(url, promise);
+        }
+      }
+
+
+      // if we won't have the response in cache, set the xsrf headers and
+      // send the request to the backend
+      if (isUndefined(cachedResp)) {
+        var xsrfValue = urlIsAllowedOrigin(config.url)
+            ? $$cookieReader()[config.xsrfCookieName || defaults.xsrfCookieName]
+            : undefined;
+        if (xsrfValue) {
+          reqHeaders[(config.xsrfHeaderName || defaults.xsrfHeaderName)] = xsrfValue;
+        }
+
+        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,
+            config.withCredentials, config.responseType,
+            createApplyHandlers(config.eventHandlers),
+            createApplyHandlers(config.uploadEventHandlers));
+      }
+
+      return promise;
+
+      function createApplyHandlers(eventHandlers) {
+        if (eventHandlers) {
+          var applyHandlers = {};
+          forEach(eventHandlers, function(eventHandler, key) {
+            applyHandlers[key] = function(event) {
+              if (useApplyAsync) {
+                $rootScope.$applyAsync(callEventHandler);
+              } else if ($rootScope.$$phase) {
+                callEventHandler();
+              } else {
+                $rootScope.$apply(callEventHandler);
+              }
+
+              function callEventHandler() {
+                eventHandler(event);
+              }
+            };
+          });
+          return applyHandlers;
+        }
+      }
+
+
+      /**
+       * Callback registered to $httpBackend():
+       *  - caches the response if desired
+       *  - resolves the raw $http promise
+       *  - calls $apply
+       */
+      function done(status, response, headersString, statusText, xhrStatus) {
+        if (cache) {
+          if (isSuccess(status)) {
+            cache.put(url, [status, response, parseHeaders(headersString), statusText, xhrStatus]);
+          } else {
+            // remove promise from the cache
+            cache.remove(url);
+          }
+        }
+
+        function resolveHttpPromise() {
+          resolvePromise(response, status, headersString, statusText, xhrStatus);
+        }
+
+        if (useApplyAsync) {
+          $rootScope.$applyAsync(resolveHttpPromise);
+        } else {
+          resolveHttpPromise();
+          if (!$rootScope.$$phase) $rootScope.$apply();
+        }
+      }
+
+
+      /**
+       * Resolves the raw $http promise.
+       */
+      function resolvePromise(response, status, headers, statusText, xhrStatus) {
+        //status: HTTP response status code, 0, -1 (aborted by timeout / promise)
+        status = status >= -1 ? status : 0;
+
+        (isSuccess(status) ? deferred.resolve : deferred.reject)({
+          data: response,
+          status: status,
+          headers: headersGetter(headers),
+          config: config,
+          statusText: statusText,
+          xhrStatus: xhrStatus
+        });
+      }
+
+      function resolvePromiseWithResult(result) {
+        resolvePromise(result.data, result.status, shallowCopy(result.headers()), result.statusText, result.xhrStatus);
+      }
+
+      function removePendingReq() {
+        var idx = $http.pendingRequests.indexOf(config);
+        if (idx !== -1) $http.pendingRequests.splice(idx, 1);
+      }
+    }
+
+
+    function buildUrl(url, serializedParams) {
+      if (serializedParams.length > 0) {
+        url += ((url.indexOf('?') === -1) ? '?' : '&') + serializedParams;
+      }
+      return url;
+    }
+
+    function sanitizeJsonpCallbackParam(url, cbKey) {
+      var parts = url.split('?');
+      if (parts.length > 2) {
+        // Throw if the url contains more than one `?` query indicator
+        throw $httpMinErr('badjsonp', 'Illegal use more than one "?", in url, "{1}"', url);
+      }
+      var params = parseKeyValue(parts[1]);
+      forEach(params, function(value, key) {
+        if (value === 'JSON_CALLBACK') {
+          // Throw if the url already contains a reference to JSON_CALLBACK
+          throw $httpMinErr('badjsonp', 'Illegal use of JSON_CALLBACK in url, "{0}"', url);
+        }
+        if (key === cbKey) {
+          // Throw if the callback param was already provided
+          throw $httpMinErr('badjsonp', 'Illegal use of callback param, "{0}", in url, "{1}"', cbKey, url);
+        }
+      });
+
+      // Add in the JSON_CALLBACK callback param value
+      url += ((url.indexOf('?') === -1) ? '?' : '&') + cbKey + '=JSON_CALLBACK';
+
+      return url;
+    }
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $xhrFactory
+ * @this
+ *
+ * @description
+ * Factory function used to create XMLHttpRequest objects.
+ *
+ * Replace or decorate this service to create your own custom XMLHttpRequest objects.
+ *
+ * ```
+ * angular.module('myApp', [])
+ * .factory('$xhrFactory', function() {
+ *   return function createXhr(method, url) {
+ *     return new window.XMLHttpRequest({mozSystem: true});
+ *   };
+ * });
+ * ```
+ *
+ * @param {string} method HTTP method of the request (GET, POST, PUT, ..)
+ * @param {string} url URL of the request.
+ */
+function $xhrFactoryProvider() {
+  this.$get = function() {
+    return function createXhr() {
+      return new window.XMLHttpRequest();
+    };
+  };
+}
+
+/**
+ * @ngdoc service
+ * @name $httpBackend
+ * @requires $jsonpCallbacks
+ * @requires $document
+ * @requires $xhrFactory
+ * @this
+ *
+ * @description
+ * HTTP backend used by the {@link ng.$http service} that delegates to
+ * XMLHttpRequest object or JSONP and deals with browser incompatibilities.
+ *
+ * You should never need to use this service directly, instead use the higher-level abstractions:
+ * {@link ng.$http $http} or {@link ngResource.$resource $resource}.
+ *
+ * During testing this implementation is swapped with {@link ngMock.$httpBackend mock
+ * $httpBackend} which can be trained with responses.
+ */
+function $HttpBackendProvider() {
+  this.$get = ['$browser', '$jsonpCallbacks', '$document', '$xhrFactory', function($browser, $jsonpCallbacks, $document, $xhrFactory) {
+    return createHttpBackend($browser, $xhrFactory, $browser.defer, $jsonpCallbacks, $document[0]);
+  }];
+}
+
+function createHttpBackend($browser, createXhr, $browserDefer, callbacks, rawDocument) {
+  // TODO(vojta): fix the signature
+  return function(method, url, post, callback, headers, timeout, withCredentials, responseType, eventHandlers, uploadEventHandlers) {
+    url = url || $browser.url();
+
+    if (lowercase(method) === 'jsonp') {
+      var callbackPath = callbacks.createCallback(url);
+      var jsonpDone = jsonpReq(url, callbackPath, function(status, text) {
+        // jsonpReq only ever sets status to 200 (OK), 404 (ERROR) or -1 (WAITING)
+        var response = (status === 200) && callbacks.getResponse(callbackPath);
+        completeRequest(callback, status, response, '', text, 'complete');
+        callbacks.removeCallback(callbackPath);
+      });
+    } else {
+
+      var xhr = createXhr(method, url);
+      var abortedByTimeout = false;
+
+      xhr.open(method, url, true);
+      forEach(headers, function(value, key) {
+        if (isDefined(value)) {
+            xhr.setRequestHeader(key, value);
+        }
+      });
+
+      xhr.onload = function requestLoaded() {
+        var statusText = xhr.statusText || '';
+
+        // responseText is the old-school way of retrieving response (supported by IE9)
+        // response/responseType properties were introduced in XHR Level2 spec (supported by IE10)
+        var response = ('response' in xhr) ? xhr.response : xhr.responseText;
+
+        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
+        var status = xhr.status === 1223 ? 204 : xhr.status;
+
+        // fix status code when it is 0 (0 status is undocumented).
+        // Occurs when accessing file resources or on Android 4.1 stock browser
+        // while retrieving files from application cache.
+        if (status === 0) {
+          status = response ? 200 : urlResolve(url).protocol === 'file' ? 404 : 0;
+        }
+
+        completeRequest(callback,
+            status,
+            response,
+            xhr.getAllResponseHeaders(),
+            statusText,
+            'complete');
+      };
+
+      var requestError = function() {
+        // The response is always empty
+        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error
+        completeRequest(callback, -1, null, null, '', 'error');
+      };
+
+      var requestAborted = function() {
+        completeRequest(callback, -1, null, null, '', abortedByTimeout ? 'timeout' : 'abort');
+      };
+
+      var requestTimeout = function() {
+        // The response is always empty
+        // See https://xhr.spec.whatwg.org/#request-error-steps and https://fetch.spec.whatwg.org/#concept-network-error
+        completeRequest(callback, -1, null, null, '', 'timeout');
+      };
+
+      xhr.onerror = requestError;
+      xhr.ontimeout = requestTimeout;
+      xhr.onabort = requestAborted;
+
+      forEach(eventHandlers, function(value, key) {
+        xhr.addEventListener(key, value);
+      });
+
+      forEach(uploadEventHandlers, function(value, key) {
+        xhr.upload.addEventListener(key, value);
+      });
+
+      if (withCredentials) {
+        xhr.withCredentials = true;
+      }
+
+      if (responseType) {
+        try {
+          xhr.responseType = responseType;
+        } catch (e) {
+          // WebKit added support for the json responseType value on 09/03/2013
+          // https://bugs.webkit.org/show_bug.cgi?id=73648. Versions of Safari prior to 7 are
+          // known to throw when setting the value "json" as the response type. Other older
+          // browsers implementing the responseType
+          //
+          // The json response type can be ignored if not supported, because JSON payloads are
+          // parsed on the client-side regardless.
+          if (responseType !== 'json') {
+            throw e;
+          }
+        }
+      }
+
+      xhr.send(isUndefined(post) ? null : post);
+    }
+
+    // Since we are using xhr.abort() when a request times out, we have to set a flag that
+    // indicates to requestAborted if the request timed out or was aborted.
+    //
+    // http.timeout = numerical timeout   timeout
+    // http.timeout = $timeout            timeout
+    // http.timeout = promise             abort
+    // xhr.abort()                        abort (The xhr object is normally inaccessible, but
+    //                                    can be exposed with the xhrFactory)
+    if (timeout > 0) {
+      var timeoutId = $browserDefer(function() {
+        timeoutRequest('timeout');
+      }, timeout);
+    } else if (isPromiseLike(timeout)) {
+      timeout.then(function() {
+        timeoutRequest(isDefined(timeout.$$timeoutId) ? 'timeout' : 'abort');
+      });
+    }
+
+    function timeoutRequest(reason) {
+      abortedByTimeout = reason === 'timeout';
+      if (jsonpDone) {
+        jsonpDone();
+      }
+      if (xhr) {
+        xhr.abort();
+      }
+    }
+
+    function completeRequest(callback, status, response, headersString, statusText, xhrStatus) {
+      // cancel timeout and subsequent timeout promise resolution
+      if (isDefined(timeoutId)) {
+        $browserDefer.cancel(timeoutId);
+      }
+      jsonpDone = xhr = null;
+
+      callback(status, response, headersString, statusText, xhrStatus);
+    }
+  };
+
+  function jsonpReq(url, callbackPath, done) {
+    url = url.replace('JSON_CALLBACK', callbackPath);
+    // we can't use jQuery/jqLite here because jQuery does crazy stuff with script elements, e.g.:
+    // - fetches local scripts via XHR and evals them
+    // - adds and immediately removes script elements from the document
+    var script = rawDocument.createElement('script'), callback = null;
+    script.type = 'text/javascript';
+    script.src = url;
+    script.async = true;
+
+    callback = function(event) {
+      script.removeEventListener('load', callback);
+      script.removeEventListener('error', callback);
+      rawDocument.body.removeChild(script);
+      script = null;
+      var status = -1;
+      var text = 'unknown';
+
+      if (event) {
+        if (event.type === 'load' && !callbacks.wasCalled(callbackPath)) {
+          event = { type: 'error' };
+        }
+        text = event.type;
+        status = event.type === 'error' ? 404 : 200;
+      }
+
+      if (done) {
+        done(status, text);
+      }
+    };
+
+    script.addEventListener('load', callback);
+    script.addEventListener('error', callback);
+    rawDocument.body.appendChild(script);
+    return callback;
+  }
+}
+
+var $interpolateMinErr = angular.$interpolateMinErr = minErr('$interpolate');
+$interpolateMinErr.throwNoconcat = function(text) {
+  throw $interpolateMinErr('noconcat',
+      'Error while interpolating: {0}\nStrict Contextual Escaping disallows ' +
+      'interpolations that concatenate multiple expressions when a trusted value is ' +
+      'required.  See http://docs.angularjs.org/api/ng.$sce', text);
+};
+
+$interpolateMinErr.interr = function(text, err) {
+  return $interpolateMinErr('interr', 'Can\'t interpolate: {0}\n{1}', text, err.toString());
+};
+
+/**
+ * @ngdoc provider
+ * @name $interpolateProvider
+ * @this
+ *
+ * @description
+ *
+ * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.
+ *
+ * <div class="alert alert-danger">
+ * This feature is sometimes used to mix different markup languages, e.g. to wrap an AngularJS
+ * template within a Python Jinja template (or any other template language). Mixing templating
+ * languages is **very dangerous**. The embedding template language will not safely escape AngularJS
+ * expressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)
+ * security bugs!
+ * </div>
+ *
+ * @example
+<example name="custom-interpolation-markup" module="customInterpolationApp">
+<file name="index.html">
+<script>
+  var customInterpolationApp = angular.module('customInterpolationApp', []);
+
+  customInterpolationApp.config(function($interpolateProvider) {
+    $interpolateProvider.startSymbol('//');
+    $interpolateProvider.endSymbol('//');
+  });
+
+
+  customInterpolationApp.controller('DemoController', function() {
+      this.label = "This binding is brought you by // interpolation symbols.";
+  });
+</script>
+<div ng-controller="DemoController as demo">
+    //demo.label//
+</div>
+</file>
+<file name="protractor.js" type="protractor">
+  it('should interpolate binding with custom symbols', function() {
+    expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');
+  });
+</file>
+</example>
+ */
+function $InterpolateProvider() {
+  var startSymbol = '{{';
+  var endSymbol = '}}';
+
+  /**
+   * @ngdoc method
+   * @name $interpolateProvider#startSymbol
+   * @description
+   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.
+   *
+   * @param {string=} value new value to set the starting symbol to.
+   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
+   */
+  this.startSymbol = function(value) {
+    if (value) {
+      startSymbol = value;
+      return this;
+    }
+    return startSymbol;
+  };
+
+  /**
+   * @ngdoc method
+   * @name $interpolateProvider#endSymbol
+   * @description
+   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
+   *
+   * @param {string=} value new value to set the ending symbol to.
+   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.
+   */
+  this.endSymbol = function(value) {
+    if (value) {
+      endSymbol = value;
+      return this;
+    }
+    return endSymbol;
+  };
+
+
+  this.$get = ['$parse', '$exceptionHandler', '$sce', function($parse, $exceptionHandler, $sce) {
+    var startSymbolLength = startSymbol.length,
+        endSymbolLength = endSymbol.length,
+        escapedStartRegexp = new RegExp(startSymbol.replace(/./g, escape), 'g'),
+        escapedEndRegexp = new RegExp(endSymbol.replace(/./g, escape), 'g');
+
+    function escape(ch) {
+      return '\\\\\\' + ch;
+    }
+
+    function unescapeText(text) {
+      return text.replace(escapedStartRegexp, startSymbol).
+        replace(escapedEndRegexp, endSymbol);
+    }
+
+    // TODO: this is the same as the constantWatchDelegate in parse.js
+    function constantWatchDelegate(scope, listener, objectEquality, constantInterp) {
+      var unwatch = scope.$watch(function constantInterpolateWatch(scope) {
+        unwatch();
+        return constantInterp(scope);
+      }, listener, objectEquality);
+      return unwatch;
+    }
+
+    /**
+     * @ngdoc service
+     * @name $interpolate
+     * @kind function
+     *
+     * @requires $parse
+     * @requires $sce
+     *
+     * @description
+     *
+     * Compiles a string with markup into an interpolation function. This service is used by the
+     * HTML {@link ng.$compile $compile} service for data binding. See
+     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the
+     * interpolation markup.
+     *
+     *
+     * ```js
+     *   var $interpolate = ...; // injected
+     *   var exp = $interpolate('Hello {{name | uppercase}}!');
+     *   expect(exp({name:'AngularJS'})).toEqual('Hello ANGULARJS!');
+     * ```
+     *
+     * `$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is
+     * `true`, the interpolation function will return `undefined` unless all embedded expressions
+     * evaluate to a value other than `undefined`.
+     *
+     * ```js
+     *   var $interpolate = ...; // injected
+     *   var context = {greeting: 'Hello', name: undefined };
+     *
+     *   // default "forgiving" mode
+     *   var exp = $interpolate('{{greeting}} {{name}}!');
+     *   expect(exp(context)).toEqual('Hello !');
+     *
+     *   // "allOrNothing" mode
+     *   exp = $interpolate('{{greeting}} {{name}}!', false, null, true);
+     *   expect(exp(context)).toBeUndefined();
+     *   context.name = 'AngularJS';
+     *   expect(exp(context)).toEqual('Hello AngularJS!');
+     * ```
+     *
+     * `allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.
+     *
+     * #### Escaped Interpolation
+     * $interpolate provides a mechanism for escaping interpolation markers. Start and end markers
+     * can be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).
+     * It will be rendered as a regular start/end marker, and will not be interpreted as an expression
+     * or binding.
+     *
+     * This enables web-servers to prevent script injection attacks and defacing attacks, to some
+     * degree, while also enabling code examples to work without relying on the
+     * {@link ng.directive:ngNonBindable ngNonBindable} directive.
+     *
+     * **For security purposes, it is strongly encouraged that web servers escape user-supplied data,
+     * replacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all
+     * interpolation start/end markers with their escaped counterparts.**
+     *
+     * Escaped interpolation markers are only replaced with the actual interpolation markers in rendered
+     * output when the $interpolate service processes the text. So, for HTML elements interpolated
+     * by {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter
+     * set to `true`, the interpolated text must contain an unescaped interpolation expression. As such,
+     * this is typically useful only when user-data is used in rendering a template from the server, or
+     * when otherwise untrusted data is used by a directive.
+     *
+     * <example name="interpolation">
+     *  <file name="index.html">
+     *    <div ng-init="username='A user'">
+     *      <p ng-init="apptitle='Escaping demo'">{{apptitle}}: \{\{ username = "defaced value"; \}\}
+     *        </p>
+     *      <p><strong>{{username}}</strong> attempts to inject code which will deface the
+     *        application, but fails to accomplish their task, because the server has correctly
+     *        escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)
+     *        characters.</p>
+     *      <p>Instead, the result of the attempted script injection is visible, and can be removed
+     *        from the database by an administrator.</p>
+     *    </div>
+     *  </file>
+     * </example>
+     *
+     * @knownIssue
+     * It is currently not possible for an interpolated expression to contain the interpolation end
+     * symbol. For example, `{{ '}}' }}` will be incorrectly interpreted as `{{ ' }}` + `' }}`, i.e.
+     * an interpolated expression consisting of a single-quote (`'`) and the `' }}` string.
+     *
+     * @knownIssue
+     * All directives and components must use the standard `{{` `}}` interpolation symbols
+     * in their templates. If you change the application interpolation symbols the {@link $compile}
+     * service will attempt to denormalize the standard symbols to the custom symbols.
+     * The denormalization process is not clever enough to know not to replace instances of the standard
+     * symbols where they would not normally be treated as interpolation symbols. For example in the following
+     * code snippet the closing braces of the literal object will get incorrectly denormalized:
+     *
+     * ```
+     * <div data-context='{"context":{"id":3,"type":"page"}}">
+     * ```
+     *
+     * The workaround is to ensure that such instances are separated by whitespace:
+     * ```
+     * <div data-context='{"context":{"id":3,"type":"page"} }">
+     * ```
+     *
+     * See https://github.com/angular/angular.js/pull/14610#issuecomment-219401099 for more information.
+     *
+     * @param {string} text The text with markup to interpolate.
+     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have
+     *    embedded expression in order to return an interpolation function. Strings with no
+     *    embedded expression will return null for the interpolation function.
+     * @param {string=} trustedContext when provided, the returned function passes the interpolated
+     *    result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,
+     *    trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that
+     *    provides Strict Contextual Escaping for details.
+     * @param {boolean=} allOrNothing if `true`, then the returned function returns undefined
+     *    unless all embedded expressions evaluate to a value other than `undefined`.
+     * @returns {function(context)} an interpolation function which is used to compute the
+     *    interpolated string. The function has these parameters:
+     *
+     * - `context`: evaluation context for all expressions embedded in the interpolated text
+     */
+    function $interpolate(text, mustHaveExpression, trustedContext, allOrNothing) {
+      var contextAllowsConcatenation = trustedContext === $sce.URL || trustedContext === $sce.MEDIA_URL;
+
+      // Provide a quick exit and simplified result function for text with no interpolation
+      if (!text.length || text.indexOf(startSymbol) === -1) {
+        if (mustHaveExpression) return;
+
+        var unescapedText = unescapeText(text);
+        if (contextAllowsConcatenation) {
+          unescapedText = $sce.getTrusted(trustedContext, unescapedText);
+        }
+        var constantInterp = valueFn(unescapedText);
+        constantInterp.exp = text;
+        constantInterp.expressions = [];
+        constantInterp.$$watchDelegate = constantWatchDelegate;
+
+        return constantInterp;
+      }
+
+      allOrNothing = !!allOrNothing;
+      var startIndex,
+          endIndex,
+          index = 0,
+          expressions = [],
+          parseFns,
+          textLength = text.length,
+          exp,
+          concat = [],
+          expressionPositions = [],
+          singleExpression;
+
+
+      while (index < textLength) {
+        if (((startIndex = text.indexOf(startSymbol, index)) !== -1) &&
+             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) !== -1)) {
+          if (index !== startIndex) {
+            concat.push(unescapeText(text.substring(index, startIndex)));
+          }
+          exp = text.substring(startIndex + startSymbolLength, endIndex);
+          expressions.push(exp);
+          index = endIndex + endSymbolLength;
+          expressionPositions.push(concat.length);
+          concat.push(''); // Placeholder that will get replaced with the evaluated expression.
+        } else {
+          // we did not find an interpolation, so we have to add the remainder to the separators array
+          if (index !== textLength) {
+            concat.push(unescapeText(text.substring(index)));
+          }
+          break;
+        }
+      }
+
+      singleExpression = concat.length === 1 && expressionPositions.length === 1;
+      // Intercept expression if we need to stringify concatenated inputs, which may be SCE trusted
+      // objects rather than simple strings
+      // (we don't modify the expression if the input consists of only a single trusted input)
+      var interceptor = contextAllowsConcatenation && singleExpression ? undefined : parseStringifyInterceptor;
+      parseFns = expressions.map(function(exp) { return $parse(exp, interceptor); });
+
+      // Concatenating expressions makes it hard to reason about whether some combination of
+      // concatenated values are unsafe to use and could easily lead to XSS.  By requiring that a
+      // single expression be used for some $sce-managed secure contexts (RESOURCE_URLs mostly),
+      // we ensure that the value that's used is assigned or constructed by some JS code somewhere
+      // that is more testable or make it obvious that you bound the value to some user controlled
+      // value.  This helps reduce the load when auditing for XSS issues.
+
+      // Note that URL and MEDIA_URL $sce contexts do not need this, since `$sce` can sanitize the values
+      // passed to it. In that case, `$sce.getTrusted` will be called on either the single expression
+      // or on the overall concatenated string (losing trusted types used in the mix, by design).
+      // Both these methods will sanitize plain strings. Also, HTML could be included, but since it's
+      // only used in srcdoc attributes, this would not be very useful.
+
+      if (!mustHaveExpression || expressions.length) {
+        var compute = function(values) {
+          for (var i = 0, ii = expressions.length; i < ii; i++) {
+            if (allOrNothing && isUndefined(values[i])) return;
+            concat[expressionPositions[i]] = values[i];
+          }
+
+          if (contextAllowsConcatenation) {
+            // If `singleExpression` then `concat[0]` might be a "trusted" value or `null`, rather than a string
+            return $sce.getTrusted(trustedContext, singleExpression ? concat[0] : concat.join(''));
+          } else if (trustedContext && concat.length > 1) {
+            // This context does not allow more than one part, e.g. expr + string or exp + exp.
+            $interpolateMinErr.throwNoconcat(text);
+          }
+          // In an unprivileged context or only one part: just concatenate and return.
+          return concat.join('');
+        };
+
+        return extend(function interpolationFn(context) {
+            var i = 0;
+            var ii = expressions.length;
+            var values = new Array(ii);
+
+            try {
+              for (; i < ii; i++) {
+                values[i] = parseFns[i](context);
+              }
+
+              return compute(values);
+            } catch (err) {
+              $exceptionHandler($interpolateMinErr.interr(text, err));
+            }
+
+          }, {
+          // all of these properties are undocumented for now
+          exp: text, //just for compatibility with regular watchers created via $watch
+          expressions: expressions,
+          $$watchDelegate: function(scope, listener) {
+            var lastValue;
+            return scope.$watchGroup(parseFns, /** @this */ function interpolateFnWatcher(values, oldValues) {
+              var currValue = compute(values);
+              listener.call(this, currValue, values !== oldValues ? lastValue : currValue, scope);
+              lastValue = currValue;
+            });
+          }
+        });
+      }
+
+      function parseStringifyInterceptor(value) {
+        try {
+          // In concatenable contexts, getTrusted comes at the end, to avoid sanitizing individual
+          // parts of a full URL. We don't care about losing the trustedness here.
+          // In non-concatenable contexts, where there is only one expression, this interceptor is
+          // not applied to the expression.
+          value = (trustedContext && !contextAllowsConcatenation) ?
+                    $sce.getTrusted(trustedContext, value) :
+                    $sce.valueOf(value);
+          return allOrNothing && !isDefined(value) ? value : stringify(value);
+        } catch (err) {
+          $exceptionHandler($interpolateMinErr.interr(text, err));
+        }
+      }
+    }
+
+
+    /**
+     * @ngdoc method
+     * @name $interpolate#startSymbol
+     * @description
+     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.
+     *
+     * Use {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change
+     * the symbol.
+     *
+     * @returns {string} start symbol.
+     */
+    $interpolate.startSymbol = function() {
+      return startSymbol;
+    };
+
+
+    /**
+     * @ngdoc method
+     * @name $interpolate#endSymbol
+     * @description
+     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.
+     *
+     * Use {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change
+     * the symbol.
+     *
+     * @returns {string} end symbol.
+     */
+    $interpolate.endSymbol = function() {
+      return endSymbol;
+    };
+
+    return $interpolate;
+  }];
+}
+
+var $intervalMinErr = minErr('$interval');
+
+/** @this */
+function $IntervalProvider() {
+  this.$get = ['$$intervalFactory', '$window',
+       function($$intervalFactory,   $window) {
+    var intervals = {};
+    var setIntervalFn = function(tick, delay, deferred) {
+      var id = $window.setInterval(tick, delay);
+      intervals[id] = deferred;
+      return id;
+    };
+    var clearIntervalFn = function(id) {
+      $window.clearInterval(id);
+      delete intervals[id];
+    };
+
+    /**
+     * @ngdoc service
+     * @name $interval
+     *
+     * @description
+     * AngularJS's wrapper for `window.setInterval`. The `fn` function is executed every `delay`
+     * milliseconds.
+     *
+     * The return value of registering an interval function is a promise. This promise will be
+     * notified upon each tick of the interval, and will be resolved after `count` iterations, or
+     * run indefinitely if `count` is not defined. The value of the notification will be the
+     * number of iterations that have run.
+     * To cancel an interval, call `$interval.cancel(promise)`.
+     *
+     * In tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to
+     * move forward by `millis` milliseconds and trigger any functions scheduled to run in that
+     * time.
+     *
+     * <div class="alert alert-warning">
+     * **Note**: Intervals created by this service must be explicitly destroyed when you are finished
+     * with them.  In particular they are not automatically destroyed when a controller's scope or a
+     * directive's element are destroyed.
+     * You should take this into consideration and make sure to always cancel the interval at the
+     * appropriate moment.  See the example below for more details on how and when to do this.
+     * </div>
+     *
+     * @param {function()} fn A function that should be called repeatedly. If no additional arguments
+     *   are passed (see below), the function is called with the current iteration count.
+     * @param {number} delay Number of milliseconds between each function call.
+     * @param {number=} [count=0] Number of times to repeat. If not set, or 0, will repeat
+     *   indefinitely.
+     * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
+     *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
+     * @param {...*=} Pass additional parameters to the executed function.
+     * @returns {promise} A promise which will be notified on each iteration. It will resolve once all iterations of the interval complete.
+     *
+     * @example
+     * <example module="intervalExample" name="interval-service">
+     * <file name="index.html">
+     *   <script>
+     *     angular.module('intervalExample', [])
+     *       .controller('ExampleController', ['$scope', '$interval',
+     *         function($scope, $interval) {
+     *           $scope.format = 'M/d/yy h:mm:ss a';
+     *           $scope.blood_1 = 100;
+     *           $scope.blood_2 = 120;
+     *
+     *           var stop;
+     *           $scope.fight = function() {
+     *             // Don't start a new fight if we are already fighting
+     *             if ( angular.isDefined(stop) ) return;
+     *
+     *             stop = $interval(function() {
+     *               if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {
+     *                 $scope.blood_1 = $scope.blood_1 - 3;
+     *                 $scope.blood_2 = $scope.blood_2 - 4;
+     *               } else {
+     *                 $scope.stopFight();
+     *               }
+     *             }, 100);
+     *           };
+     *
+     *           $scope.stopFight = function() {
+     *             if (angular.isDefined(stop)) {
+     *               $interval.cancel(stop);
+     *               stop = undefined;
+     *             }
+     *           };
+     *
+     *           $scope.resetFight = function() {
+     *             $scope.blood_1 = 100;
+     *             $scope.blood_2 = 120;
+     *           };
+     *
+     *           $scope.$on('$destroy', function() {
+     *             // Make sure that the interval is destroyed too
+     *             $scope.stopFight();
+     *           });
+     *         }])
+     *       // Register the 'myCurrentTime' directive factory method.
+     *       // We inject $interval and dateFilter service since the factory method is DI.
+     *       .directive('myCurrentTime', ['$interval', 'dateFilter',
+     *         function($interval, dateFilter) {
+     *           // return the directive link function. (compile function not needed)
+     *           return function(scope, element, attrs) {
+     *             var format,  // date format
+     *                 stopTime; // so that we can cancel the time updates
+     *
+     *             // used to update the UI
+     *             function updateTime() {
+     *               element.text(dateFilter(new Date(), format));
+     *             }
+     *
+     *             // watch the expression, and update the UI on change.
+     *             scope.$watch(attrs.myCurrentTime, function(value) {
+     *               format = value;
+     *               updateTime();
+     *             });
+     *
+     *             stopTime = $interval(updateTime, 1000);
+     *
+     *             // listen on DOM destroy (removal) event, and cancel the next UI update
+     *             // to prevent updating time after the DOM element was removed.
+     *             element.on('$destroy', function() {
+     *               $interval.cancel(stopTime);
+     *             });
+     *           }
+     *         }]);
+     *   </script>
+     *
+     *   <div>
+     *     <div ng-controller="ExampleController">
+     *       <label>Date format: <input ng-model="format"></label> <hr/>
+     *       Current time is: <span my-current-time="format"></span>
+     *       <hr/>
+     *       Blood 1 : <font color='red'>{{blood_1}}</font>
+     *       Blood 2 : <font color='red'>{{blood_2}}</font>
+     *       <button type="button" data-ng-click="fight()">Fight</button>
+     *       <button type="button" data-ng-click="stopFight()">StopFight</button>
+     *       <button type="button" data-ng-click="resetFight()">resetFight</button>
+     *     </div>
+     *   </div>
+     *
+     * </file>
+     * </example>
+     */
+    var interval = $$intervalFactory(setIntervalFn, clearIntervalFn);
+
+    /**
+     * @ngdoc method
+     * @name $interval#cancel
+     *
+     * @description
+     * Cancels a task associated with the `promise`.
+     *
+     * @param {Promise=} promise returned by the `$interval` function.
+     * @returns {boolean} Returns `true` if the task was successfully canceled.
+     */
+    interval.cancel = function(promise) {
+      if (!promise) return false;
+
+      if (!promise.hasOwnProperty('$$intervalId')) {
+        throw $intervalMinErr('badprom',
+            '`$interval.cancel()` called with a promise that was not generated by `$interval()`.');
+      }
+
+      if (!intervals.hasOwnProperty(promise.$$intervalId)) return false;
+
+      var id = promise.$$intervalId;
+      var deferred = intervals[id];
+
+      // Interval cancels should not report an unhandled promise.
+      markQExceptionHandled(deferred.promise);
+      deferred.reject('canceled');
+      clearIntervalFn(id);
+
+      return true;
+    };
+
+    return interval;
+  }];
+}
+
+/** @this */
+function $$IntervalFactoryProvider() {
+  this.$get = ['$browser', '$q', '$$q', '$rootScope',
+       function($browser,   $q,   $$q,   $rootScope) {
+    return function intervalFactory(setIntervalFn, clearIntervalFn) {
+      return function intervalFn(fn, delay, count, invokeApply) {
+        var hasParams = arguments.length > 4,
+            args = hasParams ? sliceArgs(arguments, 4) : [],
+            iteration = 0,
+            skipApply = isDefined(invokeApply) && !invokeApply,
+            deferred = (skipApply ? $$q : $q).defer(),
+            promise = deferred.promise;
+
+        count = isDefined(count) ? count : 0;
+
+        function callback() {
+          if (!hasParams) {
+            fn(iteration);
+          } else {
+            fn.apply(null, args);
+          }
+        }
+
+        function tick() {
+          if (skipApply) {
+            $browser.defer(callback);
+          } else {
+            $rootScope.$evalAsync(callback);
+          }
+          deferred.notify(iteration++);
+
+          if (count > 0 && iteration >= count) {
+            deferred.resolve(iteration);
+            clearIntervalFn(promise.$$intervalId);
+          }
+
+          if (!skipApply) $rootScope.$apply();
+        }
+
+        promise.$$intervalId = setIntervalFn(tick, delay, deferred, skipApply);
+
+        return promise;
+      };
+    };
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $jsonpCallbacks
+ * @requires $window
+ * @description
+ * This service handles the lifecycle of callbacks to handle JSONP requests.
+ * Override this service if you wish to customise where the callbacks are stored and
+ * how they vary compared to the requested url.
+ */
+var $jsonpCallbacksProvider = /** @this */ function() {
+  this.$get = function() {
+    var callbacks = angular.callbacks;
+    var callbackMap = {};
+
+    function createCallback(callbackId) {
+      var callback = function(data) {
+        callback.data = data;
+        callback.called = true;
+      };
+      callback.id = callbackId;
+      return callback;
+    }
+
+    return {
+      /**
+       * @ngdoc method
+       * @name $jsonpCallbacks#createCallback
+       * @param {string} url the url of the JSONP request
+       * @returns {string} the callback path to send to the server as part of the JSONP request
+       * @description
+       * {@link $httpBackend} calls this method to create a callback and get hold of the path to the callback
+       * to pass to the server, which will be used to call the callback with its payload in the JSONP response.
+       */
+      createCallback: function(url) {
+        var callbackId = '_' + (callbacks.$$counter++).toString(36);
+        var callbackPath = 'angular.callbacks.' + callbackId;
+        var callback = createCallback(callbackId);
+        callbackMap[callbackPath] = callbacks[callbackId] = callback;
+        return callbackPath;
+      },
+      /**
+       * @ngdoc method
+       * @name $jsonpCallbacks#wasCalled
+       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
+       * @returns {boolean} whether the callback has been called, as a result of the JSONP response
+       * @description
+       * {@link $httpBackend} calls this method to find out whether the JSONP response actually called the
+       * callback that was passed in the request.
+       */
+      wasCalled: function(callbackPath) {
+        return callbackMap[callbackPath].called;
+      },
+      /**
+       * @ngdoc method
+       * @name $jsonpCallbacks#getResponse
+       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
+       * @returns {*} the data received from the response via the registered callback
+       * @description
+       * {@link $httpBackend} calls this method to get hold of the data that was provided to the callback
+       * in the JSONP response.
+       */
+      getResponse: function(callbackPath) {
+        return callbackMap[callbackPath].data;
+      },
+      /**
+       * @ngdoc method
+       * @name $jsonpCallbacks#removeCallback
+       * @param {string} callbackPath the path to the callback that was sent in the JSONP request
+       * @description
+       * {@link $httpBackend} calls this method to remove the callback after the JSONP request has
+       * completed or timed-out.
+       */
+      removeCallback: function(callbackPath) {
+        var callback = callbackMap[callbackPath];
+        delete callbacks[callback.id];
+        delete callbackMap[callbackPath];
+      }
+    };
+  };
+};
+
+/**
+ * @ngdoc service
+ * @name $locale
+ *
+ * @description
+ * $locale service provides localization rules for various AngularJS components. As of right now the
+ * only public api is:
+ *
+ * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)
+ */
+
+/* global stripHash: true */
+
+var PATH_MATCH = /^([^?#]*)(\?([^#]*))?(#(.*))?$/,
+    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};
+var $locationMinErr = minErr('$location');
+
+
+/**
+ * Encode path using encodeUriSegment, ignoring forward slashes
+ *
+ * @param {string} path Path to encode
+ * @returns {string}
+ */
+function encodePath(path) {
+  var segments = path.split('/'),
+      i = segments.length;
+
+  while (i--) {
+    // decode forward slashes to prevent them from being double encoded
+    segments[i] = encodeUriSegment(segments[i].replace(/%2F/g, '/'));
+  }
+
+  return segments.join('/');
+}
+
+function decodePath(path, html5Mode) {
+  var segments = path.split('/'),
+      i = segments.length;
+
+  while (i--) {
+    segments[i] = decodeURIComponent(segments[i]);
+    if (html5Mode) {
+      // encode forward slashes to prevent them from being mistaken for path separators
+      segments[i] = segments[i].replace(/\//g, '%2F');
+    }
+  }
+
+  return segments.join('/');
+}
+
+function normalizePath(pathValue, searchValue, hashValue) {
+  var search = toKeyValue(searchValue),
+    hash = hashValue ? '#' + encodeUriSegment(hashValue) : '',
+    path = encodePath(pathValue);
+
+  return path + (search ? '?' + search : '') + hash;
+}
+
+function parseAbsoluteUrl(absoluteUrl, locationObj) {
+  var parsedUrl = urlResolve(absoluteUrl);
+
+  locationObj.$$protocol = parsedUrl.protocol;
+  locationObj.$$host = parsedUrl.hostname;
+  locationObj.$$port = toInt(parsedUrl.port) || DEFAULT_PORTS[parsedUrl.protocol] || null;
+}
+
+var DOUBLE_SLASH_REGEX = /^\s*[\\/]{2,}/;
+function parseAppUrl(url, locationObj, html5Mode) {
+
+  if (DOUBLE_SLASH_REGEX.test(url)) {
+    throw $locationMinErr('badpath', 'Invalid url "{0}".', url);
+  }
+
+  var prefixed = (url.charAt(0) !== '/');
+  if (prefixed) {
+    url = '/' + url;
+  }
+  var match = urlResolve(url);
+  var path = prefixed && match.pathname.charAt(0) === '/' ? match.pathname.substring(1) : match.pathname;
+  locationObj.$$path = decodePath(path, html5Mode);
+  locationObj.$$search = parseKeyValue(match.search);
+  locationObj.$$hash = decodeURIComponent(match.hash);
+
+  // make sure path starts with '/';
+  if (locationObj.$$path && locationObj.$$path.charAt(0) !== '/') {
+    locationObj.$$path = '/' + locationObj.$$path;
+  }
+}
+
+function startsWith(str, search) {
+  return str.slice(0, search.length) === search;
+}
+
+/**
+ *
+ * @param {string} base
+ * @param {string} url
+ * @returns {string} returns text from `url` after `base` or `undefined` if it does not begin with
+ *                   the expected string.
+ */
+function stripBaseUrl(base, url) {
+  if (startsWith(url, base)) {
+    return url.substr(base.length);
+  }
+}
+
+function stripHash(url) {
+  var index = url.indexOf('#');
+  return index === -1 ? url : url.substr(0, index);
+}
+
+function stripFile(url) {
+  return url.substr(0, stripHash(url).lastIndexOf('/') + 1);
+}
+
+/* return the server only (scheme://host:port) */
+function serverBase(url) {
+  return url.substring(0, url.indexOf('/', url.indexOf('//') + 2));
+}
+
+
+/**
+ * LocationHtml5Url represents a URL
+ * This object is exposed as $location service when HTML5 mode is enabled and supported
+ *
+ * @constructor
+ * @param {string} appBase application base URL
+ * @param {string} appBaseNoFile application base URL stripped of any filename
+ * @param {string} basePrefix URL path prefix
+ */
+function LocationHtml5Url(appBase, appBaseNoFile, basePrefix) {
+  this.$$html5 = true;
+  basePrefix = basePrefix || '';
+  parseAbsoluteUrl(appBase, this);
+
+
+  /**
+   * Parse given HTML5 (regular) URL string into properties
+   * @param {string} url HTML5 URL
+   * @private
+   */
+  this.$$parse = function(url) {
+    var pathUrl = stripBaseUrl(appBaseNoFile, url);
+    if (!isString(pathUrl)) {
+      throw $locationMinErr('ipthprfx', 'Invalid url "{0}", missing path prefix "{1}".', url,
+          appBaseNoFile);
+    }
+
+    parseAppUrl(pathUrl, this, true);
+
+    if (!this.$$path) {
+      this.$$path = '/';
+    }
+
+    this.$$compose();
+  };
+
+  this.$$normalizeUrl = function(url) {
+    return appBaseNoFile + url.substr(1); // first char is always '/'
+  };
+
+  this.$$parseLinkUrl = function(url, relHref) {
+    if (relHref && relHref[0] === '#') {
+      // special case for links to hash fragments:
+      // keep the old url and only replace the hash fragment
+      this.hash(relHref.slice(1));
+      return true;
+    }
+    var appUrl, prevAppUrl;
+    var rewrittenUrl;
+
+
+    if (isDefined(appUrl = stripBaseUrl(appBase, url))) {
+      prevAppUrl = appUrl;
+      if (basePrefix && isDefined(appUrl = stripBaseUrl(basePrefix, appUrl))) {
+        rewrittenUrl = appBaseNoFile + (stripBaseUrl('/', appUrl) || appUrl);
+      } else {
+        rewrittenUrl = appBase + prevAppUrl;
+      }
+    } else if (isDefined(appUrl = stripBaseUrl(appBaseNoFile, url))) {
+      rewrittenUrl = appBaseNoFile + appUrl;
+    } else if (appBaseNoFile === url + '/') {
+      rewrittenUrl = appBaseNoFile;
+    }
+    if (rewrittenUrl) {
+      this.$$parse(rewrittenUrl);
+    }
+    return !!rewrittenUrl;
+  };
+}
+
+
+/**
+ * LocationHashbangUrl represents URL
+ * This object is exposed as $location service when developer doesn't opt into html5 mode.
+ * It also serves as the base class for html5 mode fallback on legacy browsers.
+ *
+ * @constructor
+ * @param {string} appBase application base URL
+ * @param {string} appBaseNoFile application base URL stripped of any filename
+ * @param {string} hashPrefix hashbang prefix
+ */
+function LocationHashbangUrl(appBase, appBaseNoFile, hashPrefix) {
+
+  parseAbsoluteUrl(appBase, this);
+
+
+  /**
+   * Parse given hashbang URL into properties
+   * @param {string} url Hashbang URL
+   * @private
+   */
+  this.$$parse = function(url) {
+    var withoutBaseUrl = stripBaseUrl(appBase, url) || stripBaseUrl(appBaseNoFile, url);
+    var withoutHashUrl;
+
+    if (!isUndefined(withoutBaseUrl) && withoutBaseUrl.charAt(0) === '#') {
+
+      // The rest of the URL starts with a hash so we have
+      // got either a hashbang path or a plain hash fragment
+      withoutHashUrl = stripBaseUrl(hashPrefix, withoutBaseUrl);
+      if (isUndefined(withoutHashUrl)) {
+        // There was no hashbang prefix so we just have a hash fragment
+        withoutHashUrl = withoutBaseUrl;
+      }
+
+    } else {
+      // There was no hashbang path nor hash fragment:
+      // If we are in HTML5 mode we use what is left as the path;
+      // Otherwise we ignore what is left
+      if (this.$$html5) {
+        withoutHashUrl = withoutBaseUrl;
+      } else {
+        withoutHashUrl = '';
+        if (isUndefined(withoutBaseUrl)) {
+          appBase = url;
+          /** @type {?} */ (this).replace();
+        }
+      }
+    }
+
+    parseAppUrl(withoutHashUrl, this, false);
+
+    this.$$path = removeWindowsDriveName(this.$$path, withoutHashUrl, appBase);
+
+    this.$$compose();
+
+    /*
+     * In Windows, on an anchor node on documents loaded from
+     * the filesystem, the browser will return a pathname
+     * prefixed with the drive name ('/C:/path') when a
+     * pathname without a drive is set:
+     *  * a.setAttribute('href', '/foo')
+     *   * a.pathname === '/C:/foo' //true
+     *
+     * Inside of AngularJS, we're always using pathnames that
+     * do not include drive names for routing.
+     */
+    function removeWindowsDriveName(path, url, base) {
+      /*
+      Matches paths for file protocol on windows,
+      such as /C:/foo/bar, and captures only /foo/bar.
+      */
+      var windowsFilePathExp = /^\/[A-Z]:(\/.*)/;
+
+      var firstPathSegmentMatch;
+
+      //Get the relative path from the input URL.
+      if (startsWith(url, base)) {
+        url = url.replace(base, '');
+      }
+
+      // The input URL intentionally contains a first path segment that ends with a colon.
+      if (windowsFilePathExp.exec(url)) {
+        return path;
+      }
+
+      firstPathSegmentMatch = windowsFilePathExp.exec(path);
+      return firstPathSegmentMatch ? firstPathSegmentMatch[1] : path;
+    }
+  };
+
+  this.$$normalizeUrl = function(url) {
+    return appBase + (url ? hashPrefix + url : '');
+  };
+
+  this.$$parseLinkUrl = function(url, relHref) {
+    if (stripHash(appBase) === stripHash(url)) {
+      this.$$parse(url);
+      return true;
+    }
+    return false;
+  };
+}
+
+
+/**
+ * LocationHashbangUrl represents URL
+ * This object is exposed as $location service when html5 history api is enabled but the browser
+ * does not support it.
+ *
+ * @constructor
+ * @param {string} appBase application base URL
+ * @param {string} appBaseNoFile application base URL stripped of any filename
+ * @param {string} hashPrefix hashbang prefix
+ */
+function LocationHashbangInHtml5Url(appBase, appBaseNoFile, hashPrefix) {
+  this.$$html5 = true;
+  LocationHashbangUrl.apply(this, arguments);
+
+  this.$$parseLinkUrl = function(url, relHref) {
+    if (relHref && relHref[0] === '#') {
+      // special case for links to hash fragments:
+      // keep the old url and only replace the hash fragment
+      this.hash(relHref.slice(1));
+      return true;
+    }
+
+    var rewrittenUrl;
+    var appUrl;
+
+    if (appBase === stripHash(url)) {
+      rewrittenUrl = url;
+    } else if ((appUrl = stripBaseUrl(appBaseNoFile, url))) {
+      rewrittenUrl = appBase + hashPrefix + appUrl;
+    } else if (appBaseNoFile === url + '/') {
+      rewrittenUrl = appBaseNoFile;
+    }
+    if (rewrittenUrl) {
+      this.$$parse(rewrittenUrl);
+    }
+    return !!rewrittenUrl;
+  };
+
+  this.$$normalizeUrl = function(url) {
+    // include hashPrefix in $$absUrl when $$url is empty so IE9 does not reload page because of removal of '#'
+    return appBase + hashPrefix + url;
+  };
+}
+
+
+var locationPrototype = {
+
+  /**
+   * Ensure absolute URL is initialized.
+   * @private
+   */
+  $$absUrl:'',
+
+  /**
+   * Are we in html5 mode?
+   * @private
+   */
+  $$html5: false,
+
+  /**
+   * Has any change been replacing?
+   * @private
+   */
+  $$replace: false,
+
+  /**
+   * Compose url and update `url` and `absUrl` property
+   * @private
+   */
+  $$compose: function() {
+    this.$$url = normalizePath(this.$$path, this.$$search, this.$$hash);
+    this.$$absUrl = this.$$normalizeUrl(this.$$url);
+    this.$$urlUpdatedByLocation = true;
+  },
+
+  /**
+   * @ngdoc method
+   * @name $location#absUrl
+   *
+   * @description
+   * This method is getter only.
+   *
+   * Return full URL representation with all segments encoded according to rules specified in
+   * [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var absUrl = $location.absUrl();
+   * // => "http://example.com/#/some/path?foo=bar&baz=xoxo"
+   * ```
+   *
+   * @return {string} full URL
+   */
+  absUrl: locationGetter('$$absUrl'),
+
+  /**
+   * @ngdoc method
+   * @name $location#url
+   *
+   * @description
+   * This method is getter / setter.
+   *
+   * Return URL (e.g. `/path?a=b#hash`) when called without any parameter.
+   *
+   * Change path, search and hash, when called with parameter and return `$location`.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var url = $location.url();
+   * // => "/some/path?foo=bar&baz=xoxo"
+   * ```
+   *
+   * @param {string=} url New URL without base prefix (e.g. `/path?a=b#hash`)
+   * @return {string} url
+   */
+  url: function(url) {
+    if (isUndefined(url)) {
+      return this.$$url;
+    }
+
+    var match = PATH_MATCH.exec(url);
+    if (match[1] || url === '') this.path(decodeURIComponent(match[1]));
+    if (match[2] || match[1] || url === '') this.search(match[3] || '');
+    this.hash(match[5] || '');
+
+    return this;
+  },
+
+  /**
+   * @ngdoc method
+   * @name $location#protocol
+   *
+   * @description
+   * This method is getter only.
+   *
+   * Return protocol of current URL.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var protocol = $location.protocol();
+   * // => "http"
+   * ```
+   *
+   * @return {string} protocol of current URL
+   */
+  protocol: locationGetter('$$protocol'),
+
+  /**
+   * @ngdoc method
+   * @name $location#host
+   *
+   * @description
+   * This method is getter only.
+   *
+   * Return host of current URL.
+   *
+   * Note: compared to the non-AngularJS version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var host = $location.host();
+   * // => "example.com"
+   *
+   * // given URL http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo
+   * host = $location.host();
+   * // => "example.com"
+   * host = location.host;
+   * // => "example.com:8080"
+   * ```
+   *
+   * @return {string} host of current URL.
+   */
+  host: locationGetter('$$host'),
+
+  /**
+   * @ngdoc method
+   * @name $location#port
+   *
+   * @description
+   * This method is getter only.
+   *
+   * Return port of current URL.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var port = $location.port();
+   * // => 80
+   * ```
+   *
+   * @return {Number} port
+   */
+  port: locationGetter('$$port'),
+
+  /**
+   * @ngdoc method
+   * @name $location#path
+   *
+   * @description
+   * This method is getter / setter.
+   *
+   * Return path of current URL when called without any parameter.
+   *
+   * Change path when called with parameter and return `$location`.
+   *
+   * Note: Path should always begin with forward slash (/), this method will add the forward slash
+   * if it is missing.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var path = $location.path();
+   * // => "/some/path"
+   * ```
+   *
+   * @param {(string|number)=} path New path
+   * @return {(string|object)} path if called with no parameters, or `$location` if called with a parameter
+   */
+  path: locationGetterSetter('$$path', function(path) {
+    path = path !== null ? path.toString() : '';
+    return path.charAt(0) === '/' ? path : '/' + path;
+  }),
+
+  /**
+   * @ngdoc method
+   * @name $location#search
+   *
+   * @description
+   * This method is getter / setter.
+   *
+   * Return search part (as object) of current URL when called without any parameter.
+   *
+   * Change search part when called with parameter and return `$location`.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo
+   * var searchObject = $location.search();
+   * // => {foo: 'bar', baz: 'xoxo'}
+   *
+   * // set foo to 'yipee'
+   * $location.search('foo', 'yipee');
+   * // $location.search() => {foo: 'yipee', baz: 'xoxo'}
+   * ```
+   *
+   * @param {string|Object.<string>|Object.<Array.<string>>} search New search params - string or
+   * hash object.
+   *
+   * When called with a single argument the method acts as a setter, setting the `search` component
+   * of `$location` to the specified value.
+   *
+   * If the argument is a hash object containing an array of values, these values will be encoded
+   * as duplicate search parameters in the URL.
+   *
+   * @param {(string|Number|Array<string>|boolean)=} paramValue If `search` is a string or number, then `paramValue`
+   * will override only a single search property.
+   *
+   * If `paramValue` is an array, it will override the property of the `search` component of
+   * `$location` specified via the first argument.
+   *
+   * If `paramValue` is `null`, the property specified via the first argument will be deleted.
+   *
+   * If `paramValue` is `true`, the property specified via the first argument will be added with no
+   * value nor trailing equal sign.
+   *
+   * @return {Object} If called with no arguments returns the parsed `search` object. If called with
+   * one or more arguments returns `$location` object itself.
+   */
+  search: function(search, paramValue) {
+    switch (arguments.length) {
+      case 0:
+        return this.$$search;
+      case 1:
+        if (isString(search) || isNumber(search)) {
+          search = search.toString();
+          this.$$search = parseKeyValue(search);
+        } else if (isObject(search)) {
+          search = copy(search, {});
+          // remove object undefined or null properties
+          forEach(search, function(value, key) {
+            if (value == null) delete search[key];
+          });
+
+          this.$$search = search;
+        } else {
+          throw $locationMinErr('isrcharg',
+              'The first argument of the `$location#search()` call must be a string or an object.');
+        }
+        break;
+      default:
+        if (isUndefined(paramValue) || paramValue === null) {
+          delete this.$$search[search];
+        } else {
+          this.$$search[search] = paramValue;
+        }
+    }
+
+    this.$$compose();
+    return this;
+  },
+
+  /**
+   * @ngdoc method
+   * @name $location#hash
+   *
+   * @description
+   * This method is getter / setter.
+   *
+   * Returns the hash fragment when called without any parameters.
+   *
+   * Changes the hash fragment when called with a parameter and returns `$location`.
+   *
+   *
+   * ```js
+   * // given URL http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue
+   * var hash = $location.hash();
+   * // => "hashValue"
+   * ```
+   *
+   * @param {(string|number)=} hash New hash fragment
+   * @return {string} hash
+   */
+  hash: locationGetterSetter('$$hash', function(hash) {
+    return hash !== null ? hash.toString() : '';
+  }),
+
+  /**
+   * @ngdoc method
+   * @name $location#replace
+   *
+   * @description
+   * If called, all changes to $location during the current `$digest` will replace the current history
+   * record, instead of adding a new one.
+   */
+  replace: function() {
+    this.$$replace = true;
+    return this;
+  }
+};
+
+forEach([LocationHashbangInHtml5Url, LocationHashbangUrl, LocationHtml5Url], function(Location) {
+  Location.prototype = Object.create(locationPrototype);
+
+  /**
+   * @ngdoc method
+   * @name $location#state
+   *
+   * @description
+   * This method is getter / setter.
+   *
+   * Return the history state object when called without any parameter.
+   *
+   * Change the history state object when called with one parameter and return `$location`.
+   * The state object is later passed to `pushState` or `replaceState`.
+   *
+   * NOTE: This method is supported only in HTML5 mode and only in browsers supporting
+   * the HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support
+   * older browsers (like IE9 or Android < 4.0), don't use this method.
+   *
+   * @param {object=} state State object for pushState or replaceState
+   * @return {object} state
+   */
+  Location.prototype.state = function(state) {
+    if (!arguments.length) {
+      return this.$$state;
+    }
+
+    if (Location !== LocationHtml5Url || !this.$$html5) {
+      throw $locationMinErr('nostate', 'History API state support is available only ' +
+        'in HTML5 mode and only in browsers supporting HTML5 History API');
+    }
+    // The user might modify `stateObject` after invoking `$location.state(stateObject)`
+    // but we're changing the $$state reference to $browser.state() during the $digest
+    // so the modification window is narrow.
+    this.$$state = isUndefined(state) ? null : state;
+    this.$$urlUpdatedByLocation = true;
+
+    return this;
+  };
+});
+
+
+function locationGetter(property) {
+  return /** @this */ function() {
+    return this[property];
+  };
+}
+
+
+function locationGetterSetter(property, preprocess) {
+  return /** @this */ function(value) {
+    if (isUndefined(value)) {
+      return this[property];
+    }
+
+    this[property] = preprocess(value);
+    this.$$compose();
+
+    return this;
+  };
+}
+
+
+/**
+ * @ngdoc service
+ * @name $location
+ *
+ * @requires $rootElement
+ *
+ * @description
+ * The $location service parses the URL in the browser address bar (based on the
+ * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL
+ * available to your application. Changes to the URL in the address bar are reflected into
+ * $location service and changes to $location are reflected into the browser address bar.
+ *
+ * **The $location service:**
+ *
+ * - Exposes the current URL in the browser address bar, so you can
+ *   - Watch and observe the URL.
+ *   - Change the URL.
+ * - Synchronizes the URL with the browser when the user
+ *   - Changes the address bar.
+ *   - Clicks the back or forward button (or clicks a History link).
+ *   - Clicks on a link.
+ * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
+ *
+ * For more information see {@link guide/$location Developer Guide: Using $location}
+ */
+
+/**
+ * @ngdoc provider
+ * @name $locationProvider
+ * @this
+ *
+ * @description
+ * Use the `$locationProvider` to configure how the application deep linking paths are stored.
+ */
+function $LocationProvider() {
+  var hashPrefix = '!',
+      html5Mode = {
+        enabled: false,
+        requireBase: true,
+        rewriteLinks: true
+      };
+
+  /**
+   * @ngdoc method
+   * @name $locationProvider#hashPrefix
+   * @description
+   * The default value for the prefix is `'!'`.
+   * @param {string=} prefix Prefix for hash part (containing path and search)
+   * @returns {*} current value if used as getter or itself (chaining) if used as setter
+   */
+  this.hashPrefix = function(prefix) {
+    if (isDefined(prefix)) {
+      hashPrefix = prefix;
+      return this;
+    } else {
+      return hashPrefix;
+    }
+  };
+
+  /**
+   * @ngdoc method
+   * @name $locationProvider#html5Mode
+   * @description
+   * @param {(boolean|Object)=} mode If boolean, sets `html5Mode.enabled` to value.
+   *   If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported
+   *   properties:
+   *   - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to
+   *     change urls where supported. Will fall back to hash-prefixed paths in browsers that do not
+   *     support `pushState`.
+   *   - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies
+   *     whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are
+   *     true, and a base tag is not present, an error will be thrown when `$location` is injected.
+   *     See the {@link guide/$location $location guide for more information}
+   *   - **rewriteLinks** - `{boolean|string}` - (default: `true`) When html5Mode is enabled,
+   *     enables/disables URL rewriting for relative links. If set to a string, URL rewriting will
+   *     only happen on links with an attribute that matches the given string. For example, if set
+   *     to `'internal-link'`, then the URL will only be rewritten for `<a internal-link>` links.
+   *     Note that [attribute name normalization](guide/directive#normalization) does not apply
+   *     here, so `'internalLink'` will **not** match `'internal-link'`.
+   *
+   * @returns {Object} html5Mode object if used as getter or itself (chaining) if used as setter
+   */
+  this.html5Mode = function(mode) {
+    if (isBoolean(mode)) {
+      html5Mode.enabled = mode;
+      return this;
+    } else if (isObject(mode)) {
+
+      if (isBoolean(mode.enabled)) {
+        html5Mode.enabled = mode.enabled;
+      }
+
+      if (isBoolean(mode.requireBase)) {
+        html5Mode.requireBase = mode.requireBase;
+      }
+
+      if (isBoolean(mode.rewriteLinks) || isString(mode.rewriteLinks)) {
+        html5Mode.rewriteLinks = mode.rewriteLinks;
+      }
+
+      return this;
+    } else {
+      return html5Mode;
+    }
+  };
+
+  /**
+   * @ngdoc event
+   * @name $location#$locationChangeStart
+   * @eventType broadcast on root scope
+   * @description
+   * Broadcasted before a URL will change.
+   *
+   * This change can be prevented by calling
+   * `preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more
+   * details about event object. Upon successful change
+   * {@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.
+   *
+   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
+   * the browser supports the HTML5 History API.
+   *
+   * @param {Object} angularEvent Synthetic event object.
+   * @param {string} newUrl New URL
+   * @param {string=} oldUrl URL that was before it was changed.
+   * @param {string=} newState New history state object
+   * @param {string=} oldState History state object that was before it was changed.
+   */
+
+  /**
+   * @ngdoc event
+   * @name $location#$locationChangeSuccess
+   * @eventType broadcast on root scope
+   * @description
+   * Broadcasted after a URL was changed.
+   *
+   * The `newState` and `oldState` parameters may be defined only in HTML5 mode and when
+   * the browser supports the HTML5 History API.
+   *
+   * @param {Object} angularEvent Synthetic event object.
+   * @param {string} newUrl New URL
+   * @param {string=} oldUrl URL that was before it was changed.
+   * @param {string=} newState New history state object
+   * @param {string=} oldState History state object that was before it was changed.
+   */
+
+  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement', '$window',
+      function($rootScope, $browser, $sniffer, $rootElement, $window) {
+    var $location,
+        LocationMode,
+        baseHref = $browser.baseHref(), // if base[href] is undefined, it defaults to ''
+        initialUrl = $browser.url(),
+        appBase;
+
+    if (html5Mode.enabled) {
+      if (!baseHref && html5Mode.requireBase) {
+        throw $locationMinErr('nobase',
+          '$location in HTML5 mode requires a <base> tag to be present!');
+      }
+      appBase = serverBase(initialUrl) + (baseHref || '/');
+      LocationMode = $sniffer.history ? LocationHtml5Url : LocationHashbangInHtml5Url;
+    } else {
+      appBase = stripHash(initialUrl);
+      LocationMode = LocationHashbangUrl;
+    }
+    var appBaseNoFile = stripFile(appBase);
+
+    $location = new LocationMode(appBase, appBaseNoFile, '#' + hashPrefix);
+    $location.$$parseLinkUrl(initialUrl, initialUrl);
+
+    $location.$$state = $browser.state();
+
+    var IGNORE_URI_REGEXP = /^\s*(javascript|mailto):/i;
+
+    // Determine if two URLs are equal despite potentially having different encoding/normalizing
+    //  such as $location.absUrl() vs $browser.url()
+    // See https://github.com/angular/angular.js/issues/16592
+    function urlsEqual(a, b) {
+      return a === b || urlResolve(a).href === urlResolve(b).href;
+    }
+
+    function setBrowserUrlWithFallback(url, replace, state) {
+      var oldUrl = $location.url();
+      var oldState = $location.$$state;
+      try {
+        $browser.url(url, replace, state);
+
+        // Make sure $location.state() returns referentially identical (not just deeply equal)
+        // state object; this makes possible quick checking if the state changed in the digest
+        // loop. Checking deep equality would be too expensive.
+        $location.$$state = $browser.state();
+      } catch (e) {
+        // Restore old values if pushState fails
+        $location.url(oldUrl);
+        $location.$$state = oldState;
+
+        throw e;
+      }
+    }
+
+    $rootElement.on('click', function(event) {
+      var rewriteLinks = html5Mode.rewriteLinks;
+      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)
+      // currently we open nice url link and redirect then
+
+      if (!rewriteLinks || event.ctrlKey || event.metaKey || event.shiftKey || event.which === 2 || event.button === 2) return;
+
+      var elm = jqLite(event.target);
+
+      // traverse the DOM up to find first A tag
+      while (nodeName_(elm[0]) !== 'a') {
+        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)
+        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;
+      }
+
+      if (isString(rewriteLinks) && isUndefined(elm.attr(rewriteLinks))) return;
+
+      var absHref = elm.prop('href');
+      // get the actual href attribute - see
+      // http://msdn.microsoft.com/en-us/library/ie/dd347148(v=vs.85).aspx
+      var relHref = elm.attr('href') || elm.attr('xlink:href');
+
+      if (isObject(absHref) && absHref.toString() === '[object SVGAnimatedString]') {
+        // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during
+        // an animation.
+        absHref = urlResolve(absHref.animVal).href;
+      }
+
+      // Ignore when url is started with javascript: or mailto:
+      if (IGNORE_URI_REGEXP.test(absHref)) return;
+
+      if (absHref && !elm.attr('target') && !event.isDefaultPrevented()) {
+        if ($location.$$parseLinkUrl(absHref, relHref)) {
+          // We do a preventDefault for all urls that are part of the AngularJS application,
+          // in html5mode and also without, so that we are able to abort navigation without
+          // getting double entries in the location history.
+          event.preventDefault();
+          // update location manually
+          if ($location.absUrl() !== $browser.url()) {
+            $rootScope.$apply();
+          }
+        }
+      }
+    });
+
+
+    // rewrite hashbang url <> html5 url
+    if ($location.absUrl() !== initialUrl) {
+      $browser.url($location.absUrl(), true);
+    }
+
+    var initializing = true;
+
+    // update $location when $browser url changes
+    $browser.onUrlChange(function(newUrl, newState) {
+
+      if (!startsWith(newUrl, appBaseNoFile)) {
+        // If we are navigating outside of the app then force a reload
+        $window.location.href = newUrl;
+        return;
+      }
+
+      $rootScope.$evalAsync(function() {
+        var oldUrl = $location.absUrl();
+        var oldState = $location.$$state;
+        var defaultPrevented;
+        $location.$$parse(newUrl);
+        $location.$$state = newState;
+
+        defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,
+            newState, oldState).defaultPrevented;
+
+        // if the location was changed by a `$locationChangeStart` handler then stop
+        // processing this location change
+        if ($location.absUrl() !== newUrl) return;
+
+        if (defaultPrevented) {
+          $location.$$parse(oldUrl);
+          $location.$$state = oldState;
+          setBrowserUrlWithFallback(oldUrl, false, oldState);
+        } else {
+          initializing = false;
+          afterLocationChange(oldUrl, oldState);
+        }
+      });
+      if (!$rootScope.$$phase) $rootScope.$digest();
+    });
+
+    // update browser
+    $rootScope.$watch(function $locationWatch() {
+      if (initializing || $location.$$urlUpdatedByLocation) {
+        $location.$$urlUpdatedByLocation = false;
+
+        var oldUrl = $browser.url();
+        var newUrl = $location.absUrl();
+        var oldState = $browser.state();
+        var currentReplace = $location.$$replace;
+        var urlOrStateChanged = !urlsEqual(oldUrl, newUrl) ||
+          ($location.$$html5 && $sniffer.history && oldState !== $location.$$state);
+
+        if (initializing || urlOrStateChanged) {
+          initializing = false;
+
+          $rootScope.$evalAsync(function() {
+            var newUrl = $location.absUrl();
+            var defaultPrevented = $rootScope.$broadcast('$locationChangeStart', newUrl, oldUrl,
+                $location.$$state, oldState).defaultPrevented;
+
+            // if the location was changed by a `$locationChangeStart` handler then stop
+            // processing this location change
+            if ($location.absUrl() !== newUrl) return;
+
+            if (defaultPrevented) {
+              $location.$$parse(oldUrl);
+              $location.$$state = oldState;
+            } else {
+              if (urlOrStateChanged) {
+                setBrowserUrlWithFallback(newUrl, currentReplace,
+                                          oldState === $location.$$state ? null : $location.$$state);
+              }
+              afterLocationChange(oldUrl, oldState);
+            }
+          });
+        }
+      }
+
+      $location.$$replace = false;
+
+      // we don't need to return anything because $evalAsync will make the digest loop dirty when
+      // there is a change
+    });
+
+    return $location;
+
+    function afterLocationChange(oldUrl, oldState) {
+      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl,
+        $location.$$state, oldState);
+    }
+}];
+}
+
+/**
+ * @ngdoc service
+ * @name $log
+ * @requires $window
+ *
+ * @description
+ * Simple service for logging. Default implementation safely writes the message
+ * into the browser's console (if present).
+ *
+ * The main purpose of this service is to simplify debugging and troubleshooting.
+ *
+ * To reveal the location of the calls to `$log` in the JavaScript console,
+ * you can "blackbox" the AngularJS source in your browser:
+ *
+ * [Mozilla description of blackboxing](https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Black_box_a_source).
+ * [Chrome description of blackboxing](https://developer.chrome.com/devtools/docs/blackboxing).
+ *
+ * Note: Not all browsers support blackboxing.
+ *
+ * The default is to log `debug` messages. You can use
+ * {@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.
+ *
+ * @example
+   <example module="logExample" name="log-service">
+     <file name="script.js">
+       angular.module('logExample', [])
+         .controller('LogController', ['$scope', '$log', function($scope, $log) {
+           $scope.$log = $log;
+           $scope.message = 'Hello World!';
+         }]);
+     </file>
+     <file name="index.html">
+       <div ng-controller="LogController">
+         <p>Reload this page with open console, enter text and hit the log button...</p>
+         <label>Message:
+         <input type="text" ng-model="message" /></label>
+         <button ng-click="$log.log(message)">log</button>
+         <button ng-click="$log.warn(message)">warn</button>
+         <button ng-click="$log.info(message)">info</button>
+         <button ng-click="$log.error(message)">error</button>
+         <button ng-click="$log.debug(message)">debug</button>
+       </div>
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc provider
+ * @name $logProvider
+ * @this
+ *
+ * @description
+ * Use the `$logProvider` to configure how the application logs messages
+ */
+function $LogProvider() {
+  var debug = true,
+      self = this;
+
+  /**
+   * @ngdoc method
+   * @name $logProvider#debugEnabled
+   * @description
+   * @param {boolean=} flag enable or disable debug level messages
+   * @returns {*} current value if used as getter or itself (chaining) if used as setter
+   */
+  this.debugEnabled = function(flag) {
+    if (isDefined(flag)) {
+      debug = flag;
+      return this;
+    } else {
+      return debug;
+    }
+  };
+
+  this.$get = ['$window', function($window) {
+    // Support: IE 9-11, Edge 12-14+
+    // IE/Edge display errors in such a way that it requires the user to click in 4 places
+    // to see the stack trace. There is no way to feature-detect it so there's a chance
+    // of the user agent sniffing to go wrong but since it's only about logging, this shouldn't
+    // break apps. Other browsers display errors in a sensible way and some of them map stack
+    // traces along source maps if available so it makes sense to let browsers display it
+    // as they want.
+    var formatStackTrace = msie || /\bEdge\//.test($window.navigator && $window.navigator.userAgent);
+
+    return {
+      /**
+       * @ngdoc method
+       * @name $log#log
+       *
+       * @description
+       * Write a log message
+       */
+      log: consoleLog('log'),
+
+      /**
+       * @ngdoc method
+       * @name $log#info
+       *
+       * @description
+       * Write an information message
+       */
+      info: consoleLog('info'),
+
+      /**
+       * @ngdoc method
+       * @name $log#warn
+       *
+       * @description
+       * Write a warning message
+       */
+      warn: consoleLog('warn'),
+
+      /**
+       * @ngdoc method
+       * @name $log#error
+       *
+       * @description
+       * Write an error message
+       */
+      error: consoleLog('error'),
+
+      /**
+       * @ngdoc method
+       * @name $log#debug
+       *
+       * @description
+       * Write a debug message
+       */
+      debug: (function() {
+        var fn = consoleLog('debug');
+
+        return function() {
+          if (debug) {
+            fn.apply(self, arguments);
+          }
+        };
+      })()
+    };
+
+    function formatError(arg) {
+      if (isError(arg)) {
+        if (arg.stack && formatStackTrace) {
+          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)
+              ? 'Error: ' + arg.message + '\n' + arg.stack
+              : arg.stack;
+        } else if (arg.sourceURL) {
+          arg = arg.message + '\n' + arg.sourceURL + ':' + arg.line;
+        }
+      }
+      return arg;
+    }
+
+    function consoleLog(type) {
+      var console = $window.console || {},
+          logFn = console[type] || console.log || noop;
+
+      return function() {
+        var args = [];
+        forEach(arguments, function(arg) {
+          args.push(formatError(arg));
+        });
+        // Support: IE 9 only
+        // console methods don't inherit from Function.prototype in IE 9 so we can't
+        // call `logFn.apply(console, args)` directly.
+        return Function.prototype.apply.call(logFn, console, args);
+      };
+    }
+  }];
+}
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+ *     Any commits to this file should be reviewed with security in mind.  *
+ *   Changes to this file can potentially create security vulnerabilities. *
+ *          An approval from 2 Core members with history of modifying      *
+ *                         this file is required.                          *
+ *                                                                         *
+ *  Does the change somehow allow for arbitrary javascript to be executed? *
+ *    Or allows for someone to change the prototype of built-in objects?   *
+ *     Or gives undesired access to variables likes document or window?    *
+ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
+
+var $parseMinErr = minErr('$parse');
+
+var objectValueOf = {}.constructor.prototype.valueOf;
+
+// Sandboxing AngularJS Expressions
+// ------------------------------
+// AngularJS expressions are no longer sandboxed. So it is now even easier to access arbitrary JS code by
+// various means such as obtaining a reference to native JS functions like the Function constructor.
+//
+// As an example, consider the following AngularJS expression:
+//
+//   {}.toString.constructor('alert("evil JS code")')
+//
+// It is important to realize that if you create an expression from a string that contains user provided
+// content then it is possible that your application contains a security vulnerability to an XSS style attack.
+//
+// See https://docs.angularjs.org/guide/security
+
+
+function getStringValue(name) {
+  // Property names must be strings. This means that non-string objects cannot be used
+  // as keys in an object. Any non-string object, including a number, is typecasted
+  // into a string via the toString method.
+  // -- MDN, https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Property_accessors#Property_names
+  //
+  // So, to ensure that we are checking the same `name` that JavaScript would use, we cast it
+  // to a string. It's not always possible. If `name` is an object and its `toString` method is
+  // 'broken' (doesn't return a string, isn't a function, etc.), an error will be thrown:
+  //
+  // TypeError: Cannot convert object to primitive value
+  //
+  // For performance reasons, we don't catch this error here and allow it to propagate up the call
+  // stack. Note that you'll get the same error in JavaScript if you try to access a property using
+  // such a 'broken' object as a key.
+  return name + '';
+}
+
+
+var OPERATORS = createMap();
+forEach('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '), function(operator) { OPERATORS[operator] = true; });
+var ESCAPE = {'n':'\n', 'f':'\f', 'r':'\r', 't':'\t', 'v':'\v', '\'':'\'', '"':'"'};
+
+
+/////////////////////////////////////////
+
+
+/**
+ * @constructor
+ */
+var Lexer = function Lexer(options) {
+  this.options = options;
+};
+
+Lexer.prototype = {
+  constructor: Lexer,
+
+  lex: function(text) {
+    this.text = text;
+    this.index = 0;
+    this.tokens = [];
+
+    while (this.index < this.text.length) {
+      var ch = this.text.charAt(this.index);
+      if (ch === '"' || ch === '\'') {
+        this.readString(ch);
+      } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {
+        this.readNumber();
+      } else if (this.isIdentifierStart(this.peekMultichar())) {
+        this.readIdent();
+      } else if (this.is(ch, '(){}[].,;:?')) {
+        this.tokens.push({index: this.index, text: ch});
+        this.index++;
+      } else if (this.isWhitespace(ch)) {
+        this.index++;
+      } else {
+        var ch2 = ch + this.peek();
+        var ch3 = ch2 + this.peek(2);
+        var op1 = OPERATORS[ch];
+        var op2 = OPERATORS[ch2];
+        var op3 = OPERATORS[ch3];
+        if (op1 || op2 || op3) {
+          var token = op3 ? ch3 : (op2 ? ch2 : ch);
+          this.tokens.push({index: this.index, text: token, operator: true});
+          this.index += token.length;
+        } else {
+          this.throwError('Unexpected next character ', this.index, this.index + 1);
+        }
+      }
+    }
+    return this.tokens;
+  },
+
+  is: function(ch, chars) {
+    return chars.indexOf(ch) !== -1;
+  },
+
+  peek: function(i) {
+    var num = i || 1;
+    return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;
+  },
+
+  isNumber: function(ch) {
+    return ('0' <= ch && ch <= '9') && typeof ch === 'string';
+  },
+
+  isWhitespace: function(ch) {
+    // IE treats non-breaking space as \u00A0
+    return (ch === ' ' || ch === '\r' || ch === '\t' ||
+            ch === '\n' || ch === '\v' || ch === '\u00A0');
+  },
+
+  isIdentifierStart: function(ch) {
+    return this.options.isIdentifierStart ?
+        this.options.isIdentifierStart(ch, this.codePointAt(ch)) :
+        this.isValidIdentifierStart(ch);
+  },
+
+  isValidIdentifierStart: function(ch) {
+    return ('a' <= ch && ch <= 'z' ||
+            'A' <= ch && ch <= 'Z' ||
+            '_' === ch || ch === '$');
+  },
+
+  isIdentifierContinue: function(ch) {
+    return this.options.isIdentifierContinue ?
+        this.options.isIdentifierContinue(ch, this.codePointAt(ch)) :
+        this.isValidIdentifierContinue(ch);
+  },
+
+  isValidIdentifierContinue: function(ch, cp) {
+    return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch);
+  },
+
+  codePointAt: function(ch) {
+    if (ch.length === 1) return ch.charCodeAt(0);
+    // eslint-disable-next-line no-bitwise
+    return (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 0x35FDC00;
+  },
+
+  peekMultichar: function() {
+    var ch = this.text.charAt(this.index);
+    var peek = this.peek();
+    if (!peek) {
+      return ch;
+    }
+    var cp1 = ch.charCodeAt(0);
+    var cp2 = peek.charCodeAt(0);
+    if (cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF) {
+      return ch + peek;
+    }
+    return ch;
+  },
+
+  isExpOperator: function(ch) {
+    return (ch === '-' || ch === '+' || this.isNumber(ch));
+  },
+
+  throwError: function(error, start, end) {
+    end = end || this.index;
+    var colStr = (isDefined(start)
+            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'
+            : ' ' + end);
+    throw $parseMinErr('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',
+        error, colStr, this.text);
+  },
+
+  readNumber: function() {
+    var number = '';
+    var start = this.index;
+    while (this.index < this.text.length) {
+      var ch = lowercase(this.text.charAt(this.index));
+      if (ch === '.' || this.isNumber(ch)) {
+        number += ch;
+      } else {
+        var peekCh = this.peek();
+        if (ch === 'e' && this.isExpOperator(peekCh)) {
+          number += ch;
+        } else if (this.isExpOperator(ch) &&
+            peekCh && this.isNumber(peekCh) &&
+            number.charAt(number.length - 1) === 'e') {
+          number += ch;
+        } else if (this.isExpOperator(ch) &&
+            (!peekCh || !this.isNumber(peekCh)) &&
+            number.charAt(number.length - 1) === 'e') {
+          this.throwError('Invalid exponent');
+        } else {
+          break;
+        }
+      }
+      this.index++;
+    }
+    this.tokens.push({
+      index: start,
+      text: number,
+      constant: true,
+      value: Number(number)
+    });
+  },
+
+  readIdent: function() {
+    var start = this.index;
+    this.index += this.peekMultichar().length;
+    while (this.index < this.text.length) {
+      var ch = this.peekMultichar();
+      if (!this.isIdentifierContinue(ch)) {
+        break;
+      }
+      this.index += ch.length;
+    }
+    this.tokens.push({
+      index: start,
+      text: this.text.slice(start, this.index),
+      identifier: true
+    });
+  },
+
+  readString: function(quote) {
+    var start = this.index;
+    this.index++;
+    var string = '';
+    var rawString = quote;
+    var escape = false;
+    while (this.index < this.text.length) {
+      var ch = this.text.charAt(this.index);
+      rawString += ch;
+      if (escape) {
+        if (ch === 'u') {
+          var hex = this.text.substring(this.index + 1, this.index + 5);
+          if (!hex.match(/[\da-f]{4}/i)) {
+            this.throwError('Invalid unicode escape [\\u' + hex + ']');
+          }
+          this.index += 4;
+          string += String.fromCharCode(parseInt(hex, 16));
+        } else {
+          var rep = ESCAPE[ch];
+          string = string + (rep || ch);
+        }
+        escape = false;
+      } else if (ch === '\\') {
+        escape = true;
+      } else if (ch === quote) {
+        this.index++;
+        this.tokens.push({
+          index: start,
+          text: rawString,
+          constant: true,
+          value: string
+        });
+        return;
+      } else {
+        string += ch;
+      }
+      this.index++;
+    }
+    this.throwError('Unterminated quote', start);
+  }
+};
+
+var AST = function AST(lexer, options) {
+  this.lexer = lexer;
+  this.options = options;
+};
+
+AST.Program = 'Program';
+AST.ExpressionStatement = 'ExpressionStatement';
+AST.AssignmentExpression = 'AssignmentExpression';
+AST.ConditionalExpression = 'ConditionalExpression';
+AST.LogicalExpression = 'LogicalExpression';
+AST.BinaryExpression = 'BinaryExpression';
+AST.UnaryExpression = 'UnaryExpression';
+AST.CallExpression = 'CallExpression';
+AST.MemberExpression = 'MemberExpression';
+AST.Identifier = 'Identifier';
+AST.Literal = 'Literal';
+AST.ArrayExpression = 'ArrayExpression';
+AST.Property = 'Property';
+AST.ObjectExpression = 'ObjectExpression';
+AST.ThisExpression = 'ThisExpression';
+AST.LocalsExpression = 'LocalsExpression';
+
+// Internal use only
+AST.NGValueParameter = 'NGValueParameter';
+
+AST.prototype = {
+  ast: function(text) {
+    this.text = text;
+    this.tokens = this.lexer.lex(text);
+
+    var value = this.program();
+
+    if (this.tokens.length !== 0) {
+      this.throwError('is an unexpected token', this.tokens[0]);
+    }
+
+    return value;
+  },
+
+  program: function() {
+    var body = [];
+    while (true) {
+      if (this.tokens.length > 0 && !this.peek('}', ')', ';', ']'))
+        body.push(this.expressionStatement());
+      if (!this.expect(';')) {
+        return { type: AST.Program, body: body};
+      }
+    }
+  },
+
+  expressionStatement: function() {
+    return { type: AST.ExpressionStatement, expression: this.filterChain() };
+  },
+
+  filterChain: function() {
+    var left = this.expression();
+    while (this.expect('|')) {
+      left = this.filter(left);
+    }
+    return left;
+  },
+
+  expression: function() {
+    return this.assignment();
+  },
+
+  assignment: function() {
+    var result = this.ternary();
+    if (this.expect('=')) {
+      if (!isAssignable(result)) {
+        throw $parseMinErr('lval', 'Trying to assign a value to a non l-value');
+      }
+
+      result = { type: AST.AssignmentExpression, left: result, right: this.assignment(), operator: '='};
+    }
+    return result;
+  },
+
+  ternary: function() {
+    var test = this.logicalOR();
+    var alternate;
+    var consequent;
+    if (this.expect('?')) {
+      alternate = this.expression();
+      if (this.consume(':')) {
+        consequent = this.expression();
+        return { type: AST.ConditionalExpression, test: test, alternate: alternate, consequent: consequent};
+      }
+    }
+    return test;
+  },
+
+  logicalOR: function() {
+    var left = this.logicalAND();
+    while (this.expect('||')) {
+      left = { type: AST.LogicalExpression, operator: '||', left: left, right: this.logicalAND() };
+    }
+    return left;
+  },
+
+  logicalAND: function() {
+    var left = this.equality();
+    while (this.expect('&&')) {
+      left = { type: AST.LogicalExpression, operator: '&&', left: left, right: this.equality()};
+    }
+    return left;
+  },
+
+  equality: function() {
+    var left = this.relational();
+    var token;
+    while ((token = this.expect('==','!=','===','!=='))) {
+      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.relational() };
+    }
+    return left;
+  },
+
+  relational: function() {
+    var left = this.additive();
+    var token;
+    while ((token = this.expect('<', '>', '<=', '>='))) {
+      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.additive() };
+    }
+    return left;
+  },
+
+  additive: function() {
+    var left = this.multiplicative();
+    var token;
+    while ((token = this.expect('+','-'))) {
+      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.multiplicative() };
+    }
+    return left;
+  },
+
+  multiplicative: function() {
+    var left = this.unary();
+    var token;
+    while ((token = this.expect('*','/','%'))) {
+      left = { type: AST.BinaryExpression, operator: token.text, left: left, right: this.unary() };
+    }
+    return left;
+  },
+
+  unary: function() {
+    var token;
+    if ((token = this.expect('+', '-', '!'))) {
+      return { type: AST.UnaryExpression, operator: token.text, prefix: true, argument: this.unary() };
+    } else {
+      return this.primary();
+    }
+  },
+
+  primary: function() {
+    var primary;
+    if (this.expect('(')) {
+      primary = this.filterChain();
+      this.consume(')');
+    } else if (this.expect('[')) {
+      primary = this.arrayDeclaration();
+    } else if (this.expect('{')) {
+      primary = this.object();
+    } else if (this.selfReferential.hasOwnProperty(this.peek().text)) {
+      primary = copy(this.selfReferential[this.consume().text]);
+    } else if (this.options.literals.hasOwnProperty(this.peek().text)) {
+      primary = { type: AST.Literal, value: this.options.literals[this.consume().text]};
+    } else if (this.peek().identifier) {
+      primary = this.identifier();
+    } else if (this.peek().constant) {
+      primary = this.constant();
+    } else {
+      this.throwError('not a primary expression', this.peek());
+    }
+
+    var next;
+    while ((next = this.expect('(', '[', '.'))) {
+      if (next.text === '(') {
+        primary = {type: AST.CallExpression, callee: primary, arguments: this.parseArguments() };
+        this.consume(')');
+      } else if (next.text === '[') {
+        primary = { type: AST.MemberExpression, object: primary, property: this.expression(), computed: true };
+        this.consume(']');
+      } else if (next.text === '.') {
+        primary = { type: AST.MemberExpression, object: primary, property: this.identifier(), computed: false };
+      } else {
+        this.throwError('IMPOSSIBLE');
+      }
+    }
+    return primary;
+  },
+
+  filter: function(baseExpression) {
+    var args = [baseExpression];
+    var result = {type: AST.CallExpression, callee: this.identifier(), arguments: args, filter: true};
+
+    while (this.expect(':')) {
+      args.push(this.expression());
+    }
+
+    return result;
+  },
+
+  parseArguments: function() {
+    var args = [];
+    if (this.peekToken().text !== ')') {
+      do {
+        args.push(this.filterChain());
+      } while (this.expect(','));
+    }
+    return args;
+  },
+
+  identifier: function() {
+    var token = this.consume();
+    if (!token.identifier) {
+      this.throwError('is not a valid identifier', token);
+    }
+    return { type: AST.Identifier, name: token.text };
+  },
+
+  constant: function() {
+    // TODO check that it is a constant
+    return { type: AST.Literal, value: this.consume().value };
+  },
+
+  arrayDeclaration: function() {
+    var elements = [];
+    if (this.peekToken().text !== ']') {
+      do {
+        if (this.peek(']')) {
+          // Support trailing commas per ES5.1.
+          break;
+        }
+        elements.push(this.expression());
+      } while (this.expect(','));
+    }
+    this.consume(']');
+
+    return { type: AST.ArrayExpression, elements: elements };
+  },
+
+  object: function() {
+    var properties = [], property;
+    if (this.peekToken().text !== '}') {
+      do {
+        if (this.peek('}')) {
+          // Support trailing commas per ES5.1.
+          break;
+        }
+        property = {type: AST.Property, kind: 'init'};
+        if (this.peek().constant) {
+          property.key = this.constant();
+          property.computed = false;
+          this.consume(':');
+          property.value = this.expression();
+        } else if (this.peek().identifier) {
+          property.key = this.identifier();
+          property.computed = false;
+          if (this.peek(':')) {
+            this.consume(':');
+            property.value = this.expression();
+          } else {
+            property.value = property.key;
+          }
+        } else if (this.peek('[')) {
+          this.consume('[');
+          property.key = this.expression();
+          this.consume(']');
+          property.computed = true;
+          this.consume(':');
+          property.value = this.expression();
+        } else {
+          this.throwError('invalid key', this.peek());
+        }
+        properties.push(property);
+      } while (this.expect(','));
+    }
+    this.consume('}');
+
+    return {type: AST.ObjectExpression, properties: properties };
+  },
+
+  throwError: function(msg, token) {
+    throw $parseMinErr('syntax',
+        'Syntax Error: Token \'{0}\' {1} at column {2} of the expression [{3}] starting at [{4}].',
+          token.text, msg, (token.index + 1), this.text, this.text.substring(token.index));
+  },
+
+  consume: function(e1) {
+    if (this.tokens.length === 0) {
+      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);
+    }
+
+    var token = this.expect(e1);
+    if (!token) {
+      this.throwError('is unexpected, expecting [' + e1 + ']', this.peek());
+    }
+    return token;
+  },
+
+  peekToken: function() {
+    if (this.tokens.length === 0) {
+      throw $parseMinErr('ueoe', 'Unexpected end of expression: {0}', this.text);
+    }
+    return this.tokens[0];
+  },
+
+  peek: function(e1, e2, e3, e4) {
+    return this.peekAhead(0, e1, e2, e3, e4);
+  },
+
+  peekAhead: function(i, e1, e2, e3, e4) {
+    if (this.tokens.length > i) {
+      var token = this.tokens[i];
+      var t = token.text;
+      if (t === e1 || t === e2 || t === e3 || t === e4 ||
+          (!e1 && !e2 && !e3 && !e4)) {
+        return token;
+      }
+    }
+    return false;
+  },
+
+  expect: function(e1, e2, e3, e4) {
+    var token = this.peek(e1, e2, e3, e4);
+    if (token) {
+      this.tokens.shift();
+      return token;
+    }
+    return false;
+  },
+
+  selfReferential: {
+    'this': {type: AST.ThisExpression },
+    '$locals': {type: AST.LocalsExpression }
+  }
+};
+
+function ifDefined(v, d) {
+  return typeof v !== 'undefined' ? v : d;
+}
+
+function plusFn(l, r) {
+  if (typeof l === 'undefined') return r;
+  if (typeof r === 'undefined') return l;
+  return l + r;
+}
+
+function isStateless($filter, filterName) {
+  var fn = $filter(filterName);
+  return !fn.$stateful;
+}
+
+var PURITY_ABSOLUTE = 1;
+var PURITY_RELATIVE = 2;
+
+// Detect nodes which could depend on non-shallow state of objects
+function isPure(node, parentIsPure) {
+  switch (node.type) {
+    // Computed members might invoke a stateful toString()
+    case AST.MemberExpression:
+      if (node.computed) {
+        return false;
+      }
+      break;
+
+    // Unary always convert to primative
+    case AST.UnaryExpression:
+      return PURITY_ABSOLUTE;
+
+    // The binary + operator can invoke a stateful toString().
+    case AST.BinaryExpression:
+      return node.operator !== '+' ? PURITY_ABSOLUTE : false;
+
+    // Functions / filters probably read state from within objects
+    case AST.CallExpression:
+      return false;
+  }
+
+  return (undefined === parentIsPure) ? PURITY_RELATIVE : parentIsPure;
+}
+
+function findConstantAndWatchExpressions(ast, $filter, parentIsPure) {
+  var allConstants;
+  var argsToWatch;
+  var isStatelessFilter;
+
+  var astIsPure = ast.isPure = isPure(ast, parentIsPure);
+
+  switch (ast.type) {
+  case AST.Program:
+    allConstants = true;
+    forEach(ast.body, function(expr) {
+      findConstantAndWatchExpressions(expr.expression, $filter, astIsPure);
+      allConstants = allConstants && expr.expression.constant;
+    });
+    ast.constant = allConstants;
+    break;
+  case AST.Literal:
+    ast.constant = true;
+    ast.toWatch = [];
+    break;
+  case AST.UnaryExpression:
+    findConstantAndWatchExpressions(ast.argument, $filter, astIsPure);
+    ast.constant = ast.argument.constant;
+    ast.toWatch = ast.argument.toWatch;
+    break;
+  case AST.BinaryExpression:
+    findConstantAndWatchExpressions(ast.left, $filter, astIsPure);
+    findConstantAndWatchExpressions(ast.right, $filter, astIsPure);
+    ast.constant = ast.left.constant && ast.right.constant;
+    ast.toWatch = ast.left.toWatch.concat(ast.right.toWatch);
+    break;
+  case AST.LogicalExpression:
+    findConstantAndWatchExpressions(ast.left, $filter, astIsPure);
+    findConstantAndWatchExpressions(ast.right, $filter, astIsPure);
+    ast.constant = ast.left.constant && ast.right.constant;
+    ast.toWatch = ast.constant ? [] : [ast];
+    break;
+  case AST.ConditionalExpression:
+    findConstantAndWatchExpressions(ast.test, $filter, astIsPure);
+    findConstantAndWatchExpressions(ast.alternate, $filter, astIsPure);
+    findConstantAndWatchExpressions(ast.consequent, $filter, astIsPure);
+    ast.constant = ast.test.constant && ast.alternate.constant && ast.consequent.constant;
+    ast.toWatch = ast.constant ? [] : [ast];
+    break;
+  case AST.Identifier:
+    ast.constant = false;
+    ast.toWatch = [ast];
+    break;
+  case AST.MemberExpression:
+    findConstantAndWatchExpressions(ast.object, $filter, astIsPure);
+    if (ast.computed) {
+      findConstantAndWatchExpressions(ast.property, $filter, astIsPure);
+    }
+    ast.constant = ast.object.constant && (!ast.computed || ast.property.constant);
+    ast.toWatch = ast.constant ? [] : [ast];
+    break;
+  case AST.CallExpression:
+    isStatelessFilter = ast.filter ? isStateless($filter, ast.callee.name) : false;
+    allConstants = isStatelessFilter;
+    argsToWatch = [];
+    forEach(ast.arguments, function(expr) {
+      findConstantAndWatchExpressions(expr, $filter, astIsPure);
+      allConstants = allConstants && expr.constant;
+      argsToWatch.push.apply(argsToWatch, expr.toWatch);
+    });
+    ast.constant = allConstants;
+    ast.toWatch = isStatelessFilter ? argsToWatch : [ast];
+    break;
+  case AST.AssignmentExpression:
+    findConstantAndWatchExpressions(ast.left, $filter, astIsPure);
+    findConstantAndWatchExpressions(ast.right, $filter, astIsPure);
+    ast.constant = ast.left.constant && ast.right.constant;
+    ast.toWatch = [ast];
+    break;
+  case AST.ArrayExpression:
+    allConstants = true;
+    argsToWatch = [];
+    forEach(ast.elements, function(expr) {
+      findConstantAndWatchExpressions(expr, $filter, astIsPure);
+      allConstants = allConstants && expr.constant;
+      argsToWatch.push.apply(argsToWatch, expr.toWatch);
+    });
+    ast.constant = allConstants;
+    ast.toWatch = argsToWatch;
+    break;
+  case AST.ObjectExpression:
+    allConstants = true;
+    argsToWatch = [];
+    forEach(ast.properties, function(property) {
+      findConstantAndWatchExpressions(property.value, $filter, astIsPure);
+      allConstants = allConstants && property.value.constant;
+      argsToWatch.push.apply(argsToWatch, property.value.toWatch);
+      if (property.computed) {
+        //`{[key]: value}` implicitly does `key.toString()` which may be non-pure
+        findConstantAndWatchExpressions(property.key, $filter, /*parentIsPure=*/false);
+        allConstants = allConstants && property.key.constant;
+        argsToWatch.push.apply(argsToWatch, property.key.toWatch);
+      }
+    });
+    ast.constant = allConstants;
+    ast.toWatch = argsToWatch;
+    break;
+  case AST.ThisExpression:
+    ast.constant = false;
+    ast.toWatch = [];
+    break;
+  case AST.LocalsExpression:
+    ast.constant = false;
+    ast.toWatch = [];
+    break;
+  }
+}
+
+function getInputs(body) {
+  if (body.length !== 1) return;
+  var lastExpression = body[0].expression;
+  var candidate = lastExpression.toWatch;
+  if (candidate.length !== 1) return candidate;
+  return candidate[0] !== lastExpression ? candidate : undefined;
+}
+
+function isAssignable(ast) {
+  return ast.type === AST.Identifier || ast.type === AST.MemberExpression;
+}
+
+function assignableAST(ast) {
+  if (ast.body.length === 1 && isAssignable(ast.body[0].expression)) {
+    return {type: AST.AssignmentExpression, left: ast.body[0].expression, right: {type: AST.NGValueParameter}, operator: '='};
+  }
+}
+
+function isLiteral(ast) {
+  return ast.body.length === 0 ||
+      ast.body.length === 1 && (
+      ast.body[0].expression.type === AST.Literal ||
+      ast.body[0].expression.type === AST.ArrayExpression ||
+      ast.body[0].expression.type === AST.ObjectExpression);
+}
+
+function isConstant(ast) {
+  return ast.constant;
+}
+
+function ASTCompiler($filter) {
+  this.$filter = $filter;
+}
+
+ASTCompiler.prototype = {
+  compile: function(ast) {
+    var self = this;
+    this.state = {
+      nextId: 0,
+      filters: {},
+      fn: {vars: [], body: [], own: {}},
+      assign: {vars: [], body: [], own: {}},
+      inputs: []
+    };
+    findConstantAndWatchExpressions(ast, self.$filter);
+    var extra = '';
+    var assignable;
+    this.stage = 'assign';
+    if ((assignable = assignableAST(ast))) {
+      this.state.computing = 'assign';
+      var result = this.nextId();
+      this.recurse(assignable, result);
+      this.return_(result);
+      extra = 'fn.assign=' + this.generateFunction('assign', 's,v,l');
+    }
+    var toWatch = getInputs(ast.body);
+    self.stage = 'inputs';
+    forEach(toWatch, function(watch, key) {
+      var fnKey = 'fn' + key;
+      self.state[fnKey] = {vars: [], body: [], own: {}};
+      self.state.computing = fnKey;
+      var intoId = self.nextId();
+      self.recurse(watch, intoId);
+      self.return_(intoId);
+      self.state.inputs.push({name: fnKey, isPure: watch.isPure});
+      watch.watchId = key;
+    });
+    this.state.computing = 'fn';
+    this.stage = 'main';
+    this.recurse(ast);
+    var fnString =
+      // The build and minification steps remove the string "use strict" from the code, but this is done using a regex.
+      // This is a workaround for this until we do a better job at only removing the prefix only when we should.
+      '"' + this.USE + ' ' + this.STRICT + '";\n' +
+      this.filterPrefix() +
+      'var fn=' + this.generateFunction('fn', 's,l,a,i') +
+      extra +
+      this.watchFns() +
+      'return fn;';
+
+    // eslint-disable-next-line no-new-func
+    var fn = (new Function('$filter',
+        'getStringValue',
+        'ifDefined',
+        'plus',
+        fnString))(
+          this.$filter,
+          getStringValue,
+          ifDefined,
+          plusFn);
+    this.state = this.stage = undefined;
+    return fn;
+  },
+
+  USE: 'use',
+
+  STRICT: 'strict',
+
+  watchFns: function() {
+    var result = [];
+    var inputs = this.state.inputs;
+    var self = this;
+    forEach(inputs, function(input) {
+      result.push('var ' + input.name + '=' + self.generateFunction(input.name, 's'));
+      if (input.isPure) {
+        result.push(input.name, '.isPure=' + JSON.stringify(input.isPure) + ';');
+      }
+    });
+    if (inputs.length) {
+      result.push('fn.inputs=[' + inputs.map(function(i) { return i.name; }).join(',') + '];');
+    }
+    return result.join('');
+  },
+
+  generateFunction: function(name, params) {
+    return 'function(' + params + '){' +
+        this.varsPrefix(name) +
+        this.body(name) +
+        '};';
+  },
+
+  filterPrefix: function() {
+    var parts = [];
+    var self = this;
+    forEach(this.state.filters, function(id, filter) {
+      parts.push(id + '=$filter(' + self.escape(filter) + ')');
+    });
+    if (parts.length) return 'var ' + parts.join(',') + ';';
+    return '';
+  },
+
+  varsPrefix: function(section) {
+    return this.state[section].vars.length ? 'var ' + this.state[section].vars.join(',') + ';' : '';
+  },
+
+  body: function(section) {
+    return this.state[section].body.join('');
+  },
+
+  recurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
+    var left, right, self = this, args, expression, computed;
+    recursionFn = recursionFn || noop;
+    if (!skipWatchIdCheck && isDefined(ast.watchId)) {
+      intoId = intoId || this.nextId();
+      this.if_('i',
+        this.lazyAssign(intoId, this.computedMember('i', ast.watchId)),
+        this.lazyRecurse(ast, intoId, nameId, recursionFn, create, true)
+      );
+      return;
+    }
+    switch (ast.type) {
+    case AST.Program:
+      forEach(ast.body, function(expression, pos) {
+        self.recurse(expression.expression, undefined, undefined, function(expr) { right = expr; });
+        if (pos !== ast.body.length - 1) {
+          self.current().body.push(right, ';');
+        } else {
+          self.return_(right);
+        }
+      });
+      break;
+    case AST.Literal:
+      expression = this.escape(ast.value);
+      this.assign(intoId, expression);
+      recursionFn(intoId || expression);
+      break;
+    case AST.UnaryExpression:
+      this.recurse(ast.argument, undefined, undefined, function(expr) { right = expr; });
+      expression = ast.operator + '(' + this.ifDefined(right, 0) + ')';
+      this.assign(intoId, expression);
+      recursionFn(expression);
+      break;
+    case AST.BinaryExpression:
+      this.recurse(ast.left, undefined, undefined, function(expr) { left = expr; });
+      this.recurse(ast.right, undefined, undefined, function(expr) { right = expr; });
+      if (ast.operator === '+') {
+        expression = this.plus(left, right);
+      } else if (ast.operator === '-') {
+        expression = this.ifDefined(left, 0) + ast.operator + this.ifDefined(right, 0);
+      } else {
+        expression = '(' + left + ')' + ast.operator + '(' + right + ')';
+      }
+      this.assign(intoId, expression);
+      recursionFn(expression);
+      break;
+    case AST.LogicalExpression:
+      intoId = intoId || this.nextId();
+      self.recurse(ast.left, intoId);
+      self.if_(ast.operator === '&&' ? intoId : self.not(intoId), self.lazyRecurse(ast.right, intoId));
+      recursionFn(intoId);
+      break;
+    case AST.ConditionalExpression:
+      intoId = intoId || this.nextId();
+      self.recurse(ast.test, intoId);
+      self.if_(intoId, self.lazyRecurse(ast.alternate, intoId), self.lazyRecurse(ast.consequent, intoId));
+      recursionFn(intoId);
+      break;
+    case AST.Identifier:
+      intoId = intoId || this.nextId();
+      if (nameId) {
+        nameId.context = self.stage === 'inputs' ? 's' : this.assign(this.nextId(), this.getHasOwnProperty('l', ast.name) + '?l:s');
+        nameId.computed = false;
+        nameId.name = ast.name;
+      }
+      self.if_(self.stage === 'inputs' || self.not(self.getHasOwnProperty('l', ast.name)),
+        function() {
+          self.if_(self.stage === 'inputs' || 's', function() {
+            if (create && create !== 1) {
+              self.if_(
+                self.isNull(self.nonComputedMember('s', ast.name)),
+                self.lazyAssign(self.nonComputedMember('s', ast.name), '{}'));
+            }
+            self.assign(intoId, self.nonComputedMember('s', ast.name));
+          });
+        }, intoId && self.lazyAssign(intoId, self.nonComputedMember('l', ast.name))
+        );
+      recursionFn(intoId);
+      break;
+    case AST.MemberExpression:
+      left = nameId && (nameId.context = this.nextId()) || this.nextId();
+      intoId = intoId || this.nextId();
+      self.recurse(ast.object, left, undefined, function() {
+        self.if_(self.notNull(left), function() {
+          if (ast.computed) {
+            right = self.nextId();
+            self.recurse(ast.property, right);
+            self.getStringValue(right);
+            if (create && create !== 1) {
+              self.if_(self.not(self.computedMember(left, right)), self.lazyAssign(self.computedMember(left, right), '{}'));
+            }
+            expression = self.computedMember(left, right);
+            self.assign(intoId, expression);
+            if (nameId) {
+              nameId.computed = true;
+              nameId.name = right;
+            }
+          } else {
+            if (create && create !== 1) {
+              self.if_(self.isNull(self.nonComputedMember(left, ast.property.name)), self.lazyAssign(self.nonComputedMember(left, ast.property.name), '{}'));
+            }
+            expression = self.nonComputedMember(left, ast.property.name);
+            self.assign(intoId, expression);
+            if (nameId) {
+              nameId.computed = false;
+              nameId.name = ast.property.name;
+            }
+          }
+        }, function() {
+          self.assign(intoId, 'undefined');
+        });
+        recursionFn(intoId);
+      }, !!create);
+      break;
+    case AST.CallExpression:
+      intoId = intoId || this.nextId();
+      if (ast.filter) {
+        right = self.filter(ast.callee.name);
+        args = [];
+        forEach(ast.arguments, function(expr) {
+          var argument = self.nextId();
+          self.recurse(expr, argument);
+          args.push(argument);
+        });
+        expression = right + '(' + args.join(',') + ')';
+        self.assign(intoId, expression);
+        recursionFn(intoId);
+      } else {
+        right = self.nextId();
+        left = {};
+        args = [];
+        self.recurse(ast.callee, right, left, function() {
+          self.if_(self.notNull(right), function() {
+            forEach(ast.arguments, function(expr) {
+              self.recurse(expr, ast.constant ? undefined : self.nextId(), undefined, function(argument) {
+                args.push(argument);
+              });
+            });
+            if (left.name) {
+              expression = self.member(left.context, left.name, left.computed) + '(' + args.join(',') + ')';
+            } else {
+              expression = right + '(' + args.join(',') + ')';
+            }
+            self.assign(intoId, expression);
+          }, function() {
+            self.assign(intoId, 'undefined');
+          });
+          recursionFn(intoId);
+        });
+      }
+      break;
+    case AST.AssignmentExpression:
+      right = this.nextId();
+      left = {};
+      this.recurse(ast.left, undefined, left, function() {
+        self.if_(self.notNull(left.context), function() {
+          self.recurse(ast.right, right);
+          expression = self.member(left.context, left.name, left.computed) + ast.operator + right;
+          self.assign(intoId, expression);
+          recursionFn(intoId || expression);
+        });
+      }, 1);
+      break;
+    case AST.ArrayExpression:
+      args = [];
+      forEach(ast.elements, function(expr) {
+        self.recurse(expr, ast.constant ? undefined : self.nextId(), undefined, function(argument) {
+          args.push(argument);
+        });
+      });
+      expression = '[' + args.join(',') + ']';
+      this.assign(intoId, expression);
+      recursionFn(intoId || expression);
+      break;
+    case AST.ObjectExpression:
+      args = [];
+      computed = false;
+      forEach(ast.properties, function(property) {
+        if (property.computed) {
+          computed = true;
+        }
+      });
+      if (computed) {
+        intoId = intoId || this.nextId();
+        this.assign(intoId, '{}');
+        forEach(ast.properties, function(property) {
+          if (property.computed) {
+            left = self.nextId();
+            self.recurse(property.key, left);
+          } else {
+            left = property.key.type === AST.Identifier ?
+                       property.key.name :
+                       ('' + property.key.value);
+          }
+          right = self.nextId();
+          self.recurse(property.value, right);
+          self.assign(self.member(intoId, left, property.computed), right);
+        });
+      } else {
+        forEach(ast.properties, function(property) {
+          self.recurse(property.value, ast.constant ? undefined : self.nextId(), undefined, function(expr) {
+            args.push(self.escape(
+                property.key.type === AST.Identifier ? property.key.name :
+                  ('' + property.key.value)) +
+                ':' + expr);
+          });
+        });
+        expression = '{' + args.join(',') + '}';
+        this.assign(intoId, expression);
+      }
+      recursionFn(intoId || expression);
+      break;
+    case AST.ThisExpression:
+      this.assign(intoId, 's');
+      recursionFn(intoId || 's');
+      break;
+    case AST.LocalsExpression:
+      this.assign(intoId, 'l');
+      recursionFn(intoId || 'l');
+      break;
+    case AST.NGValueParameter:
+      this.assign(intoId, 'v');
+      recursionFn(intoId || 'v');
+      break;
+    }
+  },
+
+  getHasOwnProperty: function(element, property) {
+    var key = element + '.' + property;
+    var own = this.current().own;
+    if (!own.hasOwnProperty(key)) {
+      own[key] = this.nextId(false, element + '&&(' + this.escape(property) + ' in ' + element + ')');
+    }
+    return own[key];
+  },
+
+  assign: function(id, value) {
+    if (!id) return;
+    this.current().body.push(id, '=', value, ';');
+    return id;
+  },
+
+  filter: function(filterName) {
+    if (!this.state.filters.hasOwnProperty(filterName)) {
+      this.state.filters[filterName] = this.nextId(true);
+    }
+    return this.state.filters[filterName];
+  },
+
+  ifDefined: function(id, defaultValue) {
+    return 'ifDefined(' + id + ',' + this.escape(defaultValue) + ')';
+  },
+
+  plus: function(left, right) {
+    return 'plus(' + left + ',' + right + ')';
+  },
+
+  return_: function(id) {
+    this.current().body.push('return ', id, ';');
+  },
+
+  if_: function(test, alternate, consequent) {
+    if (test === true) {
+      alternate();
+    } else {
+      var body = this.current().body;
+      body.push('if(', test, '){');
+      alternate();
+      body.push('}');
+      if (consequent) {
+        body.push('else{');
+        consequent();
+        body.push('}');
+      }
+    }
+  },
+
+  not: function(expression) {
+    return '!(' + expression + ')';
+  },
+
+  isNull: function(expression) {
+    return expression + '==null';
+  },
+
+  notNull: function(expression) {
+    return expression + '!=null';
+  },
+
+  nonComputedMember: function(left, right) {
+    var SAFE_IDENTIFIER = /^[$_a-zA-Z][$_a-zA-Z0-9]*$/;
+    var UNSAFE_CHARACTERS = /[^$_a-zA-Z0-9]/g;
+    if (SAFE_IDENTIFIER.test(right)) {
+      return left + '.' + right;
+    } else {
+      return left  + '["' + right.replace(UNSAFE_CHARACTERS, this.stringEscapeFn) + '"]';
+    }
+  },
+
+  computedMember: function(left, right) {
+    return left + '[' + right + ']';
+  },
+
+  member: function(left, right, computed) {
+    if (computed) return this.computedMember(left, right);
+    return this.nonComputedMember(left, right);
+  },
+
+  getStringValue: function(item) {
+    this.assign(item, 'getStringValue(' + item + ')');
+  },
+
+  lazyRecurse: function(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck) {
+    var self = this;
+    return function() {
+      self.recurse(ast, intoId, nameId, recursionFn, create, skipWatchIdCheck);
+    };
+  },
+
+  lazyAssign: function(id, value) {
+    var self = this;
+    return function() {
+      self.assign(id, value);
+    };
+  },
+
+  stringEscapeRegex: /[^ a-zA-Z0-9]/g,
+
+  stringEscapeFn: function(c) {
+    return '\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4);
+  },
+
+  escape: function(value) {
+    if (isString(value)) return '\'' + value.replace(this.stringEscapeRegex, this.stringEscapeFn) + '\'';
+    if (isNumber(value)) return value.toString();
+    if (value === true) return 'true';
+    if (value === false) return 'false';
+    if (value === null) return 'null';
+    if (typeof value === 'undefined') return 'undefined';
+
+    throw $parseMinErr('esc', 'IMPOSSIBLE');
+  },
+
+  nextId: function(skip, init) {
+    var id = 'v' + (this.state.nextId++);
+    if (!skip) {
+      this.current().vars.push(id + (init ? '=' + init : ''));
+    }
+    return id;
+  },
+
+  current: function() {
+    return this.state[this.state.computing];
+  }
+};
+
+
+function ASTInterpreter($filter) {
+  this.$filter = $filter;
+}
+
+ASTInterpreter.prototype = {
+  compile: function(ast) {
+    var self = this;
+    findConstantAndWatchExpressions(ast, self.$filter);
+    var assignable;
+    var assign;
+    if ((assignable = assignableAST(ast))) {
+      assign = this.recurse(assignable);
+    }
+    var toWatch = getInputs(ast.body);
+    var inputs;
+    if (toWatch) {
+      inputs = [];
+      forEach(toWatch, function(watch, key) {
+        var input = self.recurse(watch);
+        input.isPure = watch.isPure;
+        watch.input = input;
+        inputs.push(input);
+        watch.watchId = key;
+      });
+    }
+    var expressions = [];
+    forEach(ast.body, function(expression) {
+      expressions.push(self.recurse(expression.expression));
+    });
+    var fn = ast.body.length === 0 ? noop :
+             ast.body.length === 1 ? expressions[0] :
+             function(scope, locals) {
+               var lastValue;
+               forEach(expressions, function(exp) {
+                 lastValue = exp(scope, locals);
+               });
+               return lastValue;
+             };
+    if (assign) {
+      fn.assign = function(scope, value, locals) {
+        return assign(scope, locals, value);
+      };
+    }
+    if (inputs) {
+      fn.inputs = inputs;
+    }
+    return fn;
+  },
+
+  recurse: function(ast, context, create) {
+    var left, right, self = this, args;
+    if (ast.input) {
+      return this.inputs(ast.input, ast.watchId);
+    }
+    switch (ast.type) {
+    case AST.Literal:
+      return this.value(ast.value, context);
+    case AST.UnaryExpression:
+      right = this.recurse(ast.argument);
+      return this['unary' + ast.operator](right, context);
+    case AST.BinaryExpression:
+      left = this.recurse(ast.left);
+      right = this.recurse(ast.right);
+      return this['binary' + ast.operator](left, right, context);
+    case AST.LogicalExpression:
+      left = this.recurse(ast.left);
+      right = this.recurse(ast.right);
+      return this['binary' + ast.operator](left, right, context);
+    case AST.ConditionalExpression:
+      return this['ternary?:'](
+        this.recurse(ast.test),
+        this.recurse(ast.alternate),
+        this.recurse(ast.consequent),
+        context
+      );
+    case AST.Identifier:
+      return self.identifier(ast.name, context, create);
+    case AST.MemberExpression:
+      left = this.recurse(ast.object, false, !!create);
+      if (!ast.computed) {
+        right = ast.property.name;
+      }
+      if (ast.computed) right = this.recurse(ast.property);
+      return ast.computed ?
+        this.computedMember(left, right, context, create) :
+        this.nonComputedMember(left, right, context, create);
+    case AST.CallExpression:
+      args = [];
+      forEach(ast.arguments, function(expr) {
+        args.push(self.recurse(expr));
+      });
+      if (ast.filter) right = this.$filter(ast.callee.name);
+      if (!ast.filter) right = this.recurse(ast.callee, true);
+      return ast.filter ?
+        function(scope, locals, assign, inputs) {
+          var values = [];
+          for (var i = 0; i < args.length; ++i) {
+            values.push(args[i](scope, locals, assign, inputs));
+          }
+          var value = right.apply(undefined, values, inputs);
+          return context ? {context: undefined, name: undefined, value: value} : value;
+        } :
+        function(scope, locals, assign, inputs) {
+          var rhs = right(scope, locals, assign, inputs);
+          var value;
+          if (rhs.value != null) {
+            var values = [];
+            for (var i = 0; i < args.length; ++i) {
+              values.push(args[i](scope, locals, assign, inputs));
+            }
+            value = rhs.value.apply(rhs.context, values);
+          }
+          return context ? {value: value} : value;
+        };
+    case AST.AssignmentExpression:
+      left = this.recurse(ast.left, true, 1);
+      right = this.recurse(ast.right);
+      return function(scope, locals, assign, inputs) {
+        var lhs = left(scope, locals, assign, inputs);
+        var rhs = right(scope, locals, assign, inputs);
+        lhs.context[lhs.name] = rhs;
+        return context ? {value: rhs} : rhs;
+      };
+    case AST.ArrayExpression:
+      args = [];
+      forEach(ast.elements, function(expr) {
+        args.push(self.recurse(expr));
+      });
+      return function(scope, locals, assign, inputs) {
+        var value = [];
+        for (var i = 0; i < args.length; ++i) {
+          value.push(args[i](scope, locals, assign, inputs));
+        }
+        return context ? {value: value} : value;
+      };
+    case AST.ObjectExpression:
+      args = [];
+      forEach(ast.properties, function(property) {
+        if (property.computed) {
+          args.push({key: self.recurse(property.key),
+                     computed: true,
+                     value: self.recurse(property.value)
+          });
+        } else {
+          args.push({key: property.key.type === AST.Identifier ?
+                          property.key.name :
+                          ('' + property.key.value),
+                     computed: false,
+                     value: self.recurse(property.value)
+          });
+        }
+      });
+      return function(scope, locals, assign, inputs) {
+        var value = {};
+        for (var i = 0; i < args.length; ++i) {
+          if (args[i].computed) {
+            value[args[i].key(scope, locals, assign, inputs)] = args[i].value(scope, locals, assign, inputs);
+          } else {
+            value[args[i].key] = args[i].value(scope, locals, assign, inputs);
+          }
+        }
+        return context ? {value: value} : value;
+      };
+    case AST.ThisExpression:
+      return function(scope) {
+        return context ? {value: scope} : scope;
+      };
+    case AST.LocalsExpression:
+      return function(scope, locals) {
+        return context ? {value: locals} : locals;
+      };
+    case AST.NGValueParameter:
+      return function(scope, locals, assign) {
+        return context ? {value: assign} : assign;
+      };
+    }
+  },
+
+  'unary+': function(argument, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = argument(scope, locals, assign, inputs);
+      if (isDefined(arg)) {
+        arg = +arg;
+      } else {
+        arg = 0;
+      }
+      return context ? {value: arg} : arg;
+    };
+  },
+  'unary-': function(argument, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = argument(scope, locals, assign, inputs);
+      if (isDefined(arg)) {
+        arg = -arg;
+      } else {
+        arg = -0;
+      }
+      return context ? {value: arg} : arg;
+    };
+  },
+  'unary!': function(argument, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = !argument(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary+': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var lhs = left(scope, locals, assign, inputs);
+      var rhs = right(scope, locals, assign, inputs);
+      var arg = plusFn(lhs, rhs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary-': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var lhs = left(scope, locals, assign, inputs);
+      var rhs = right(scope, locals, assign, inputs);
+      var arg = (isDefined(lhs) ? lhs : 0) - (isDefined(rhs) ? rhs : 0);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary*': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) * right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary/': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) / right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary%': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) % right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary===': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) === right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary!==': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) !== right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary==': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      // eslint-disable-next-line eqeqeq
+      var arg = left(scope, locals, assign, inputs) == right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary!=': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      // eslint-disable-next-line eqeqeq
+      var arg = left(scope, locals, assign, inputs) != right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary<': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) < right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary>': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) > right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary<=': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) <= right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary>=': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) >= right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary&&': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) && right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'binary||': function(left, right, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = left(scope, locals, assign, inputs) || right(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  'ternary?:': function(test, alternate, consequent, context) {
+    return function(scope, locals, assign, inputs) {
+      var arg = test(scope, locals, assign, inputs) ? alternate(scope, locals, assign, inputs) : consequent(scope, locals, assign, inputs);
+      return context ? {value: arg} : arg;
+    };
+  },
+  value: function(value, context) {
+    return function() { return context ? {context: undefined, name: undefined, value: value} : value; };
+  },
+  identifier: function(name, context, create) {
+    return function(scope, locals, assign, inputs) {
+      var base = locals && (name in locals) ? locals : scope;
+      if (create && create !== 1 && base && base[name] == null) {
+        base[name] = {};
+      }
+      var value = base ? base[name] : undefined;
+      if (context) {
+        return {context: base, name: name, value: value};
+      } else {
+        return value;
+      }
+    };
+  },
+  computedMember: function(left, right, context, create) {
+    return function(scope, locals, assign, inputs) {
+      var lhs = left(scope, locals, assign, inputs);
+      var rhs;
+      var value;
+      if (lhs != null) {
+        rhs = right(scope, locals, assign, inputs);
+        rhs = getStringValue(rhs);
+        if (create && create !== 1) {
+          if (lhs && !(lhs[rhs])) {
+            lhs[rhs] = {};
+          }
+        }
+        value = lhs[rhs];
+      }
+      if (context) {
+        return {context: lhs, name: rhs, value: value};
+      } else {
+        return value;
+      }
+    };
+  },
+  nonComputedMember: function(left, right, context, create) {
+    return function(scope, locals, assign, inputs) {
+      var lhs = left(scope, locals, assign, inputs);
+      if (create && create !== 1) {
+        if (lhs && lhs[right] == null) {
+          lhs[right] = {};
+        }
+      }
+      var value = lhs != null ? lhs[right] : undefined;
+      if (context) {
+        return {context: lhs, name: right, value: value};
+      } else {
+        return value;
+      }
+    };
+  },
+  inputs: function(input, watchId) {
+    return function(scope, value, locals, inputs) {
+      if (inputs) return inputs[watchId];
+      return input(scope, value, locals);
+    };
+  }
+};
+
+/**
+ * @constructor
+ */
+function Parser(lexer, $filter, options) {
+  this.ast = new AST(lexer, options);
+  this.astCompiler = options.csp ? new ASTInterpreter($filter) :
+                                   new ASTCompiler($filter);
+}
+
+Parser.prototype = {
+  constructor: Parser,
+
+  parse: function(text) {
+    var ast = this.getAst(text);
+    var fn = this.astCompiler.compile(ast.ast);
+    fn.literal = isLiteral(ast.ast);
+    fn.constant = isConstant(ast.ast);
+    fn.oneTime = ast.oneTime;
+    return fn;
+  },
+
+  getAst: function(exp) {
+    var oneTime = false;
+    exp = exp.trim();
+
+    if (exp.charAt(0) === ':' && exp.charAt(1) === ':') {
+      oneTime = true;
+      exp = exp.substring(2);
+    }
+    return {
+      ast: this.ast.ast(exp),
+      oneTime: oneTime
+    };
+  }
+};
+
+function getValueOf(value) {
+  return isFunction(value.valueOf) ? value.valueOf() : objectValueOf.call(value);
+}
+
+///////////////////////////////////
+
+/**
+ * @ngdoc service
+ * @name $parse
+ * @kind function
+ *
+ * @description
+ *
+ * Converts AngularJS {@link guide/expression expression} into a function.
+ *
+ * ```js
+ *   var getter = $parse('user.name');
+ *   var setter = getter.assign;
+ *   var context = {user:{name:'AngularJS'}};
+ *   var locals = {user:{name:'local'}};
+ *
+ *   expect(getter(context)).toEqual('AngularJS');
+ *   setter(context, 'newValue');
+ *   expect(context.user.name).toEqual('newValue');
+ *   expect(getter(context, locals)).toEqual('local');
+ * ```
+ *
+ *
+ * @param {string} expression String expression to compile.
+ * @returns {function(context, locals)} a function which represents the compiled expression:
+ *
+ *    * `context` – `{object}` – an object against which any expressions embedded in the strings
+ *      are evaluated against (typically a scope object).
+ *    * `locals` – `{object=}` – local variables context object, useful for overriding values in
+ *      `context`.
+ *
+ *    The returned function also has the following properties:
+ *      * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript
+ *        literal.
+ *      * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript
+ *        constant literals.
+ *      * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be
+ *        set to a function to change its value on the given context.
+ *
+ */
+
+
+/**
+ * @ngdoc provider
+ * @name $parseProvider
+ * @this
+ *
+ * @description
+ * `$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}
+ *  service.
+ */
+function $ParseProvider() {
+  var cache = createMap();
+  var literals = {
+    'true': true,
+    'false': false,
+    'null': null,
+    'undefined': undefined
+  };
+  var identStart, identContinue;
+
+  /**
+   * @ngdoc method
+   * @name $parseProvider#addLiteral
+   * @description
+   *
+   * Configure $parse service to add literal values that will be present as literal at expressions.
+   *
+   * @param {string} literalName Token for the literal value. The literal name value must be a valid literal name.
+   * @param {*} literalValue Value for this literal. All literal values must be primitives or `undefined`.
+   *
+   **/
+  this.addLiteral = function(literalName, literalValue) {
+    literals[literalName] = literalValue;
+  };
+
+ /**
+  * @ngdoc method
+  * @name $parseProvider#setIdentifierFns
+  *
+  * @description
+  *
+  * Allows defining the set of characters that are allowed in AngularJS expressions. The function
+  * `identifierStart` will get called to know if a given character is a valid character to be the
+  * first character for an identifier. The function `identifierContinue` will get called to know if
+  * a given character is a valid character to be a follow-up identifier character. The functions
+  * `identifierStart` and `identifierContinue` will receive as arguments the single character to be
+  * identifier and the character code point. These arguments will be `string` and `numeric`. Keep in
+  * mind that the `string` parameter can be two characters long depending on the character
+  * representation. It is expected for the function to return `true` or `false`, whether that
+  * character is allowed or not.
+  *
+  * Since this function will be called extensively, keep the implementation of these functions fast,
+  * as the performance of these functions have a direct impact on the expressions parsing speed.
+  *
+  * @param {function=} identifierStart The function that will decide whether the given character is
+  *   a valid identifier start character.
+  * @param {function=} identifierContinue The function that will decide whether the given character is
+  *   a valid identifier continue character.
+  */
+  this.setIdentifierFns = function(identifierStart, identifierContinue) {
+    identStart = identifierStart;
+    identContinue = identifierContinue;
+    return this;
+  };
+
+  this.$get = ['$filter', function($filter) {
+    var noUnsafeEval = csp().noUnsafeEval;
+    var $parseOptions = {
+          csp: noUnsafeEval,
+          literals: copy(literals),
+          isIdentifierStart: isFunction(identStart) && identStart,
+          isIdentifierContinue: isFunction(identContinue) && identContinue
+        };
+    $parse.$$getAst = $$getAst;
+    return $parse;
+
+    function $parse(exp, interceptorFn) {
+      var parsedExpression, cacheKey;
+
+      switch (typeof exp) {
+        case 'string':
+          exp = exp.trim();
+          cacheKey = exp;
+
+          parsedExpression = cache[cacheKey];
+
+          if (!parsedExpression) {
+            var lexer = new Lexer($parseOptions);
+            var parser = new Parser(lexer, $filter, $parseOptions);
+            parsedExpression = parser.parse(exp);
+
+            cache[cacheKey] = addWatchDelegate(parsedExpression);
+          }
+          return addInterceptor(parsedExpression, interceptorFn);
+
+        case 'function':
+          return addInterceptor(exp, interceptorFn);
+
+        default:
+          return addInterceptor(noop, interceptorFn);
+      }
+    }
+
+    function $$getAst(exp) {
+      var lexer = new Lexer($parseOptions);
+      var parser = new Parser(lexer, $filter, $parseOptions);
+      return parser.getAst(exp).ast;
+    }
+
+    function expressionInputDirtyCheck(newValue, oldValueOfValue, compareObjectIdentity) {
+
+      if (newValue == null || oldValueOfValue == null) { // null/undefined
+        return newValue === oldValueOfValue;
+      }
+
+      if (typeof newValue === 'object') {
+
+        // attempt to convert the value to a primitive type
+        // TODO(docs): add a note to docs that by implementing valueOf even objects and arrays can
+        //             be cheaply dirty-checked
+        newValue = getValueOf(newValue);
+
+        if (typeof newValue === 'object' && !compareObjectIdentity) {
+          // objects/arrays are not supported - deep-watching them would be too expensive
+          return false;
+        }
+
+        // fall-through to the primitive equality check
+      }
+
+      //Primitive or NaN
+      // eslint-disable-next-line no-self-compare
+      return newValue === oldValueOfValue || (newValue !== newValue && oldValueOfValue !== oldValueOfValue);
+    }
+
+    function inputsWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {
+      var inputExpressions = parsedExpression.inputs;
+      var lastResult;
+
+      if (inputExpressions.length === 1) {
+        var oldInputValueOf = expressionInputDirtyCheck; // init to something unique so that equals check fails
+        inputExpressions = inputExpressions[0];
+        return scope.$watch(function expressionInputWatch(scope) {
+          var newInputValue = inputExpressions(scope);
+          if (!expressionInputDirtyCheck(newInputValue, oldInputValueOf, inputExpressions.isPure)) {
+            lastResult = parsedExpression(scope, undefined, undefined, [newInputValue]);
+            oldInputValueOf = newInputValue && getValueOf(newInputValue);
+          }
+          return lastResult;
+        }, listener, objectEquality, prettyPrintExpression);
+      }
+
+      var oldInputValueOfValues = [];
+      var oldInputValues = [];
+      for (var i = 0, ii = inputExpressions.length; i < ii; i++) {
+        oldInputValueOfValues[i] = expressionInputDirtyCheck; // init to something unique so that equals check fails
+        oldInputValues[i] = null;
+      }
+
+      return scope.$watch(function expressionInputsWatch(scope) {
+        var changed = false;
+
+        for (var i = 0, ii = inputExpressions.length; i < ii; i++) {
+          var newInputValue = inputExpressions[i](scope);
+          if (changed || (changed = !expressionInputDirtyCheck(newInputValue, oldInputValueOfValues[i], inputExpressions[i].isPure))) {
+            oldInputValues[i] = newInputValue;
+            oldInputValueOfValues[i] = newInputValue && getValueOf(newInputValue);
+          }
+        }
+
+        if (changed) {
+          lastResult = parsedExpression(scope, undefined, undefined, oldInputValues);
+        }
+
+        return lastResult;
+      }, listener, objectEquality, prettyPrintExpression);
+    }
+
+    function oneTimeWatchDelegate(scope, listener, objectEquality, parsedExpression, prettyPrintExpression) {
+      var isDone = parsedExpression.literal ? isAllDefined : isDefined;
+      var unwatch, lastValue;
+
+      var exp = parsedExpression.$$intercepted || parsedExpression;
+      var post = parsedExpression.$$interceptor || identity;
+
+      var useInputs = parsedExpression.inputs && !exp.inputs;
+
+      // Propagate the literal/inputs/constant attributes
+      // ... but not oneTime since we are handling it
+      oneTimeWatch.literal = parsedExpression.literal;
+      oneTimeWatch.constant = parsedExpression.constant;
+      oneTimeWatch.inputs = parsedExpression.inputs;
+
+      // Allow other delegates to run on this wrapped expression
+      addWatchDelegate(oneTimeWatch);
+
+      unwatch = scope.$watch(oneTimeWatch, listener, objectEquality, prettyPrintExpression);
+
+      return unwatch;
+
+      function unwatchIfDone() {
+        if (isDone(lastValue)) {
+          unwatch();
+        }
+      }
+
+      function oneTimeWatch(scope, locals, assign, inputs) {
+        lastValue = useInputs && inputs ? inputs[0] : exp(scope, locals, assign, inputs);
+        if (isDone(lastValue)) {
+          scope.$$postDigest(unwatchIfDone);
+        }
+        return post(lastValue);
+      }
+    }
+
+    function isAllDefined(value) {
+      var allDefined = true;
+      forEach(value, function(val) {
+        if (!isDefined(val)) allDefined = false;
+      });
+      return allDefined;
+    }
+
+    function constantWatchDelegate(scope, listener, objectEquality, parsedExpression) {
+      var unwatch = scope.$watch(function constantWatch(scope) {
+        unwatch();
+        return parsedExpression(scope);
+      }, listener, objectEquality);
+      return unwatch;
+    }
+
+    function addWatchDelegate(parsedExpression) {
+      if (parsedExpression.constant) {
+        parsedExpression.$$watchDelegate = constantWatchDelegate;
+      } else if (parsedExpression.oneTime) {
+        parsedExpression.$$watchDelegate = oneTimeWatchDelegate;
+      } else if (parsedExpression.inputs) {
+        parsedExpression.$$watchDelegate = inputsWatchDelegate;
+      }
+
+      return parsedExpression;
+    }
+
+    function chainInterceptors(first, second) {
+      function chainedInterceptor(value) {
+        return second(first(value));
+      }
+      chainedInterceptor.$stateful = first.$stateful || second.$stateful;
+      chainedInterceptor.$$pure = first.$$pure && second.$$pure;
+
+      return chainedInterceptor;
+    }
+
+    function addInterceptor(parsedExpression, interceptorFn) {
+      if (!interceptorFn) return parsedExpression;
+
+      // Extract any existing interceptors out of the parsedExpression
+      // to ensure the original parsedExpression is always the $$intercepted
+      if (parsedExpression.$$interceptor) {
+        interceptorFn = chainInterceptors(parsedExpression.$$interceptor, interceptorFn);
+        parsedExpression = parsedExpression.$$intercepted;
+      }
+
+      var useInputs = false;
+
+      var fn = function interceptedExpression(scope, locals, assign, inputs) {
+        var value = useInputs && inputs ? inputs[0] : parsedExpression(scope, locals, assign, inputs);
+        return interceptorFn(value);
+      };
+
+      // Maintain references to the interceptor/intercepted
+      fn.$$intercepted = parsedExpression;
+      fn.$$interceptor = interceptorFn;
+
+      // Propagate the literal/oneTime/constant attributes
+      fn.literal = parsedExpression.literal;
+      fn.oneTime = parsedExpression.oneTime;
+      fn.constant = parsedExpression.constant;
+
+      // Treat the interceptor like filters.
+      // If it is not $stateful then only watch its inputs.
+      // If the expression itself has no inputs then use the full expression as an input.
+      if (!interceptorFn.$stateful) {
+        useInputs = !parsedExpression.inputs;
+        fn.inputs = parsedExpression.inputs ? parsedExpression.inputs : [parsedExpression];
+
+        if (!interceptorFn.$$pure) {
+          fn.inputs = fn.inputs.map(function(e) {
+              // Remove the isPure flag of inputs when it is not absolute because they are now wrapped in a
+              // non-pure interceptor function.
+              if (e.isPure === PURITY_RELATIVE) {
+                return function depurifier(s) { return e(s); };
+              }
+              return e;
+            });
+        }
+      }
+
+      return addWatchDelegate(fn);
+    }
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $q
+ * @requires $rootScope
+ *
+ * @description
+ * A service that helps you run functions asynchronously, and use their return values (or exceptions)
+ * when they are done processing.
+ *
+ * This is a [Promises/A+](https://promisesaplus.com/)-compliant implementation of promises/deferred
+ * objects inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).
+ *
+ * $q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred
+ * implementations, and the other which resembles ES6 (ES2015) promises to some degree.
+ *
+ * ## $q constructor
+ *
+ * The streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`
+ * function as the first argument. This is similar to the native Promise implementation from ES6,
+ * see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).
+ *
+ * While the constructor-style use is supported, not all of the supporting methods from ES6 promises are
+ * available yet.
+ *
+ * It can be used like so:
+ *
+ * ```js
+ *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
+ *   // are available in the current lexical scope (they could have been injected or passed in).
+ *
+ *   function asyncGreet(name) {
+ *     // perform some asynchronous operation, resolve or reject the promise when appropriate.
+ *     return $q(function(resolve, reject) {
+ *       setTimeout(function() {
+ *         if (okToGreet(name)) {
+ *           resolve('Hello, ' + name + '!');
+ *         } else {
+ *           reject('Greeting ' + name + ' is not allowed.');
+ *         }
+ *       }, 1000);
+ *     });
+ *   }
+ *
+ *   var promise = asyncGreet('Robin Hood');
+ *   promise.then(function(greeting) {
+ *     alert('Success: ' + greeting);
+ *   }, function(reason) {
+ *     alert('Failed: ' + reason);
+ *   });
+ * ```
+ *
+ * Note: progress/notify callbacks are not currently supported via the ES6-style interface.
+ *
+ * Note: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.
+ *
+ * However, the more traditional CommonJS-style usage is still available, and documented below.
+ *
+ * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an
+ * interface for interacting with an object that represents the result of an action that is
+ * performed asynchronously, and may or may not be finished at any given point in time.
+ *
+ * From the perspective of dealing with error handling, deferred and promise APIs are to
+ * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.
+ *
+ * ```js
+ *   // for the purpose of this example let's assume that variables `$q` and `okToGreet`
+ *   // are available in the current lexical scope (they could have been injected or passed in).
+ *
+ *   function asyncGreet(name) {
+ *     var deferred = $q.defer();
+ *
+ *     setTimeout(function() {
+ *       deferred.notify('About to greet ' + name + '.');
+ *
+ *       if (okToGreet(name)) {
+ *         deferred.resolve('Hello, ' + name + '!');
+ *       } else {
+ *         deferred.reject('Greeting ' + name + ' is not allowed.');
+ *       }
+ *     }, 1000);
+ *
+ *     return deferred.promise;
+ *   }
+ *
+ *   var promise = asyncGreet('Robin Hood');
+ *   promise.then(function(greeting) {
+ *     alert('Success: ' + greeting);
+ *   }, function(reason) {
+ *     alert('Failed: ' + reason);
+ *   }, function(update) {
+ *     alert('Got notification: ' + update);
+ *   });
+ * ```
+ *
+ * At first it might not be obvious why this extra complexity is worth the trouble. The payoff
+ * comes in the way of guarantees that promise and deferred APIs make, see
+ * https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.
+ *
+ * Additionally the promise api allows for composition that is very hard to do with the
+ * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.
+ * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the
+ * section on serial or parallel joining of promises.
+ *
+ * ## The Deferred API
+ *
+ * A new instance of deferred is constructed by calling `$q.defer()`.
+ *
+ * The purpose of the deferred object is to expose the associated Promise instance as well as APIs
+ * that can be used for signaling the successful or unsuccessful completion, as well as the status
+ * of the task.
+ *
+ * **Methods**
+ *
+ * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection
+ *   constructed via `$q.reject`, the promise will be rejected instead.
+ * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to
+ *   resolving it with a rejection constructed via `$q.reject`.
+ * - `notify(value)` - provides updates on the status of the promise's execution. This may be called
+ *   multiple times before the promise is either resolved or rejected.
+ *
+ * **Properties**
+ *
+ * - promise – `{Promise}` – promise object associated with this deferred.
+ *
+ *
+ * ## The Promise API
+ *
+ * A new promise instance is created when a deferred instance is created and can be retrieved by
+ * calling `deferred.promise`.
+ *
+ * The purpose of the promise object is to allow for interested parties to get access to the result
+ * of the deferred task when it completes.
+ *
+ * **Methods**
+ *
+ * - `then(successCallback, [errorCallback], [notifyCallback])` – regardless of when the promise was or
+ *   will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously
+ *   as soon as the result is available. The callbacks are called with a single argument: the result
+ *   or rejection reason. Additionally, the notify callback may be called zero or more times to
+ *   provide a progress indication, before the promise is resolved or rejected.
+ *
+ *   This method *returns a new promise* which is resolved or rejected via the return value of the
+ *   `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved
+ *   with the value which is resolved in that promise using
+ *   [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).
+ *   It also notifies via the return value of the `notifyCallback` method. The promise cannot be
+ *   resolved or rejected from the notifyCallback method. The errorCallback and notifyCallback
+ *   arguments are optional.
+ *
+ * - `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`
+ *
+ * - `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,
+ *   but to do so without modifying the final value. This is useful to release resources or do some
+ *   clean-up that needs to be done whether the promise was rejected or resolved. See the [full
+ *   specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for
+ *   more information.
+ *
+ * ## Chaining promises
+ *
+ * Because calling the `then` method of a promise returns a new derived promise, it is easily
+ * possible to create a chain of promises:
+ *
+ * ```js
+ *   promiseB = promiseA.then(function(result) {
+ *     return result + 1;
+ *   });
+ *
+ *   // promiseB will be resolved immediately after promiseA is resolved and its value
+ *   // will be the result of promiseA incremented by 1
+ * ```
+ *
+ * It is possible to create chains of any length and since a promise can be resolved with another
+ * promise (which will defer its resolution further), it is possible to pause/defer resolution of
+ * the promises at any point in the chain. This makes it possible to implement powerful APIs like
+ * $http's response interceptors.
+ *
+ *
+ * ## Differences between Kris Kowal's Q and $q
+ *
+ *  There are two main differences:
+ *
+ * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation
+ *   mechanism in AngularJS, which means faster propagation of resolution or rejection into your
+ *   models and avoiding unnecessary browser repaints, which would result in flickering UI.
+ * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains
+ *   all the important functionality needed for common async tasks.
+ *
+ * ## Testing
+ *
+ *  ```js
+ *    it('should simulate promise', inject(function($q, $rootScope) {
+ *      var deferred = $q.defer();
+ *      var promise = deferred.promise;
+ *      var resolvedValue;
+ *
+ *      promise.then(function(value) { resolvedValue = value; });
+ *      expect(resolvedValue).toBeUndefined();
+ *
+ *      // Simulate resolving of promise
+ *      deferred.resolve(123);
+ *      // Note that the 'then' function does not get called synchronously.
+ *      // This is because we want the promise API to always be async, whether or not
+ *      // it got called synchronously or asynchronously.
+ *      expect(resolvedValue).toBeUndefined();
+ *
+ *      // Propagate promise resolution to 'then' functions using $apply().
+ *      $rootScope.$apply();
+ *      expect(resolvedValue).toEqual(123);
+ *    }));
+ *  ```
+ *
+ * @param {function(function, function)} resolver Function which is responsible for resolving or
+ *   rejecting the newly created promise. The first parameter is a function which resolves the
+ *   promise, the second parameter is a function which rejects the promise.
+ *
+ * @returns {Promise} The newly created promise.
+ */
+/**
+ * @ngdoc provider
+ * @name $qProvider
+ * @this
+ *
+ * @description
+ */
+function $QProvider() {
+  var errorOnUnhandledRejections = true;
+  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {
+    return qFactory(function(callback) {
+      $rootScope.$evalAsync(callback);
+    }, $exceptionHandler, errorOnUnhandledRejections);
+  }];
+
+  /**
+   * @ngdoc method
+   * @name $qProvider#errorOnUnhandledRejections
+   * @kind function
+   *
+   * @description
+   * Retrieves or overrides whether to generate an error when a rejected promise is not handled.
+   * This feature is enabled by default.
+   *
+   * @param {boolean=} value Whether to generate an error when a rejected promise is not handled.
+   * @returns {boolean|ng.$qProvider} Current value when called without a new value or self for
+   *    chaining otherwise.
+   */
+  this.errorOnUnhandledRejections = function(value) {
+    if (isDefined(value)) {
+      errorOnUnhandledRejections = value;
+      return this;
+    } else {
+      return errorOnUnhandledRejections;
+    }
+  };
+}
+
+/** @this */
+function $$QProvider() {
+  var errorOnUnhandledRejections = true;
+  this.$get = ['$browser', '$exceptionHandler', function($browser, $exceptionHandler) {
+    return qFactory(function(callback) {
+      $browser.defer(callback);
+    }, $exceptionHandler, errorOnUnhandledRejections);
+  }];
+
+  this.errorOnUnhandledRejections = function(value) {
+    if (isDefined(value)) {
+      errorOnUnhandledRejections = value;
+      return this;
+    } else {
+      return errorOnUnhandledRejections;
+    }
+  };
+}
+
+/**
+ * Constructs a promise manager.
+ *
+ * @param {function(function)} nextTick Function for executing functions in the next turn.
+ * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for
+ *     debugging purposes.
+ * @param {boolean=} errorOnUnhandledRejections Whether an error should be generated on unhandled
+ *     promises rejections.
+ * @returns {object} Promise manager.
+ */
+function qFactory(nextTick, exceptionHandler, errorOnUnhandledRejections) {
+  var $qMinErr = minErr('$q', TypeError);
+  var queueSize = 0;
+  var checkQueue = [];
+
+  /**
+   * @ngdoc method
+   * @name ng.$q#defer
+   * @kind function
+   *
+   * @description
+   * Creates a `Deferred` object which represents a task which will finish in the future.
+   *
+   * @returns {Deferred} Returns a new instance of deferred.
+   */
+  function defer() {
+    return new Deferred();
+  }
+
+  function Deferred() {
+    var promise = this.promise = new Promise();
+    //Non prototype methods necessary to support unbound execution :/
+    this.resolve = function(val) { resolvePromise(promise, val); };
+    this.reject = function(reason) { rejectPromise(promise, reason); };
+    this.notify = function(progress) { notifyPromise(promise, progress); };
+  }
+
+
+  function Promise() {
+    this.$$state = { status: 0 };
+  }
+
+  extend(Promise.prototype, {
+    then: function(onFulfilled, onRejected, progressBack) {
+      if (isUndefined(onFulfilled) && isUndefined(onRejected) && isUndefined(progressBack)) {
+        return this;
+      }
+      var result = new Promise();
+
+      this.$$state.pending = this.$$state.pending || [];
+      this.$$state.pending.push([result, onFulfilled, onRejected, progressBack]);
+      if (this.$$state.status > 0) scheduleProcessQueue(this.$$state);
+
+      return result;
+    },
+
+    'catch': function(callback) {
+      return this.then(null, callback);
+    },
+
+    'finally': function(callback, progressBack) {
+      return this.then(function(value) {
+        return handleCallback(value, resolve, callback);
+      }, function(error) {
+        return handleCallback(error, reject, callback);
+      }, progressBack);
+    }
+  });
+
+  function processQueue(state) {
+    var fn, promise, pending;
+
+    pending = state.pending;
+    state.processScheduled = false;
+    state.pending = undefined;
+    try {
+      for (var i = 0, ii = pending.length; i < ii; ++i) {
+        markQStateExceptionHandled(state);
+        promise = pending[i][0];
+        fn = pending[i][state.status];
+        try {
+          if (isFunction(fn)) {
+            resolvePromise(promise, fn(state.value));
+          } else if (state.status === 1) {
+            resolvePromise(promise, state.value);
+          } else {
+            rejectPromise(promise, state.value);
+          }
+        } catch (e) {
+          rejectPromise(promise, e);
+          // This error is explicitly marked for being passed to the $exceptionHandler
+          if (e && e.$$passToExceptionHandler === true) {
+            exceptionHandler(e);
+          }
+        }
+      }
+    } finally {
+      --queueSize;
+      if (errorOnUnhandledRejections && queueSize === 0) {
+        nextTick(processChecks);
+      }
+    }
+  }
+
+  function processChecks() {
+    // eslint-disable-next-line no-unmodified-loop-condition
+    while (!queueSize && checkQueue.length) {
+      var toCheck = checkQueue.shift();
+      if (!isStateExceptionHandled(toCheck)) {
+        markQStateExceptionHandled(toCheck);
+        var errorMessage = 'Possibly unhandled rejection: ' + toDebugString(toCheck.value);
+        if (isError(toCheck.value)) {
+          exceptionHandler(toCheck.value, errorMessage);
+        } else {
+          exceptionHandler(errorMessage);
+        }
+      }
+    }
+  }
+
+  function scheduleProcessQueue(state) {
+    if (errorOnUnhandledRejections && !state.pending && state.status === 2 && !isStateExceptionHandled(state)) {
+      if (queueSize === 0 && checkQueue.length === 0) {
+        nextTick(processChecks);
+      }
+      checkQueue.push(state);
+    }
+    if (state.processScheduled || !state.pending) return;
+    state.processScheduled = true;
+    ++queueSize;
+    nextTick(function() { processQueue(state); });
+  }
+
+  function resolvePromise(promise, val) {
+    if (promise.$$state.status) return;
+    if (val === promise) {
+      $$reject(promise, $qMinErr(
+        'qcycle',
+        'Expected promise to be resolved with value other than itself \'{0}\'',
+        val));
+    } else {
+      $$resolve(promise, val);
+    }
+
+  }
+
+  function $$resolve(promise, val) {
+    var then;
+    var done = false;
+    try {
+      if (isObject(val) || isFunction(val)) then = val.then;
+      if (isFunction(then)) {
+        promise.$$state.status = -1;
+        then.call(val, doResolve, doReject, doNotify);
+      } else {
+        promise.$$state.value = val;
+        promise.$$state.status = 1;
+        scheduleProcessQueue(promise.$$state);
+      }
+    } catch (e) {
+      doReject(e);
+    }
+
+    function doResolve(val) {
+      if (done) return;
+      done = true;
+      $$resolve(promise, val);
+    }
+    function doReject(val) {
+      if (done) return;
+      done = true;
+      $$reject(promise, val);
+    }
+    function doNotify(progress) {
+      notifyPromise(promise, progress);
+    }
+  }
+
+  function rejectPromise(promise, reason) {
+    if (promise.$$state.status) return;
+    $$reject(promise, reason);
+  }
+
+  function $$reject(promise, reason) {
+    promise.$$state.value = reason;
+    promise.$$state.status = 2;
+    scheduleProcessQueue(promise.$$state);
+  }
+
+  function notifyPromise(promise, progress) {
+    var callbacks = promise.$$state.pending;
+
+    if ((promise.$$state.status <= 0) && callbacks && callbacks.length) {
+      nextTick(function() {
+        var callback, result;
+        for (var i = 0, ii = callbacks.length; i < ii; i++) {
+          result = callbacks[i][0];
+          callback = callbacks[i][3];
+          try {
+            notifyPromise(result, isFunction(callback) ? callback(progress) : progress);
+          } catch (e) {
+            exceptionHandler(e);
+          }
+        }
+      });
+    }
+  }
+
+  /**
+   * @ngdoc method
+   * @name $q#reject
+   * @kind function
+   *
+   * @description
+   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be
+   * used to forward rejection in a chain of promises. If you are dealing with the last promise in
+   * a promise chain, you don't need to worry about it.
+   *
+   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of
+   * `reject` as the `throw` keyword in JavaScript. This also means that if you "catch" an error via
+   * a promise error callback and you want to forward the error to the promise derived from the
+   * current promise, you have to "rethrow" the error by returning a rejection constructed via
+   * `reject`.
+   *
+   * ```js
+   *   promiseB = promiseA.then(function(result) {
+   *     // success: do something and resolve promiseB
+   *     //          with the old or a new result
+   *     return result;
+   *   }, function(reason) {
+   *     // error: handle the error if possible and
+   *     //        resolve promiseB with newPromiseOrValue,
+   *     //        otherwise forward the rejection to promiseB
+   *     if (canHandle(reason)) {
+   *      // handle the error and recover
+   *      return newPromiseOrValue;
+   *     }
+   *     return $q.reject(reason);
+   *   });
+   * ```
+   *
+   * @param {*} reason Constant, message, exception or an object representing the rejection reason.
+   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.
+   */
+  function reject(reason) {
+    var result = new Promise();
+    rejectPromise(result, reason);
+    return result;
+  }
+
+  function handleCallback(value, resolver, callback) {
+    var callbackOutput = null;
+    try {
+      if (isFunction(callback)) callbackOutput = callback();
+    } catch (e) {
+      return reject(e);
+    }
+    if (isPromiseLike(callbackOutput)) {
+      return callbackOutput.then(function() {
+        return resolver(value);
+      }, reject);
+    } else {
+      return resolver(value);
+    }
+  }
+
+  /**
+   * @ngdoc method
+   * @name $q#when
+   * @kind function
+   *
+   * @description
+   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.
+   * This is useful when you are dealing with an object that might or might not be a promise, or if
+   * the promise comes from a source that can't be trusted.
+   *
+   * @param {*} value Value or a promise
+   * @param {Function=} successCallback
+   * @param {Function=} errorCallback
+   * @param {Function=} progressCallback
+   * @returns {Promise} Returns a promise of the passed value or promise
+   */
+
+
+  function when(value, callback, errback, progressBack) {
+    var result = new Promise();
+    resolvePromise(result, value);
+    return result.then(callback, errback, progressBack);
+  }
+
+  /**
+   * @ngdoc method
+   * @name $q#resolve
+   * @kind function
+   *
+   * @description
+   * Alias of {@link ng.$q#when when} to maintain naming consistency with ES6.
+   *
+   * @param {*} value Value or a promise
+   * @param {Function=} successCallback
+   * @param {Function=} errorCallback
+   * @param {Function=} progressCallback
+   * @returns {Promise} Returns a promise of the passed value or promise
+   */
+  var resolve = when;
+
+  /**
+   * @ngdoc method
+   * @name $q#all
+   * @kind function
+   *
+   * @description
+   * Combines multiple promises into a single promise that is resolved when all of the input
+   * promises are resolved.
+   *
+   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
+   * @returns {Promise} Returns a single promise that will be resolved with an array/hash of values,
+   *   each value corresponding to the promise at the same index/key in the `promises` array/hash.
+   *   If any of the promises is resolved with a rejection, this resulting promise will be rejected
+   *   with the same rejection value.
+   */
+
+  function all(promises) {
+    var result = new Promise(),
+        counter = 0,
+        results = isArray(promises) ? [] : {};
+
+    forEach(promises, function(promise, key) {
+      counter++;
+      when(promise).then(function(value) {
+        results[key] = value;
+        if (!(--counter)) resolvePromise(result, results);
+      }, function(reason) {
+        rejectPromise(result, reason);
+      });
+    });
+
+    if (counter === 0) {
+      resolvePromise(result, results);
+    }
+
+    return result;
+  }
+
+  /**
+   * @ngdoc method
+   * @name $q#race
+   * @kind function
+   *
+   * @description
+   * Returns a promise that resolves or rejects as soon as one of those promises
+   * resolves or rejects, with the value or reason from that promise.
+   *
+   * @param {Array.<Promise>|Object.<Promise>} promises An array or hash of promises.
+   * @returns {Promise} a promise that resolves or rejects as soon as one of the `promises`
+   * resolves or rejects, with the value or reason from that promise.
+   */
+
+  function race(promises) {
+    var deferred = defer();
+
+    forEach(promises, function(promise) {
+      when(promise).then(deferred.resolve, deferred.reject);
+    });
+
+    return deferred.promise;
+  }
+
+  function $Q(resolver) {
+    if (!isFunction(resolver)) {
+      throw $qMinErr('norslvr', 'Expected resolverFn, got \'{0}\'', resolver);
+    }
+
+    var promise = new Promise();
+
+    function resolveFn(value) {
+      resolvePromise(promise, value);
+    }
+
+    function rejectFn(reason) {
+      rejectPromise(promise, reason);
+    }
+
+    resolver(resolveFn, rejectFn);
+
+    return promise;
+  }
+
+  // Let's make the instanceof operator work for promises, so that
+  // `new $q(fn) instanceof $q` would evaluate to true.
+  $Q.prototype = Promise.prototype;
+
+  $Q.defer = defer;
+  $Q.reject = reject;
+  $Q.when = when;
+  $Q.resolve = resolve;
+  $Q.all = all;
+  $Q.race = race;
+
+  return $Q;
+}
+
+function isStateExceptionHandled(state) {
+  return !!state.pur;
+}
+function markQStateExceptionHandled(state) {
+  state.pur = true;
+}
+function markQExceptionHandled(q) {
+  // Built-in `$q` promises will always have a `$$state` property. This check is to allow
+  // overwriting `$q` with a different promise library (e.g. Bluebird + angular-bluebird-promises).
+  // (Currently, this is the only method that might be called with a promise, even if it is not
+  // created by the built-in `$q`.)
+  if (q.$$state) {
+    markQStateExceptionHandled(q.$$state);
+  }
+}
+
+/** @this */
+function $$RAFProvider() { //rAF
+  this.$get = ['$window', '$timeout', function($window, $timeout) {
+    var requestAnimationFrame = $window.requestAnimationFrame ||
+                                $window.webkitRequestAnimationFrame;
+
+    var cancelAnimationFrame = $window.cancelAnimationFrame ||
+                               $window.webkitCancelAnimationFrame ||
+                               $window.webkitCancelRequestAnimationFrame;
+
+    var rafSupported = !!requestAnimationFrame;
+    var raf = rafSupported
+      ? function(fn) {
+          var id = requestAnimationFrame(fn);
+          return function() {
+            cancelAnimationFrame(id);
+          };
+        }
+      : function(fn) {
+          var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666
+          return function() {
+            $timeout.cancel(timer);
+          };
+        };
+
+    raf.supported = rafSupported;
+
+    return raf;
+  }];
+}
+
+/**
+ * DESIGN NOTES
+ *
+ * The design decisions behind the scope are heavily favored for speed and memory consumption.
+ *
+ * The typical use of scope is to watch the expressions, which most of the time return the same
+ * value as last time so we optimize the operation.
+ *
+ * Closures construction is expensive in terms of speed as well as memory:
+ *   - No closures, instead use prototypical inheritance for API
+ *   - Internal state needs to be stored on scope directly, which means that private state is
+ *     exposed as $$____ properties
+ *
+ * Loop operations are optimized by using while(count--) { ... }
+ *   - This means that in order to keep the same order of execution as addition we have to add
+ *     items to the array at the beginning (unshift) instead of at the end (push)
+ *
+ * Child scopes are created and removed often
+ *   - Using an array would be slow since inserts in the middle are expensive; so we use linked lists
+ *
+ * There are fewer watches than observers. This is why you don't want the observer to be implemented
+ * in the same way as watch. Watch requires return of the initialization function which is expensive
+ * to construct.
+ */
+
+
+/**
+ * @ngdoc provider
+ * @name $rootScopeProvider
+ * @description
+ *
+ * Provider for the $rootScope service.
+ */
+
+/**
+ * @ngdoc method
+ * @name $rootScopeProvider#digestTtl
+ * @description
+ *
+ * Sets the number of `$digest` iterations the scope should attempt to execute before giving up and
+ * assuming that the model is unstable.
+ *
+ * The current default is 10 iterations.
+ *
+ * In complex applications it's possible that the dependencies between `$watch`s will result in
+ * several digest iterations. However if an application needs more than the default 10 digest
+ * iterations for its model to stabilize then you should investigate what is causing the model to
+ * continuously change during the digest.
+ *
+ * Increasing the TTL could have performance implications, so you should not change it without
+ * proper justification.
+ *
+ * @param {number} limit The number of digest iterations.
+ */
+
+
+/**
+ * @ngdoc service
+ * @name $rootScope
+ * @this
+ *
+ * @description
+ *
+ * Every application has a single root {@link ng.$rootScope.Scope scope}.
+ * All other scopes are descendant scopes of the root scope. Scopes provide separation
+ * between the model and the view, via a mechanism for watching the model for changes.
+ * They also provide event emission/broadcast and subscription facility. See the
+ * {@link guide/scope developer guide on scopes}.
+ */
+function $RootScopeProvider() {
+  var TTL = 10;
+  var $rootScopeMinErr = minErr('$rootScope');
+  var lastDirtyWatch = null;
+  var applyAsyncId = null;
+
+  this.digestTtl = function(value) {
+    if (arguments.length) {
+      TTL = value;
+    }
+    return TTL;
+  };
+
+  function createChildScopeClass(parent) {
+    function ChildScope() {
+      this.$$watchers = this.$$nextSibling =
+          this.$$childHead = this.$$childTail = null;
+      this.$$listeners = {};
+      this.$$listenerCount = {};
+      this.$$watchersCount = 0;
+      this.$id = nextUid();
+      this.$$ChildScope = null;
+      this.$$suspended = false;
+    }
+    ChildScope.prototype = parent;
+    return ChildScope;
+  }
+
+  this.$get = ['$exceptionHandler', '$parse', '$browser',
+      function($exceptionHandler, $parse, $browser) {
+
+    function destroyChildScope($event) {
+        $event.currentScope.$$destroyed = true;
+    }
+
+    function cleanUpScope($scope) {
+
+      // Support: IE 9 only
+      if (msie === 9) {
+        // There is a memory leak in IE9 if all child scopes are not disconnected
+        // completely when a scope is destroyed. So this code will recurse up through
+        // all this scopes children
+        //
+        // See issue https://github.com/angular/angular.js/issues/10706
+        if ($scope.$$childHead) {
+          cleanUpScope($scope.$$childHead);
+        }
+        if ($scope.$$nextSibling) {
+          cleanUpScope($scope.$$nextSibling);
+        }
+      }
+
+      // The code below works around IE9 and V8's memory leaks
+      //
+      // See:
+      // - https://code.google.com/p/v8/issues/detail?id=2073#c26
+      // - https://github.com/angular/angular.js/issues/6794#issuecomment-38648909
+      // - https://github.com/angular/angular.js/issues/1313#issuecomment-10378451
+
+      $scope.$parent = $scope.$$nextSibling = $scope.$$prevSibling = $scope.$$childHead =
+          $scope.$$childTail = $scope.$root = $scope.$$watchers = null;
+    }
+
+    /**
+     * @ngdoc type
+     * @name $rootScope.Scope
+     *
+     * @description
+     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the
+     * {@link auto.$injector $injector}. Child scopes are created using the
+     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when
+     * compiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for
+     * an in-depth introduction and usage examples.
+     *
+     *
+     * ## Inheritance
+     * A scope can inherit from a parent scope, as in this example:
+     * ```js
+         var parent = $rootScope;
+         var child = parent.$new();
+
+         parent.salutation = "Hello";
+         expect(child.salutation).toEqual('Hello');
+
+         child.salutation = "Welcome";
+         expect(child.salutation).toEqual('Welcome');
+         expect(parent.salutation).toEqual('Hello');
+     * ```
+     *
+     * When interacting with `Scope` in tests, additional helper methods are available on the
+     * instances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional
+     * details.
+     *
+     *
+     * @param {Object.<string, function()>=} providers Map of service factory which need to be
+     *                                       provided for the current scope. Defaults to {@link ng}.
+     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should
+     *                              append/override services provided by `providers`. This is handy
+     *                              when unit-testing and having the need to override a default
+     *                              service.
+     * @returns {Object} Newly created scope.
+     *
+     */
+    function Scope() {
+      this.$id = nextUid();
+      this.$$phase = this.$parent = this.$$watchers =
+                     this.$$nextSibling = this.$$prevSibling =
+                     this.$$childHead = this.$$childTail = null;
+      this.$root = this;
+      this.$$destroyed = false;
+      this.$$suspended = false;
+      this.$$listeners = {};
+      this.$$listenerCount = {};
+      this.$$watchersCount = 0;
+      this.$$isolateBindings = null;
+    }
+
+    /**
+     * @ngdoc property
+     * @name $rootScope.Scope#$id
+     *
+     * @description
+     * Unique scope ID (monotonically increasing) useful for debugging.
+     */
+
+     /**
+      * @ngdoc property
+      * @name $rootScope.Scope#$parent
+      *
+      * @description
+      * Reference to the parent scope.
+      */
+
+      /**
+       * @ngdoc property
+       * @name $rootScope.Scope#$root
+       *
+       * @description
+       * Reference to the root scope.
+       */
+
+    Scope.prototype = {
+      constructor: Scope,
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$new
+       * @kind function
+       *
+       * @description
+       * Creates a new child {@link ng.$rootScope.Scope scope}.
+       *
+       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.
+       * The scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.
+       *
+       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is
+       * desired for the scope and its child scopes to be permanently detached from the parent and
+       * thus stop participating in model change detection and listener notification by invoking.
+       *
+       * @param {boolean} isolate If true, then the scope does not prototypically inherit from the
+       *         parent scope. The scope is isolated, as it can not see parent scope properties.
+       *         When creating widgets, it is useful for the widget to not accidentally read parent
+       *         state.
+       *
+       * @param {Scope} [parent=this] The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`
+       *                              of the newly created scope. Defaults to `this` scope if not provided.
+       *                              This is used when creating a transclude scope to correctly place it
+       *                              in the scope hierarchy while maintaining the correct prototypical
+       *                              inheritance.
+       *
+       * @returns {Object} The newly created child scope.
+       *
+       */
+      $new: function(isolate, parent) {
+        var child;
+
+        parent = parent || this;
+
+        if (isolate) {
+          child = new Scope();
+          child.$root = this.$root;
+        } else {
+          // Only create a child scope class if somebody asks for one,
+          // but cache it to allow the VM to optimize lookups.
+          if (!this.$$ChildScope) {
+            this.$$ChildScope = createChildScopeClass(this);
+          }
+          child = new this.$$ChildScope();
+        }
+        child.$parent = parent;
+        child.$$prevSibling = parent.$$childTail;
+        if (parent.$$childHead) {
+          parent.$$childTail.$$nextSibling = child;
+          parent.$$childTail = child;
+        } else {
+          parent.$$childHead = parent.$$childTail = child;
+        }
+
+        // When the new scope is not isolated or we inherit from `this`, and
+        // the parent scope is destroyed, the property `$$destroyed` is inherited
+        // prototypically. In all other cases, this property needs to be set
+        // when the parent scope is destroyed.
+        // The listener needs to be added after the parent is set
+        if (isolate || parent !== this) child.$on('$destroy', destroyChildScope);
+
+        return child;
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$watch
+       * @kind function
+       *
+       * @description
+       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.
+       *
+       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest
+       *   $digest()} and should return the value that will be watched. (`watchExpression` should not change
+       *   its value when executed multiple times with the same input because it may be executed multiple
+       *   times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be
+       *   [idempotent](http://en.wikipedia.org/wiki/Idempotence).)
+       * - The `listener` is called only when the value from the current `watchExpression` and the
+       *   previous call to `watchExpression` are not equal (with the exception of the initial run,
+       *   see below). Inequality is determined according to reference inequality,
+       *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)
+       *    via the `!==` Javascript operator, unless `objectEquality == true`
+       *   (see next point)
+       * - When `objectEquality == true`, inequality of the `watchExpression` is determined
+       *   according to the {@link angular.equals} function. To save the value of the object for
+       *   later comparison, the {@link angular.copy} function is used. This therefore means that
+       *   watching complex objects will have adverse memory and performance implications.
+       * - This should not be used to watch for changes in objects that are (or contain)
+       *   [File](https://developer.mozilla.org/docs/Web/API/File) objects due to limitations with {@link angular.copy `angular.copy`}.
+       * - The watch `listener` may change the model, which may trigger other `listener`s to fire.
+       *   This is achieved by rerunning the watchers until no changes are detected. The rerun
+       *   iteration limit is 10 to prevent an infinite loop deadlock.
+       *
+       *
+       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,
+       * you can register a `watchExpression` function with no `listener`. (Be prepared for
+       * multiple calls to your `watchExpression` because it will execute multiple times in a
+       * single {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)
+       *
+       * After a watcher is registered with the scope, the `listener` fn is called asynchronously
+       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the
+       * watcher. In rare cases, this is undesirable because the listener is called when the result
+       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you
+       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the
+       * listener was called due to initialization.
+       *
+       *
+       *
+       * @example
+       * ```js
+           // let's assume that scope was dependency injected as the $rootScope
+           var scope = $rootScope;
+           scope.name = 'misko';
+           scope.counter = 0;
+
+           expect(scope.counter).toEqual(0);
+           scope.$watch('name', function(newValue, oldValue) {
+             scope.counter = scope.counter + 1;
+           });
+           expect(scope.counter).toEqual(0);
+
+           scope.$digest();
+           // the listener is always called during the first $digest loop after it was registered
+           expect(scope.counter).toEqual(1);
+
+           scope.$digest();
+           // but now it will not be called unless the value changes
+           expect(scope.counter).toEqual(1);
+
+           scope.name = 'adam';
+           scope.$digest();
+           expect(scope.counter).toEqual(2);
+
+
+
+           // Using a function as a watchExpression
+           var food;
+           scope.foodCounter = 0;
+           expect(scope.foodCounter).toEqual(0);
+           scope.$watch(
+             // This function returns the value being watched. It is called for each turn of the $digest loop
+             function() { return food; },
+             // This is the change listener, called when the value returned from the above function changes
+             function(newValue, oldValue) {
+               if ( newValue !== oldValue ) {
+                 // Only increment the counter if the value changed
+                 scope.foodCounter = scope.foodCounter + 1;
+               }
+             }
+           );
+           // No digest has been run so the counter will be zero
+           expect(scope.foodCounter).toEqual(0);
+
+           // Run the digest but since food has not changed count will still be zero
+           scope.$digest();
+           expect(scope.foodCounter).toEqual(0);
+
+           // Update food and run digest.  Now the counter will increment
+           food = 'cheeseburger';
+           scope.$digest();
+           expect(scope.foodCounter).toEqual(1);
+
+       * ```
+       *
+       *
+       *
+       * @param {(function()|string)} watchExpression Expression that is evaluated on each
+       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers
+       *    a call to the `listener`.
+       *
+       *    - `string`: Evaluated as {@link guide/expression expression}
+       *    - `function(scope)`: called with current `scope` as a parameter.
+       * @param {function(newVal, oldVal, scope)} listener Callback called whenever the value
+       *    of `watchExpression` changes.
+       *
+       *    - `newVal` contains the current value of the `watchExpression`
+       *    - `oldVal` contains the previous value of the `watchExpression`
+       *    - `scope` refers to the current scope
+       * @param {boolean=} [objectEquality=false] Compare for object equality using {@link angular.equals} instead of
+       *     comparing for reference equality.
+       * @returns {function()} Returns a deregistration function for this listener.
+       */
+      $watch: function(watchExp, listener, objectEquality, prettyPrintExpression) {
+        var get = $parse(watchExp);
+        var fn = isFunction(listener) ? listener : noop;
+
+        if (get.$$watchDelegate) {
+          return get.$$watchDelegate(this, fn, objectEquality, get, watchExp);
+        }
+        var scope = this,
+            array = scope.$$watchers,
+            watcher = {
+              fn: fn,
+              last: initWatchVal,
+              get: get,
+              exp: prettyPrintExpression || watchExp,
+              eq: !!objectEquality
+            };
+
+        lastDirtyWatch = null;
+
+        if (!array) {
+          array = scope.$$watchers = [];
+          array.$$digestWatchIndex = -1;
+        }
+        // we use unshift since we use a while loop in $digest for speed.
+        // the while loop reads in reverse order.
+        array.unshift(watcher);
+        array.$$digestWatchIndex++;
+        incrementWatchersCount(this, 1);
+
+        return function deregisterWatch() {
+          var index = arrayRemove(array, watcher);
+          if (index >= 0) {
+            incrementWatchersCount(scope, -1);
+            if (index < array.$$digestWatchIndex) {
+              array.$$digestWatchIndex--;
+            }
+          }
+          lastDirtyWatch = null;
+        };
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$watchGroup
+       * @kind function
+       *
+       * @description
+       * A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.
+       * If any one expression in the collection changes the `listener` is executed.
+       *
+       * - The items in the `watchExpressions` array are observed via the standard `$watch` operation. Their return
+       *   values are examined for changes on every call to `$digest`.
+       * - The `listener` is called whenever any expression in the `watchExpressions` array changes.
+       *
+       * @param {Array.<string|Function(scope)>} watchExpressions Array of expressions that will be individually
+       * watched using {@link ng.$rootScope.Scope#$watch $watch()}
+       *
+       * @param {function(newValues, oldValues, scope)} listener Callback called whenever the return value of any
+       *    expression in `watchExpressions` changes
+       *    The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching
+       *    those of `watchExpression`
+       *    and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching
+       *    those of `watchExpression`
+       *    The `scope` refers to the current scope.
+       * @returns {function()} Returns a de-registration function for all listeners.
+       */
+      $watchGroup: function(watchExpressions, listener) {
+        var oldValues = new Array(watchExpressions.length);
+        var newValues = new Array(watchExpressions.length);
+        var deregisterFns = [];
+        var self = this;
+        var changeReactionScheduled = false;
+        var firstRun = true;
+
+        if (!watchExpressions.length) {
+          // No expressions means we call the listener ASAP
+          var shouldCall = true;
+          self.$evalAsync(function() {
+            if (shouldCall) listener(newValues, newValues, self);
+          });
+          return function deregisterWatchGroup() {
+            shouldCall = false;
+          };
+        }
+
+        if (watchExpressions.length === 1) {
+          // Special case size of one
+          return this.$watch(watchExpressions[0], function watchGroupAction(value, oldValue, scope) {
+            newValues[0] = value;
+            oldValues[0] = oldValue;
+            listener(newValues, (value === oldValue) ? newValues : oldValues, scope);
+          });
+        }
+
+        forEach(watchExpressions, function(expr, i) {
+          var unwatchFn = self.$watch(expr, function watchGroupSubAction(value) {
+            newValues[i] = value;
+            if (!changeReactionScheduled) {
+              changeReactionScheduled = true;
+              self.$evalAsync(watchGroupAction);
+            }
+          });
+          deregisterFns.push(unwatchFn);
+        });
+
+        function watchGroupAction() {
+          changeReactionScheduled = false;
+
+          try {
+            if (firstRun) {
+              firstRun = false;
+              listener(newValues, newValues, self);
+            } else {
+              listener(newValues, oldValues, self);
+            }
+          } finally {
+            for (var i = 0; i < watchExpressions.length; i++) {
+              oldValues[i] = newValues[i];
+            }
+          }
+        }
+
+        return function deregisterWatchGroup() {
+          while (deregisterFns.length) {
+            deregisterFns.shift()();
+          }
+        };
+      },
+
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$watchCollection
+       * @kind function
+       *
+       * @description
+       * Shallow watches the properties of an object and fires whenever any of the properties change
+       * (for arrays, this implies watching the array items; for object maps, this implies watching
+       * the properties). If a change is detected, the `listener` callback is fired.
+       *
+       * - The `obj` collection is observed via standard $watch operation and is examined on every
+       *   call to $digest() to see if any items have been added, removed, or moved.
+       * - The `listener` is called whenever anything within the `obj` has changed. Examples include
+       *   adding, removing, and moving items belonging to an object or array.
+       *
+       *
+       * @example
+       * ```js
+          $scope.names = ['igor', 'matias', 'misko', 'james'];
+          $scope.dataCount = 4;
+
+          $scope.$watchCollection('names', function(newNames, oldNames) {
+            $scope.dataCount = newNames.length;
+          });
+
+          expect($scope.dataCount).toEqual(4);
+          $scope.$digest();
+
+          //still at 4 ... no changes
+          expect($scope.dataCount).toEqual(4);
+
+          $scope.names.pop();
+          $scope.$digest();
+
+          //now there's been a change
+          expect($scope.dataCount).toEqual(3);
+       * ```
+       *
+       *
+       * @param {string|function(scope)} obj Evaluated as {@link guide/expression expression}. The
+       *    expression value should evaluate to an object or an array which is observed on each
+       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the
+       *    collection will trigger a call to the `listener`.
+       *
+       * @param {function(newCollection, oldCollection, scope)} listener a callback function called
+       *    when a change is detected.
+       *    - The `newCollection` object is the newly modified data obtained from the `obj` expression
+       *    - The `oldCollection` object is a copy of the former collection data.
+       *      Due to performance considerations, the`oldCollection` value is computed only if the
+       *      `listener` function declares two or more arguments.
+       *    - The `scope` argument refers to the current scope.
+       *
+       * @returns {function()} Returns a de-registration function for this listener. When the
+       *    de-registration function is executed, the internal watch operation is terminated.
+       */
+      $watchCollection: function(obj, listener) {
+        // Mark the interceptor as
+        // ... $$pure when literal since the instance will change when any input changes
+        $watchCollectionInterceptor.$$pure = $parse(obj).literal;
+        // ... $stateful when non-literal since we must read the state of the collection
+        $watchCollectionInterceptor.$stateful = !$watchCollectionInterceptor.$$pure;
+
+        var self = this;
+        // the current value, updated on each dirty-check run
+        var newValue;
+        // a shallow copy of the newValue from the last dirty-check run,
+        // updated to match newValue during dirty-check run
+        var oldValue;
+        // a shallow copy of the newValue from when the last change happened
+        var veryOldValue;
+        // only track veryOldValue if the listener is asking for it
+        var trackVeryOldValue = (listener.length > 1);
+        var changeDetected = 0;
+        var changeDetector = $parse(obj, $watchCollectionInterceptor);
+        var internalArray = [];
+        var internalObject = {};
+        var initRun = true;
+        var oldLength = 0;
+
+        function $watchCollectionInterceptor(_value) {
+          newValue = _value;
+          var newLength, key, bothNaN, newItem, oldItem;
+
+          // If the new value is undefined, then return undefined as the watch may be a one-time watch
+          if (isUndefined(newValue)) return;
+
+          if (!isObject(newValue)) { // if primitive
+            if (oldValue !== newValue) {
+              oldValue = newValue;
+              changeDetected++;
+            }
+          } else if (isArrayLike(newValue)) {
+            if (oldValue !== internalArray) {
+              // we are transitioning from something which was not an array into array.
+              oldValue = internalArray;
+              oldLength = oldValue.length = 0;
+              changeDetected++;
+            }
+
+            newLength = newValue.length;
+
+            if (oldLength !== newLength) {
+              // if lengths do not match we need to trigger change notification
+              changeDetected++;
+              oldValue.length = oldLength = newLength;
+            }
+            // copy the items to oldValue and look for changes.
+            for (var i = 0; i < newLength; i++) {
+              oldItem = oldValue[i];
+              newItem = newValue[i];
+
+              // eslint-disable-next-line no-self-compare
+              bothNaN = (oldItem !== oldItem) && (newItem !== newItem);
+              if (!bothNaN && (oldItem !== newItem)) {
+                changeDetected++;
+                oldValue[i] = newItem;
+              }
+            }
+          } else {
+            if (oldValue !== internalObject) {
+              // we are transitioning from something which was not an object into object.
+              oldValue = internalObject = {};
+              oldLength = 0;
+              changeDetected++;
+            }
+            // copy the items to oldValue and look for changes.
+            newLength = 0;
+            for (key in newValue) {
+              if (hasOwnProperty.call(newValue, key)) {
+                newLength++;
+                newItem = newValue[key];
+                oldItem = oldValue[key];
+
+                if (key in oldValue) {
+                  // eslint-disable-next-line no-self-compare
+                  bothNaN = (oldItem !== oldItem) && (newItem !== newItem);
+                  if (!bothNaN && (oldItem !== newItem)) {
+                    changeDetected++;
+                    oldValue[key] = newItem;
+                  }
+                } else {
+                  oldLength++;
+                  oldValue[key] = newItem;
+                  changeDetected++;
+                }
+              }
+            }
+            if (oldLength > newLength) {
+              // we used to have more keys, need to find them and destroy them.
+              changeDetected++;
+              for (key in oldValue) {
+                if (!hasOwnProperty.call(newValue, key)) {
+                  oldLength--;
+                  delete oldValue[key];
+                }
+              }
+            }
+          }
+          return changeDetected;
+        }
+
+        function $watchCollectionAction() {
+          if (initRun) {
+            initRun = false;
+            listener(newValue, newValue, self);
+          } else {
+            listener(newValue, veryOldValue, self);
+          }
+
+          // make a copy for the next time a collection is changed
+          if (trackVeryOldValue) {
+            if (!isObject(newValue)) {
+              //primitive
+              veryOldValue = newValue;
+            } else if (isArrayLike(newValue)) {
+              veryOldValue = new Array(newValue.length);
+              for (var i = 0; i < newValue.length; i++) {
+                veryOldValue[i] = newValue[i];
+              }
+            } else { // if object
+              veryOldValue = {};
+              for (var key in newValue) {
+                if (hasOwnProperty.call(newValue, key)) {
+                  veryOldValue[key] = newValue[key];
+                }
+              }
+            }
+          }
+        }
+
+        return this.$watch(changeDetector, $watchCollectionAction);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$digest
+       * @kind function
+       *
+       * @description
+       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and
+       * its children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change
+       * the model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}
+       * until no more listeners are firing. This means that it is possible to get into an infinite
+       * loop. This function will throw `'Maximum iteration limit exceeded.'` if the number of
+       * iterations exceeds 10.
+       *
+       * Usually, you don't call `$digest()` directly in
+       * {@link ng.directive:ngController controllers} or in
+       * {@link ng.$compileProvider#directive directives}.
+       * Instead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within
+       * a {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.
+       *
+       * If you want to be notified whenever `$digest()` is called,
+       * you can register a `watchExpression` function with
+       * {@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.
+       *
+       * In unit tests, you may need to call `$digest()` to simulate the scope life cycle.
+       *
+       * @example
+       * ```js
+           var scope = ...;
+           scope.name = 'misko';
+           scope.counter = 0;
+
+           expect(scope.counter).toEqual(0);
+           scope.$watch('name', function(newValue, oldValue) {
+             scope.counter = scope.counter + 1;
+           });
+           expect(scope.counter).toEqual(0);
+
+           scope.$digest();
+           // the listener is always called during the first $digest loop after it was registered
+           expect(scope.counter).toEqual(1);
+
+           scope.$digest();
+           // but now it will not be called unless the value changes
+           expect(scope.counter).toEqual(1);
+
+           scope.name = 'adam';
+           scope.$digest();
+           expect(scope.counter).toEqual(2);
+       * ```
+       *
+       */
+      $digest: function() {
+        var watch, value, last, fn, get,
+            watchers,
+            dirty, ttl = TTL,
+            next, current, target = asyncQueue.length ? $rootScope : this,
+            watchLog = [],
+            logIdx, asyncTask;
+
+        beginPhase('$digest');
+        // Check for changes to browser url that happened in sync before the call to $digest
+        $browser.$$checkUrlChange();
+
+        if (this === $rootScope && applyAsyncId !== null) {
+          // If this is the root scope, and $applyAsync has scheduled a deferred $apply(), then
+          // cancel the scheduled $apply and flush the queue of expressions to be evaluated.
+          $browser.defer.cancel(applyAsyncId);
+          flushApplyAsync();
+        }
+
+        lastDirtyWatch = null;
+
+        do { // "while dirty" loop
+          dirty = false;
+          current = target;
+
+          // It's safe for asyncQueuePosition to be a local variable here because this loop can't
+          // be reentered recursively. Calling $digest from a function passed to $evalAsync would
+          // lead to a '$digest already in progress' error.
+          for (var asyncQueuePosition = 0; asyncQueuePosition < asyncQueue.length; asyncQueuePosition++) {
+            try {
+              asyncTask = asyncQueue[asyncQueuePosition];
+              fn = asyncTask.fn;
+              fn(asyncTask.scope, asyncTask.locals);
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+            lastDirtyWatch = null;
+          }
+          asyncQueue.length = 0;
+
+          traverseScopesLoop:
+          do { // "traverse the scopes" loop
+            if ((watchers = !current.$$suspended && current.$$watchers)) {
+              // process our watches
+              watchers.$$digestWatchIndex = watchers.length;
+              while (watchers.$$digestWatchIndex--) {
+                try {
+                  watch = watchers[watchers.$$digestWatchIndex];
+                  // Most common watches are on primitives, in which case we can short
+                  // circuit it with === operator, only when === fails do we use .equals
+                  if (watch) {
+                    get = watch.get;
+                    if ((value = get(current)) !== (last = watch.last) &&
+                        !(watch.eq
+                            ? equals(value, last)
+                            : (isNumberNaN(value) && isNumberNaN(last)))) {
+                      dirty = true;
+                      lastDirtyWatch = watch;
+                      watch.last = watch.eq ? copy(value, null) : value;
+                      fn = watch.fn;
+                      fn(value, ((last === initWatchVal) ? value : last), current);
+                      if (ttl < 5) {
+                        logIdx = 4 - ttl;
+                        if (!watchLog[logIdx]) watchLog[logIdx] = [];
+                        watchLog[logIdx].push({
+                          msg: isFunction(watch.exp) ? 'fn: ' + (watch.exp.name || watch.exp.toString()) : watch.exp,
+                          newVal: value,
+                          oldVal: last
+                        });
+                      }
+                    } else if (watch === lastDirtyWatch) {
+                      // If the most recently dirty watcher is now clean, short circuit since the remaining watchers
+                      // have already been tested.
+                      dirty = false;
+                      break traverseScopesLoop;
+                    }
+                  }
+                } catch (e) {
+                  $exceptionHandler(e);
+                }
+              }
+            }
+
+            // Insanity Warning: scope depth-first traversal
+            // yes, this code is a bit crazy, but it works and we have tests to prove it!
+            // this piece should be kept in sync with the traversal in $broadcast
+            // (though it differs due to having the extra check for $$suspended and does not
+            // check $$listenerCount)
+            if (!(next = ((!current.$$suspended && current.$$watchersCount && current.$$childHead) ||
+                (current !== target && current.$$nextSibling)))) {
+              while (current !== target && !(next = current.$$nextSibling)) {
+                current = current.$parent;
+              }
+            }
+          } while ((current = next));
+
+          // `break traverseScopesLoop;` takes us to here
+
+          if ((dirty || asyncQueue.length) && !(ttl--)) {
+            clearPhase();
+            throw $rootScopeMinErr('infdig',
+                '{0} $digest() iterations reached. Aborting!\n' +
+                'Watchers fired in the last 5 iterations: {1}',
+                TTL, watchLog);
+          }
+
+        } while (dirty || asyncQueue.length);
+
+        clearPhase();
+
+        // postDigestQueuePosition isn't local here because this loop can be reentered recursively.
+        while (postDigestQueuePosition < postDigestQueue.length) {
+          try {
+            postDigestQueue[postDigestQueuePosition++]();
+          } catch (e) {
+            $exceptionHandler(e);
+          }
+        }
+        postDigestQueue.length = postDigestQueuePosition = 0;
+
+        // Check for changes to browser url that happened during the $digest
+        // (for which no event is fired; e.g. via `history.pushState()`)
+        $browser.$$checkUrlChange();
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$suspend
+       * @kind function
+       *
+       * @description
+       * Suspend watchers of this scope subtree so that they will not be invoked during digest.
+       *
+       * This can be used to optimize your application when you know that running those watchers
+       * is redundant.
+       *
+       * **Warning**
+       *
+       * Suspending scopes from the digest cycle can have unwanted and difficult to debug results.
+       * Only use this approach if you are confident that you know what you are doing and have
+       * ample tests to ensure that bindings get updated as you expect.
+       *
+       * Some of the things to consider are:
+       *
+       * * Any external event on a directive/component will not trigger a digest while the hosting
+       *   scope is suspended - even if the event handler calls `$apply()` or `$rootScope.$digest()`.
+       * * Transcluded content exists on a scope that inherits from outside a directive but exists
+       *   as a child of the directive's containing scope. If the containing scope is suspended the
+       *   transcluded scope will also be suspended, even if the scope from which the transcluded
+       *   scope inherits is not suspended.
+       * * Multiple directives trying to manage the suspended status of a scope can confuse each other:
+       *    * A call to `$suspend()` on an already suspended scope is a no-op.
+       *    * A call to `$resume()` on a non-suspended scope is a no-op.
+       *    * If two directives suspend a scope, then one of them resumes the scope, the scope will no
+       *      longer be suspended. This could result in the other directive believing a scope to be
+       *      suspended when it is not.
+       * * If a parent scope is suspended then all its descendants will be also excluded from future
+       *   digests whether or not they have been suspended themselves. Note that this also applies to
+       *   isolate child scopes.
+       * * Calling `$digest()` directly on a descendant of a suspended scope will still run the watchers
+       *   for that scope and its descendants. When digesting we only check whether the current scope is
+       *   locally suspended, rather than checking whether it has a suspended ancestor.
+       * * Calling `$resume()` on a scope that has a suspended ancestor will not cause the scope to be
+       *   included in future digests until all its ancestors have been resumed.
+       * * Resolved promises, e.g. from explicit `$q` deferreds and `$http` calls, trigger `$apply()`
+       *   against the `$rootScope` and so will still trigger a global digest even if the promise was
+       *   initiated by a component that lives on a suspended scope.
+       */
+      $suspend: function() {
+        this.$$suspended = true;
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$isSuspended
+       * @kind function
+       *
+       * @description
+       * Call this method to determine if this scope has been explicitly suspended. It will not
+       * tell you whether an ancestor has been suspended.
+       * To determine if this scope will be excluded from a digest triggered at the $rootScope,
+       * for example, you must check all its ancestors:
+       *
+       * ```
+       * function isExcludedFromDigest(scope) {
+       *   while(scope) {
+       *     if (scope.$isSuspended()) return true;
+       *     scope = scope.$parent;
+       *   }
+       *   return false;
+       * ```
+       *
+       * Be aware that a scope may not be included in digests if it has a suspended ancestor,
+       * even if `$isSuspended()` returns false.
+       *
+       * @returns true if the current scope has been suspended.
+       */
+      $isSuspended: function() {
+        return this.$$suspended;
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$resume
+       * @kind function
+       *
+       * @description
+       * Resume watchers of this scope subtree in case it was suspended.
+       *
+       * See {@link $rootScope.Scope#$suspend} for information about the dangers of using this approach.
+       */
+      $resume: function() {
+        this.$$suspended = false;
+      },
+
+      /**
+       * @ngdoc event
+       * @name $rootScope.Scope#$destroy
+       * @eventType broadcast on scope being destroyed
+       *
+       * @description
+       * Broadcasted when a scope and its children are being destroyed.
+       *
+       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
+       * clean up DOM bindings before an element is removed from the DOM.
+       */
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$destroy
+       * @kind function
+       *
+       * @description
+       * Removes the current scope (and all of its children) from the parent scope. Removal implies
+       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer
+       * propagate to the current scope and its children. Removal also implies that the current
+       * scope is eligible for garbage collection.
+       *
+       * The `$destroy()` is usually used by directives such as
+       * {@link ng.directive:ngRepeat ngRepeat} for managing the
+       * unrolling of the loop.
+       *
+       * Just before a scope is destroyed, a `$destroy` event is broadcasted on this scope.
+       * Application code can register a `$destroy` event handler that will give it a chance to
+       * perform any necessary cleanup.
+       *
+       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to
+       * clean up DOM bindings before an element is removed from the DOM.
+       */
+      $destroy: function() {
+        // We can't destroy a scope that has been already destroyed.
+        if (this.$$destroyed) return;
+        var parent = this.$parent;
+
+        this.$broadcast('$destroy');
+        this.$$destroyed = true;
+
+        if (this === $rootScope) {
+          //Remove handlers attached to window when $rootScope is removed
+          $browser.$$applicationDestroyed();
+        }
+
+        incrementWatchersCount(this, -this.$$watchersCount);
+        for (var eventName in this.$$listenerCount) {
+          decrementListenerCount(this, this.$$listenerCount[eventName], eventName);
+        }
+
+        // sever all the references to parent scopes (after this cleanup, the current scope should
+        // not be retained by any of our references and should be eligible for garbage collection)
+        if (parent && parent.$$childHead === this) parent.$$childHead = this.$$nextSibling;
+        if (parent && parent.$$childTail === this) parent.$$childTail = this.$$prevSibling;
+        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;
+        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;
+
+        // Disable listeners, watchers and apply/digest methods
+        this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = noop;
+        this.$on = this.$watch = this.$watchGroup = function() { return noop; };
+        this.$$listeners = {};
+
+        // Disconnect the next sibling to prevent `cleanUpScope` destroying those too
+        this.$$nextSibling = null;
+        cleanUpScope(this);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$eval
+       * @kind function
+       *
+       * @description
+       * Executes the `expression` on the current scope and returns the result. Any exceptions in
+       * the expression are propagated (uncaught). This is useful when evaluating AngularJS
+       * expressions.
+       *
+       * @example
+       * ```js
+           var scope = ng.$rootScope.Scope();
+           scope.a = 1;
+           scope.b = 2;
+
+           expect(scope.$eval('a+b')).toEqual(3);
+           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);
+       * ```
+       *
+       * @param {(string|function())=} expression An AngularJS expression to be executed.
+       *
+       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.
+       *    - `function(scope)`: execute the function with the current `scope` parameter.
+       *
+       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
+       * @returns {*} The result of evaluating the expression.
+       */
+      $eval: function(expr, locals) {
+        return $parse(expr)(this, locals);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$evalAsync
+       * @kind function
+       *
+       * @description
+       * Executes the expression on the current scope at a later point in time.
+       *
+       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only
+       * that:
+       *
+       *   - it will execute after the function that scheduled the evaluation (preferably before DOM
+       *     rendering).
+       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after
+       *     `expression` execution.
+       *
+       * Any exceptions from the execution of the expression are forwarded to the
+       * {@link ng.$exceptionHandler $exceptionHandler} service.
+       *
+       * __Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle
+       * will be scheduled. However, it is encouraged to always call code that changes the model
+       * from within an `$apply` call. That includes code evaluated via `$evalAsync`.
+       *
+       * @param {(string|function())=} expression An AngularJS expression to be executed.
+       *
+       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
+       *    - `function(scope)`: execute the function with the current `scope` parameter.
+       *
+       * @param {(object)=} locals Local variables object, useful for overriding values in scope.
+       */
+      $evalAsync: function(expr, locals) {
+        // if we are outside of an $digest loop and this is the first time we are scheduling async
+        // task also schedule async auto-flush
+        if (!$rootScope.$$phase && !asyncQueue.length) {
+          $browser.defer(function() {
+            if (asyncQueue.length) {
+              $rootScope.$digest();
+            }
+          }, null, '$evalAsync');
+        }
+
+        asyncQueue.push({scope: this, fn: $parse(expr), locals: locals});
+      },
+
+      $$postDigest: function(fn) {
+        postDigestQueue.push(fn);
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$apply
+       * @kind function
+       *
+       * @description
+       * `$apply()` is used to execute an expression in AngularJS from outside of the AngularJS
+       * framework. (For example from browser DOM events, setTimeout, XHR or third party libraries).
+       * Because we are calling into the AngularJS framework we need to perform proper scope life
+       * cycle of {@link ng.$exceptionHandler exception handling},
+       * {@link ng.$rootScope.Scope#$digest executing watches}.
+       *
+       * **Life cycle: Pseudo-Code of `$apply()`**
+       *
+       * ```js
+           function $apply(expr) {
+             try {
+               return $eval(expr);
+             } catch (e) {
+               $exceptionHandler(e);
+             } finally {
+               $root.$digest();
+             }
+           }
+       * ```
+       *
+       *
+       * Scope's `$apply()` method transitions through the following stages:
+       *
+       * 1. The {@link guide/expression expression} is executed using the
+       *    {@link ng.$rootScope.Scope#$eval $eval()} method.
+       * 2. Any exceptions from the execution of the expression are forwarded to the
+       *    {@link ng.$exceptionHandler $exceptionHandler} service.
+       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the
+       *    expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.
+       *
+       *
+       * @param {(string|function())=} exp An AngularJS expression to be executed.
+       *
+       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
+       *    - `function(scope)`: execute the function with current `scope` parameter.
+       *
+       * @returns {*} The result of evaluating the expression.
+       */
+      $apply: function(expr) {
+        try {
+          beginPhase('$apply');
+          try {
+            return this.$eval(expr);
+          } finally {
+            clearPhase();
+          }
+        } catch (e) {
+          $exceptionHandler(e);
+        } finally {
+          try {
+            $rootScope.$digest();
+          } catch (e) {
+            $exceptionHandler(e);
+            // eslint-disable-next-line no-unsafe-finally
+            throw e;
+          }
+        }
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$applyAsync
+       * @kind function
+       *
+       * @description
+       * Schedule the invocation of $apply to occur at a later time. The actual time difference
+       * varies across browsers, but is typically around ~10 milliseconds.
+       *
+       * This can be used to queue up multiple expressions which need to be evaluated in the same
+       * digest.
+       *
+       * @param {(string|function())=} exp An AngularJS expression to be executed.
+       *
+       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.
+       *    - `function(scope)`: execute the function with current `scope` parameter.
+       */
+      $applyAsync: function(expr) {
+        var scope = this;
+        if (expr) {
+          applyAsyncQueue.push($applyAsyncExpression);
+        }
+        expr = $parse(expr);
+        scheduleApplyAsync();
+
+        function $applyAsyncExpression() {
+          scope.$eval(expr);
+        }
+      },
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$on
+       * @kind function
+       *
+       * @description
+       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for
+       * discussion of event life cycle.
+       *
+       * The event listener function format is: `function(event, args...)`. The `event` object
+       * passed into the listener has the following attributes:
+       *
+       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or
+       *     `$broadcast`-ed.
+       *   - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the
+       *     event propagates through the scope hierarchy, this property is set to null.
+       *   - `name` - `{string}`: name of the event.
+       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel
+       *     further event propagation (available only for events that were `$emit`-ed).
+       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag
+       *     to true.
+       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.
+       *
+       * @param {string} name Event name to listen on.
+       * @param {function(event, ...args)} listener Function to call when the event is emitted.
+       * @returns {function()} Returns a deregistration function for this listener.
+       */
+      $on: function(name, listener) {
+        var namedListeners = this.$$listeners[name];
+        if (!namedListeners) {
+          this.$$listeners[name] = namedListeners = [];
+        }
+        namedListeners.push(listener);
+
+        var current = this;
+        do {
+          if (!current.$$listenerCount[name]) {
+            current.$$listenerCount[name] = 0;
+          }
+          current.$$listenerCount[name]++;
+        } while ((current = current.$parent));
+
+        var self = this;
+        return function() {
+          var indexOfListener = namedListeners.indexOf(listener);
+          if (indexOfListener !== -1) {
+            // Use delete in the hope of the browser deallocating the memory for the array entry,
+            // while not shifting the array indexes of other listeners.
+            // See issue https://github.com/angular/angular.js/issues/16135
+            delete namedListeners[indexOfListener];
+            decrementListenerCount(self, 1, name);
+          }
+        };
+      },
+
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$emit
+       * @kind function
+       *
+       * @description
+       * Dispatches an event `name` upwards through the scope hierarchy notifying the
+       * registered {@link ng.$rootScope.Scope#$on} listeners.
+       *
+       * The event life cycle starts at the scope on which `$emit` was called. All
+       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
+       * notified. Afterwards, the event traverses upwards toward the root scope and calls all
+       * registered listeners along the way. The event will stop propagating if one of the listeners
+       * cancels it.
+       *
+       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
+       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
+       *
+       * @param {string} name Event name to emit.
+       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
+       * @return {Object} Event object (see {@link ng.$rootScope.Scope#$on}).
+       */
+      $emit: function(name, args) {
+        var empty = [],
+            namedListeners,
+            scope = this,
+            stopPropagation = false,
+            event = {
+              name: name,
+              targetScope: scope,
+              stopPropagation: function() {stopPropagation = true;},
+              preventDefault: function() {
+                event.defaultPrevented = true;
+              },
+              defaultPrevented: false
+            },
+            listenerArgs = concat([event], arguments, 1),
+            i, length;
+
+        do {
+          namedListeners = scope.$$listeners[name] || empty;
+          event.currentScope = scope;
+          for (i = 0, length = namedListeners.length; i < length; i++) {
+
+            // if listeners were deregistered, defragment the array
+            if (!namedListeners[i]) {
+              namedListeners.splice(i, 1);
+              i--;
+              length--;
+              continue;
+            }
+            try {
+              //allow all listeners attached to the current scope to run
+              namedListeners[i].apply(null, listenerArgs);
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          }
+          //if any listener on the current scope stops propagation, prevent bubbling
+          if (stopPropagation) {
+            break;
+          }
+          //traverse upwards
+          scope = scope.$parent;
+        } while (scope);
+
+        event.currentScope = null;
+
+        return event;
+      },
+
+
+      /**
+       * @ngdoc method
+       * @name $rootScope.Scope#$broadcast
+       * @kind function
+       *
+       * @description
+       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the
+       * registered {@link ng.$rootScope.Scope#$on} listeners.
+       *
+       * The event life cycle starts at the scope on which `$broadcast` was called. All
+       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get
+       * notified. Afterwards, the event propagates to all direct and indirect scopes of the current
+       * scope and calls all registered listeners along the way. The event cannot be canceled.
+       *
+       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed
+       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.
+       *
+       * @param {string} name Event name to broadcast.
+       * @param {...*} args Optional one or more arguments which will be passed onto the event listeners.
+       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}
+       */
+      $broadcast: function(name, args) {
+        var target = this,
+            current = target,
+            next = target,
+            event = {
+              name: name,
+              targetScope: target,
+              preventDefault: function() {
+                event.defaultPrevented = true;
+              },
+              defaultPrevented: false
+            };
+
+        if (!target.$$listenerCount[name]) return event;
+
+        var listenerArgs = concat([event], arguments, 1),
+            listeners, i, length;
+
+        //down while you can, then up and next sibling or up and next sibling until back at root
+        while ((current = next)) {
+          event.currentScope = current;
+          listeners = current.$$listeners[name] || [];
+          for (i = 0, length = listeners.length; i < length; i++) {
+            // if listeners were deregistered, defragment the array
+            if (!listeners[i]) {
+              listeners.splice(i, 1);
+              i--;
+              length--;
+              continue;
+            }
+
+            try {
+              listeners[i].apply(null, listenerArgs);
+            } catch (e) {
+              $exceptionHandler(e);
+            }
+          }
+
+          // Insanity Warning: scope depth-first traversal
+          // yes, this code is a bit crazy, but it works and we have tests to prove it!
+          // this piece should be kept in sync with the traversal in $digest
+          // (though it differs due to having the extra check for $$listenerCount and
+          // does not check $$suspended)
+          if (!(next = ((current.$$listenerCount[name] && current.$$childHead) ||
+              (current !== target && current.$$nextSibling)))) {
+            while (current !== target && !(next = current.$$nextSibling)) {
+              current = current.$parent;
+            }
+          }
+        }
+
+        event.currentScope = null;
+        return event;
+      }
+    };
+
+    var $rootScope = new Scope();
+
+    //The internal queues. Expose them on the $rootScope for debugging/testing purposes.
+    var asyncQueue = $rootScope.$$asyncQueue = [];
+    var postDigestQueue = $rootScope.$$postDigestQueue = [];
+    var applyAsyncQueue = $rootScope.$$applyAsyncQueue = [];
+
+    var postDigestQueuePosition = 0;
+
+    return $rootScope;
+
+
+    function beginPhase(phase) {
+      if ($rootScope.$$phase) {
+        throw $rootScopeMinErr('inprog', '{0} already in progress', $rootScope.$$phase);
+      }
+
+      $rootScope.$$phase = phase;
+    }
+
+    function clearPhase() {
+      $rootScope.$$phase = null;
+    }
+
+    function incrementWatchersCount(current, count) {
+      do {
+        current.$$watchersCount += count;
+      } while ((current = current.$parent));
+    }
+
+    function decrementListenerCount(current, count, name) {
+      do {
+        current.$$listenerCount[name] -= count;
+
+        if (current.$$listenerCount[name] === 0) {
+          delete current.$$listenerCount[name];
+        }
+      } while ((current = current.$parent));
+    }
+
+    /**
+     * function used as an initial value for watchers.
+     * because it's unique we can easily tell it apart from other values
+     */
+    function initWatchVal() {}
+
+    function flushApplyAsync() {
+      while (applyAsyncQueue.length) {
+        try {
+          applyAsyncQueue.shift()();
+        } catch (e) {
+          $exceptionHandler(e);
+        }
+      }
+      applyAsyncId = null;
+    }
+
+    function scheduleApplyAsync() {
+      if (applyAsyncId === null) {
+        applyAsyncId = $browser.defer(function() {
+          $rootScope.$apply(flushApplyAsync);
+        }, null, '$applyAsync');
+      }
+    }
+  }];
+}
+
+/**
+ * @ngdoc service
+ * @name $rootElement
+ *
+ * @description
+ * The root element of AngularJS application. This is either the element where {@link
+ * ng.directive:ngApp ngApp} was declared or the element passed into
+ * {@link angular.bootstrap}. The element represents the root element of application. It is also the
+ * location where the application's {@link auto.$injector $injector} service gets
+ * published, and can be retrieved using `$rootElement.injector()`.
+ */
+
+
+// the implementation is in angular.bootstrap
+
+/**
+ * @this
+ * @description
+ * Private service to sanitize uris for links and images. Used by $compile and $sanitize.
+ */
+function $$SanitizeUriProvider() {
+
+  var aHrefSanitizationTrustedUrlList = /^\s*(https?|s?ftp|mailto|tel|file):/,
+    imgSrcSanitizationTrustedUrlList = /^\s*((https?|ftp|file|blob):|data:image\/)/;
+
+  /**
+   * @description
+   * Retrieves or overrides the default regular expression that is used for determining trusted safe
+   * urls during a[href] sanitization.
+   *
+   * The sanitization is a security measure aimed at prevent XSS attacks via HTML anchor links.
+   *
+   * Any url due to be assigned to an `a[href]` attribute via interpolation is marked as requiring
+   * the $sce.URL security context. When interpolation occurs a call is made to `$sce.trustAsUrl(url)`
+   * which in turn may call `$$sanitizeUri(url, isMedia)` to sanitize the potentially malicious URL.
+   *
+   * If the URL matches the `aHrefSanitizationTrustedUrlList` regular expression, it is returned unchanged.
+   *
+   * If there is no match the URL is returned prefixed with `'unsafe:'` to ensure that when it is written
+   * to the DOM it is inactive and potentially malicious code will not be executed.
+   *
+   * @param {RegExp=} regexp New regexp to trust urls with.
+   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
+   *    chaining otherwise.
+   */
+  this.aHrefSanitizationTrustedUrlList = function(regexp) {
+    if (isDefined(regexp)) {
+      aHrefSanitizationTrustedUrlList = regexp;
+      return this;
+    }
+    return aHrefSanitizationTrustedUrlList;
+  };
+
+
+  /**
+   * @description
+   * Retrieves or overrides the default regular expression that is used for determining trusted safe
+   * urls during img[src] sanitization.
+   *
+   * The sanitization is a security measure aimed at prevent XSS attacks via HTML image src links.
+   *
+   * Any URL due to be assigned to an `img[src]` attribute via interpolation is marked as requiring
+   * the $sce.MEDIA_URL security context. When interpolation occurs a call is made to
+   * `$sce.trustAsMediaUrl(url)` which in turn may call `$$sanitizeUri(url, isMedia)` to sanitize
+   * the potentially malicious URL.
+   *
+   * If the URL matches the `imgSrcSanitizationTrustedUrlList` regular expression, it is returned
+   * unchanged.
+   *
+   * If there is no match the URL is returned prefixed with `'unsafe:'` to ensure that when it is written
+   * to the DOM it is inactive and potentially malicious code will not be executed.
+   *
+   * @param {RegExp=} regexp New regexp to trust urls with.
+   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for
+   *    chaining otherwise.
+   */
+  this.imgSrcSanitizationTrustedUrlList = function(regexp) {
+    if (isDefined(regexp)) {
+      imgSrcSanitizationTrustedUrlList = regexp;
+      return this;
+    }
+    return imgSrcSanitizationTrustedUrlList;
+  };
+
+  this.$get = function() {
+    return function sanitizeUri(uri, isMediaUrl) {
+      // if (!uri) return uri;
+      var regex = isMediaUrl ? imgSrcSanitizationTrustedUrlList : aHrefSanitizationTrustedUrlList;
+      var normalizedVal = urlResolve(uri && uri.trim()).href;
+      if (normalizedVal !== '' && !normalizedVal.match(regex)) {
+        return 'unsafe:' + normalizedVal;
+      }
+      return uri;
+    };
+  };
+}
+
+/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
+ *     Any commits to this file should be reviewed with security in mind.  *
+ *   Changes to this file can potentially create security vulnerabilities. *
+ *          An approval from 2 Core members with history of modifying      *
+ *                         this file is required.                          *
+ *                                                                         *
+ *  Does the change somehow allow for arbitrary javascript to be executed? *
+ *    Or allows for someone to change the prototype of built-in objects?   *
+ *     Or gives undesired access to variables likes document or window?    *
+ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
+
+/* exported $SceProvider, $SceDelegateProvider */
+
+var $sceMinErr = minErr('$sce');
+
+var SCE_CONTEXTS = {
+  // HTML is used when there's HTML rendered (e.g. ng-bind-html, iframe srcdoc binding).
+  HTML: 'html',
+
+  // Style statements or stylesheets. Currently unused in AngularJS.
+  CSS: 'css',
+
+  // An URL used in a context where it refers to the source of media, which are not expected to be run
+  // as scripts, such as an image, audio, video, etc.
+  MEDIA_URL: 'mediaUrl',
+
+  // An URL used in a context where it does not refer to a resource that loads code.
+  // A value that can be trusted as a URL can also trusted as a MEDIA_URL.
+  URL: 'url',
+
+  // RESOURCE_URL is a subtype of URL used where the referred-to resource could be interpreted as
+  // code. (e.g. ng-include, script src binding, templateUrl)
+  // A value that can be trusted as a RESOURCE_URL, can also trusted as a URL and a MEDIA_URL.
+  RESOURCE_URL: 'resourceUrl',
+
+  // Script. Currently unused in AngularJS.
+  JS: 'js'
+};
+
+// Helper functions follow.
+
+var UNDERSCORE_LOWERCASE_REGEXP = /_([a-z])/g;
+
+function snakeToCamel(name) {
+  return name
+    .replace(UNDERSCORE_LOWERCASE_REGEXP, fnCamelCaseReplace);
+}
+
+function adjustMatcher(matcher) {
+  if (matcher === 'self') {
+    return matcher;
+  } else if (isString(matcher)) {
+    // Strings match exactly except for 2 wildcards - '*' and '**'.
+    // '*' matches any character except those from the set ':/.?&'.
+    // '**' matches any character (like .* in a RegExp).
+    // More than 2 *'s raises an error as it's ill defined.
+    if (matcher.indexOf('***') > -1) {
+      throw $sceMinErr('iwcard',
+          'Illegal sequence *** in string matcher.  String: {0}', matcher);
+    }
+    matcher = escapeForRegexp(matcher).
+                  replace(/\\\*\\\*/g, '.*').
+                  replace(/\\\*/g, '[^:/.?&;]*');
+    return new RegExp('^' + matcher + '$');
+  } else if (isRegExp(matcher)) {
+    // The only other type of matcher allowed is a Regexp.
+    // Match entire URL / disallow partial matches.
+    // Flags are reset (i.e. no global, ignoreCase or multiline)
+    return new RegExp('^' + matcher.source + '$');
+  } else {
+    throw $sceMinErr('imatcher',
+        'Matchers may only be "self", string patterns or RegExp objects');
+  }
+}
+
+
+function adjustMatchers(matchers) {
+  var adjustedMatchers = [];
+  if (isDefined(matchers)) {
+    forEach(matchers, function(matcher) {
+      adjustedMatchers.push(adjustMatcher(matcher));
+    });
+  }
+  return adjustedMatchers;
+}
+
+
+/**
+ * @ngdoc service
+ * @name $sceDelegate
+ * @kind function
+ *
+ * @description
+ *
+ * `$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict
+ * Contextual Escaping (SCE)} services to AngularJS.
+ *
+ * For an overview of this service and the functionnality it provides in AngularJS, see the main
+ * page for {@link ng.$sce SCE}. The current page is targeted for developers who need to alter how
+ * SCE works in their application, which shouldn't be needed in most cases.
+ *
+ * <div class="alert alert-danger">
+ * AngularJS strongly relies on contextual escaping for the security of bindings: disabling or
+ * modifying this might cause cross site scripting (XSS) vulnerabilities. For libraries owners,
+ * changes to this service will also influence users, so be extra careful and document your changes.
+ * </div>
+ *
+ * Typically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of
+ * the `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is
+ * because, while the `$sce` provides numerous shorthand methods, etc., you really only need to
+ * override 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things
+ * work because `$sce` delegates to `$sceDelegate` for these operations.
+ *
+ * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.
+ *
+ * The default instance of `$sceDelegate` should work out of the box with little pain.  While you
+ * can override it completely to change the behavior of `$sce`, the common case would
+ * involve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting
+ * your own trusted and banned resource lists for trusting URLs used for loading AngularJS resources
+ * such as templates.  Refer {@link ng.$sceDelegateProvider#trustedResourceUrlList
+ * $sceDelegateProvider.trustedResourceUrlList} and {@link
+ * ng.$sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider.bannedResourceUrlList}
+ */
+
+/**
+ * @ngdoc provider
+ * @name $sceDelegateProvider
+ * @this
+ *
+ * @description
+ *
+ * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate
+ * $sceDelegate service}, used as a delegate for {@link ng.$sce Strict Contextual Escaping (SCE)}.
+ *
+ * The `$sceDelegateProvider` allows one to get/set the `trustedResourceUrlList` and
+ * `bannedResourceUrlList` used to ensure that the URLs used for sourcing AngularJS templates and
+ * other script-running URLs are safe (all places that use the `$sce.RESOURCE_URL` context). See
+ * {@link ng.$sceDelegateProvider#trustedResourceUrlList
+ * $sceDelegateProvider.trustedResourceUrlList} and
+ * {@link ng.$sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider.bannedResourceUrlList},
+ *
+ * For the general details about this service in AngularJS, read the main page for {@link ng.$sce
+ * Strict Contextual Escaping (SCE)}.
+ *
+ * **Example**:  Consider the following case. <a name="example"></a>
+ *
+ * - your app is hosted at url `http://myapp.example.com/`
+ * - but some of your templates are hosted on other domains you control such as
+ *   `http://srv01.assets.example.com/`, `http://srv02.assets.example.com/`, etc.
+ * - and you have an open redirect at `http://myapp.example.com/clickThru?...`.
+ *
+ * Here is what a secure configuration for this scenario might look like:
+ *
+ * ```
+ *  angular.module('myApp', []).config(function($sceDelegateProvider) {
+ *    $sceDelegateProvider.trustedResourceUrlList([
+ *      // Allow same origin resource loads.
+ *      'self',
+ *      // Allow loading from our assets domain.  Notice the difference between * and **.
+ *      'http://srv*.assets.example.com/**'
+ *    ]);
+ *
+ *    // The banned resource URL list overrides the trusted resource URL list so the open redirect
+ *    // here is blocked.
+ *    $sceDelegateProvider.bannedResourceUrlList([
+ *      'http://myapp.example.com/clickThru**'
+ *    ]);
+ *  });
+ * ```
+ * Note that an empty trusted resource URL list will block every resource URL from being loaded, and will require
+ * you to manually mark each one as trusted with `$sce.trustAsResourceUrl`. However, templates
+ * requested by {@link ng.$templateRequest $templateRequest} that are present in
+ * {@link ng.$templateCache $templateCache} will not go through this check. If you have a mechanism
+ * to populate your templates in that cache at config time, then it is a good idea to remove 'self'
+ * from the trusted resource URL lsit. This helps to mitigate the security impact of certain types
+ * of issues, like for instance attacker-controlled `ng-includes`.
+ */
+
+function $SceDelegateProvider() {
+  this.SCE_CONTEXTS = SCE_CONTEXTS;
+
+  // Resource URLs can also be trusted by policy.
+  var trustedResourceUrlList = ['self'],
+      bannedResourceUrlList = [];
+
+  /**
+   * @ngdoc method
+   * @name $sceDelegateProvider#trustedResourceUrlList
+   * @kind function
+   *
+   * @param {Array=} trustedResourceUrlList When provided, replaces the trustedResourceUrlList with
+   *     the value provided.  This must be an array or null.  A snapshot of this array is used so
+   *     further changes to the array are ignored.
+   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
+   *     allowed in this array.
+   *
+   * @return {Array} The currently set trusted resource URL array.
+   *
+   * @description
+   * Sets/Gets the list trusted of resource URLs.
+   *
+   * The **default value** when no `trustedResourceUrlList` has been explicitly set is `['self']`
+   * allowing only same origin resource requests.
+   *
+   * <div class="alert alert-warning">
+   * **Note:** the default `trustedResourceUrlList` of 'self' is not recommended if your app shares
+   * its origin with other apps! It is a good idea to limit it to only your application's directory.
+   * </div>
+   */
+  this.trustedResourceUrlList = function(value) {
+    if (arguments.length) {
+      trustedResourceUrlList = adjustMatchers(value);
+    }
+    return trustedResourceUrlList;
+  };
+
+  /**
+   * @ngdoc method
+   * @name $sceDelegateProvider#resourceUrlWhitelist
+   * @kind function
+   *
+   * @deprecated
+   * sinceVersion="1.8.1"
+   *
+   * This method is deprecated. Use {@link $sceDelegateProvider#trustedResourceUrlList
+   * trustedResourceUrlList} instead.
+   */
+  Object.defineProperty(this, 'resourceUrlWhitelist', {
+    get: function() {
+      return this.trustedResourceUrlList;
+    },
+    set: function(value) {
+      this.trustedResourceUrlList = value;
+    }
+  });
+
+  /**
+   * @ngdoc method
+   * @name $sceDelegateProvider#bannedResourceUrlList
+   * @kind function
+   *
+   * @param {Array=} bannedResourceUrlList When provided, replaces the `bannedResourceUrlList` with
+   *     the value provided. This must be an array or null. A snapshot of this array is used so
+   *     further changes to the array are ignored.</p><p>
+   *     Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items
+   *     allowed in this array.</p><p>
+   *     The typical usage for the `bannedResourceUrlList` is to **block
+   *     [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as
+   *     these would otherwise be trusted but actually return content from the redirected domain.
+   *     </p><p>
+   *     Finally, **the banned resource URL list overrides the trusted resource URL list** and has
+   *     the final say.
+   *
+   * @return {Array} The currently set `bannedResourceUrlList` array.
+   *
+   * @description
+   * Sets/Gets the `bannedResourceUrlList` of trusted resource URLs.
+   *
+   * The **default value** when no trusted resource URL list has been explicitly set is the empty
+   * array (i.e. there is no `bannedResourceUrlList`.)
+   */
+  this.bannedResourceUrlList = function(value) {
+    if (arguments.length) {
+      bannedResourceUrlList = adjustMatchers(value);
+    }
+    return bannedResourceUrlList;
+  };
+
+  /**
+   * @ngdoc method
+   * @name $sceDelegateProvider#resourceUrlBlacklist
+   * @kind function
+   *
+   * @deprecated
+   * sinceVersion="1.8.1"
+   *
+   * This method is deprecated. Use {@link $sceDelegateProvider#bannedResourceUrlList
+   * bannedResourceUrlList} instead.
+   */
+  Object.defineProperty(this, 'resourceUrlBlacklist', {
+    get: function() {
+      return this.bannedResourceUrlList;
+    },
+    set: function(value) {
+      this.bannedResourceUrlList = value;
+    }
+  });
+
+  this.$get = ['$injector', '$$sanitizeUri', function($injector, $$sanitizeUri) {
+
+    var htmlSanitizer = function htmlSanitizer(html) {
+      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
+    };
+
+    if ($injector.has('$sanitize')) {
+      htmlSanitizer = $injector.get('$sanitize');
+    }
+
+
+    function matchUrl(matcher, parsedUrl) {
+      if (matcher === 'self') {
+        return urlIsSameOrigin(parsedUrl) || urlIsSameOriginAsBaseUrl(parsedUrl);
+      } else {
+        // definitely a regex.  See adjustMatchers()
+        return !!matcher.exec(parsedUrl.href);
+      }
+    }
+
+    function isResourceUrlAllowedByPolicy(url) {
+      var parsedUrl = urlResolve(url.toString());
+      var i, n, allowed = false;
+      // Ensure that at least one item from the trusted resource URL list allows this url.
+      for (i = 0, n = trustedResourceUrlList.length; i < n; i++) {
+        if (matchUrl(trustedResourceUrlList[i], parsedUrl)) {
+          allowed = true;
+          break;
+        }
+      }
+      if (allowed) {
+        // Ensure that no item from the banned resource URL list has blocked this url.
+        for (i = 0, n = bannedResourceUrlList.length; i < n; i++) {
+          if (matchUrl(bannedResourceUrlList[i], parsedUrl)) {
+            allowed = false;
+            break;
+          }
+        }
+      }
+      return allowed;
+    }
+
+    function generateHolderType(Base) {
+      var holderType = function TrustedValueHolderType(trustedValue) {
+        this.$$unwrapTrustedValue = function() {
+          return trustedValue;
+        };
+      };
+      if (Base) {
+        holderType.prototype = new Base();
+      }
+      holderType.prototype.valueOf = function sceValueOf() {
+        return this.$$unwrapTrustedValue();
+      };
+      holderType.prototype.toString = function sceToString() {
+        return this.$$unwrapTrustedValue().toString();
+      };
+      return holderType;
+    }
+
+    var trustedValueHolderBase = generateHolderType(),
+        byType = {};
+
+    byType[SCE_CONTEXTS.HTML] = generateHolderType(trustedValueHolderBase);
+    byType[SCE_CONTEXTS.CSS] = generateHolderType(trustedValueHolderBase);
+    byType[SCE_CONTEXTS.MEDIA_URL] = generateHolderType(trustedValueHolderBase);
+    byType[SCE_CONTEXTS.URL] = generateHolderType(byType[SCE_CONTEXTS.MEDIA_URL]);
+    byType[SCE_CONTEXTS.JS] = generateHolderType(trustedValueHolderBase);
+    byType[SCE_CONTEXTS.RESOURCE_URL] = generateHolderType(byType[SCE_CONTEXTS.URL]);
+
+    /**
+     * @ngdoc method
+     * @name $sceDelegate#trustAs
+     *
+     * @description
+     * Returns a trusted representation of the parameter for the specified context. This trusted
+     * object will later on be used as-is, without any security check, by bindings or directives
+     * that require this security context.
+     * For instance, marking a string as trusted for the `$sce.HTML` context will entirely bypass
+     * the potential `$sanitize` call in corresponding `$sce.HTML` bindings or directives, such as
+     * `ng-bind-html`. Note that in most cases you won't need to call this function: if you have the
+     * sanitizer loaded, passing the value itself will render all the HTML that does not pose a
+     * security risk.
+     *
+     * See {@link ng.$sceDelegate#getTrusted getTrusted} for the function that will consume those
+     * trusted values, and {@link ng.$sce $sce} for general documentation about strict contextual
+     * escaping.
+     *
+     * @param {string} type The context in which this value is safe for use, e.g. `$sce.URL`,
+     *     `$sce.RESOURCE_URL`, `$sce.HTML`, `$sce.JS` or `$sce.CSS`.
+     *
+     * @param {*} value The value that should be considered trusted.
+     * @return {*} A trusted representation of value, that can be used in the given context.
+     */
+    function trustAs(type, trustedValue) {
+      var Constructor = (byType.hasOwnProperty(type) ? byType[type] : null);
+      if (!Constructor) {
+        throw $sceMinErr('icontext',
+            'Attempted to trust a value in invalid context. Context: {0}; Value: {1}',
+            type, trustedValue);
+      }
+      if (trustedValue === null || isUndefined(trustedValue) || trustedValue === '') {
+        return trustedValue;
+      }
+      // All the current contexts in SCE_CONTEXTS happen to be strings.  In order to avoid trusting
+      // mutable objects, we ensure here that the value passed in is actually a string.
+      if (typeof trustedValue !== 'string') {
+        throw $sceMinErr('itype',
+            'Attempted to trust a non-string value in a content requiring a string: Context: {0}',
+            type);
+      }
+      return new Constructor(trustedValue);
+    }
+
+    /**
+     * @ngdoc method
+     * @name $sceDelegate#valueOf
+     *
+     * @description
+     * If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs
+     * `$sceDelegate.trustAs`}, returns the value that had been passed to {@link
+     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.
+     *
+     * If the passed parameter is not a value that had been returned by {@link
+     * ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, it must be returned as-is.
+     *
+     * @param {*} value The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}
+     *     call or anything else.
+     * @return {*} The `value` that was originally provided to {@link ng.$sceDelegate#trustAs
+     *     `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns
+     *     `value` unchanged.
+     */
+    function valueOf(maybeTrusted) {
+      if (maybeTrusted instanceof trustedValueHolderBase) {
+        return maybeTrusted.$$unwrapTrustedValue();
+      } else {
+        return maybeTrusted;
+      }
+    }
+
+    /**
+     * @ngdoc method
+     * @name $sceDelegate#getTrusted
+     *
+     * @description
+     * Given an object and a security context in which to assign it, returns a value that's safe to
+     * use in this context, which was represented by the parameter. To do so, this function either
+     * unwraps the safe type it has been given (for instance, a {@link ng.$sceDelegate#trustAs
+     * `$sceDelegate.trustAs`} result), or it might try to sanitize the value given, depending on
+     * the context and sanitizer availablility.
+     *
+     * The contexts that can be sanitized are $sce.MEDIA_URL, $sce.URL and $sce.HTML. The first two are available
+     * by default, and the third one relies on the `$sanitize` service (which may be loaded through
+     * the `ngSanitize` module). Furthermore, for $sce.RESOURCE_URL context, a plain string may be
+     * accepted if the resource url policy defined by {@link ng.$sceDelegateProvider#trustedResourceUrlList
+     * `$sceDelegateProvider.trustedResourceUrlList`} and {@link ng.$sceDelegateProvider#bannedResourceUrlList
+     * `$sceDelegateProvider.bannedResourceUrlList`} accepts that resource.
+     *
+     * This function will throw if the safe type isn't appropriate for this context, or if the
+     * value given cannot be accepted in the context (which might be caused by sanitization not
+     * being available, or the value not being recognized as safe).
+     *
+     * <div class="alert alert-danger">
+     * Disabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting
+     * (XSS) vulnerability in your application.
+     * </div>
+     *
+     * @param {string} type The context in which this value is to be used (such as `$sce.HTML`).
+     * @param {*} maybeTrusted The result of a prior {@link ng.$sceDelegate#trustAs
+     *     `$sceDelegate.trustAs`} call, or anything else (which will not be considered trusted.)
+     * @return {*} A version of the value that's safe to use in the given context, or throws an
+     *     exception if this is impossible.
+     */
+    function getTrusted(type, maybeTrusted) {
+      if (maybeTrusted === null || isUndefined(maybeTrusted) || maybeTrusted === '') {
+        return maybeTrusted;
+      }
+      var constructor = (byType.hasOwnProperty(type) ? byType[type] : null);
+      // If maybeTrusted is a trusted class instance or subclass instance, then unwrap and return
+      // as-is.
+      if (constructor && maybeTrusted instanceof constructor) {
+        return maybeTrusted.$$unwrapTrustedValue();
+      }
+
+      // If maybeTrusted is a trusted class instance but not of the correct trusted type
+      // then unwrap it and allow it to pass through to the rest of the checks
+      if (isFunction(maybeTrusted.$$unwrapTrustedValue)) {
+        maybeTrusted = maybeTrusted.$$unwrapTrustedValue();
+      }
+
+      // If we get here, then we will either sanitize the value or throw an exception.
+      if (type === SCE_CONTEXTS.MEDIA_URL || type === SCE_CONTEXTS.URL) {
+        // we attempt to sanitize non-resource URLs
+        return $$sanitizeUri(maybeTrusted.toString(), type === SCE_CONTEXTS.MEDIA_URL);
+      } else if (type === SCE_CONTEXTS.RESOURCE_URL) {
+        if (isResourceUrlAllowedByPolicy(maybeTrusted)) {
+          return maybeTrusted;
+        } else {
+          throw $sceMinErr('insecurl',
+              'Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}',
+              maybeTrusted.toString());
+        }
+      } else if (type === SCE_CONTEXTS.HTML) {
+        // htmlSanitizer throws its own error when no sanitizer is available.
+        return htmlSanitizer(maybeTrusted);
+      }
+      // Default error when the $sce service has no way to make the input safe.
+      throw $sceMinErr('unsafe', 'Attempting to use an unsafe value in a safe context.');
+    }
+
+    return { trustAs: trustAs,
+             getTrusted: getTrusted,
+             valueOf: valueOf };
+  }];
+}
+
+
+/**
+ * @ngdoc provider
+ * @name $sceProvider
+ * @this
+ *
+ * @description
+ *
+ * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.
+ * -   enable/disable Strict Contextual Escaping (SCE) in a module
+ * -   override the default implementation with a custom delegate
+ *
+ * Read more about {@link ng.$sce Strict Contextual Escaping (SCE)}.
+ */
+
+/**
+ * @ngdoc service
+ * @name $sce
+ * @kind function
+ *
+ * @description
+ *
+ * `$sce` is a service that provides Strict Contextual Escaping services to AngularJS.
+ *
+ * ## Strict Contextual Escaping
+ *
+ * Strict Contextual Escaping (SCE) is a mode in which AngularJS constrains bindings to only render
+ * trusted values. Its goal is to assist in writing code in a way that (a) is secure by default, and
+ * (b) makes auditing for security vulnerabilities such as XSS, clickjacking, etc. a lot easier.
+ *
+ * ### Overview
+ *
+ * To systematically block XSS security bugs, AngularJS treats all values as untrusted by default in
+ * HTML or sensitive URL bindings. When binding untrusted values, AngularJS will automatically
+ * run security checks on them (sanitizations, trusted URL resource, depending on context), or throw
+ * when it cannot guarantee the security of the result. That behavior depends strongly on contexts:
+ * HTML can be sanitized, but template URLs cannot, for instance.
+ *
+ * To illustrate this, consider the `ng-bind-html` directive. It renders its value directly as HTML:
+ * we call that the *context*. When given an untrusted input, AngularJS will attempt to sanitize it
+ * before rendering if a sanitizer is available, and throw otherwise. To bypass sanitization and
+ * render the input as-is, you will need to mark it as trusted for that context before attempting
+ * to bind it.
+ *
+ * As of version 1.2, AngularJS ships with SCE enabled by default.
+ *
+ * ### In practice
+ *
+ * Here's an example of a binding in a privileged context:
+ *
+ * ```
+ * <input ng-model="userHtml" aria-label="User input">
+ * <div ng-bind-html="userHtml"></div>
+ * ```
+ *
+ * Notice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE
+ * disabled, this application allows the user to render arbitrary HTML into the DIV, which would
+ * be an XSS security bug. In a more realistic example, one may be rendering user comments, blog
+ * articles, etc. via bindings. (HTML is just one example of a context where rendering user
+ * controlled input creates security vulnerabilities.)
+ *
+ * For the case of HTML, you might use a library, either on the client side, or on the server side,
+ * to sanitize unsafe HTML before binding to the value and rendering it in the document.
+ *
+ * How would you ensure that every place that used these types of bindings was bound to a value that
+ * was sanitized by your library (or returned as safe for rendering by your server?)  How can you
+ * ensure that you didn't accidentally delete the line that sanitized the value, or renamed some
+ * properties/fields and forgot to update the binding to the sanitized value?
+ *
+ * To be secure by default, AngularJS makes sure bindings go through that sanitization, or
+ * any similar validation process, unless there's a good reason to trust the given value in this
+ * context.  That trust is formalized with a function call. This means that as a developer, you
+ * can assume all untrusted bindings are safe. Then, to audit your code for binding security issues,
+ * you just need to ensure the values you mark as trusted indeed are safe - because they were
+ * received from your server, sanitized by your library, etc. You can organize your codebase to
+ * help with this - perhaps allowing only the files in a specific directory to do this.
+ * Ensuring that the internal API exposed by that code doesn't markup arbitrary values as safe then
+ * becomes a more manageable task.
+ *
+ * In the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}
+ * (and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to
+ * build the trusted versions of your values.
+ *
+ * ### How does it work?
+ *
+ * In privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted
+ * $sce.getTrusted(context, value)} rather than to the value directly.  Think of this function as
+ * a way to enforce the required security context in your data sink. Directives use {@link
+ * ng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs
+ * the {@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals. Also,
+ * when binding without directives, AngularJS will understand the context of your bindings
+ * automatically.
+ *
+ * As an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link
+ * ng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly
+ * simplified):
+ *
+ * ```
+ * var ngBindHtmlDirective = ['$sce', function($sce) {
+ *   return function(scope, element, attr) {
+ *     scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {
+ *       element.html(value || '');
+ *     });
+ *   };
+ * }];
+ * ```
+ *
+ * ### Impact on loading templates
+ *
+ * This applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as
+ * `templateUrl`'s specified by {@link guide/directive directives}.
+ *
+ * By default, AngularJS only loads templates from the same domain and protocol as the application
+ * document.  This is done by calling {@link ng.$sce#getTrustedResourceUrl
+ * $sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or
+ * protocols, you may either add them to the {@link ng.$sceDelegateProvider#trustedResourceUrlList
+ * trustedResourceUrlList} or {@link ng.$sce#trustAsResourceUrl wrap them} into trusted values.
+ *
+ * *Please note*:
+ * The browser's
+ * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
+ * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
+ * policy apply in addition to this and may further restrict whether the template is successfully
+ * loaded.  This means that without the right CORS policy, loading templates from a different domain
+ * won't work on all browsers.  Also, loading templates from `file://` URL does not work on some
+ * browsers.
+ *
+ * ### This feels like too much overhead
+ *
+ * It's important to remember that SCE only applies to interpolation expressions.
+ *
+ * If your expressions are constant literals, they're automatically trusted and you don't need to
+ * call `$sce.trustAs` on them (e.g.
+ * `<div ng-bind-html="'<b>implicitly trusted</b>'"></div>`) just works (remember to include the
+ * `ngSanitize` module). The `$sceDelegate` will also use the `$sanitize` service if it is available
+ * when binding untrusted values to `$sce.HTML` context.
+ * AngularJS provides an implementation in `angular-sanitize.js`, and if you
+ * wish to use it, you will also need to depend on the {@link ngSanitize `ngSanitize`} module in
+ * your application.
+ *
+ * The included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load
+ * templates in `ng-include` from your application's domain without having to even know about SCE.
+ * It blocks loading templates from other domains or loading templates over http from an https
+ * served document.  You can change these by setting your own custom {@link
+ * ng.$sceDelegateProvider#trustedResourceUrlList trusted resource URL list} and {@link
+ * ng.$sceDelegateProvider#bannedResourceUrlList banned resource URL list} for matching such URLs.
+ *
+ * This significantly reduces the overhead.  It is far easier to pay the small overhead and have an
+ * application that's secure and can be audited to verify that with much more ease than bolting
+ * security onto an application later.
+ *
+ * <a name="contexts"></a>
+ * ### What trusted context types are supported?
+ *
+ * | Context             | Notes          |
+ * |---------------------|----------------|
+ * | `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |
+ * | `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |
+ * | `$sce.MEDIA_URL`    | For URLs that are safe to render as media. Is automatically converted from string by sanitizing when needed. |
+ * | `$sce.URL`          | For URLs that are safe to follow as links. Is automatically converted from string by sanitizing when needed. Note that `$sce.URL` makes a stronger statement about the URL than `$sce.MEDIA_URL` does and therefore contexts requiring values trusted for `$sce.URL` can be used anywhere that values trusted for `$sce.MEDIA_URL` are required.|
+ * | `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` or `$sce.MEDIA_URL` do and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` or `$sce.MEDIA_URL` are required. <br><br> The {@link $sceDelegateProvider#trustedResourceUrlList $sceDelegateProvider#trustedResourceUrlList()} and {@link $sceDelegateProvider#bannedResourceUrlList $sceDelegateProvider#bannedResourceUrlList()} can be used to restrict trusted origins for `RESOURCE_URL` |
+ * | `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |
+ *
+ *
+ * <div class="alert alert-warning">
+ * Be aware that, before AngularJS 1.7.0, `a[href]` and `img[src]` used to sanitize their
+ * interpolated values directly rather than rely upon {@link ng.$sce#getTrusted `$sce.getTrusted`}.
+ *
+ * **As of 1.7.0, this is no longer the case.**
+ *
+ * Now such interpolations are marked as requiring `$sce.URL` (for `a[href]`) or `$sce.MEDIA_URL`
+ * (for `img[src]`), so that the sanitization happens (via `$sce.getTrusted...`) when the `$interpolate`
+ * service evaluates the expressions.
+ * </div>
+ *
+ * There are no CSS or JS context bindings in AngularJS currently, so their corresponding `$sce.trustAs`
+ * functions aren't useful yet. This might evolve.
+ *
+ * ### Format of items in {@link ng.$sceDelegateProvider#trustedResourceUrlList trustedResourceUrlList}/{@link ng.$sceDelegateProvider#bannedResourceUrlList bannedResourceUrlList} <a name="resourceUrlPatternItem"></a>
+ *
+ *  Each element in these arrays must be one of the following:
+ *
+ *  - **'self'**
+ *    - The special **string**, `'self'`, can be used to match against all URLs of the **same
+ *      domain** as the application document using the **same protocol**.
+ *  - **String** (except the special value `'self'`)
+ *    - The string is matched against the full *normalized / absolute URL* of the resource
+ *      being tested (substring matches are not good enough.)
+ *    - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters
+ *      match themselves.
+ *    - `*`: matches zero or more occurrences of any character other than one of the following 6
+ *      characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use
+ *      for matching resource URL lists.
+ *    - `**`: matches zero or more occurrences of *any* character.  As such, it's not
+ *      appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.
+ *      http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might
+ *      not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.
+ *      http://foo.example.com/templates/**).
+ *  - **RegExp** (*see caveat below*)
+ *    - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax
+ *      (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to
+ *      accidentally introduce a bug when one updates a complex expression (imho, all regexes should
+ *      have good test coverage).  For instance, the use of `.` in the regex is correct only in a
+ *      small number of cases.  A `.` character in the regex used when matching the scheme or a
+ *      subdomain could be matched against a `:` or literal `.` that was likely not intended.   It
+ *      is highly recommended to use the string patterns and only fall back to regular expressions
+ *      as a last resort.
+ *    - The regular expression must be an instance of RegExp (i.e. not a string.)  It is
+ *      matched against the **entire** *normalized / absolute URL* of the resource being tested
+ *      (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags
+ *      present on the RegExp (such as multiline, global, ignoreCase) are ignored.
+ *    - If you are generating your JavaScript from some other templating engine (not
+ *      recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),
+ *      remember to escape your regular expression (and be aware that you might need more than
+ *      one level of escaping depending on your templating engine and the way you interpolated
+ *      the value.)  Do make use of your platform's escaping mechanism as it might be good
+ *      enough before coding your own.  E.g. Ruby has
+ *      [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)
+ *      and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).
+ *      Javascript lacks a similar built in function for escaping.  Take a look at Google
+ *      Closure library's [goog.string.regExpEscape(s)](
+ *      http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).
+ *
+ * Refer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.
+ *
+ * ### Show me an example using SCE.
+ *
+ * <example module="mySceApp" deps="angular-sanitize.js" name="sce-service">
+ * <file name="index.html">
+ *   <div ng-controller="AppController as myCtrl">
+ *     <i ng-bind-html="myCtrl.explicitlyTrustedHtml" id="explicitlyTrustedHtml"></i><br><br>
+ *     <b>User comments</b><br>
+ *     By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when
+ *     $sanitize is available.  If $sanitize isn't available, this results in an error instead of an
+ *     exploit.
+ *     <div class="well">
+ *       <div ng-repeat="userComment in myCtrl.userComments">
+ *         <b>{{userComment.name}}</b>:
+ *         <span ng-bind-html="userComment.htmlComment" class="htmlComment"></span>
+ *         <br>
+ *       </div>
+ *     </div>
+ *   </div>
+ * </file>
+ *
+ * <file name="script.js">
+ *   angular.module('mySceApp', ['ngSanitize'])
+ *     .controller('AppController', ['$http', '$templateCache', '$sce',
+ *       function AppController($http, $templateCache, $sce) {
+ *         var self = this;
+ *         $http.get('test_data.json', {cache: $templateCache}).then(function(response) {
+ *           self.userComments = response.data;
+ *         });
+ *         self.explicitlyTrustedHtml = $sce.trustAsHtml(
+ *             '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
+ *             'sanitization.&quot;">Hover over this text.</span>');
+ *       }]);
+ * </file>
+ *
+ * <file name="test_data.json">
+ * [
+ *   { "name": "Alice",
+ *     "htmlComment":
+ *         "<span onmouseover='this.textContent=\"PWN3D!\"'>Is <i>anyone</i> reading this?</span>"
+ *   },
+ *   { "name": "Bob",
+ *     "htmlComment": "<i>Yes!</i>  Am I the only other one?"
+ *   }
+ * ]
+ * </file>
+ *
+ * <file name="protractor.js" type="protractor">
+ *   describe('SCE doc demo', function() {
+ *     it('should sanitize untrusted values', function() {
+ *       expect(element.all(by.css('.htmlComment')).first().getAttribute('innerHTML'))
+ *           .toBe('<span>Is <i>anyone</i> reading this?</span>');
+ *     });
+ *
+ *     it('should NOT sanitize explicitly trusted values', function() {
+ *       expect(element(by.id('explicitlyTrustedHtml')).getAttribute('innerHTML')).toBe(
+ *           '<span onmouseover="this.textContent=&quot;Explicitly trusted HTML bypasses ' +
+ *           'sanitization.&quot;">Hover over this text.</span>');
+ *     });
+ *   });
+ * </file>
+ * </example>
+ *
+ *
+ *
+ * ## Can I disable SCE completely?
+ *
+ * Yes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits
+ * for little coding overhead.  It will be much harder to take an SCE disabled application and
+ * either secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE
+ * for cases where you have a lot of existing code that was written before SCE was introduced and
+ * you're migrating them a module at a time. Also do note that this is an app-wide setting, so if
+ * you are writing a library, you will cause security bugs applications using it.
+ *
+ * That said, here's how you can completely disable SCE:
+ *
+ * ```
+ * angular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {
+ *   // Completely disable SCE.  For demonstration purposes only!
+ *   // Do not use in new projects or libraries.
+ *   $sceProvider.enabled(false);
+ * });
+ * ```
+ *
+ */
+
+function $SceProvider() {
+  var enabled = true;
+
+  /**
+   * @ngdoc method
+   * @name $sceProvider#enabled
+   * @kind function
+   *
+   * @param {boolean=} value If provided, then enables/disables SCE application-wide.
+   * @return {boolean} True if SCE is enabled, false otherwise.
+   *
+   * @description
+   * Enables/disables SCE and returns the current value.
+   */
+  this.enabled = function(value) {
+    if (arguments.length) {
+      enabled = !!value;
+    }
+    return enabled;
+  };
+
+
+  /* Design notes on the default implementation for SCE.
+   *
+   * The API contract for the SCE delegate
+   * -------------------------------------
+   * The SCE delegate object must provide the following 3 methods:
+   *
+   * - trustAs(contextEnum, value)
+   *     This method is used to tell the SCE service that the provided value is OK to use in the
+   *     contexts specified by contextEnum.  It must return an object that will be accepted by
+   *     getTrusted() for a compatible contextEnum and return this value.
+   *
+   * - valueOf(value)
+   *     For values that were not produced by trustAs(), return them as is.  For values that were
+   *     produced by trustAs(), return the corresponding input value to trustAs.  Basically, if
+   *     trustAs is wrapping the given values into some type, this operation unwraps it when given
+   *     such a value.
+   *
+   * - getTrusted(contextEnum, value)
+   *     This function should return the value that is safe to use in the context specified by
+   *     contextEnum or throw and exception otherwise.
+   *
+   * NOTE: This contract deliberately does NOT state that values returned by trustAs() must be
+   * opaque or wrapped in some holder object.  That happens to be an implementation detail.  For
+   * instance, an implementation could maintain a registry of all trusted objects by context.  In
+   * such a case, trustAs() would return the same object that was passed in.  getTrusted() would
+   * return the same object passed in if it was found in the registry under a compatible context or
+   * throw an exception otherwise.  An implementation might only wrap values some of the time based
+   * on some criteria.  getTrusted() might return a value and not throw an exception for special
+   * constants or objects even if not wrapped.  All such implementations fulfill this contract.
+   *
+   *
+   * A note on the inheritance model for SCE contexts
+   * ------------------------------------------------
+   * I've used inheritance and made RESOURCE_URL wrapped types a subtype of URL wrapped types.  This
+   * is purely an implementation details.
+   *
+   * The contract is simply this:
+   *
+   *     getTrusted($sce.RESOURCE_URL, value) succeeding implies that getTrusted($sce.URL, value)
+   *     will also succeed.
+   *
+   * Inheritance happens to capture this in a natural way. In some future, we may not use
+   * inheritance anymore. That is OK because no code outside of sce.js and sceSpecs.js would need to
+   * be aware of this detail.
+   */
+
+  this.$get = ['$parse', '$sceDelegate', function(
+                $parse,   $sceDelegate) {
+    // Support: IE 9-11 only
+    // Prereq: Ensure that we're not running in IE<11 quirks mode.  In that mode, IE < 11 allow
+    // the "expression(javascript expression)" syntax which is insecure.
+    if (enabled && msie < 8) {
+      throw $sceMinErr('iequirks',
+        'Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks ' +
+        'mode.  You can fix this by adding the text <!doctype html> to the top of your HTML ' +
+        'document.  See http://docs.angularjs.org/api/ng.$sce for more information.');
+    }
+
+    var sce = shallowCopy(SCE_CONTEXTS);
+
+    /**
+     * @ngdoc method
+     * @name $sce#isEnabled
+     * @kind function
+     *
+     * @return {Boolean} True if SCE is enabled, false otherwise.  If you want to set the value, you
+     *     have to do it at module config time on {@link ng.$sceProvider $sceProvider}.
+     *
+     * @description
+     * Returns a boolean indicating if SCE is enabled.
+     */
+    sce.isEnabled = function() {
+      return enabled;
+    };
+    sce.trustAs = $sceDelegate.trustAs;
+    sce.getTrusted = $sceDelegate.getTrusted;
+    sce.valueOf = $sceDelegate.valueOf;
+
+    if (!enabled) {
+      sce.trustAs = sce.getTrusted = function(type, value) { return value; };
+      sce.valueOf = identity;
+    }
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAs
+     *
+     * @description
+     * Converts AngularJS {@link guide/expression expression} into a function.  This is like {@link
+     * ng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it
+     * wraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,
+     * *result*)}
+     *
+     * @param {string} type The SCE context in which this result will be used.
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+    sce.parseAs = function sceParseAs(type, expr) {
+      var parsed = $parse(expr);
+      if (parsed.literal && parsed.constant) {
+        return parsed;
+      } else {
+        return $parse(expr, function(value) {
+          return sce.getTrusted(type, value);
+        });
+      }
+    };
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAs
+     *
+     * @description
+     * Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}. As such, returns a
+     * wrapped object that represents your value, and the trust you have in its safety for the given
+     * context. AngularJS can then use that value as-is in bindings of the specified secure context.
+     * This is used in bindings for `ng-bind-html`, `ng-include`, and most `src` attribute
+     * interpolations. See {@link ng.$sce $sce} for strict contextual escaping.
+     *
+     * @param {string} type The context in which this value is safe for use, e.g. `$sce.URL`,
+     *     `$sce.RESOURCE_URL`, `$sce.HTML`, `$sce.JS` or `$sce.CSS`.
+     *
+     * @param {*} value The value that that should be considered trusted.
+     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
+     *     in the context you specified.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAsHtml
+     *
+     * @description
+     * Shorthand method.  `$sce.trustAsHtml(value)` →
+     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}
+     *
+     * @param {*} value The value to mark as trusted for `$sce.HTML` context.
+     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
+     *     in `$sce.HTML` context (like `ng-bind-html`).
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAsCss
+     *
+     * @description
+     * Shorthand method.  `$sce.trustAsCss(value)` →
+     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.CSS, value)`}
+     *
+     * @param {*} value The value to mark as trusted for `$sce.CSS` context.
+     * @return {*} A wrapped version of value that can be used as a trusted variant
+     *     of your `value` in `$sce.CSS` context. This context is currently unused, so there are
+     *     almost no reasons to use this function so far.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAsUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.trustAsUrl(value)` →
+     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}
+     *
+     * @param {*} value The value to mark as trusted for `$sce.URL` context.
+     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
+     *     in `$sce.URL` context. That context is currently unused, so there are almost no reasons
+     *     to use this function so far.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAsResourceUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.trustAsResourceUrl(value)` →
+     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}
+     *
+     * @param {*} value The value to mark as trusted for `$sce.RESOURCE_URL` context.
+     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
+     *     in `$sce.RESOURCE_URL` context (template URLs in `ng-include`, most `src` attribute
+     *     bindings, ...)
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#trustAsJs
+     *
+     * @description
+     * Shorthand method.  `$sce.trustAsJs(value)` →
+     *     {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}
+     *
+     * @param {*} value The value to mark as trusted for `$sce.JS` context.
+     * @return {*} A wrapped version of value that can be used as a trusted variant of your `value`
+     *     in `$sce.JS` context. That context is currently unused, so there are almost no reasons to
+     *     use this function so far.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrusted
+     *
+     * @description
+     * Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,
+     * takes any input, and either returns a value that's safe to use in the specified context,
+     * or throws an exception. This function is aware of trusted values created by the `trustAs`
+     * function and its shorthands, and when contexts are appropriate, returns the unwrapped value
+     * as-is. Finally, this function can also throw when there is no way to turn `maybeTrusted` in a
+     * safe value (e.g., no sanitization is available or possible.)
+     *
+     * @param {string} type The context in which this value is to be used.
+     * @param {*} maybeTrusted The result of a prior {@link ng.$sce#trustAs
+     *     `$sce.trustAs`} call, or anything else (which will not be considered trusted.)
+     * @return {*} A version of the value that's safe to use in the given context, or throws an
+     *     exception if this is impossible.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrustedHtml
+     *
+     * @description
+     * Shorthand method.  `$sce.getTrustedHtml(value)` →
+     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}
+     *
+     * @param {*} value The value to pass to `$sce.getTrusted`.
+     * @return {*} The return value of `$sce.getTrusted($sce.HTML, value)`
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrustedCss
+     *
+     * @description
+     * Shorthand method.  `$sce.getTrustedCss(value)` →
+     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}
+     *
+     * @param {*} value The value to pass to `$sce.getTrusted`.
+     * @return {*} The return value of `$sce.getTrusted($sce.CSS, value)`
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrustedUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.getTrustedUrl(value)` →
+     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}
+     *
+     * @param {*} value The value to pass to `$sce.getTrusted`.
+     * @return {*} The return value of `$sce.getTrusted($sce.URL, value)`
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrustedResourceUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.getTrustedResourceUrl(value)` →
+     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}
+     *
+     * @param {*} value The value to pass to `$sceDelegate.getTrusted`.
+     * @return {*} The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#getTrustedJs
+     *
+     * @description
+     * Shorthand method.  `$sce.getTrustedJs(value)` →
+     *     {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}
+     *
+     * @param {*} value The value to pass to `$sce.getTrusted`.
+     * @return {*} The return value of `$sce.getTrusted($sce.JS, value)`
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAsHtml
+     *
+     * @description
+     * Shorthand method.  `$sce.parseAsHtml(expression string)` →
+     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}
+     *
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAsCss
+     *
+     * @description
+     * Shorthand method.  `$sce.parseAsCss(value)` →
+     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}
+     *
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAsUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.parseAsUrl(value)` →
+     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}
+     *
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAsResourceUrl
+     *
+     * @description
+     * Shorthand method.  `$sce.parseAsResourceUrl(value)` →
+     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}
+     *
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+
+    /**
+     * @ngdoc method
+     * @name $sce#parseAsJs
+     *
+     * @description
+     * Shorthand method.  `$sce.parseAsJs(value)` →
+     *     {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}
+     *
+     * @param {string} expression String expression to compile.
+     * @return {function(context, locals)} A function which represents the compiled expression:
+     *
+     *    * `context` – `{object}` – an object against which any expressions embedded in the
+     *      strings are evaluated against (typically a scope object).
+     *    * `locals` – `{object=}` – local variables context object, useful for overriding values
+     *      in `context`.
+     */
+
+    // Shorthand delegations.
+    var parse = sce.parseAs,
+        getTrusted = sce.getTrusted,
+        trustAs = sce.trustAs;
+
+    forEach(SCE_CONTEXTS, function(enumValue, name) {
+      var lName = lowercase(name);
+      sce[snakeToCamel('parse_as_' + lName)] = function(expr) {
+        return parse(enumValue, expr);
+      };
+      sce[snakeToCamel('get_trusted_' + lName)] = function(value) {
+        return getTrusted(enumValue, value);
+      };
+      sce[snakeToCamel('trust_as_' + lName)] = function(value) {
+        return trustAs(enumValue, value);
+      };
+    });
+
+    return sce;
+  }];
+}
+
+/* exported $SnifferProvider */
+
+/**
+ * !!! This is an undocumented "private" service !!!
+ *
+ * @name $sniffer
+ * @requires $window
+ * @requires $document
+ * @this
+ *
+ * @property {boolean} history Does the browser support html5 history api ?
+ * @property {boolean} transitions Does the browser support CSS transition events ?
+ * @property {boolean} animations Does the browser support CSS animation events ?
+ *
+ * @description
+ * This is very simple implementation of testing browser's features.
+ */
+function $SnifferProvider() {
+  this.$get = ['$window', '$document', function($window, $document) {
+    var eventSupport = {},
+        // Chrome Packaged Apps are not allowed to access `history.pushState`.
+        // If not sandboxed, they can be detected by the presence of `chrome.app.runtime`
+        // (see https://developer.chrome.com/apps/api_index). If sandboxed, they can be detected by
+        // the presence of an extension runtime ID and the absence of other Chrome runtime APIs
+        // (see https://developer.chrome.com/apps/manifest/sandbox).
+        // (NW.js apps have access to Chrome APIs, but do support `history`.)
+        isNw = $window.nw && $window.nw.process,
+        isChromePackagedApp =
+            !isNw &&
+            $window.chrome &&
+            ($window.chrome.app && $window.chrome.app.runtime ||
+                !$window.chrome.app && $window.chrome.runtime && $window.chrome.runtime.id),
+        hasHistoryPushState = !isChromePackagedApp && $window.history && $window.history.pushState,
+        android =
+          toInt((/android (\d+)/.exec(lowercase(($window.navigator || {}).userAgent)) || [])[1]),
+        boxee = /Boxee/i.test(($window.navigator || {}).userAgent),
+        document = $document[0] || {},
+        bodyStyle = document.body && document.body.style,
+        transitions = false,
+        animations = false;
+
+    if (bodyStyle) {
+      // Support: Android <5, Blackberry Browser 10, default Chrome in Android 4.4.x
+      // Mentioned browsers need a -webkit- prefix for transitions & animations.
+      transitions = !!('transition' in bodyStyle || 'webkitTransition' in bodyStyle);
+      animations = !!('animation' in bodyStyle || 'webkitAnimation' in bodyStyle);
+    }
+
+
+    return {
+      // Android has history.pushState, but it does not update location correctly
+      // so let's not use the history API at all.
+      // http://code.google.com/p/android/issues/detail?id=17471
+      // https://github.com/angular/angular.js/issues/904
+
+      // older webkit browser (533.9) on Boxee box has exactly the same problem as Android has
+      // so let's not use the history API also
+      // We are purposefully using `!(android < 4)` to cover the case when `android` is undefined
+      history: !!(hasHistoryPushState && !(android < 4) && !boxee),
+      hasEvent: function(event) {
+        // Support: IE 9-11 only
+        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have
+        // it. In particular the event is not fired when backspace or delete key are pressed or
+        // when cut operation is performed.
+        // IE10+ implements 'input' event but it erroneously fires under various situations,
+        // e.g. when placeholder changes, or a form is focused.
+        if (event === 'input' && msie) return false;
+
+        if (isUndefined(eventSupport[event])) {
+          var divElm = document.createElement('div');
+          eventSupport[event] = 'on' + event in divElm;
+        }
+
+        return eventSupport[event];
+      },
+      csp: csp(),
+      transitions: transitions,
+      animations: animations,
+      android: android
+    };
+  }];
+}
+
+/**
+ * ! This is a private undocumented service !
+ *
+ * @name $$taskTrackerFactory
+ * @description
+ * A function to create `TaskTracker` instances.
+ *
+ * A `TaskTracker` can keep track of pending tasks (grouped by type) and can notify interested
+ * parties when all pending tasks (or tasks of a specific type) have been completed.
+ *
+ * @param {$log} log - A logger instance (such as `$log`). Used to log error during callback
+ *     execution.
+ *
+ * @this
+ */
+function $$TaskTrackerFactoryProvider() {
+  this.$get = valueFn(function(log) { return new TaskTracker(log); });
+}
+
+function TaskTracker(log) {
+  var self = this;
+  var taskCounts = {};
+  var taskCallbacks = [];
+
+  var ALL_TASKS_TYPE = self.ALL_TASKS_TYPE = '$$all$$';
+  var DEFAULT_TASK_TYPE = self.DEFAULT_TASK_TYPE = '$$default$$';
+
+  /**
+   * Execute the specified function and decrement the appropriate `taskCounts` counter.
+   * If the counter reaches 0, all corresponding `taskCallbacks` are executed.
+   *
+   * @param {Function} fn - The function to execute.
+   * @param {string=} [taskType=DEFAULT_TASK_TYPE] - The type of task that is being completed.
+   */
+  self.completeTask = completeTask;
+
+  /**
+   * Increase the task count for the specified task type (or the default task type if non is
+   * specified).
+   *
+   * @param {string=} [taskType=DEFAULT_TASK_TYPE] - The type of task whose count will be increased.
+   */
+  self.incTaskCount = incTaskCount;
+
+  /**
+   * Execute the specified callback when all pending tasks have been completed.
+   *
+   * If there are no pending tasks, the callback is executed immediately. You can optionally limit
+   * the tasks that will be waited for to a specific type, by passing a `taskType`.
+   *
+   * @param {function} callback - The function to call when there are no pending tasks.
+   * @param {string=} [taskType=ALL_TASKS_TYPE] - The type of tasks that will be waited for.
+   */
+  self.notifyWhenNoPendingTasks = notifyWhenNoPendingTasks;
+
+  function completeTask(fn, taskType) {
+    taskType = taskType || DEFAULT_TASK_TYPE;
+
+    try {
+      fn();
+    } finally {
+      decTaskCount(taskType);
+
+      var countForType = taskCounts[taskType];
+      var countForAll = taskCounts[ALL_TASKS_TYPE];
+
+      // If at least one of the queues (`ALL_TASKS_TYPE` or `taskType`) is empty, run callbacks.
+      if (!countForAll || !countForType) {
+        var getNextCallback = !countForAll ? getLastCallback : getLastCallbackForType;
+        var nextCb;
+
+        while ((nextCb = getNextCallback(taskType))) {
+          try {
+            nextCb();
+          } catch (e) {
+            log.error(e);
+          }
+        }
+      }
+    }
+  }
+
+  function decTaskCount(taskType) {
+    taskType = taskType || DEFAULT_TASK_TYPE;
+    if (taskCounts[taskType]) {
+      taskCounts[taskType]--;
+      taskCounts[ALL_TASKS_TYPE]--;
+    }
+  }
+
+  function getLastCallback() {
+    var cbInfo = taskCallbacks.pop();
+    return cbInfo && cbInfo.cb;
+  }
+
+  function getLastCallbackForType(taskType) {
+    for (var i = taskCallbacks.length - 1; i >= 0; --i) {
+      var cbInfo = taskCallbacks[i];
+      if (cbInfo.type === taskType) {
+        taskCallbacks.splice(i, 1);
+        return cbInfo.cb;
+      }
+    }
+  }
+
+  function incTaskCount(taskType) {
+    taskType = taskType || DEFAULT_TASK_TYPE;
+    taskCounts[taskType] = (taskCounts[taskType] || 0) + 1;
+    taskCounts[ALL_TASKS_TYPE] = (taskCounts[ALL_TASKS_TYPE] || 0) + 1;
+  }
+
+  function notifyWhenNoPendingTasks(callback, taskType) {
+    taskType = taskType || ALL_TASKS_TYPE;
+    if (!taskCounts[taskType]) {
+      callback();
+    } else {
+      taskCallbacks.push({type: taskType, cb: callback});
+    }
+  }
+}
+
+var $templateRequestMinErr = minErr('$templateRequest');
+
+/**
+ * @ngdoc provider
+ * @name $templateRequestProvider
+ * @this
+ *
+ * @description
+ * Used to configure the options passed to the {@link $http} service when making a template request.
+ *
+ * For example, it can be used for specifying the "Accept" header that is sent to the server, when
+ * requesting a template.
+ */
+function $TemplateRequestProvider() {
+
+  var httpOptions;
+
+  /**
+   * @ngdoc method
+   * @name $templateRequestProvider#httpOptions
+   * @description
+   * The options to be passed to the {@link $http} service when making the request.
+   * You can use this to override options such as the "Accept" header for template requests.
+   *
+   * The {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the
+   * options if not overridden here.
+   *
+   * @param {string=} value new value for the {@link $http} options.
+   * @returns {string|self} Returns the {@link $http} options when used as getter and self if used as setter.
+   */
+  this.httpOptions = function(val) {
+    if (val) {
+      httpOptions = val;
+      return this;
+    }
+    return httpOptions;
+  };
+
+  /**
+   * @ngdoc service
+   * @name $templateRequest
+   *
+   * @description
+   * The `$templateRequest` service runs security checks then downloads the provided template using
+   * `$http` and, upon success, stores the contents inside of `$templateCache`. If the HTTP request
+   * fails or the response data of the HTTP request is empty, a `$compile` error will be thrown (the
+   * exception can be thwarted by setting the 2nd parameter of the function to true). Note that the
+   * contents of `$templateCache` are trusted, so the call to `$sce.getTrustedUrl(tpl)` is omitted
+   * when `tpl` is of type string and `$templateCache` has the matching entry.
+   *
+   * If you want to pass custom options to the `$http` service, such as setting the Accept header you
+   * can configure this via {@link $templateRequestProvider#httpOptions}.
+   *
+   * `$templateRequest` is used internally by {@link $compile}, {@link ngRoute.$route}, and directives such
+   * as {@link ngInclude} to download and cache templates.
+   *
+   * 3rd party modules should use `$templateRequest` if their services or directives are loading
+   * templates.
+   *
+   * @param {string|TrustedResourceUrl} tpl The HTTP request template URL
+   * @param {boolean=} ignoreRequestError Whether or not to ignore the exception when the request fails or the template is empty
+   *
+   * @return {Promise} a promise for the HTTP response data of the given URL.
+   *
+   * @property {number} totalPendingRequests total amount of pending template requests being downloaded.
+   */
+  this.$get = ['$exceptionHandler', '$templateCache', '$http', '$q', '$sce',
+    function($exceptionHandler, $templateCache, $http, $q, $sce) {
+
+      function handleRequestFn(tpl, ignoreRequestError) {
+        handleRequestFn.totalPendingRequests++;
+
+        // We consider the template cache holds only trusted templates, so
+        // there's no need to go through adding the template again to the trusted
+        // resources for keys that already are included in there. This also makes
+        // AngularJS accept any script directive, no matter its name. However, we
+        // still need to unwrap trusted types.
+        if (!isString(tpl) || isUndefined($templateCache.get(tpl))) {
+          tpl = $sce.getTrustedResourceUrl(tpl);
+        }
+
+        var transformResponse = $http.defaults && $http.defaults.transformResponse;
+
+        if (isArray(transformResponse)) {
+          transformResponse = transformResponse.filter(function(transformer) {
+            return transformer !== defaultHttpResponseTransform;
+          });
+        } else if (transformResponse === defaultHttpResponseTransform) {
+          transformResponse = null;
+        }
+
+        return $http.get(tpl, extend({
+            cache: $templateCache,
+            transformResponse: transformResponse
+          }, httpOptions))
+          .finally(function() {
+            handleRequestFn.totalPendingRequests--;
+          })
+          .then(function(response) {
+            return $templateCache.put(tpl, response.data);
+          }, handleError);
+
+        function handleError(resp) {
+          if (!ignoreRequestError) {
+            resp = $templateRequestMinErr('tpload',
+                'Failed to load template: {0} (HTTP status: {1} {2})',
+                tpl, resp.status, resp.statusText);
+
+            $exceptionHandler(resp);
+          }
+
+          return $q.reject(resp);
+        }
+      }
+
+      handleRequestFn.totalPendingRequests = 0;
+
+      return handleRequestFn;
+    }
+  ];
+}
+
+/** @this */
+function $$TestabilityProvider() {
+  this.$get = ['$rootScope', '$browser', '$location',
+       function($rootScope,   $browser,   $location) {
+
+    /**
+     * @name $testability
+     *
+     * @description
+     * The private $$testability service provides a collection of methods for use when debugging
+     * or by automated test and debugging tools.
+     */
+    var testability = {};
+
+    /**
+     * @name $$testability#findBindings
+     *
+     * @description
+     * Returns an array of elements that are bound (via ng-bind or {{}})
+     * to expressions matching the input.
+     *
+     * @param {Element} element The element root to search from.
+     * @param {string} expression The binding expression to match.
+     * @param {boolean} opt_exactMatch If true, only returns exact matches
+     *     for the expression. Filters and whitespace are ignored.
+     */
+    testability.findBindings = function(element, expression, opt_exactMatch) {
+      var bindings = element.getElementsByClassName('ng-binding');
+      var matches = [];
+      forEach(bindings, function(binding) {
+        var dataBinding = angular.element(binding).data('$binding');
+        if (dataBinding) {
+          forEach(dataBinding, function(bindingName) {
+            if (opt_exactMatch) {
+              var matcher = new RegExp('(^|\\s)' + escapeForRegexp(expression) + '(\\s|\\||$)');
+              if (matcher.test(bindingName)) {
+                matches.push(binding);
+              }
+            } else {
+              if (bindingName.indexOf(expression) !== -1) {
+                matches.push(binding);
+              }
+            }
+          });
+        }
+      });
+      return matches;
+    };
+
+    /**
+     * @name $$testability#findModels
+     *
+     * @description
+     * Returns an array of elements that are two-way found via ng-model to
+     * expressions matching the input.
+     *
+     * @param {Element} element The element root to search from.
+     * @param {string} expression The model expression to match.
+     * @param {boolean} opt_exactMatch If true, only returns exact matches
+     *     for the expression.
+     */
+    testability.findModels = function(element, expression, opt_exactMatch) {
+      var prefixes = ['ng-', 'data-ng-', 'ng\\:'];
+      for (var p = 0; p < prefixes.length; ++p) {
+        var attributeEquals = opt_exactMatch ? '=' : '*=';
+        var selector = '[' + prefixes[p] + 'model' + attributeEquals + '"' + expression + '"]';
+        var elements = element.querySelectorAll(selector);
+        if (elements.length) {
+          return elements;
+        }
+      }
+    };
+
+    /**
+     * @name $$testability#getLocation
+     *
+     * @description
+     * Shortcut for getting the location in a browser agnostic way. Returns
+     *     the path, search, and hash. (e.g. /path?a=b#hash)
+     */
+    testability.getLocation = function() {
+      return $location.url();
+    };
+
+    /**
+     * @name $$testability#setLocation
+     *
+     * @description
+     * Shortcut for navigating to a location without doing a full page reload.
+     *
+     * @param {string} url The location url (path, search and hash,
+     *     e.g. /path?a=b#hash) to go to.
+     */
+    testability.setLocation = function(url) {
+      if (url !== $location.url()) {
+        $location.url(url);
+        $rootScope.$digest();
+      }
+    };
+
+    /**
+     * @name $$testability#whenStable
+     *
+     * @description
+     * Calls the callback when all pending tasks are completed.
+     *
+     * Types of tasks waited for include:
+     * - Pending timeouts (via {@link $timeout}).
+     * - Pending HTTP requests (via {@link $http}).
+     * - In-progress route transitions (via {@link $route}).
+     * - Pending tasks scheduled via {@link $rootScope#$applyAsync}.
+     * - Pending tasks scheduled via {@link $rootScope#$evalAsync}.
+     *   These include tasks scheduled via `$evalAsync()` indirectly (such as {@link $q} promises).
+     *
+     * @param {function} callback
+     */
+    testability.whenStable = function(callback) {
+      $browser.notifyWhenNoOutstandingRequests(callback);
+    };
+
+    return testability;
+  }];
+}
+
+var $timeoutMinErr = minErr('$timeout');
+
+/** @this */
+function $TimeoutProvider() {
+  this.$get = ['$rootScope', '$browser', '$q', '$$q', '$exceptionHandler',
+       function($rootScope,   $browser,   $q,   $$q,   $exceptionHandler) {
+
+    var deferreds = {};
+
+
+    /**
+     * @ngdoc service
+     * @name $timeout
+     *
+     * @description
+     * AngularJS's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch
+     * block and delegates any exceptions to
+     * {@link ng.$exceptionHandler $exceptionHandler} service.
+     *
+     * The return value of calling `$timeout` is a promise, which will be resolved when
+     * the delay has passed and the timeout function, if provided, is executed.
+     *
+     * To cancel a timeout request, call `$timeout.cancel(promise)`.
+     *
+     * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to
+     * synchronously flush the queue of deferred functions.
+     *
+     * If you only want a promise that will be resolved after some specified delay
+     * then you can call `$timeout` without the `fn` function.
+     *
+     * @param {function()=} fn A function, whose execution should be delayed.
+     * @param {number=} [delay=0] Delay in milliseconds.
+     * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise
+     *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.
+     * @param {...*=} Pass additional parameters to the executed function.
+     * @returns {Promise} Promise that will be resolved when the timeout is reached. The promise
+     *   will be resolved with the return value of the `fn` function.
+     *
+     */
+    function timeout(fn, delay, invokeApply) {
+      if (!isFunction(fn)) {
+        invokeApply = delay;
+        delay = fn;
+        fn = noop;
+      }
+
+      var args = sliceArgs(arguments, 3),
+          skipApply = (isDefined(invokeApply) && !invokeApply),
+          deferred = (skipApply ? $$q : $q).defer(),
+          promise = deferred.promise,
+          timeoutId;
+
+      timeoutId = $browser.defer(function() {
+        try {
+          deferred.resolve(fn.apply(null, args));
+        } catch (e) {
+          deferred.reject(e);
+          $exceptionHandler(e);
+        } finally {
+          delete deferreds[promise.$$timeoutId];
+        }
+
+        if (!skipApply) $rootScope.$apply();
+      }, delay, '$timeout');
+
+      promise.$$timeoutId = timeoutId;
+      deferreds[timeoutId] = deferred;
+
+      return promise;
+    }
+
+
+    /**
+     * @ngdoc method
+     * @name $timeout#cancel
+     *
+     * @description
+     * Cancels a task associated with the `promise`. As a result of this, the promise will be
+     * resolved with a rejection.
+     *
+     * @param {Promise=} promise Promise returned by the `$timeout` function.
+     * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully
+     *   canceled.
+     */
+    timeout.cancel = function(promise) {
+      if (!promise) return false;
+
+      if (!promise.hasOwnProperty('$$timeoutId')) {
+        throw $timeoutMinErr('badprom',
+            '`$timeout.cancel()` called with a promise that was not generated by `$timeout()`.');
+      }
+
+      if (!deferreds.hasOwnProperty(promise.$$timeoutId)) return false;
+
+      var id = promise.$$timeoutId;
+      var deferred = deferreds[id];
+
+      // Timeout cancels should not report an unhandled promise.
+      markQExceptionHandled(deferred.promise);
+      deferred.reject('canceled');
+      delete deferreds[id];
+
+      return $browser.defer.cancel(id);
+    };
+
+    return timeout;
+  }];
+}
+
+// NOTE:  The usage of window and document instead of $window and $document here is
+// deliberate.  This service depends on the specific behavior of anchor nodes created by the
+// browser (resolving and parsing URLs) that is unlikely to be provided by mock objects and
+// cause us to break tests.  In addition, when the browser resolves a URL for XHR, it
+// doesn't know about mocked locations and resolves URLs to the real document - which is
+// exactly the behavior needed here.  There is little value is mocking these out for this
+// service.
+var urlParsingNode = window.document.createElement('a');
+var originUrl = urlResolve(window.location.href);
+var baseUrlParsingNode;
+
+urlParsingNode.href = 'http://[::1]';
+
+// Support: IE 9-11 only, Edge 16-17 only (fixed in 18 Preview)
+// IE/Edge don't wrap IPv6 addresses' hostnames in square brackets
+// when parsed out of an anchor element.
+var ipv6InBrackets = urlParsingNode.hostname === '[::1]';
+
+/**
+ *
+ * Implementation Notes for non-IE browsers
+ * ----------------------------------------
+ * Assigning a URL to the href property of an anchor DOM node, even one attached to the DOM,
+ * results both in the normalizing and parsing of the URL.  Normalizing means that a relative
+ * URL will be resolved into an absolute URL in the context of the application document.
+ * Parsing means that the anchor node's host, hostname, protocol, port, pathname and related
+ * properties are all populated to reflect the normalized URL.  This approach has wide
+ * compatibility - Safari 1+, Mozilla 1+ etc.  See
+ * http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
+ *
+ * Implementation Notes for IE
+ * ---------------------------
+ * IE <= 10 normalizes the URL when assigned to the anchor node similar to the other
+ * browsers.  However, the parsed components will not be set if the URL assigned did not specify
+ * them.  (e.g. if you assign a.href = "foo", then a.protocol, a.host, etc. will be empty.)  We
+ * work around that by performing the parsing in a 2nd step by taking a previously normalized
+ * URL (e.g. by assigning to a.href) and assigning it a.href again.  This correctly populates the
+ * properties such as protocol, hostname, port, etc.
+ *
+ * References:
+ *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement
+ *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
+ *   http://url.spec.whatwg.org/#urlutils
+ *   https://github.com/angular/angular.js/pull/2902
+ *   http://james.padolsey.com/javascript/parsing-urls-with-the-dom/
+ *
+ * @kind function
+ * @param {string|object} url The URL to be parsed. If `url` is not a string, it will be returned
+ *     unchanged.
+ * @description Normalizes and parses a URL.
+ * @returns {object} Returns the normalized URL as a dictionary.
+ *
+ *   | member name   | Description                                                            |
+ *   |---------------|------------------------------------------------------------------------|
+ *   | href          | A normalized version of the provided URL if it was not an absolute URL |
+ *   | protocol      | The protocol without the trailing colon                                |
+ *   | host          | The host and port (if the port is non-default) of the normalizedUrl    |
+ *   | search        | The search params, minus the question mark                             |
+ *   | hash          | The hash string, minus the hash symbol                                 |
+ *   | hostname      | The hostname                                                           |
+ *   | port          | The port, without ":"                                                  |
+ *   | pathname      | The pathname, beginning with "/"                                       |
+ *
+ */
+function urlResolve(url) {
+  if (!isString(url)) return url;
+
+  var href = url;
+
+  // Support: IE 9-11 only
+  if (msie) {
+    // Normalize before parse.  Refer Implementation Notes on why this is
+    // done in two steps on IE.
+    urlParsingNode.setAttribute('href', href);
+    href = urlParsingNode.href;
+  }
+
+  urlParsingNode.setAttribute('href', href);
+
+  var hostname = urlParsingNode.hostname;
+
+  if (!ipv6InBrackets && hostname.indexOf(':') > -1) {
+    hostname = '[' + hostname + ']';
+  }
+
+  return {
+    href: urlParsingNode.href,
+    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
+    host: urlParsingNode.host,
+    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
+    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
+    hostname: hostname,
+    port: urlParsingNode.port,
+    pathname: (urlParsingNode.pathname.charAt(0) === '/')
+      ? urlParsingNode.pathname
+      : '/' + urlParsingNode.pathname
+  };
+}
+
+/**
+ * Parse a request URL and determine whether this is a same-origin request as the application
+ * document.
+ *
+ * @param {string|object} requestUrl The url of the request as a string that will be resolved
+ * or a parsed URL object.
+ * @returns {boolean} Whether the request is for the same origin as the application document.
+ */
+function urlIsSameOrigin(requestUrl) {
+  return urlsAreSameOrigin(requestUrl, originUrl);
+}
+
+/**
+ * Parse a request URL and determine whether it is same-origin as the current document base URL.
+ *
+ * Note: The base URL is usually the same as the document location (`location.href`) but can
+ * be overriden by using the `<base>` tag.
+ *
+ * @param {string|object} requestUrl The url of the request as a string that will be resolved
+ * or a parsed URL object.
+ * @returns {boolean} Whether the URL is same-origin as the document base URL.
+ */
+function urlIsSameOriginAsBaseUrl(requestUrl) {
+  return urlsAreSameOrigin(requestUrl, getBaseUrl());
+}
+
+/**
+ * Create a function that can check a URL's origin against a list of allowed/trusted origins.
+ * The current location's origin is implicitly trusted.
+ *
+ * @param {string[]} trustedOriginUrls - A list of URLs (strings), whose origins are trusted.
+ *
+ * @returns {Function} - A function that receives a URL (string or parsed URL object) and returns
+ *     whether it is of an allowed origin.
+ */
+function urlIsAllowedOriginFactory(trustedOriginUrls) {
+  var parsedAllowedOriginUrls = [originUrl].concat(trustedOriginUrls.map(urlResolve));
+
+  /**
+   * Check whether the specified URL (string or parsed URL object) has an origin that is allowed
+   * based on a list of trusted-origin URLs. The current location's origin is implicitly
+   * trusted.
+   *
+   * @param {string|Object} requestUrl - The URL to be checked (provided as a string that will be
+   *     resolved or a parsed URL object).
+   *
+   * @returns {boolean} - Whether the specified URL is of an allowed origin.
+   */
+  return function urlIsAllowedOrigin(requestUrl) {
+    var parsedUrl = urlResolve(requestUrl);
+    return parsedAllowedOriginUrls.some(urlsAreSameOrigin.bind(null, parsedUrl));
+  };
+}
+
+/**
+ * Determine if two URLs share the same origin.
+ *
+ * @param {string|Object} url1 - First URL to compare as a string or a normalized URL in the form of
+ *     a dictionary object returned by `urlResolve()`.
+ * @param {string|object} url2 - Second URL to compare as a string or a normalized URL in the form
+ *     of a dictionary object returned by `urlResolve()`.
+ *
+ * @returns {boolean} - True if both URLs have the same origin, and false otherwise.
+ */
+function urlsAreSameOrigin(url1, url2) {
+  url1 = urlResolve(url1);
+  url2 = urlResolve(url2);
+
+  return (url1.protocol === url2.protocol &&
+          url1.host === url2.host);
+}
+
+/**
+ * Returns the current document base URL.
+ * @returns {string}
+ */
+function getBaseUrl() {
+  if (window.document.baseURI) {
+    return window.document.baseURI;
+  }
+
+  // `document.baseURI` is available everywhere except IE
+  if (!baseUrlParsingNode) {
+    baseUrlParsingNode = window.document.createElement('a');
+    baseUrlParsingNode.href = '.';
+
+    // Work-around for IE bug described in Implementation Notes. The fix in `urlResolve()` is not
+    // suitable here because we need to track changes to the base URL.
+    baseUrlParsingNode = baseUrlParsingNode.cloneNode(false);
+  }
+  return baseUrlParsingNode.href;
+}
+
+/**
+ * @ngdoc service
+ * @name $window
+ * @this
+ *
+ * @description
+ * A reference to the browser's `window` object. While `window`
+ * is globally available in JavaScript, it causes testability problems, because
+ * it is a global variable. In AngularJS we always refer to it through the
+ * `$window` service, so it may be overridden, removed or mocked for testing.
+ *
+ * Expressions, like the one defined for the `ngClick` directive in the example
+ * below, are evaluated with respect to the current scope.  Therefore, there is
+ * no risk of inadvertently coding in a dependency on a global value in such an
+ * expression.
+ *
+ * @example
+   <example module="windowExample" name="window-service">
+     <file name="index.html">
+       <script>
+         angular.module('windowExample', [])
+           .controller('ExampleController', ['$scope', '$window', function($scope, $window) {
+             $scope.greeting = 'Hello, World!';
+             $scope.doGreeting = function(greeting) {
+               $window.alert(greeting);
+             };
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <input type="text" ng-model="greeting" aria-label="greeting" />
+         <button ng-click="doGreeting(greeting)">ALERT</button>
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+      it('should display the greeting in the input box', function() {
+       element(by.model('greeting')).sendKeys('Hello, E2E Tests');
+       // If we click the button it will block the test runner
+       // element(':button').click();
+      });
+     </file>
+   </example>
+ */
+function $WindowProvider() {
+  this.$get = valueFn(window);
+}
+
+/**
+ * @name $$cookieReader
+ * @requires $document
+ *
+ * @description
+ * This is a private service for reading cookies used by $http and ngCookies
+ *
+ * @return {Object} a key/value map of the current cookies
+ */
+function $$CookieReader($document) {
+  var rawDocument = $document[0] || {};
+  var lastCookies = {};
+  var lastCookieString = '';
+
+  function safeGetCookie(rawDocument) {
+    try {
+      return rawDocument.cookie || '';
+    } catch (e) {
+      return '';
+    }
+  }
+
+  function safeDecodeURIComponent(str) {
+    try {
+      return decodeURIComponent(str);
+    } catch (e) {
+      return str;
+    }
+  }
+
+  return function() {
+    var cookieArray, cookie, i, index, name;
+    var currentCookieString = safeGetCookie(rawDocument);
+
+    if (currentCookieString !== lastCookieString) {
+      lastCookieString = currentCookieString;
+      cookieArray = lastCookieString.split('; ');
+      lastCookies = {};
+
+      for (i = 0; i < cookieArray.length; i++) {
+        cookie = cookieArray[i];
+        index = cookie.indexOf('=');
+        if (index > 0) { //ignore nameless cookies
+          name = safeDecodeURIComponent(cookie.substring(0, index));
+          // the first value that is seen for a cookie is the most
+          // specific one.  values for the same cookie name that
+          // follow are for less specific paths.
+          if (isUndefined(lastCookies[name])) {
+            lastCookies[name] = safeDecodeURIComponent(cookie.substring(index + 1));
+          }
+        }
+      }
+    }
+    return lastCookies;
+  };
+}
+
+$$CookieReader.$inject = ['$document'];
+
+/** @this */
+function $$CookieReaderProvider() {
+  this.$get = $$CookieReader;
+}
+
+/* global currencyFilter: true,
+ dateFilter: true,
+ filterFilter: true,
+ jsonFilter: true,
+ limitToFilter: true,
+ lowercaseFilter: true,
+ numberFilter: true,
+ orderByFilter: true,
+ uppercaseFilter: true,
+ */
+
+/**
+ * @ngdoc provider
+ * @name $filterProvider
+ * @description
+ *
+ * Filters are just functions which transform input to an output. However filters need to be
+ * Dependency Injected. To achieve this a filter definition consists of a factory function which is
+ * annotated with dependencies and is responsible for creating a filter function.
+ *
+ * <div class="alert alert-warning">
+ * **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
+ * Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
+ * your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
+ * (`myapp_subsection_filterx`).
+ * </div>
+ *
+ * ```js
+ *   // Filter registration
+ *   function MyModule($provide, $filterProvider) {
+ *     // create a service to demonstrate injection (not always needed)
+ *     $provide.value('greet', function(name){
+ *       return 'Hello ' + name + '!';
+ *     });
+ *
+ *     // register a filter factory which uses the
+ *     // greet service to demonstrate DI.
+ *     $filterProvider.register('greet', function(greet){
+ *       // return the filter function which uses the greet service
+ *       // to generate salutation
+ *       return function(text) {
+ *         // filters need to be forgiving so check input validity
+ *         return text && greet(text) || text;
+ *       };
+ *     });
+ *   }
+ * ```
+ *
+ * The filter function is registered with the `$injector` under the filter name suffix with
+ * `Filter`.
+ *
+ * ```js
+ *   it('should be the same instance', inject(
+ *     function($filterProvider) {
+ *       $filterProvider.register('reverse', function(){
+ *         return ...;
+ *       });
+ *     },
+ *     function($filter, reverseFilter) {
+ *       expect($filter('reverse')).toBe(reverseFilter);
+ *     });
+ * ```
+ *
+ *
+ * For more information about how AngularJS filters work, and how to create your own filters, see
+ * {@link guide/filter Filters} in the AngularJS Developer Guide.
+ */
+
+/**
+ * @ngdoc service
+ * @name $filter
+ * @kind function
+ * @description
+ * Filters are used for formatting data displayed to the user.
+ *
+ * They can be used in view templates, controllers or services. AngularJS comes
+ * with a collection of [built-in filters](api/ng/filter), but it is easy to
+ * define your own as well.
+ *
+ * The general syntax in templates is as follows:
+ *
+ * ```html
+ * {{ expression [| filter_name[:parameter_value] ... ] }}
+ * ```
+ *
+ * @param {String} name Name of the filter function to retrieve
+ * @return {Function} the filter function
+ * @example
+   <example name="$filter" module="filterExample">
+     <file name="index.html">
+       <div ng-controller="MainCtrl">
+        <h3>{{ originalText }}</h3>
+        <h3>{{ filteredText }}</h3>
+       </div>
+     </file>
+
+     <file name="script.js">
+      angular.module('filterExample', [])
+      .controller('MainCtrl', function($scope, $filter) {
+        $scope.originalText = 'hello';
+        $scope.filteredText = $filter('uppercase')($scope.originalText);
+      });
+     </file>
+   </example>
+  */
+$FilterProvider.$inject = ['$provide'];
+/** @this */
+function $FilterProvider($provide) {
+  var suffix = 'Filter';
+
+  /**
+   * @ngdoc method
+   * @name $filterProvider#register
+   * @param {string|Object} name Name of the filter function, or an object map of filters where
+   *    the keys are the filter names and the values are the filter factories.
+   *
+   *    <div class="alert alert-warning">
+   *    **Note:** Filter names must be valid AngularJS {@link expression} identifiers, such as `uppercase` or `orderBy`.
+   *    Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace
+   *    your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores
+   *    (`myapp_subsection_filterx`).
+   *    </div>
+    * @param {Function} factory If the first argument was a string, a factory function for the filter to be registered.
+   * @returns {Object} Registered filter instance, or if a map of filters was provided then a map
+   *    of the registered filter instances.
+   */
+  function register(name, factory) {
+    if (isObject(name)) {
+      var filters = {};
+      forEach(name, function(filter, key) {
+        filters[key] = register(key, filter);
+      });
+      return filters;
+    } else {
+      return $provide.factory(name + suffix, factory);
+    }
+  }
+  this.register = register;
+
+  this.$get = ['$injector', function($injector) {
+    return function(name) {
+      return $injector.get(name + suffix);
+    };
+  }];
+
+  ////////////////////////////////////////
+
+  /* global
+    currencyFilter: false,
+    dateFilter: false,
+    filterFilter: false,
+    jsonFilter: false,
+    limitToFilter: false,
+    lowercaseFilter: false,
+    numberFilter: false,
+    orderByFilter: false,
+    uppercaseFilter: false
+  */
+
+  register('currency', currencyFilter);
+  register('date', dateFilter);
+  register('filter', filterFilter);
+  register('json', jsonFilter);
+  register('limitTo', limitToFilter);
+  register('lowercase', lowercaseFilter);
+  register('number', numberFilter);
+  register('orderBy', orderByFilter);
+  register('uppercase', uppercaseFilter);
+}
+
+/**
+ * @ngdoc filter
+ * @name filter
+ * @kind function
+ *
+ * @description
+ * Selects a subset of items from `array` and returns it as a new array.
+ *
+ * @param {Array} array The source array.
+ * <div class="alert alert-info">
+ *   **Note**: If the array contains objects that reference themselves, filtering is not possible.
+ * </div>
+ * @param {string|Object|function()} expression The predicate to be used for selecting items from
+ *   `array`.
+ *
+ *   Can be one of:
+ *
+ *   - `string`: The string is used for matching against the contents of the `array`. All strings or
+ *     objects with string properties in `array` that match this string will be returned. This also
+ *     applies to nested object properties.
+ *     The predicate can be negated by prefixing the string with `!`.
+ *
+ *   - `Object`: A pattern object can be used to filter specific properties on objects contained
+ *     by `array`. For example `{name:"M", phone:"1"}` predicate will return an array of items
+ *     which have property `name` containing "M" and property `phone` containing "1". A special
+ *     property name (`$` by default) can be used (e.g. as in `{$: "text"}`) to accept a match
+ *     against any property of the object or its nested object properties. That's equivalent to the
+ *     simple substring match with a `string` as described above. The special property name can be
+ *     overwritten, using the `anyPropertyKey` parameter.
+ *     The predicate can be negated by prefixing the string with `!`.
+ *     For example `{name: "!M"}` predicate will return an array of items which have property `name`
+ *     not containing "M".
+ *
+ *     Note that a named property will match properties on the same level only, while the special
+ *     `$` property will match properties on the same level or deeper. E.g. an array item like
+ *     `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but
+ *     **will** be matched by `{$: 'John'}`.
+ *
+ *   - `function(value, index, array)`: A predicate function can be used to write arbitrary filters.
+ *     The function is called for each element of the array, with the element, its index, and
+ *     the entire array itself as arguments.
+ *
+ *     The final result is an array of those elements that the predicate returned true for.
+ *
+ * @param {function(actual, expected)|true|false} [comparator] Comparator which is used in
+ *     determining if values retrieved using `expression` (when it is not a function) should be
+ *     considered a match based on the expected value (from the filter expression) and actual
+ *     value (from the object in the array).
+ *
+ *   Can be one of:
+ *
+ *   - `function(actual, expected)`:
+ *     The function will be given the object value and the predicate value to compare and
+ *     should return true if both values should be considered equal.
+ *
+ *   - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.
+ *     This is essentially strict comparison of expected and actual.
+ *
+ *   - `false`: A short hand for a function which will look for a substring match in a case
+ *     insensitive way. Primitive values are converted to strings. Objects are not compared against
+ *     primitives, unless they have a custom `toString` method (e.g. `Date` objects).
+ *
+ *
+ *   Defaults to `false`.
+ *
+ * @param {string} [anyPropertyKey] The special property name that matches against any property.
+ *     By default `$`.
+ *
+ * @example
+   <example name="filter-filter">
+     <file name="index.html">
+       <div ng-init="friends = [{name:'John', phone:'555-1276'},
+                                {name:'Mary', phone:'800-BIG-MARY'},
+                                {name:'Mike', phone:'555-4321'},
+                                {name:'Adam', phone:'555-5678'},
+                                {name:'Julie', phone:'555-8765'},
+                                {name:'Juliette', phone:'555-5678'}]"></div>
+
+       <label>Search: <input ng-model="searchText"></label>
+       <table id="searchTextResults">
+         <tr><th>Name</th><th>Phone</th></tr>
+         <tr ng-repeat="friend in friends | filter:searchText">
+           <td>{{friend.name}}</td>
+           <td>{{friend.phone}}</td>
+         </tr>
+       </table>
+       <hr>
+       <label>Any: <input ng-model="search.$"></label> <br>
+       <label>Name only <input ng-model="search.name"></label><br>
+       <label>Phone only <input ng-model="search.phone"></label><br>
+       <label>Equality <input type="checkbox" ng-model="strict"></label><br>
+       <table id="searchObjResults">
+         <tr><th>Name</th><th>Phone</th></tr>
+         <tr ng-repeat="friendObj in friends | filter:search:strict">
+           <td>{{friendObj.name}}</td>
+           <td>{{friendObj.phone}}</td>
+         </tr>
+       </table>
+     </file>
+     <file name="protractor.js" type="protractor">
+       var expectFriendNames = function(expectedNames, key) {
+         element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {
+           arr.forEach(function(wd, i) {
+             expect(wd.getText()).toMatch(expectedNames[i]);
+           });
+         });
+       };
+
+       it('should search across all fields when filtering with a string', function() {
+         var searchText = element(by.model('searchText'));
+         searchText.clear();
+         searchText.sendKeys('m');
+         expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');
+
+         searchText.clear();
+         searchText.sendKeys('76');
+         expectFriendNames(['John', 'Julie'], 'friend');
+       });
+
+       it('should search in specific fields when filtering with a predicate object', function() {
+         var searchAny = element(by.model('search.$'));
+         searchAny.clear();
+         searchAny.sendKeys('i');
+         expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');
+       });
+       it('should use a equal comparison when comparator is true', function() {
+         var searchName = element(by.model('search.name'));
+         var strict = element(by.model('strict'));
+         searchName.clear();
+         searchName.sendKeys('Julie');
+         strict.click();
+         expectFriendNames(['Julie'], 'friendObj');
+       });
+     </file>
+   </example>
+ */
+
+function filterFilter() {
+  return function(array, expression, comparator, anyPropertyKey) {
+    if (!isArrayLike(array)) {
+      if (array == null) {
+        return array;
+      } else {
+        throw minErr('filter')('notarray', 'Expected array but received: {0}', array);
+      }
+    }
+
+    anyPropertyKey = anyPropertyKey || '$';
+    var expressionType = getTypeForFilter(expression);
+    var predicateFn;
+    var matchAgainstAnyProp;
+
+    switch (expressionType) {
+      case 'function':
+        predicateFn = expression;
+        break;
+      case 'boolean':
+      case 'null':
+      case 'number':
+      case 'string':
+        matchAgainstAnyProp = true;
+        // falls through
+      case 'object':
+        predicateFn = createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp);
+        break;
+      default:
+        return array;
+    }
+
+    return Array.prototype.filter.call(array, predicateFn);
+  };
+}
+
+// Helper functions for `filterFilter`
+function createPredicateFn(expression, comparator, anyPropertyKey, matchAgainstAnyProp) {
+  var shouldMatchPrimitives = isObject(expression) && (anyPropertyKey in expression);
+  var predicateFn;
+
+  if (comparator === true) {
+    comparator = equals;
+  } else if (!isFunction(comparator)) {
+    comparator = function(actual, expected) {
+      if (isUndefined(actual)) {
+        // No substring matching against `undefined`
+        return false;
+      }
+      if ((actual === null) || (expected === null)) {
+        // No substring matching against `null`; only match against `null`
+        return actual === expected;
+      }
+      if (isObject(expected) || (isObject(actual) && !hasCustomToString(actual))) {
+        // Should not compare primitives against objects, unless they have custom `toString` method
+        return false;
+      }
+
+      actual = lowercase('' + actual);
+      expected = lowercase('' + expected);
+      return actual.indexOf(expected) !== -1;
+    };
+  }
+
+  predicateFn = function(item) {
+    if (shouldMatchPrimitives && !isObject(item)) {
+      return deepCompare(item, expression[anyPropertyKey], comparator, anyPropertyKey, false);
+    }
+    return deepCompare(item, expression, comparator, anyPropertyKey, matchAgainstAnyProp);
+  };
+
+  return predicateFn;
+}
+
+function deepCompare(actual, expected, comparator, anyPropertyKey, matchAgainstAnyProp, dontMatchWholeObject) {
+  var actualType = getTypeForFilter(actual);
+  var expectedType = getTypeForFilter(expected);
+
+  if ((expectedType === 'string') && (expected.charAt(0) === '!')) {
+    return !deepCompare(actual, expected.substring(1), comparator, anyPropertyKey, matchAgainstAnyProp);
+  } else if (isArray(actual)) {
+    // In case `actual` is an array, consider it a match
+    // if ANY of it's items matches `expected`
+    return actual.some(function(item) {
+      return deepCompare(item, expected, comparator, anyPropertyKey, matchAgainstAnyProp);
+    });
+  }
+
+  switch (actualType) {
+    case 'object':
+      var key;
+      if (matchAgainstAnyProp) {
+        for (key in actual) {
+          // Under certain, rare, circumstances, key may not be a string and `charAt` will be undefined
+          // See: https://github.com/angular/angular.js/issues/15644
+          if (key.charAt && (key.charAt(0) !== '$') &&
+              deepCompare(actual[key], expected, comparator, anyPropertyKey, true)) {
+            return true;
+          }
+        }
+        return dontMatchWholeObject ? false : deepCompare(actual, expected, comparator, anyPropertyKey, false);
+      } else if (expectedType === 'object') {
+        for (key in expected) {
+          var expectedVal = expected[key];
+          if (isFunction(expectedVal) || isUndefined(expectedVal)) {
+            continue;
+          }
+
+          var matchAnyProperty = key === anyPropertyKey;
+          var actualVal = matchAnyProperty ? actual : actual[key];
+          if (!deepCompare(actualVal, expectedVal, comparator, anyPropertyKey, matchAnyProperty, matchAnyProperty)) {
+            return false;
+          }
+        }
+        return true;
+      } else {
+        return comparator(actual, expected);
+      }
+    case 'function':
+      return false;
+    default:
+      return comparator(actual, expected);
+  }
+}
+
+// Used for easily differentiating between `null` and actual `object`
+function getTypeForFilter(val) {
+  return (val === null) ? 'null' : typeof val;
+}
+
+var MAX_DIGITS = 22;
+var DECIMAL_SEP = '.';
+var ZERO_CHAR = '0';
+
+/**
+ * @ngdoc filter
+ * @name currency
+ * @kind function
+ *
+ * @description
+ * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default
+ * symbol for current locale is used.
+ *
+ * @param {number} amount Input to filter.
+ * @param {string=} symbol Currency symbol or identifier to be displayed.
+ * @param {number=} fractionSize Number of decimal places to round the amount to, defaults to default max fraction size for current locale
+ * @returns {string} Formatted number.
+ *
+ *
+ * @example
+   <example module="currencyExample" name="currency-filter">
+     <file name="index.html">
+       <script>
+         angular.module('currencyExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.amount = 1234.56;
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <input type="number" ng-model="amount" aria-label="amount"> <br>
+         default currency symbol ($): <span id="currency-default">{{amount | currency}}</span><br>
+         custom currency identifier (USD$): <span id="currency-custom">{{amount | currency:"USD$"}}</span><br>
+         no fractions (0): <span id="currency-no-fractions">{{amount | currency:"USD$":0}}</span>
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should init with 1234.56', function() {
+         expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');
+         expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');
+         expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');
+       });
+       it('should update', function() {
+         if (browser.params.browser === 'safari') {
+           // Safari does not understand the minus key. See
+           // https://github.com/angular/protractor/issues/481
+           return;
+         }
+         element(by.model('amount')).clear();
+         element(by.model('amount')).sendKeys('-1234');
+         expect(element(by.id('currency-default')).getText()).toBe('-$1,234.00');
+         expect(element(by.id('currency-custom')).getText()).toBe('-USD$1,234.00');
+         expect(element(by.id('currency-no-fractions')).getText()).toBe('-USD$1,234');
+       });
+     </file>
+   </example>
+ */
+currencyFilter.$inject = ['$locale'];
+function currencyFilter($locale) {
+  var formats = $locale.NUMBER_FORMATS;
+  return function(amount, currencySymbol, fractionSize) {
+    if (isUndefined(currencySymbol)) {
+      currencySymbol = formats.CURRENCY_SYM;
+    }
+
+    if (isUndefined(fractionSize)) {
+      fractionSize = formats.PATTERNS[1].maxFrac;
+    }
+
+    // If the currency symbol is empty, trim whitespace around the symbol
+    var currencySymbolRe = !currencySymbol ? /\s*\u00A4\s*/g : /\u00A4/g;
+
+    // if null or undefined pass it through
+    return (amount == null)
+        ? amount
+        : formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, fractionSize).
+            replace(currencySymbolRe, currencySymbol);
+  };
+}
+
+/**
+ * @ngdoc filter
+ * @name number
+ * @kind function
+ *
+ * @description
+ * Formats a number as text.
+ *
+ * If the input is null or undefined, it will just be returned.
+ * If the input is infinite (Infinity or -Infinity), the Infinity symbol '∞' or '-∞' is returned, respectively.
+ * If the input is not a number an empty string is returned.
+ *
+ *
+ * @param {number|string} number Number to format.
+ * @param {(number|string)=} fractionSize Number of decimal places to round the number to.
+ * If this is not provided then the fraction size is computed from the current locale's number
+ * formatting pattern. In the case of the default locale, it will be 3.
+ * @returns {string} Number rounded to `fractionSize` appropriately formatted based on the current
+ *                   locale (e.g., in the en_US locale it will have "." as the decimal separator and
+ *                   include "," group separators after each third digit).
+ *
+ * @example
+   <example module="numberFilterExample" name="number-filter">
+     <file name="index.html">
+       <script>
+         angular.module('numberFilterExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.val = 1234.56789;
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <label>Enter number: <input ng-model='val'></label><br>
+         Default formatting: <span id='number-default'>{{val | number}}</span><br>
+         No fractions: <span>{{val | number:0}}</span><br>
+         Negative number: <span>{{-val | number:4}}</span>
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should format numbers', function() {
+         expect(element(by.id('number-default')).getText()).toBe('1,234.568');
+         expect(element(by.binding('val | number:0')).getText()).toBe('1,235');
+         expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');
+       });
+
+       it('should update', function() {
+         element(by.model('val')).clear();
+         element(by.model('val')).sendKeys('3374.333');
+         expect(element(by.id('number-default')).getText()).toBe('3,374.333');
+         expect(element(by.binding('val | number:0')).getText()).toBe('3,374');
+         expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');
+      });
+     </file>
+   </example>
+ */
+numberFilter.$inject = ['$locale'];
+function numberFilter($locale) {
+  var formats = $locale.NUMBER_FORMATS;
+  return function(number, fractionSize) {
+
+    // if null or undefined pass it through
+    return (number == null)
+        ? number
+        : formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,
+                       fractionSize);
+  };
+}
+
+/**
+ * Parse a number (as a string) into three components that can be used
+ * for formatting the number.
+ *
+ * (Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)
+ *
+ * @param  {string} numStr The number to parse
+ * @return {object} An object describing this number, containing the following keys:
+ *  - d : an array of digits containing leading zeros as necessary
+ *  - i : the number of the digits in `d` that are to the left of the decimal point
+ *  - e : the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`
+ *
+ */
+function parse(numStr) {
+  var exponent = 0, digits, numberOfIntegerDigits;
+  var i, j, zeros;
+
+  // Decimal point?
+  if ((numberOfIntegerDigits = numStr.indexOf(DECIMAL_SEP)) > -1) {
+    numStr = numStr.replace(DECIMAL_SEP, '');
+  }
+
+  // Exponential form?
+  if ((i = numStr.search(/e/i)) > 0) {
+    // Work out the exponent.
+    if (numberOfIntegerDigits < 0) numberOfIntegerDigits = i;
+    numberOfIntegerDigits += +numStr.slice(i + 1);
+    numStr = numStr.substring(0, i);
+  } else if (numberOfIntegerDigits < 0) {
+    // There was no decimal point or exponent so it is an integer.
+    numberOfIntegerDigits = numStr.length;
+  }
+
+  // Count the number of leading zeros.
+  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */ }
+
+  if (i === (zeros = numStr.length)) {
+    // The digits are all zero.
+    digits = [0];
+    numberOfIntegerDigits = 1;
+  } else {
+    // Count the number of trailing zeros
+    zeros--;
+    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;
+
+    // Trailing zeros are insignificant so ignore them
+    numberOfIntegerDigits -= i;
+    digits = [];
+    // Convert string to array of digits without leading/trailing zeros.
+    for (j = 0; i <= zeros; i++, j++) {
+      digits[j] = +numStr.charAt(i);
+    }
+  }
+
+  // If the number overflows the maximum allowed digits then use an exponent.
+  if (numberOfIntegerDigits > MAX_DIGITS) {
+    digits = digits.splice(0, MAX_DIGITS - 1);
+    exponent = numberOfIntegerDigits - 1;
+    numberOfIntegerDigits = 1;
+  }
+
+  return { d: digits, e: exponent, i: numberOfIntegerDigits };
+}
+
+/**
+ * Round the parsed number to the specified number of decimal places
+ * This function changed the parsedNumber in-place
+ */
+function roundNumber(parsedNumber, fractionSize, minFrac, maxFrac) {
+    var digits = parsedNumber.d;
+    var fractionLen = digits.length - parsedNumber.i;
+
+    // determine fractionSize if it is not specified; `+fractionSize` converts it to a number
+    fractionSize = (isUndefined(fractionSize)) ? Math.min(Math.max(minFrac, fractionLen), maxFrac) : +fractionSize;
+
+    // The index of the digit to where rounding is to occur
+    var roundAt = fractionSize + parsedNumber.i;
+    var digit = digits[roundAt];
+
+    if (roundAt > 0) {
+      // Drop fractional digits beyond `roundAt`
+      digits.splice(Math.max(parsedNumber.i, roundAt));
+
+      // Set non-fractional digits beyond `roundAt` to 0
+      for (var j = roundAt; j < digits.length; j++) {
+        digits[j] = 0;
+      }
+    } else {
+      // We rounded to zero so reset the parsedNumber
+      fractionLen = Math.max(0, fractionLen);
+      parsedNumber.i = 1;
+      digits.length = Math.max(1, roundAt = fractionSize + 1);
+      digits[0] = 0;
+      for (var i = 1; i < roundAt; i++) digits[i] = 0;
+    }
+
+    if (digit >= 5) {
+      if (roundAt - 1 < 0) {
+        for (var k = 0; k > roundAt; k--) {
+          digits.unshift(0);
+          parsedNumber.i++;
+        }
+        digits.unshift(1);
+        parsedNumber.i++;
+      } else {
+        digits[roundAt - 1]++;
+      }
+    }
+
+    // Pad out with zeros to get the required fraction length
+    for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);
+
+
+    // Do any carrying, e.g. a digit was rounded up to 10
+    var carry = digits.reduceRight(function(carry, d, i, digits) {
+      d = d + carry;
+      digits[i] = d % 10;
+      return Math.floor(d / 10);
+    }, 0);
+    if (carry) {
+      digits.unshift(carry);
+      parsedNumber.i++;
+    }
+}
+
+/**
+ * Format a number into a string
+ * @param  {number} number       The number to format
+ * @param  {{
+ *           minFrac, // the minimum number of digits required in the fraction part of the number
+ *           maxFrac, // the maximum number of digits required in the fraction part of the number
+ *           gSize,   // number of digits in each group of separated digits
+ *           lgSize,  // number of digits in the last group of digits before the decimal separator
+ *           negPre,  // the string to go in front of a negative number (e.g. `-` or `(`))
+ *           posPre,  // the string to go in front of a positive number
+ *           negSuf,  // the string to go after a negative number (e.g. `)`)
+ *           posSuf   // the string to go after a positive number
+ *         }} pattern
+ * @param  {string} groupSep     The string to separate groups of number (e.g. `,`)
+ * @param  {string} decimalSep   The string to act as the decimal separator (e.g. `.`)
+ * @param  {[type]} fractionSize The size of the fractional part of the number
+ * @return {string}              The number formatted as a string
+ */
+function formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {
+
+  if (!(isString(number) || isNumber(number)) || isNaN(number)) return '';
+
+  var isInfinity = !isFinite(number);
+  var isZero = false;
+  var numStr = Math.abs(number) + '',
+      formattedText = '',
+      parsedNumber;
+
+  if (isInfinity) {
+    formattedText = '\u221e';
+  } else {
+    parsedNumber = parse(numStr);
+
+    roundNumber(parsedNumber, fractionSize, pattern.minFrac, pattern.maxFrac);
+
+    var digits = parsedNumber.d;
+    var integerLen = parsedNumber.i;
+    var exponent = parsedNumber.e;
+    var decimals = [];
+    isZero = digits.reduce(function(isZero, d) { return isZero && !d; }, true);
+
+    // pad zeros for small numbers
+    while (integerLen < 0) {
+      digits.unshift(0);
+      integerLen++;
+    }
+
+    // extract decimals digits
+    if (integerLen > 0) {
+      decimals = digits.splice(integerLen, digits.length);
+    } else {
+      decimals = digits;
+      digits = [0];
+    }
+
+    // format the integer digits with grouping separators
+    var groups = [];
+    if (digits.length >= pattern.lgSize) {
+      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));
+    }
+    while (digits.length > pattern.gSize) {
+      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));
+    }
+    if (digits.length) {
+      groups.unshift(digits.join(''));
+    }
+    formattedText = groups.join(groupSep);
+
+    // append the decimal digits
+    if (decimals.length) {
+      formattedText += decimalSep + decimals.join('');
+    }
+
+    if (exponent) {
+      formattedText += 'e+' + exponent;
+    }
+  }
+  if (number < 0 && !isZero) {
+    return pattern.negPre + formattedText + pattern.negSuf;
+  } else {
+    return pattern.posPre + formattedText + pattern.posSuf;
+  }
+}
+
+function padNumber(num, digits, trim, negWrap) {
+  var neg = '';
+  if (num < 0 || (negWrap && num <= 0)) {
+    if (negWrap) {
+      num = -num + 1;
+    } else {
+      num = -num;
+      neg = '-';
+    }
+  }
+  num = '' + num;
+  while (num.length < digits) num = ZERO_CHAR + num;
+  if (trim) {
+    num = num.substr(num.length - digits);
+  }
+  return neg + num;
+}
+
+
+function dateGetter(name, size, offset, trim, negWrap) {
+  offset = offset || 0;
+  return function(date) {
+    var value = date['get' + name]();
+    if (offset > 0 || value > -offset) {
+      value += offset;
+    }
+    if (value === 0 && offset === -12) value = 12;
+    return padNumber(value, size, trim, negWrap);
+  };
+}
+
+function dateStrGetter(name, shortForm, standAlone) {
+  return function(date, formats) {
+    var value = date['get' + name]();
+    var propPrefix = (standAlone ? 'STANDALONE' : '') + (shortForm ? 'SHORT' : '');
+    var get = uppercase(propPrefix + name);
+
+    return formats[get][value];
+  };
+}
+
+function timeZoneGetter(date, formats, offset) {
+  var zone = -1 * offset;
+  var paddedZone = (zone >= 0) ? '+' : '';
+
+  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +
+                padNumber(Math.abs(zone % 60), 2);
+
+  return paddedZone;
+}
+
+function getFirstThursdayOfYear(year) {
+    // 0 = index of January
+    var dayOfWeekOnFirst = (new Date(year, 0, 1)).getDay();
+    // 4 = index of Thursday (+1 to account for 1st = 5)
+    // 11 = index of *next* Thursday (+1 account for 1st = 12)
+    return new Date(year, 0, ((dayOfWeekOnFirst <= 4) ? 5 : 12) - dayOfWeekOnFirst);
+}
+
+function getThursdayThisWeek(datetime) {
+    return new Date(datetime.getFullYear(), datetime.getMonth(),
+      // 4 = index of Thursday
+      datetime.getDate() + (4 - datetime.getDay()));
+}
+
+function weekGetter(size) {
+   return function(date) {
+      var firstThurs = getFirstThursdayOfYear(date.getFullYear()),
+         thisThurs = getThursdayThisWeek(date);
+
+      var diff = +thisThurs - +firstThurs,
+         result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week
+
+      return padNumber(result, size);
+   };
+}
+
+function ampmGetter(date, formats) {
+  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];
+}
+
+function eraGetter(date, formats) {
+  return date.getFullYear() <= 0 ? formats.ERAS[0] : formats.ERAS[1];
+}
+
+function longEraGetter(date, formats) {
+  return date.getFullYear() <= 0 ? formats.ERANAMES[0] : formats.ERANAMES[1];
+}
+
+var DATE_FORMATS = {
+  yyyy: dateGetter('FullYear', 4, 0, false, true),
+    yy: dateGetter('FullYear', 2, 0, true, true),
+     y: dateGetter('FullYear', 1, 0, false, true),
+  MMMM: dateStrGetter('Month'),
+   MMM: dateStrGetter('Month', true),
+    MM: dateGetter('Month', 2, 1),
+     M: dateGetter('Month', 1, 1),
+  LLLL: dateStrGetter('Month', false, true),
+    dd: dateGetter('Date', 2),
+     d: dateGetter('Date', 1),
+    HH: dateGetter('Hours', 2),
+     H: dateGetter('Hours', 1),
+    hh: dateGetter('Hours', 2, -12),
+     h: dateGetter('Hours', 1, -12),
+    mm: dateGetter('Minutes', 2),
+     m: dateGetter('Minutes', 1),
+    ss: dateGetter('Seconds', 2),
+     s: dateGetter('Seconds', 1),
+     // while ISO 8601 requires fractions to be prefixed with `.` or `,`
+     // we can be just safely rely on using `sss` since we currently don't support single or two digit fractions
+   sss: dateGetter('Milliseconds', 3),
+  EEEE: dateStrGetter('Day'),
+   EEE: dateStrGetter('Day', true),
+     a: ampmGetter,
+     Z: timeZoneGetter,
+    ww: weekGetter(2),
+     w: weekGetter(1),
+     G: eraGetter,
+     GG: eraGetter,
+     GGG: eraGetter,
+     GGGG: longEraGetter
+};
+
+var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\s\S]*)/,
+    NUMBER_STRING = /^-?\d+$/;
+
+/**
+ * @ngdoc filter
+ * @name date
+ * @kind function
+ *
+ * @description
+ *   Formats `date` to a string based on the requested `format`.
+ *
+ *   `format` string can be composed of the following elements:
+ *
+ *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)
+ *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)
+ *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)
+ *   * `'MMMM'`: Month in year (January-December)
+ *   * `'MMM'`: Month in year (Jan-Dec)
+ *   * `'MM'`: Month in year, padded (01-12)
+ *   * `'M'`: Month in year (1-12)
+ *   * `'LLLL'`: Stand-alone month in year (January-December)
+ *   * `'dd'`: Day in month, padded (01-31)
+ *   * `'d'`: Day in month (1-31)
+ *   * `'EEEE'`: Day in Week,(Sunday-Saturday)
+ *   * `'EEE'`: Day in Week, (Sun-Sat)
+ *   * `'HH'`: Hour in day, padded (00-23)
+ *   * `'H'`: Hour in day (0-23)
+ *   * `'hh'`: Hour in AM/PM, padded (01-12)
+ *   * `'h'`: Hour in AM/PM, (1-12)
+ *   * `'mm'`: Minute in hour, padded (00-59)
+ *   * `'m'`: Minute in hour (0-59)
+ *   * `'ss'`: Second in minute, padded (00-59)
+ *   * `'s'`: Second in minute (0-59)
+ *   * `'sss'`: Millisecond in second, padded (000-999)
+ *   * `'a'`: AM/PM marker
+ *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)
+ *   * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year
+ *   * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year
+ *   * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')
+ *   * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')
+ *
+ *   `format` string can also be one of the following predefined
+ *   {@link guide/i18n localizable formats}:
+ *
+ *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale
+ *     (e.g. Sep 3, 2010 12:05:08 PM)
+ *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)
+ *   * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale
+ *     (e.g. Friday, September 3, 2010)
+ *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)
+ *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)
+ *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)
+ *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)
+ *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)
+ *
+ *   `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.
+ *   `"h 'in the morning'"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence
+ *   (e.g. `"h 'o''clock'"`).
+ *
+ *   Any other characters in the `format` string will be output as-is.
+ *
+ * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or
+ *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its
+ *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is
+ *    specified in the string input, the time is considered to be in the local timezone.
+ * @param {string=} format Formatting rules (see Description). If not specified,
+ *    `mediumDate` is used.
+ * @param {string=} timezone Timezone to be used for formatting. It understands UTC/GMT and the
+ *    continental US time zone abbreviations, but for general use, use a time zone offset, for
+ *    example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
+ *    If not specified, the timezone of the browser will be used.
+ * @returns {string} Formatted string or the input if input is not recognized as date/millis.
+ *
+ * @example
+   <example name="filter-date">
+     <file name="index.html">
+       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:
+           <span>{{1288323623006 | date:'medium'}}</span><br>
+       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:
+          <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>
+       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:
+          <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>
+       <span ng-non-bindable>{{1288323623006 | date:"MM/dd/yyyy 'at' h:mma"}}</span>:
+          <span>{{'1288323623006' | date:"MM/dd/yyyy 'at' h:mma"}}</span><br>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should format date', function() {
+         expect(element(by.binding("1288323623006 | date:'medium'")).getText()).
+            toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);
+         expect(element(by.binding("1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'")).getText()).
+            toMatch(/2010-10-2\d \d{2}:\d{2}:\d{2} (-|\+)?\d{4}/);
+         expect(element(by.binding("'1288323623006' | date:'MM/dd/yyyy @ h:mma'")).getText()).
+            toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);
+         expect(element(by.binding("'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"")).getText()).
+            toMatch(/10\/2\d\/2010 at \d{1,2}:\d{2}(AM|PM)/);
+       });
+     </file>
+   </example>
+ */
+dateFilter.$inject = ['$locale'];
+function dateFilter($locale) {
+
+
+  var R_ISO8601_STR = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
+                     // 1        2       3         4          5          6          7          8  9     10      11
+  function jsonStringToDate(string) {
+    var match;
+    if ((match = string.match(R_ISO8601_STR))) {
+      var date = new Date(0),
+          tzHour = 0,
+          tzMin  = 0,
+          dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear,
+          timeSetter = match[8] ? date.setUTCHours : date.setHours;
+
+      if (match[9]) {
+        tzHour = toInt(match[9] + match[10]);
+        tzMin = toInt(match[9] + match[11]);
+      }
+      dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));
+      var h = toInt(match[4] || 0) - tzHour;
+      var m = toInt(match[5] || 0) - tzMin;
+      var s = toInt(match[6] || 0);
+      var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);
+      timeSetter.call(date, h, m, s, ms);
+      return date;
+    }
+    return string;
+  }
+
+
+  return function(date, format, timezone) {
+    var text = '',
+        parts = [],
+        fn, match;
+
+    format = format || 'mediumDate';
+    format = $locale.DATETIME_FORMATS[format] || format;
+    if (isString(date)) {
+      date = NUMBER_STRING.test(date) ? toInt(date) : jsonStringToDate(date);
+    }
+
+    if (isNumber(date)) {
+      date = new Date(date);
+    }
+
+    if (!isDate(date) || !isFinite(date.getTime())) {
+      return date;
+    }
+
+    while (format) {
+      match = DATE_FORMATS_SPLIT.exec(format);
+      if (match) {
+        parts = concat(parts, match, 1);
+        format = parts.pop();
+      } else {
+        parts.push(format);
+        format = null;
+      }
+    }
+
+    var dateTimezoneOffset = date.getTimezoneOffset();
+    if (timezone) {
+      dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);
+      date = convertTimezoneToLocal(date, timezone, true);
+    }
+    forEach(parts, function(value) {
+      fn = DATE_FORMATS[value];
+      text += fn ? fn(date, $locale.DATETIME_FORMATS, dateTimezoneOffset)
+                 : value === '\'\'' ? '\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\'');
+    });
+
+    return text;
+  };
+}
+
+
+/**
+ * @ngdoc filter
+ * @name json
+ * @kind function
+ *
+ * @description
+ *   Allows you to convert a JavaScript object into JSON string.
+ *
+ *   This filter is mostly useful for debugging. When using the double curly {{value}} notation
+ *   the binding is automatically converted to JSON.
+ *
+ * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.
+ * @param {number=} spacing The number of spaces to use per indentation, defaults to 2.
+ * @returns {string} JSON string.
+ *
+ *
+ * @example
+   <example name="filter-json">
+     <file name="index.html">
+       <pre id="default-spacing">{{ {'name':'value'} | json }}</pre>
+       <pre id="custom-spacing">{{ {'name':'value'} | json:4 }}</pre>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should jsonify filtered objects', function() {
+         expect(element(by.id('default-spacing')).getText()).toMatch(/\{\n {2}"name": ?"value"\n}/);
+         expect(element(by.id('custom-spacing')).getText()).toMatch(/\{\n {4}"name": ?"value"\n}/);
+       });
+     </file>
+   </example>
+ *
+ */
+function jsonFilter() {
+  return function(object, spacing) {
+    if (isUndefined(spacing)) {
+        spacing = 2;
+    }
+    return toJson(object, spacing);
+  };
+}
+
+
+/**
+ * @ngdoc filter
+ * @name lowercase
+ * @kind function
+ * @description
+ * Converts string to lowercase.
+ *
+ * See the {@link ng.uppercase uppercase filter documentation} for a functionally identical example.
+ *
+ * @see angular.lowercase
+ */
+var lowercaseFilter = valueFn(lowercase);
+
+
+/**
+ * @ngdoc filter
+ * @name uppercase
+ * @kind function
+ * @description
+ * Converts string to uppercase.
+ * @example
+   <example module="uppercaseFilterExample" name="filter-uppercase">
+     <file name="index.html">
+       <script>
+         angular.module('uppercaseFilterExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.title = 'This is a title';
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <!-- This title should be formatted normally -->
+         <h1>{{title}}</h1>
+         <!-- This title should be capitalized -->
+         <h1>{{title | uppercase}}</h1>
+       </div>
+     </file>
+   </example>
+ */
+var uppercaseFilter = valueFn(uppercase);
+
+/**
+ * @ngdoc filter
+ * @name limitTo
+ * @kind function
+ *
+ * @description
+ * Creates a new array or string containing only a specified number of elements. The elements are
+ * taken from either the beginning or the end of the source array, string or number, as specified by
+ * the value and sign (positive or negative) of `limit`. Other array-like objects are also supported
+ * (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input,
+ * it is converted to a string.
+ *
+ * @param {Array|ArrayLike|string|number} input - Array/array-like, string or number to be limited.
+ * @param {string|number} limit - The length of the returned array or string. If the `limit` number
+ *     is positive, `limit` number of items from the beginning of the source array/string are copied.
+ *     If the number is negative, `limit` number  of items from the end of the source array/string
+ *     are copied. The `limit` will be trimmed if it exceeds `array.length`. If `limit` is undefined,
+ *     the input will be returned unchanged.
+ * @param {(string|number)=} begin - Index at which to begin limitation. As a negative index,
+ *     `begin` indicates an offset from the end of `input`. Defaults to `0`.
+ * @returns {Array|string} A new sub-array or substring of length `limit` or less if the input had
+ *     less than `limit` elements.
+ *
+ * @example
+   <example module="limitToExample" name="limit-to-filter">
+     <file name="index.html">
+       <script>
+         angular.module('limitToExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.numbers = [1,2,3,4,5,6,7,8,9];
+             $scope.letters = "abcdefghi";
+             $scope.longNumber = 2345432342;
+             $scope.numLimit = 3;
+             $scope.letterLimit = 3;
+             $scope.longNumberLimit = 3;
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <label>
+            Limit {{numbers}} to:
+            <input type="number" step="1" ng-model="numLimit">
+         </label>
+         <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>
+         <label>
+            Limit {{letters}} to:
+            <input type="number" step="1" ng-model="letterLimit">
+         </label>
+         <p>Output letters: {{ letters | limitTo:letterLimit }}</p>
+         <label>
+            Limit {{longNumber}} to:
+            <input type="number" step="1" ng-model="longNumberLimit">
+         </label>
+         <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       var numLimitInput = element(by.model('numLimit'));
+       var letterLimitInput = element(by.model('letterLimit'));
+       var longNumberLimitInput = element(by.model('longNumberLimit'));
+       var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));
+       var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));
+       var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));
+
+       it('should limit the number array to first three items', function() {
+         expect(numLimitInput.getAttribute('value')).toBe('3');
+         expect(letterLimitInput.getAttribute('value')).toBe('3');
+         expect(longNumberLimitInput.getAttribute('value')).toBe('3');
+         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');
+         expect(limitedLetters.getText()).toEqual('Output letters: abc');
+         expect(limitedLongNumber.getText()).toEqual('Output long number: 234');
+       });
+
+       // There is a bug in safari and protractor that doesn't like the minus key
+       // it('should update the output when -3 is entered', function() {
+       //   numLimitInput.clear();
+       //   numLimitInput.sendKeys('-3');
+       //   letterLimitInput.clear();
+       //   letterLimitInput.sendKeys('-3');
+       //   longNumberLimitInput.clear();
+       //   longNumberLimitInput.sendKeys('-3');
+       //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');
+       //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');
+       //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');
+       // });
+
+       it('should not exceed the maximum size of input array', function() {
+         numLimitInput.clear();
+         numLimitInput.sendKeys('100');
+         letterLimitInput.clear();
+         letterLimitInput.sendKeys('100');
+         longNumberLimitInput.clear();
+         longNumberLimitInput.sendKeys('100');
+         expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');
+         expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');
+         expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');
+       });
+     </file>
+   </example>
+*/
+function limitToFilter() {
+  return function(input, limit, begin) {
+    if (Math.abs(Number(limit)) === Infinity) {
+      limit = Number(limit);
+    } else {
+      limit = toInt(limit);
+    }
+    if (isNumberNaN(limit)) return input;
+
+    if (isNumber(input)) input = input.toString();
+    if (!isArrayLike(input)) return input;
+
+    begin = (!begin || isNaN(begin)) ? 0 : toInt(begin);
+    begin = (begin < 0) ? Math.max(0, input.length + begin) : begin;
+
+    if (limit >= 0) {
+      return sliceFn(input, begin, begin + limit);
+    } else {
+      if (begin === 0) {
+        return sliceFn(input, limit, input.length);
+      } else {
+        return sliceFn(input, Math.max(0, begin + limit), begin);
+      }
+    }
+  };
+}
+
+function sliceFn(input, begin, end) {
+  if (isString(input)) return input.slice(begin, end);
+
+  return slice.call(input, begin, end);
+}
+
+/**
+ * @ngdoc filter
+ * @name orderBy
+ * @kind function
+ *
+ * @description
+ * Returns an array containing the items from the specified `collection`, ordered by a `comparator`
+ * function based on the values computed using the `expression` predicate.
+ *
+ * For example, `[{id: 'foo'}, {id: 'bar'}] | orderBy:'id'` would result in
+ * `[{id: 'bar'}, {id: 'foo'}]`.
+ *
+ * The `collection` can be an Array or array-like object (e.g. NodeList, jQuery object, TypedArray,
+ * String, etc).
+ *
+ * The `expression` can be a single predicate, or a list of predicates each serving as a tie-breaker
+ * for the preceding one. The `expression` is evaluated against each item and the output is used
+ * for comparing with other items.
+ *
+ * You can change the sorting order by setting `reverse` to `true`. By default, items are sorted in
+ * ascending order.
+ *
+ * The comparison is done using the `comparator` function. If none is specified, a default, built-in
+ * comparator is used (see below for details - in a nutshell, it compares numbers numerically and
+ * strings alphabetically).
+ *
+ * ### Under the hood
+ *
+ * Ordering the specified `collection` happens in two phases:
+ *
+ * 1. All items are passed through the predicate (or predicates), and the returned values are saved
+ *    along with their type (`string`, `number` etc). For example, an item `{label: 'foo'}`, passed
+ *    through a predicate that extracts the value of the `label` property, would be transformed to:
+ *    ```
+ *    {
+ *      value: 'foo',
+ *      type: 'string',
+ *      index: ...
+ *    }
+ *    ```
+ *    **Note:** `null` values use `'null'` as their type.
+ * 2. The comparator function is used to sort the items, based on the derived values, types and
+ *    indices.
+ *
+ * If you use a custom comparator, it will be called with pairs of objects of the form
+ * `{value: ..., type: '...', index: ...}` and is expected to return `0` if the objects are equal
+ * (as far as the comparator is concerned), `-1` if the 1st one should be ranked higher than the
+ * second, or `1` otherwise.
+ *
+ * In order to ensure that the sorting will be deterministic across platforms, if none of the
+ * specified predicates can distinguish between two items, `orderBy` will automatically introduce a
+ * dummy predicate that returns the item's index as `value`.
+ * (If you are using a custom comparator, make sure it can handle this predicate as well.)
+ *
+ * If a custom comparator still can't distinguish between two items, then they will be sorted based
+ * on their index using the built-in comparator.
+ *
+ * Finally, in an attempt to simplify things, if a predicate returns an object as the extracted
+ * value for an item, `orderBy` will try to convert that object to a primitive value, before passing
+ * it to the comparator. The following rules govern the conversion:
+ *
+ * 1. If the object has a `valueOf()` method that returns a primitive, its return value will be
+ *    used instead.<br />
+ *    (If the object has a `valueOf()` method that returns another object, then the returned object
+ *    will be used in subsequent steps.)
+ * 2. If the object has a custom `toString()` method (i.e. not the one inherited from `Object`) that
+ *    returns a primitive, its return value will be used instead.<br />
+ *    (If the object has a `toString()` method that returns another object, then the returned object
+ *    will be used in subsequent steps.)
+ * 3. No conversion; the object itself is used.
+ *
+ * ### The default comparator
+ *
+ * The default, built-in comparator should be sufficient for most usecases. In short, it compares
+ * numbers numerically, strings alphabetically (and case-insensitively), for objects falls back to
+ * using their index in the original collection, sorts values of different types by type and puts
+ * `undefined` and `null` values at the end of the sorted list.
+ *
+ * More specifically, it follows these steps to determine the relative order of items:
+ *
+ * 1. If the compared values are of different types:
+ *    - If one of the values is undefined, consider it "greater than" the other.
+ *    - Else if one of the values is null, consider it "greater than" the other.
+ *    - Else compare the types themselves alphabetically.
+ * 2. If both values are of type `string`, compare them alphabetically in a case- and
+ *    locale-insensitive way.
+ * 3. If both values are objects, compare their indices instead.
+ * 4. Otherwise, return:
+ *    -  `0`, if the values are equal (by strict equality comparison, i.e. using `===`).
+ *    - `-1`, if the 1st value is "less than" the 2nd value (compared using the `<` operator).
+ *    -  `1`, otherwise.
+ *
+ * **Note:** If you notice numbers not being sorted as expected, make sure they are actually being
+ *           saved as numbers and not strings.
+ * **Note:** For the purpose of sorting, `null` and `undefined` are considered "greater than"
+ *           any other value (with undefined "greater than" null). This effectively means that `null`
+ *           and `undefined` values end up at the end of a list sorted in ascending order.
+ * **Note:** `null` values use `'null'` as their type to be able to distinguish them from objects.
+ *
+ * @param {Array|ArrayLike} collection - The collection (array or array-like object) to sort.
+ * @param {(Function|string|Array.<Function|string>)=} expression - A predicate (or list of
+ *    predicates) to be used by the comparator to determine the order of elements.
+ *
+ *    Can be one of:
+ *
+ *    - `Function`: A getter function. This function will be called with each item as argument and
+ *      the return value will be used for sorting.
+ *    - `string`: An AngularJS expression. This expression will be evaluated against each item and the
+ *      result will be used for sorting. For example, use `'label'` to sort by a property called
+ *      `label` or `'label.substring(0, 3)'` to sort by the first 3 characters of the `label`
+ *      property.<br />
+ *      (The result of a constant expression is interpreted as a property name to be used for
+ *      comparison. For example, use `'"special name"'` (note the extra pair of quotes) to sort by a
+ *      property called `special name`.)<br />
+ *      An expression can be optionally prefixed with `+` or `-` to control the sorting direction,
+ *      ascending or descending. For example, `'+label'` or `'-label'`. If no property is provided,
+ *      (e.g. `'+'` or `'-'`), the collection element itself is used in comparisons.
+ *    - `Array`: An array of function and/or string predicates. If a predicate cannot determine the
+ *      relative order of two items, the next predicate is used as a tie-breaker.
+ *
+ * **Note:** If the predicate is missing or empty then it defaults to `'+'`.
+ *
+ * @param {boolean=} reverse - If `true`, reverse the sorting order.
+ * @param {(Function)=} comparator - The comparator function used to determine the relative order of
+ *    value pairs. If omitted, the built-in comparator will be used.
+ *
+ * @returns {Array} - The sorted array.
+ *
+ *
+ * @example
+ * ### Ordering a table with `ngRepeat`
+ *
+ * The example below demonstrates a simple {@link ngRepeat ngRepeat}, where the data is sorted by
+ * age in descending order (expression is set to `'-age'`). The `comparator` is not set, which means
+ * it defaults to the built-in comparator.
+ *
+   <example name="orderBy-static" module="orderByExample1">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <table class="friends">
+           <tr>
+             <th>Name</th>
+             <th>Phone Number</th>
+             <th>Age</th>
+           </tr>
+           <tr ng-repeat="friend in friends | orderBy:'-age'">
+             <td>{{friend.name}}</td>
+             <td>{{friend.phone}}</td>
+             <td>{{friend.age}}</td>
+           </tr>
+         </table>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('orderByExample1', [])
+         .controller('ExampleController', ['$scope', function($scope) {
+           $scope.friends = [
+             {name: 'John',   phone: '555-1212',  age: 10},
+             {name: 'Mary',   phone: '555-9876',  age: 19},
+             {name: 'Mike',   phone: '555-4321',  age: 21},
+             {name: 'Adam',   phone: '555-5678',  age: 35},
+             {name: 'Julie',  phone: '555-8765',  age: 29}
+           ];
+         }]);
+     </file>
+     <file name="style.css">
+       .friends {
+         border-collapse: collapse;
+       }
+
+       .friends th {
+         border-bottom: 1px solid;
+       }
+       .friends td, .friends th {
+         border-left: 1px solid;
+         padding: 5px 10px;
+       }
+       .friends td:first-child, .friends th:first-child {
+         border-left: none;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       // Element locators
+       var names = element.all(by.repeater('friends').column('friend.name'));
+
+       it('should sort friends by age in reverse order', function() {
+         expect(names.get(0).getText()).toBe('Adam');
+         expect(names.get(1).getText()).toBe('Julie');
+         expect(names.get(2).getText()).toBe('Mike');
+         expect(names.get(3).getText()).toBe('Mary');
+         expect(names.get(4).getText()).toBe('John');
+       });
+     </file>
+   </example>
+ * <hr />
+ *
+ * @example
+ * ### Changing parameters dynamically
+ *
+ * All parameters can be changed dynamically. The next example shows how you can make the columns of
+ * a table sortable, by binding the `expression` and `reverse` parameters to scope properties.
+ *
+   <example name="orderBy-dynamic" module="orderByExample2">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
+         <hr/>
+         <button ng-click="propertyName = null; reverse = false">Set to unsorted</button>
+         <hr/>
+         <table class="friends">
+           <tr>
+             <th>
+               <button ng-click="sortBy('name')">Name</button>
+               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
+             </th>
+             <th>
+               <button ng-click="sortBy('phone')">Phone Number</button>
+               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
+             </th>
+             <th>
+               <button ng-click="sortBy('age')">Age</button>
+               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
+             </th>
+           </tr>
+           <tr ng-repeat="friend in friends | orderBy:propertyName:reverse">
+             <td>{{friend.name}}</td>
+             <td>{{friend.phone}}</td>
+             <td>{{friend.age}}</td>
+           </tr>
+         </table>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('orderByExample2', [])
+         .controller('ExampleController', ['$scope', function($scope) {
+           var friends = [
+             {name: 'John',   phone: '555-1212',  age: 10},
+             {name: 'Mary',   phone: '555-9876',  age: 19},
+             {name: 'Mike',   phone: '555-4321',  age: 21},
+             {name: 'Adam',   phone: '555-5678',  age: 35},
+             {name: 'Julie',  phone: '555-8765',  age: 29}
+           ];
+
+           $scope.propertyName = 'age';
+           $scope.reverse = true;
+           $scope.friends = friends;
+
+           $scope.sortBy = function(propertyName) {
+             $scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;
+             $scope.propertyName = propertyName;
+           };
+         }]);
+     </file>
+     <file name="style.css">
+       .friends {
+         border-collapse: collapse;
+       }
+
+       .friends th {
+         border-bottom: 1px solid;
+       }
+       .friends td, .friends th {
+         border-left: 1px solid;
+         padding: 5px 10px;
+       }
+       .friends td:first-child, .friends th:first-child {
+         border-left: none;
+       }
+
+       .sortorder:after {
+         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
+       }
+       .sortorder.reverse:after {
+         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       // Element locators
+       var unsortButton = element(by.partialButtonText('unsorted'));
+       var nameHeader = element(by.partialButtonText('Name'));
+       var phoneHeader = element(by.partialButtonText('Phone'));
+       var ageHeader = element(by.partialButtonText('Age'));
+       var firstName = element(by.repeater('friends').column('friend.name').row(0));
+       var lastName = element(by.repeater('friends').column('friend.name').row(4));
+
+       it('should sort friends by some property, when clicking on the column header', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         phoneHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Mary');
+
+         nameHeader.click();
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('Mike');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Adam');
+       });
+
+       it('should sort friends in reverse order, when clicking on the same column', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Adam');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+       });
+
+       it('should restore the original order, when clicking "Set to unsorted"', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         unsortButton.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Julie');
+       });
+     </file>
+   </example>
+ * <hr />
+ *
+ * @example
+ * ### Using `orderBy` inside a controller
+ *
+ * It is also possible to call the `orderBy` filter manually, by injecting `orderByFilter`, and
+ * calling it with the desired parameters. (Alternatively, you could inject the `$filter` factory
+ * and retrieve the `orderBy` filter with `$filter('orderBy')`.)
+ *
+   <example name="orderBy-call-manually" module="orderByExample3">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <pre>Sort by = {{propertyName}}; reverse = {{reverse}}</pre>
+         <hr/>
+         <button ng-click="sortBy(null)">Set to unsorted</button>
+         <hr/>
+         <table class="friends">
+           <tr>
+             <th>
+               <button ng-click="sortBy('name')">Name</button>
+               <span class="sortorder" ng-show="propertyName === 'name'" ng-class="{reverse: reverse}"></span>
+             </th>
+             <th>
+               <button ng-click="sortBy('phone')">Phone Number</button>
+               <span class="sortorder" ng-show="propertyName === 'phone'" ng-class="{reverse: reverse}"></span>
+             </th>
+             <th>
+               <button ng-click="sortBy('age')">Age</button>
+               <span class="sortorder" ng-show="propertyName === 'age'" ng-class="{reverse: reverse}"></span>
+             </th>
+           </tr>
+           <tr ng-repeat="friend in friends">
+             <td>{{friend.name}}</td>
+             <td>{{friend.phone}}</td>
+             <td>{{friend.age}}</td>
+           </tr>
+         </table>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('orderByExample3', [])
+         .controller('ExampleController', ['$scope', 'orderByFilter', function($scope, orderBy) {
+           var friends = [
+             {name: 'John',   phone: '555-1212',  age: 10},
+             {name: 'Mary',   phone: '555-9876',  age: 19},
+             {name: 'Mike',   phone: '555-4321',  age: 21},
+             {name: 'Adam',   phone: '555-5678',  age: 35},
+             {name: 'Julie',  phone: '555-8765',  age: 29}
+           ];
+
+           $scope.propertyName = 'age';
+           $scope.reverse = true;
+           $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);
+
+           $scope.sortBy = function(propertyName) {
+             $scope.reverse = (propertyName !== null && $scope.propertyName === propertyName)
+                 ? !$scope.reverse : false;
+             $scope.propertyName = propertyName;
+             $scope.friends = orderBy(friends, $scope.propertyName, $scope.reverse);
+           };
+         }]);
+     </file>
+     <file name="style.css">
+       .friends {
+         border-collapse: collapse;
+       }
+
+       .friends th {
+         border-bottom: 1px solid;
+       }
+       .friends td, .friends th {
+         border-left: 1px solid;
+         padding: 5px 10px;
+       }
+       .friends td:first-child, .friends th:first-child {
+         border-left: none;
+       }
+
+       .sortorder:after {
+         content: '\25b2';   // BLACK UP-POINTING TRIANGLE
+       }
+       .sortorder.reverse:after {
+         content: '\25bc';   // BLACK DOWN-POINTING TRIANGLE
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       // Element locators
+       var unsortButton = element(by.partialButtonText('unsorted'));
+       var nameHeader = element(by.partialButtonText('Name'));
+       var phoneHeader = element(by.partialButtonText('Phone'));
+       var ageHeader = element(by.partialButtonText('Age'));
+       var firstName = element(by.repeater('friends').column('friend.name').row(0));
+       var lastName = element(by.repeater('friends').column('friend.name').row(4));
+
+       it('should sort friends by some property, when clicking on the column header', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         phoneHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Mary');
+
+         nameHeader.click();
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('Mike');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Adam');
+       });
+
+       it('should sort friends in reverse order, when clicking on the same column', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Adam');
+
+         ageHeader.click();
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+       });
+
+       it('should restore the original order, when clicking "Set to unsorted"', function() {
+         expect(firstName.getText()).toBe('Adam');
+         expect(lastName.getText()).toBe('John');
+
+         unsortButton.click();
+         expect(firstName.getText()).toBe('John');
+         expect(lastName.getText()).toBe('Julie');
+       });
+     </file>
+   </example>
+ * <hr />
+ *
+ * @example
+ * ### Using a custom comparator
+ *
+ * If you have very specific requirements about the way items are sorted, you can pass your own
+ * comparator function. For example, you might need to compare some strings in a locale-sensitive
+ * way. (When specifying a custom comparator, you also need to pass a value for the `reverse`
+ * argument - passing `false` retains the default sorting order, i.e. ascending.)
+ *
+   <example name="orderBy-custom-comparator" module="orderByExample4">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <div class="friends-container custom-comparator">
+           <h3>Locale-sensitive Comparator</h3>
+           <table class="friends">
+             <tr>
+               <th>Name</th>
+               <th>Favorite Letter</th>
+             </tr>
+             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter':false:localeSensitiveComparator">
+               <td>{{friend.name}}</td>
+               <td>{{friend.favoriteLetter}}</td>
+             </tr>
+           </table>
+         </div>
+         <div class="friends-container default-comparator">
+           <h3>Default Comparator</h3>
+           <table class="friends">
+             <tr>
+               <th>Name</th>
+               <th>Favorite Letter</th>
+             </tr>
+             <tr ng-repeat="friend in friends | orderBy:'favoriteLetter'">
+               <td>{{friend.name}}</td>
+               <td>{{friend.favoriteLetter}}</td>
+             </tr>
+           </table>
+         </div>
+       </div>
+     </file>
+     <file name="script.js">
+       angular.module('orderByExample4', [])
+         .controller('ExampleController', ['$scope', function($scope) {
+           $scope.friends = [
+             {name: 'John',   favoriteLetter: 'Ä'},
+             {name: 'Mary',   favoriteLetter: 'Ü'},
+             {name: 'Mike',   favoriteLetter: 'Ö'},
+             {name: 'Adam',   favoriteLetter: 'H'},
+             {name: 'Julie',  favoriteLetter: 'Z'}
+           ];
+
+           $scope.localeSensitiveComparator = function(v1, v2) {
+             // If we don't get strings, just compare by index
+             if (v1.type !== 'string' || v2.type !== 'string') {
+               return (v1.index < v2.index) ? -1 : 1;
+             }
+
+             // Compare strings alphabetically, taking locale into account
+             return v1.value.localeCompare(v2.value);
+           };
+         }]);
+     </file>
+     <file name="style.css">
+       .friends-container {
+         display: inline-block;
+         margin: 0 30px;
+       }
+
+       .friends {
+         border-collapse: collapse;
+       }
+
+       .friends th {
+         border-bottom: 1px solid;
+       }
+       .friends td, .friends th {
+         border-left: 1px solid;
+         padding: 5px 10px;
+       }
+       .friends td:first-child, .friends th:first-child {
+         border-left: none;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       // Element locators
+       var container = element(by.css('.custom-comparator'));
+       var names = container.all(by.repeater('friends').column('friend.name'));
+
+       it('should sort friends by favorite letter (in correct alphabetical order)', function() {
+         expect(names.get(0).getText()).toBe('John');
+         expect(names.get(1).getText()).toBe('Adam');
+         expect(names.get(2).getText()).toBe('Mike');
+         expect(names.get(3).getText()).toBe('Mary');
+         expect(names.get(4).getText()).toBe('Julie');
+       });
+     </file>
+   </example>
+ *
+ */
+orderByFilter.$inject = ['$parse'];
+function orderByFilter($parse) {
+  return function(array, sortPredicate, reverseOrder, compareFn) {
+
+    if (array == null) return array;
+    if (!isArrayLike(array)) {
+      throw minErr('orderBy')('notarray', 'Expected array but received: {0}', array);
+    }
+
+    if (!isArray(sortPredicate)) { sortPredicate = [sortPredicate]; }
+    if (sortPredicate.length === 0) { sortPredicate = ['+']; }
+
+    var predicates = processPredicates(sortPredicate);
+
+    var descending = reverseOrder ? -1 : 1;
+
+    // Define the `compare()` function. Use a default comparator if none is specified.
+    var compare = isFunction(compareFn) ? compareFn : defaultCompare;
+
+    // The next three lines are a version of a Swartzian Transform idiom from Perl
+    // (sometimes called the Decorate-Sort-Undecorate idiom)
+    // See https://en.wikipedia.org/wiki/Schwartzian_transform
+    var compareValues = Array.prototype.map.call(array, getComparisonObject);
+    compareValues.sort(doComparison);
+    array = compareValues.map(function(item) { return item.value; });
+
+    return array;
+
+    function getComparisonObject(value, index) {
+      // NOTE: We are adding an extra `tieBreaker` value based on the element's index.
+      // This will be used to keep the sort stable when none of the input predicates can
+      // distinguish between two elements.
+      return {
+        value: value,
+        tieBreaker: {value: index, type: 'number', index: index},
+        predicateValues: predicates.map(function(predicate) {
+          return getPredicateValue(predicate.get(value), index);
+        })
+      };
+    }
+
+    function doComparison(v1, v2) {
+      for (var i = 0, ii = predicates.length; i < ii; i++) {
+        var result = compare(v1.predicateValues[i], v2.predicateValues[i]);
+        if (result) {
+          return result * predicates[i].descending * descending;
+        }
+      }
+
+      return (compare(v1.tieBreaker, v2.tieBreaker) || defaultCompare(v1.tieBreaker, v2.tieBreaker)) * descending;
+    }
+  };
+
+  function processPredicates(sortPredicates) {
+    return sortPredicates.map(function(predicate) {
+      var descending = 1, get = identity;
+
+      if (isFunction(predicate)) {
+        get = predicate;
+      } else if (isString(predicate)) {
+        if ((predicate.charAt(0) === '+' || predicate.charAt(0) === '-')) {
+          descending = predicate.charAt(0) === '-' ? -1 : 1;
+          predicate = predicate.substring(1);
+        }
+        if (predicate !== '') {
+          get = $parse(predicate);
+          if (get.constant) {
+            var key = get();
+            get = function(value) { return value[key]; };
+          }
+        }
+      }
+      return {get: get, descending: descending};
+    });
+  }
+
+  function isPrimitive(value) {
+    switch (typeof value) {
+      case 'number': /* falls through */
+      case 'boolean': /* falls through */
+      case 'string':
+        return true;
+      default:
+        return false;
+    }
+  }
+
+  function objectValue(value) {
+    // If `valueOf` is a valid function use that
+    if (isFunction(value.valueOf)) {
+      value = value.valueOf();
+      if (isPrimitive(value)) return value;
+    }
+    // If `toString` is a valid function and not the one from `Object.prototype` use that
+    if (hasCustomToString(value)) {
+      value = value.toString();
+      if (isPrimitive(value)) return value;
+    }
+
+    return value;
+  }
+
+  function getPredicateValue(value, index) {
+    var type = typeof value;
+    if (value === null) {
+      type = 'null';
+    } else if (type === 'object') {
+      value = objectValue(value);
+    }
+    return {value: value, type: type, index: index};
+  }
+
+  function defaultCompare(v1, v2) {
+    var result = 0;
+    var type1 = v1.type;
+    var type2 = v2.type;
+
+    if (type1 === type2) {
+      var value1 = v1.value;
+      var value2 = v2.value;
+
+      if (type1 === 'string') {
+        // Compare strings case-insensitively
+        value1 = value1.toLowerCase();
+        value2 = value2.toLowerCase();
+      } else if (type1 === 'object') {
+        // For basic objects, use the position of the object
+        // in the collection instead of the value
+        if (isObject(value1)) value1 = v1.index;
+        if (isObject(value2)) value2 = v2.index;
+      }
+
+      if (value1 !== value2) {
+        result = value1 < value2 ? -1 : 1;
+      }
+    } else {
+      result = (type1 === 'undefined') ? 1 :
+        (type2 === 'undefined') ? -1 :
+        (type1 === 'null') ? 1 :
+        (type2 === 'null') ? -1 :
+        (type1 < type2) ? -1 : 1;
+    }
+
+    return result;
+  }
+}
+
+function ngDirective(directive) {
+  if (isFunction(directive)) {
+    directive = {
+      link: directive
+    };
+  }
+  directive.restrict = directive.restrict || 'AC';
+  return valueFn(directive);
+}
+
+/**
+ * @ngdoc directive
+ * @name a
+ * @restrict E
+ *
+ * @description
+ * Modifies the default behavior of the html a tag so that the default action is prevented when
+ * the href attribute is empty.
+ *
+ * For dynamically creating `href` attributes for a tags, see the {@link ng.ngHref `ngHref`} directive.
+ */
+var htmlAnchorDirective = valueFn({
+  restrict: 'E',
+  compile: function(element, attr) {
+    if (!attr.href && !attr.xlinkHref) {
+      return function(scope, element) {
+        // If the linked element is not an anchor tag anymore, do nothing
+        if (element[0].nodeName.toLowerCase() !== 'a') return;
+
+        // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.
+        var href = toString.call(element.prop('href')) === '[object SVGAnimatedString]' ?
+                   'xlink:href' : 'href';
+        element.on('click', function(event) {
+          // if we have no href url, then don't navigate anywhere.
+          if (!element.attr(href)) {
+            event.preventDefault();
+          }
+        });
+      };
+    }
+  }
+});
+
+/**
+ * @ngdoc directive
+ * @name ngHref
+ * @restrict A
+ * @priority 99
+ *
+ * @description
+ * Using AngularJS markup like `{{hash}}` in an href attribute will
+ * make the link go to the wrong URL if the user clicks it before
+ * AngularJS has a chance to replace the `{{hash}}` markup with its
+ * value. Until AngularJS replaces the markup the link will be broken
+ * and will most likely return a 404 error. The `ngHref` directive
+ * solves this problem.
+ *
+ * The wrong way to write it:
+ * ```html
+ * <a href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
+ * ```
+ *
+ * The correct way to write it:
+ * ```html
+ * <a ng-href="http://www.gravatar.com/avatar/{{hash}}">link1</a>
+ * ```
+ *
+ * @element A
+ * @param {template} ngHref any string which can contain `{{}}` markup.
+ *
+ * @example
+ * This example shows various combinations of `href`, `ng-href` and `ng-click` attributes
+ * in links and their different behaviors:
+    <example name="ng-href">
+      <file name="index.html">
+        <input ng-model="value" /><br />
+        <a id="link-1" href ng-click="value = 1">link 1</a> (link, don't reload)<br />
+        <a id="link-2" href="" ng-click="value = 2">link 2</a> (link, don't reload)<br />
+        <a id="link-3" ng-href="/{{'123'}}">link 3</a> (link, reload!)<br />
+        <a id="link-4" href="" name="xx" ng-click="value = 4">anchor</a> (link, don't reload)<br />
+        <a id="link-5" name="xxx" ng-click="value = 5">anchor</a> (no link)<br />
+        <a id="link-6" ng-href="{{value}}">link</a> (link, change location)
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should execute ng-click but not reload when href without value', function() {
+          element(by.id('link-1')).click();
+          expect(element(by.model('value')).getAttribute('value')).toEqual('1');
+          expect(element(by.id('link-1')).getAttribute('href')).toBe('');
+        });
+
+        it('should execute ng-click but not reload when href empty string', function() {
+          element(by.id('link-2')).click();
+          expect(element(by.model('value')).getAttribute('value')).toEqual('2');
+          expect(element(by.id('link-2')).getAttribute('href')).toBe('');
+        });
+
+        it('should execute ng-click and change url when ng-href specified', function() {
+          expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\/123$/);
+
+          element(by.id('link-3')).click();
+
+          // At this point, we navigate away from an AngularJS page, so we need
+          // to use browser.driver to get the base webdriver.
+
+          browser.wait(function() {
+            return browser.driver.getCurrentUrl().then(function(url) {
+              return url.match(/\/123$/);
+            });
+          }, 5000, 'page should navigate to /123');
+        });
+
+        it('should execute ng-click but not reload when href empty string and name specified', function() {
+          element(by.id('link-4')).click();
+          expect(element(by.model('value')).getAttribute('value')).toEqual('4');
+          expect(element(by.id('link-4')).getAttribute('href')).toBe('');
+        });
+
+        it('should execute ng-click but not reload when no href but name specified', function() {
+          element(by.id('link-5')).click();
+          expect(element(by.model('value')).getAttribute('value')).toEqual('5');
+          expect(element(by.id('link-5')).getAttribute('href')).toBe(null);
+        });
+
+        it('should only change url when only ng-href', function() {
+          element(by.model('value')).clear();
+          element(by.model('value')).sendKeys('6');
+          expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\/6$/);
+
+          element(by.id('link-6')).click();
+
+          // At this point, we navigate away from an AngularJS page, so we need
+          // to use browser.driver to get the base webdriver.
+          browser.wait(function() {
+            return browser.driver.getCurrentUrl().then(function(url) {
+              return url.match(/\/6$/);
+            });
+          }, 5000, 'page should navigate to /6');
+        });
+      </file>
+    </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngSrc
+ * @restrict A
+ * @priority 99
+ *
+ * @description
+ * Using AngularJS markup like `{{hash}}` in a `src` attribute doesn't
+ * work right: The browser will fetch from the URL with the literal
+ * text `{{hash}}` until AngularJS replaces the expression inside
+ * `{{hash}}`. The `ngSrc` directive solves this problem.
+ *
+ * The buggy way to write it:
+ * ```html
+ * <img src="http://www.gravatar.com/avatar/{{hash}}" alt="Description"/>
+ * ```
+ *
+ * The correct way to write it:
+ * ```html
+ * <img ng-src="http://www.gravatar.com/avatar/{{hash}}" alt="Description" />
+ * ```
+ *
+ * @element IMG
+ * @param {template} ngSrc any string which can contain `{{}}` markup.
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngSrcset
+ * @restrict A
+ * @priority 99
+ *
+ * @description
+ * Using AngularJS markup like `{{hash}}` in a `srcset` attribute doesn't
+ * work right: The browser will fetch from the URL with the literal
+ * text `{{hash}}` until AngularJS replaces the expression inside
+ * `{{hash}}`. The `ngSrcset` directive solves this problem.
+ *
+ * The buggy way to write it:
+ * ```html
+ * <img srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description"/>
+ * ```
+ *
+ * The correct way to write it:
+ * ```html
+ * <img ng-srcset="http://www.gravatar.com/avatar/{{hash}} 2x" alt="Description" />
+ * ```
+ *
+ * @element IMG
+ * @param {template} ngSrcset any string which can contain `{{}}` markup.
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngDisabled
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ *
+ * This directive sets the `disabled` attribute on the element (typically a form control,
+ * e.g. `input`, `button`, `select` etc.) if the
+ * {@link guide/expression expression} inside `ngDisabled` evaluates to truthy.
+ *
+ * A special directive is necessary because we cannot use interpolation inside the `disabled`
+ * attribute. See the {@link guide/interpolation interpolation guide} for more info.
+ *
+ * @example
+    <example name="ng-disabled">
+      <file name="index.html">
+        <label>Click me to toggle: <input type="checkbox" ng-model="checked"></label><br/>
+        <button ng-model="button" ng-disabled="checked">Button</button>
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should toggle button', function() {
+          expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();
+          element(by.model('checked')).click();
+          expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();
+        });
+      </file>
+    </example>
+ *
+ * @param {expression} ngDisabled If the {@link guide/expression expression} is truthy,
+ *     then the `disabled` attribute will be set on the element
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngChecked
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ * Sets the `checked` attribute on the element, if the expression inside `ngChecked` is truthy.
+ *
+ * Note that this directive should not be used together with {@link ngModel `ngModel`},
+ * as this can lead to unexpected behavior.
+ *
+ * A special directive is necessary because we cannot use interpolation inside the `checked`
+ * attribute. See the {@link guide/interpolation interpolation guide} for more info.
+ *
+ * @example
+    <example name="ng-checked">
+      <file name="index.html">
+        <label>Check me to check both: <input type="checkbox" ng-model="leader"></label><br/>
+        <input id="checkFollower" type="checkbox" ng-checked="leader" aria-label="Follower input">
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should check both checkBoxes', function() {
+          expect(element(by.id('checkFollower')).getAttribute('checked')).toBeFalsy();
+          element(by.model('leader')).click();
+          expect(element(by.id('checkFollower')).getAttribute('checked')).toBeTruthy();
+        });
+      </file>
+    </example>
+ *
+ * @element INPUT
+ * @param {expression} ngChecked If the {@link guide/expression expression} is truthy,
+ *     then the `checked` attribute will be set on the element
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngReadonly
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ *
+ * Sets the `readonly` attribute on the element, if the expression inside `ngReadonly` is truthy.
+ * Note that `readonly` applies only to `input` elements with specific types. [See the input docs on
+ * MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly) for more information.
+ *
+ * A special directive is necessary because we cannot use interpolation inside the `readonly`
+ * attribute. See the {@link guide/interpolation interpolation guide} for more info.
+ *
+ * @example
+    <example name="ng-readonly">
+      <file name="index.html">
+        <label>Check me to make text readonly: <input type="checkbox" ng-model="checked"></label><br/>
+        <input type="text" ng-readonly="checked" value="I'm AngularJS" aria-label="Readonly field" />
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should toggle readonly attr', function() {
+          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeFalsy();
+          element(by.model('checked')).click();
+          expect(element(by.css('[type="text"]')).getAttribute('readonly')).toBeTruthy();
+        });
+      </file>
+    </example>
+ *
+ * @element INPUT
+ * @param {expression} ngReadonly If the {@link guide/expression expression} is truthy,
+ *     then special attribute "readonly" will be set on the element
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngSelected
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ *
+ * Sets the `selected` attribute on the element, if the expression inside `ngSelected` is truthy.
+ *
+ * A special directive is necessary because we cannot use interpolation inside the `selected`
+ * attribute. See the {@link guide/interpolation interpolation guide} for more info.
+ *
+ * <div class="alert alert-warning">
+ *   **Note:** `ngSelected` does not interact with the `select` and `ngModel` directives, it only
+ *   sets the `selected` attribute on the element. If you are using `ngModel` on the select, you
+ *   should not use `ngSelected` on the options, as `ngModel` will set the select value and
+ *   selected options.
+ * </div>
+ *
+ * @example
+    <example name="ng-selected">
+      <file name="index.html">
+        <label>Check me to select: <input type="checkbox" ng-model="selected"></label><br/>
+        <select aria-label="ngSelected demo">
+          <option>Hello!</option>
+          <option id="greet" ng-selected="selected">Greetings!</option>
+        </select>
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should select Greetings!', function() {
+          expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();
+          element(by.model('selected')).click();
+          expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();
+        });
+      </file>
+    </example>
+ *
+ * @element OPTION
+ * @param {expression} ngSelected If the {@link guide/expression expression} is truthy,
+ *     then special attribute "selected" will be set on the element
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngOpen
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ *
+ * Sets the `open` attribute on the element, if the expression inside `ngOpen` is truthy.
+ *
+ * A special directive is necessary because we cannot use interpolation inside the `open`
+ * attribute. See the {@link guide/interpolation interpolation guide} for more info.
+ *
+ * ## A note about browser compatibility
+ *
+ * Internet Explorer and Edge do not support the `details` element, it is
+ * recommended to use {@link ng.ngShow} and {@link ng.ngHide} instead.
+ *
+ * @example
+     <example name="ng-open">
+       <file name="index.html">
+         <label>Toggle details: <input type="checkbox" ng-model="open"></label><br/>
+         <details id="details" ng-open="open">
+            <summary>List</summary>
+            <ul>
+              <li>Apple</li>
+              <li>Orange</li>
+              <li>Durian</li>
+            </ul>
+         </details>
+       </file>
+       <file name="protractor.js" type="protractor">
+         it('should toggle open', function() {
+           expect(element(by.id('details')).getAttribute('open')).toBeFalsy();
+           element(by.model('open')).click();
+           expect(element(by.id('details')).getAttribute('open')).toBeTruthy();
+         });
+       </file>
+     </example>
+ *
+ * @element DETAILS
+ * @param {expression} ngOpen If the {@link guide/expression expression} is truthy,
+ *     then special attribute "open" will be set on the element
+ */
+
+var ngAttributeAliasDirectives = {};
+
+// boolean attrs are evaluated
+forEach(BOOLEAN_ATTR, function(propName, attrName) {
+  // binding to multiple is not supported
+  if (propName === 'multiple') return;
+
+  function defaultLinkFn(scope, element, attr) {
+    scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {
+      attr.$set(attrName, !!value);
+    });
+  }
+
+  var normalized = directiveNormalize('ng-' + attrName);
+  var linkFn = defaultLinkFn;
+
+  if (propName === 'checked') {
+    linkFn = function(scope, element, attr) {
+      // ensuring ngChecked doesn't interfere with ngModel when both are set on the same input
+      if (attr.ngModel !== attr[normalized]) {
+        defaultLinkFn(scope, element, attr);
+      }
+    };
+  }
+
+  ngAttributeAliasDirectives[normalized] = function() {
+    return {
+      restrict: 'A',
+      priority: 100,
+      link: linkFn
+    };
+  };
+});
+
+// aliased input attrs are evaluated
+forEach(ALIASED_ATTR, function(htmlAttr, ngAttr) {
+  ngAttributeAliasDirectives[ngAttr] = function() {
+    return {
+      priority: 100,
+      link: function(scope, element, attr) {
+        //special case ngPattern when a literal regular expression value
+        //is used as the expression (this way we don't have to watch anything).
+        if (ngAttr === 'ngPattern' && attr.ngPattern.charAt(0) === '/') {
+          var match = attr.ngPattern.match(REGEX_STRING_REGEXP);
+          if (match) {
+            attr.$set('ngPattern', new RegExp(match[1], match[2]));
+            return;
+          }
+        }
+
+        scope.$watch(attr[ngAttr], function ngAttrAliasWatchAction(value) {
+          attr.$set(ngAttr, value);
+        });
+      }
+    };
+  };
+});
+
+// ng-src, ng-srcset, ng-href are interpolated
+forEach(['src', 'srcset', 'href'], function(attrName) {
+  var normalized = directiveNormalize('ng-' + attrName);
+  ngAttributeAliasDirectives[normalized] = ['$sce', function($sce) {
+    return {
+      priority: 99, // it needs to run after the attributes are interpolated
+      link: function(scope, element, attr) {
+        var propName = attrName,
+            name = attrName;
+
+        if (attrName === 'href' &&
+            toString.call(element.prop('href')) === '[object SVGAnimatedString]') {
+          name = 'xlinkHref';
+          attr.$attr[name] = 'xlink:href';
+          propName = null;
+        }
+
+        // We need to sanitize the url at least once, in case it is a constant
+        // non-interpolated attribute.
+        attr.$set(normalized, $sce.getTrustedMediaUrl(attr[normalized]));
+
+        attr.$observe(normalized, function(value) {
+          if (!value) {
+            if (attrName === 'href') {
+              attr.$set(name, null);
+            }
+            return;
+          }
+
+          attr.$set(name, value);
+
+          // Support: IE 9-11 only
+          // On IE, if "ng:src" directive declaration is used and "src" attribute doesn't exist
+          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need
+          // to set the property as well to achieve the desired effect.
+          // We use attr[attrName] value since $set might have sanitized the url.
+          if (msie && propName) element.prop(propName, attr[name]);
+        });
+      }
+    };
+  }];
+});
+
+/* global -nullFormCtrl, -PENDING_CLASS, -SUBMITTED_CLASS
+ */
+var nullFormCtrl = {
+  $addControl: noop,
+  $getControls: valueFn([]),
+  $$renameControl: nullFormRenameControl,
+  $removeControl: noop,
+  $setValidity: noop,
+  $setDirty: noop,
+  $setPristine: noop,
+  $setSubmitted: noop,
+  $$setSubmitted: noop
+},
+PENDING_CLASS = 'ng-pending',
+SUBMITTED_CLASS = 'ng-submitted';
+
+function nullFormRenameControl(control, name) {
+  control.$name = name;
+}
+
+/**
+ * @ngdoc type
+ * @name form.FormController
+ *
+ * @property {boolean} $pristine True if user has not interacted with the form yet.
+ * @property {boolean} $dirty True if user has already interacted with the form.
+ * @property {boolean} $valid True if all of the containing forms and controls are valid.
+ * @property {boolean} $invalid True if at least one containing control or form is invalid.
+ * @property {boolean} $submitted True if user has submitted the form even if its invalid.
+ *
+ * @property {Object} $pending An object hash, containing references to controls or forms with
+ *  pending validators, where:
+ *
+ *  - keys are validations tokens (error names).
+ *  - values are arrays of controls or forms that have a pending validator for the given error name.
+ *
+ * See {@link form.FormController#$error $error} for a list of built-in validation tokens.
+ *
+ * @property {Object} $error An object hash, containing references to controls or forms with failing
+ *  validators, where:
+ *
+ *  - keys are validation tokens (error names),
+ *  - values are arrays of controls or forms that have a failing validator for the given error name.
+ *
+ *  Built-in validation tokens:
+ *  - `email`
+ *  - `max`
+ *  - `maxlength`
+ *  - `min`
+ *  - `minlength`
+ *  - `number`
+ *  - `pattern`
+ *  - `required`
+ *  - `url`
+ *  - `date`
+ *  - `datetimelocal`
+ *  - `time`
+ *  - `week`
+ *  - `month`
+ *
+ * @description
+ * `FormController` keeps track of all its controls and nested forms as well as the state of them,
+ * such as being valid/invalid or dirty/pristine.
+ *
+ * Each {@link ng.directive:form form} directive creates an instance
+ * of `FormController`.
+ *
+ */
+//asks for $scope to fool the BC controller module
+FormController.$inject = ['$element', '$attrs', '$scope', '$animate', '$interpolate'];
+function FormController($element, $attrs, $scope, $animate, $interpolate) {
+  this.$$controls = [];
+
+  // init state
+  this.$error = {};
+  this.$$success = {};
+  this.$pending = undefined;
+  this.$name = $interpolate($attrs.name || $attrs.ngForm || '')($scope);
+  this.$dirty = false;
+  this.$pristine = true;
+  this.$valid = true;
+  this.$invalid = false;
+  this.$submitted = false;
+  this.$$parentForm = nullFormCtrl;
+
+  this.$$element = $element;
+  this.$$animate = $animate;
+
+  setupValidity(this);
+}
+
+FormController.prototype = {
+  /**
+   * @ngdoc method
+   * @name form.FormController#$rollbackViewValue
+   *
+   * @description
+   * Rollback all form controls pending updates to the `$modelValue`.
+   *
+   * Updates may be pending by a debounced event or because the input is waiting for a some future
+   * event defined in `ng-model-options`. This method is typically needed by the reset button of
+   * a form that uses `ng-model-options` to pend updates.
+   */
+  $rollbackViewValue: function() {
+    forEach(this.$$controls, function(control) {
+      control.$rollbackViewValue();
+    });
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$commitViewValue
+   *
+   * @description
+   * Commit all form controls pending updates to the `$modelValue`.
+   *
+   * Updates may be pending by a debounced event or because the input is waiting for a some future
+   * event defined in `ng-model-options`. This method is rarely needed as `NgModelController`
+   * usually handles calling this in response to input events.
+   */
+  $commitViewValue: function() {
+    forEach(this.$$controls, function(control) {
+      control.$commitViewValue();
+    });
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$addControl
+   * @param {object} control control object, either a {@link form.FormController} or an
+   * {@link ngModel.NgModelController}
+   *
+   * @description
+   * Register a control with the form. Input elements using ngModelController do this automatically
+   * when they are linked.
+   *
+   * Note that the current state of the control will not be reflected on the new parent form. This
+   * is not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`
+   * state.
+   *
+   * However, if the method is used programmatically, for example by adding dynamically created controls,
+   * or controls that have been previously removed without destroying their corresponding DOM element,
+   * it's the developers responsibility to make sure the current state propagates to the parent form.
+   *
+   * For example, if an input control is added that is already `$dirty` and has `$error` properties,
+   * calling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.
+   */
+  $addControl: function(control) {
+    // Breaking change - before, inputs whose name was "hasOwnProperty" were quietly ignored
+    // and not added to the scope.  Now we throw an error.
+    assertNotHasOwnProperty(control.$name, 'input');
+    this.$$controls.push(control);
+
+    if (control.$name) {
+      this[control.$name] = control;
+    }
+
+    control.$$parentForm = this;
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$getControls
+   * @returns {Array} the controls that are currently part of this form
+   *
+   * @description
+   * This method returns a **shallow copy** of the controls that are currently part of this form.
+   * The controls can be instances of {@link form.FormController `FormController`}
+   * ({@link ngForm "child-forms"}) and of {@link ngModel.NgModelController `NgModelController`}.
+   * If you need access to the controls of child-forms, you have to call `$getControls()`
+   * recursively on them.
+   * This can be used for example to iterate over all controls to validate them.
+   *
+   * The controls can be accessed normally, but adding to, or removing controls from the array has
+   * no effect on the form. Instead, use {@link form.FormController#$addControl `$addControl()`} and
+   * {@link form.FormController#$removeControl `$removeControl()`} for this use-case.
+   * Likewise, adding a control to, or removing a control from the form is not reflected
+   * in the shallow copy. That means you should get a fresh copy from `$getControls()` every time
+   * you need access to the controls.
+   */
+  $getControls: function() {
+    return shallowCopy(this.$$controls);
+  },
+
+  // Private API: rename a form control
+  $$renameControl: function(control, newName) {
+    var oldName = control.$name;
+
+    if (this[oldName] === control) {
+      delete this[oldName];
+    }
+    this[newName] = control;
+    control.$name = newName;
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$removeControl
+   * @param {object} control control object, either a {@link form.FormController} or an
+   * {@link ngModel.NgModelController}
+   *
+   * @description
+   * Deregister a control from the form.
+   *
+   * Input elements using ngModelController do this automatically when they are destroyed.
+   *
+   * Note that only the removed control's validation state (`$errors`etc.) will be removed from the
+   * form. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be
+   * different from case to case. For example, removing the only `$dirty` control from a form may or
+   * may not mean that the form is still `$dirty`.
+   */
+  $removeControl: function(control) {
+    if (control.$name && this[control.$name] === control) {
+      delete this[control.$name];
+    }
+    forEach(this.$pending, function(value, name) {
+      // eslint-disable-next-line no-invalid-this
+      this.$setValidity(name, null, control);
+    }, this);
+    forEach(this.$error, function(value, name) {
+      // eslint-disable-next-line no-invalid-this
+      this.$setValidity(name, null, control);
+    }, this);
+    forEach(this.$$success, function(value, name) {
+      // eslint-disable-next-line no-invalid-this
+      this.$setValidity(name, null, control);
+    }, this);
+
+    arrayRemove(this.$$controls, control);
+    control.$$parentForm = nullFormCtrl;
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$setDirty
+   *
+   * @description
+   * Sets the form to a dirty state.
+   *
+   * This method can be called to add the 'ng-dirty' class and set the form to a dirty
+   * state (ng-dirty class). This method will also propagate to parent forms.
+   */
+  $setDirty: function() {
+    this.$$animate.removeClass(this.$$element, PRISTINE_CLASS);
+    this.$$animate.addClass(this.$$element, DIRTY_CLASS);
+    this.$dirty = true;
+    this.$pristine = false;
+    this.$$parentForm.$setDirty();
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$setPristine
+   *
+   * @description
+   * Sets the form to its pristine state.
+   *
+   * This method sets the form's `$pristine` state to true, the `$dirty` state to false, removes
+   * the `ng-dirty` class and adds the `ng-pristine` class. Additionally, it sets the `$submitted`
+   * state to false.
+   *
+   * This method will also propagate to all the controls contained in this form.
+   *
+   * Setting a form back to a pristine state is often useful when we want to 'reuse' a form after
+   * saving or resetting it.
+   */
+  $setPristine: function() {
+    this.$$animate.setClass(this.$$element, PRISTINE_CLASS, DIRTY_CLASS + ' ' + SUBMITTED_CLASS);
+    this.$dirty = false;
+    this.$pristine = true;
+    this.$submitted = false;
+    forEach(this.$$controls, function(control) {
+      control.$setPristine();
+    });
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$setUntouched
+   *
+   * @description
+   * Sets the form to its untouched state.
+   *
+   * This method can be called to remove the 'ng-touched' class and set the form controls to their
+   * untouched state (ng-untouched class).
+   *
+   * Setting a form controls back to their untouched state is often useful when setting the form
+   * back to its pristine state.
+   */
+  $setUntouched: function() {
+    forEach(this.$$controls, function(control) {
+      control.$setUntouched();
+    });
+  },
+
+  /**
+   * @ngdoc method
+   * @name form.FormController#$setSubmitted
+   *
+   * @description
+   * Sets the form to its `$submitted` state. This will also set `$submitted` on all child and
+   * parent forms of the form.
+   */
+  $setSubmitted: function() {
+    var rootForm = this;
+    while (rootForm.$$parentForm && (rootForm.$$parentForm !== nullFormCtrl)) {
+      rootForm = rootForm.$$parentForm;
+    }
+    rootForm.$$setSubmitted();
+  },
+
+  $$setSubmitted: function() {
+    this.$$animate.addClass(this.$$element, SUBMITTED_CLASS);
+    this.$submitted = true;
+    forEach(this.$$controls, function(control) {
+      if (control.$$setSubmitted) {
+        control.$$setSubmitted();
+      }
+    });
+  }
+};
+
+/**
+ * @ngdoc method
+ * @name form.FormController#$setValidity
+ *
+ * @description
+ * Change the validity state of the form, and notify the parent form (if any).
+ *
+ * Application developers will rarely need to call this method directly. It is used internally, by
+ * {@link ngModel.NgModelController#$setValidity NgModelController.$setValidity()}, to propagate a
+ * control's validity state to the parent `FormController`.
+ *
+ * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be
+ *        assigned to either `$error[validationErrorKey]` or `$pending[validationErrorKey]` (for
+ *        unfulfilled `$asyncValidators`), so that it is available for data-binding. The
+ *        `validationErrorKey` should be in camelCase and will get converted into dash-case for
+ *        class name. Example: `myError` will result in `ng-valid-my-error` and
+ *        `ng-invalid-my-error` classes and can be bound to as `{{ someForm.$error.myError }}`.
+ * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending
+ *        (undefined),  or skipped (null). Pending is used for unfulfilled `$asyncValidators`.
+ *        Skipped is used by AngularJS when validators do not run because of parse errors and when
+ *        `$asyncValidators` do not run because any of the `$validators` failed.
+ * @param {NgModelController | FormController} controller - The controller whose validity state is
+ *        triggering the change.
+ */
+addSetValidityMethod({
+  clazz: FormController,
+  set: function(object, property, controller) {
+    var list = object[property];
+    if (!list) {
+      object[property] = [controller];
+    } else {
+      var index = list.indexOf(controller);
+      if (index === -1) {
+        list.push(controller);
+      }
+    }
+  },
+  unset: function(object, property, controller) {
+    var list = object[property];
+    if (!list) {
+      return;
+    }
+    arrayRemove(list, controller);
+    if (list.length === 0) {
+      delete object[property];
+    }
+  }
+});
+
+/**
+ * @ngdoc directive
+ * @name ngForm
+ * @restrict EAC
+ *
+ * @description
+ * Helper directive that makes it possible to create control groups inside a
+ * {@link ng.directive:form `form`} directive.
+ * These "child forms" can be used, for example, to determine the validity of a sub-group of
+ * controls.
+ *
+ * <div class="alert alert-danger">
+ * **Note**: `ngForm` cannot be used as a replacement for `<form>`, because it lacks its
+ * [built-in HTML functionality](https://html.spec.whatwg.org/#the-form-element).
+ * Specifically, you cannot submit `ngForm` like a `<form>` tag. That means,
+ * you cannot send data to the server with `ngForm`, or integrate it with
+ * {@link ng.directive:ngSubmit `ngSubmit`}.
+ * </div>
+ *
+ * @param {string=} ngForm|name Name of the form. If specified, the form controller will
+ *                              be published into the related scope, under this name.
+ *
+ */
+
+ /**
+ * @ngdoc directive
+ * @name form
+ * @restrict E
+ *
+ * @description
+ * Directive that instantiates
+ * {@link form.FormController FormController}.
+ *
+ * If the `name` attribute is specified, the form controller is published onto the current scope under
+ * this name.
+ *
+ * ## Alias: {@link ng.directive:ngForm `ngForm`}
+ *
+ * In AngularJS, forms can be nested. This means that the outer form is valid when all of the child
+ * forms are valid as well. However, browsers do not allow nesting of `<form>` elements, so
+ * AngularJS provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to
+ * `form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group
+ * of controls needs to be determined.
+ *
+ * ## CSS classes
+ *  - `ng-valid` is set if the form is valid.
+ *  - `ng-invalid` is set if the form is invalid.
+ *  - `ng-pending` is set if the form is pending.
+ *  - `ng-pristine` is set if the form is pristine.
+ *  - `ng-dirty` is set if the form is dirty.
+ *  - `ng-submitted` is set if the form was submitted.
+ *
+ * Keep in mind that ngAnimate can detect each of these classes when added and removed.
+ *
+ *
+ * ## Submitting a form and preventing the default action
+ *
+ * Since the role of forms in client-side AngularJS applications is different than in classical
+ * roundtrip apps, it is desirable for the browser not to translate the form submission into a full
+ * page reload that sends the data to the server. Instead some javascript logic should be triggered
+ * to handle the form submission in an application-specific way.
+ *
+ * For this reason, AngularJS prevents the default action (form submission to the server) unless the
+ * `<form>` element has an `action` attribute specified.
+ *
+ * You can use one of the following two ways to specify what javascript method should be called when
+ * a form is submitted:
+ *
+ * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element
+ * - {@link ng.directive:ngClick ngClick} directive on the first
+  *  button or input field of type submit (input[type=submit])
+ *
+ * To prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}
+ * or {@link ng.directive:ngClick ngClick} directives.
+ * This is because of the following form submission rules in the HTML specification:
+ *
+ * - If a form has only one input field then hitting enter in this field triggers form submit
+ * (`ngSubmit`)
+ * - if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter
+ * doesn't trigger submit
+ * - if a form has one or more input fields and one or more buttons or input[type=submit] then
+ * hitting enter in any of the input fields will trigger the click handler on the *first* button or
+ * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)
+ *
+ * Any pending `ngModelOptions` changes will take place immediately when an enclosing form is
+ * submitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
+ * to have access to the updated model.
+ *
+ * @animations
+ * Animations in ngForm are triggered when any of the associated CSS classes are added and removed.
+ * These classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any
+ * other validations that are performed within the form. Animations in ngForm are similar to how
+ * they work in ngClass and animations can be hooked into using CSS transitions, keyframes as well
+ * as JS animations.
+ *
+ * The following example shows a simple way to utilize CSS transitions to style a form element
+ * that has been rendered as invalid after it has been validated:
+ *
+ * <pre>
+ * //be sure to include ngAnimate as a module to hook into more
+ * //advanced animations
+ * .my-form {
+ *   transition:0.5s linear all;
+ *   background: white;
+ * }
+ * .my-form.ng-invalid {
+ *   background: red;
+ *   color:white;
+ * }
+ * </pre>
+ *
+ * @example
+    <example name="ng-form" deps="angular-animate.js" animations="true" fixBase="true" module="formExample">
+      <file name="index.html">
+       <script>
+         angular.module('formExample', [])
+           .controller('FormController', ['$scope', function($scope) {
+             $scope.userType = 'guest';
+           }]);
+       </script>
+       <style>
+        .my-form {
+          transition:all linear 0.5s;
+          background: transparent;
+        }
+        .my-form.ng-invalid {
+          background: red;
+        }
+       </style>
+       <form name="myForm" ng-controller="FormController" class="my-form">
+         userType: <input name="input" ng-model="userType" required>
+         <span class="error" ng-show="myForm.input.$error.required">Required!</span><br>
+         <code>userType = {{userType}}</code><br>
+         <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br>
+         <code>myForm.input.$error = {{myForm.input.$error}}</code><br>
+         <code>myForm.$valid = {{myForm.$valid}}</code><br>
+         <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br>
+        </form>
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should initialize to model', function() {
+          var userType = element(by.binding('userType'));
+          var valid = element(by.binding('myForm.input.$valid'));
+
+          expect(userType.getText()).toContain('guest');
+          expect(valid.getText()).toContain('true');
+        });
+
+        it('should be invalid if empty', function() {
+          var userType = element(by.binding('userType'));
+          var valid = element(by.binding('myForm.input.$valid'));
+          var userInput = element(by.model('userType'));
+
+          userInput.clear();
+          userInput.sendKeys('');
+
+          expect(userType.getText()).toEqual('userType =');
+          expect(valid.getText()).toContain('false');
+        });
+      </file>
+    </example>
+ *
+ * @param {string=} name Name of the form. If specified, the form controller will be published into
+ *                       related scope, under this name.
+ */
+var formDirectiveFactory = function(isNgForm) {
+  return ['$timeout', '$parse', function($timeout, $parse) {
+    var formDirective = {
+      name: 'form',
+      restrict: isNgForm ? 'EAC' : 'E',
+      require: ['form', '^^?form'], //first is the form's own ctrl, second is an optional parent form
+      controller: FormController,
+      compile: function ngFormCompile(formElement, attr) {
+        // Setup initial state of the control
+        formElement.addClass(PRISTINE_CLASS).addClass(VALID_CLASS);
+
+        var nameAttr = attr.name ? 'name' : (isNgForm && attr.ngForm ? 'ngForm' : false);
+
+        return {
+          pre: function ngFormPreLink(scope, formElement, attr, ctrls) {
+            var controller = ctrls[0];
+
+            // if `action` attr is not present on the form, prevent the default action (submission)
+            if (!('action' in attr)) {
+              // we can't use jq events because if a form is destroyed during submission the default
+              // action is not prevented. see #1238
+              //
+              // IE 9 is not affected because it doesn't fire a submit event and try to do a full
+              // page reload if the form was destroyed by submission of the form via a click handler
+              // on a button in the form. Looks like an IE9 specific bug.
+              var handleFormSubmission = function(event) {
+                scope.$apply(function() {
+                  controller.$commitViewValue();
+                  controller.$setSubmitted();
+                });
+
+                event.preventDefault();
+              };
+
+              formElement[0].addEventListener('submit', handleFormSubmission);
+
+              // unregister the preventDefault listener so that we don't not leak memory but in a
+              // way that will achieve the prevention of the default action.
+              formElement.on('$destroy', function() {
+                $timeout(function() {
+                  formElement[0].removeEventListener('submit', handleFormSubmission);
+                }, 0, false);
+              });
+            }
+
+            var parentFormCtrl = ctrls[1] || controller.$$parentForm;
+            parentFormCtrl.$addControl(controller);
+
+            var setter = nameAttr ? getSetter(controller.$name) : noop;
+
+            if (nameAttr) {
+              setter(scope, controller);
+              attr.$observe(nameAttr, function(newValue) {
+                if (controller.$name === newValue) return;
+                setter(scope, undefined);
+                controller.$$parentForm.$$renameControl(controller, newValue);
+                setter = getSetter(controller.$name);
+                setter(scope, controller);
+              });
+            }
+            formElement.on('$destroy', function() {
+              controller.$$parentForm.$removeControl(controller);
+              setter(scope, undefined);
+              extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards
+            });
+          }
+        };
+      }
+    };
+
+    return formDirective;
+
+    function getSetter(expression) {
+      if (expression === '') {
+        //create an assignable expression, so forms with an empty name can be renamed later
+        return $parse('this[""]').assign;
+      }
+      return $parse(expression).assign || noop;
+    }
+  }];
+};
+
+var formDirective = formDirectiveFactory();
+var ngFormDirective = formDirectiveFactory(true);
+
+
+
+// helper methods
+function setupValidity(instance) {
+  instance.$$classCache = {};
+  instance.$$classCache[INVALID_CLASS] = !(instance.$$classCache[VALID_CLASS] = instance.$$element.hasClass(VALID_CLASS));
+}
+function addSetValidityMethod(context) {
+  var clazz = context.clazz,
+      set = context.set,
+      unset = context.unset;
+
+  clazz.prototype.$setValidity = function(validationErrorKey, state, controller) {
+    if (isUndefined(state)) {
+      createAndSet(this, '$pending', validationErrorKey, controller);
+    } else {
+      unsetAndCleanup(this, '$pending', validationErrorKey, controller);
+    }
+    if (!isBoolean(state)) {
+      unset(this.$error, validationErrorKey, controller);
+      unset(this.$$success, validationErrorKey, controller);
+    } else {
+      if (state) {
+        unset(this.$error, validationErrorKey, controller);
+        set(this.$$success, validationErrorKey, controller);
+      } else {
+        set(this.$error, validationErrorKey, controller);
+        unset(this.$$success, validationErrorKey, controller);
+      }
+    }
+    if (this.$pending) {
+      cachedToggleClass(this, PENDING_CLASS, true);
+      this.$valid = this.$invalid = undefined;
+      toggleValidationCss(this, '', null);
+    } else {
+      cachedToggleClass(this, PENDING_CLASS, false);
+      this.$valid = isObjectEmpty(this.$error);
+      this.$invalid = !this.$valid;
+      toggleValidationCss(this, '', this.$valid);
+    }
+
+    // re-read the state as the set/unset methods could have
+    // combined state in this.$error[validationError] (used for forms),
+    // where setting/unsetting only increments/decrements the value,
+    // and does not replace it.
+    var combinedState;
+    if (this.$pending && this.$pending[validationErrorKey]) {
+      combinedState = undefined;
+    } else if (this.$error[validationErrorKey]) {
+      combinedState = false;
+    } else if (this.$$success[validationErrorKey]) {
+      combinedState = true;
+    } else {
+      combinedState = null;
+    }
+
+    toggleValidationCss(this, validationErrorKey, combinedState);
+    this.$$parentForm.$setValidity(validationErrorKey, combinedState, this);
+  };
+
+  function createAndSet(ctrl, name, value, controller) {
+    if (!ctrl[name]) {
+      ctrl[name] = {};
+    }
+    set(ctrl[name], value, controller);
+  }
+
+  function unsetAndCleanup(ctrl, name, value, controller) {
+    if (ctrl[name]) {
+      unset(ctrl[name], value, controller);
+    }
+    if (isObjectEmpty(ctrl[name])) {
+      ctrl[name] = undefined;
+    }
+  }
+
+  function cachedToggleClass(ctrl, className, switchValue) {
+    if (switchValue && !ctrl.$$classCache[className]) {
+      ctrl.$$animate.addClass(ctrl.$$element, className);
+      ctrl.$$classCache[className] = true;
+    } else if (!switchValue && ctrl.$$classCache[className]) {
+      ctrl.$$animate.removeClass(ctrl.$$element, className);
+      ctrl.$$classCache[className] = false;
+    }
+  }
+
+  function toggleValidationCss(ctrl, validationErrorKey, isValid) {
+    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';
+
+    cachedToggleClass(ctrl, VALID_CLASS + validationErrorKey, isValid === true);
+    cachedToggleClass(ctrl, INVALID_CLASS + validationErrorKey, isValid === false);
+  }
+}
+
+function isObjectEmpty(obj) {
+  if (obj) {
+    for (var prop in obj) {
+      if (obj.hasOwnProperty(prop)) {
+        return false;
+      }
+    }
+  }
+  return true;
+}
+
+/* global
+  VALID_CLASS: false,
+  INVALID_CLASS: false,
+  PRISTINE_CLASS: false,
+  DIRTY_CLASS: false,
+  ngModelMinErr: false
+*/
+
+// Regex code was initially obtained from SO prior to modification: https://stackoverflow.com/questions/3143070/javascript-regex-iso-datetime#answer-3143231
+var ISO_DATE_REGEXP = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/;
+// See valid URLs in RFC3987 (http://tools.ietf.org/html/rfc3987)
+// Note: We are being more lenient, because browsers are too.
+//   1. Scheme
+//   2. Slashes
+//   3. Username
+//   4. Password
+//   5. Hostname
+//   6. Port
+//   7. Path
+//   8. Query
+//   9. Fragment
+//                 1111111111111111 222   333333    44444        55555555555555555555555     666     77777777     8888888     999
+var URL_REGEXP = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i;
+// eslint-disable-next-line max-len
+var EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;
+var NUMBER_REGEXP = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;
+var DATE_REGEXP = /^(\d{4,})-(\d{2})-(\d{2})$/;
+var DATETIMELOCAL_REGEXP = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
+var WEEK_REGEXP = /^(\d{4,})-W(\d\d)$/;
+var MONTH_REGEXP = /^(\d{4,})-(\d\d)$/;
+var TIME_REGEXP = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;
+
+var PARTIAL_VALIDATION_EVENTS = 'keydown wheel mousedown';
+var PARTIAL_VALIDATION_TYPES = createMap();
+forEach('date,datetime-local,month,time,week'.split(','), function(type) {
+  PARTIAL_VALIDATION_TYPES[type] = true;
+});
+
+var inputType = {
+
+  /**
+   * @ngdoc input
+   * @name input[text]
+   *
+   * @description
+   * Standard HTML text input with AngularJS data binding, inherited by most of the `input` elements.
+   *
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} required Adds `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+   *    minlength.
+   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
+   *    any length.
+   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
+   *    that contains the regular expression body that will be converted to a regular expression
+   *    as in the ngPattern directive.
+   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+   *    If the expression evaluates to a RegExp object, then this is used directly.
+   *    If the expression evaluates to a string, then it will be converted to a RegExp
+   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+   *    `new RegExp('^abc$')`.<br />
+   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+   *    start at the index of the last search's match, thus not taking the whole input value into
+   *    account.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
+   *    This parameter is ignored for input[type=password] controls, which will never trim the
+   *    input.
+   *
+   * @example
+      <example name="text-input-directive" module="textInputExample">
+        <file name="index.html">
+         <script>
+           angular.module('textInputExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.example = {
+                 text: 'guest',
+                 word: /^\s*\w*\s*$/
+               };
+             }]);
+         </script>
+         <form name="myForm" ng-controller="ExampleController">
+           <label>Single word:
+             <input type="text" name="input" ng-model="example.text"
+                    ng-pattern="example.word" required ng-trim="false">
+           </label>
+           <div role="alert">
+             <span class="error" ng-show="myForm.input.$error.required">
+               Required!</span>
+             <span class="error" ng-show="myForm.input.$error.pattern">
+               Single word only!</span>
+           </div>
+           <code>text = {{example.text}}</code><br/>
+           <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br/>
+           <code>myForm.input.$error = {{myForm.input.$error}}</code><br/>
+           <code>myForm.$valid = {{myForm.$valid}}</code><br/>
+           <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br/>
+          </form>
+        </file>
+        <file name="protractor.js" type="protractor">
+          var text = element(by.binding('example.text'));
+          var valid = element(by.binding('myForm.input.$valid'));
+          var input = element(by.model('example.text'));
+
+          it('should initialize to model', function() {
+            expect(text.getText()).toContain('guest');
+            expect(valid.getText()).toContain('true');
+          });
+
+          it('should be invalid if empty', function() {
+            input.clear();
+            input.sendKeys('');
+
+            expect(text.getText()).toEqual('text =');
+            expect(valid.getText()).toContain('false');
+          });
+
+          it('should be invalid if multi word', function() {
+            input.clear();
+            input.sendKeys('hello world');
+
+            expect(valid.getText()).toContain('false');
+          });
+        </file>
+      </example>
+   */
+  'text': textInputType,
+
+    /**
+     * @ngdoc input
+     * @name input[date]
+     *
+     * @description
+     * Input with date validation and transformation. In browsers that do not yet support
+     * the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601
+     * date format (yyyy-MM-dd), for example: `2009-01-06`. Since many
+     * modern browsers do not yet support this input type, it is important to provide cues to users on the
+     * expected input format via a placeholder or label.
+     *
+     * The model must always be a Date object, otherwise AngularJS will throw an error.
+     * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
+     *
+     * The timezone to be used to read/write the `Date` instance in the model can be defined using
+     * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
+     *
+     * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+     * @param {string=} name Property name of the form under which the control is published.
+     * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`. This must be a
+     *   valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
+     *   (e.g. `min="{{minDate | date:'yyyy-MM-dd'}}"`). Note that `min` will also add native HTML5
+     *   constraint validation.
+     * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`. This must be
+     *   a valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute
+     *   (e.g. `max="{{maxDate | date:'yyyy-MM-dd'}}"`). Note that `max` will also add native HTML5
+     *   constraint validation.
+     * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO date string
+     *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
+     * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO date string
+     *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
+     * @param {string=} required Sets `required` validation error key if the value is not entered.
+     * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+     *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+     *    `required` when you want to data-bind to the `required` attribute.
+     * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+     *    interaction with the input element.
+     *
+     * @example
+     <example name="date-input-directive" module="dateInputExample">
+     <file name="index.html">
+       <script>
+          angular.module('dateInputExample', [])
+            .controller('DateController', ['$scope', function($scope) {
+              $scope.example = {
+                value: new Date(2013, 9, 22)
+              };
+            }]);
+       </script>
+       <form name="myForm" ng-controller="DateController as dateCtrl">
+          <label for="exampleInput">Pick a date in 2013:</label>
+          <input type="date" id="exampleInput" name="input" ng-model="example.value"
+              placeholder="yyyy-MM-dd" min="2013-01-01" max="2013-12-31" required />
+          <div role="alert">
+            <span class="error" ng-show="myForm.input.$error.required">
+                Required!</span>
+            <span class="error" ng-show="myForm.input.$error.date">
+                Not a valid date!</span>
+           </div>
+           <tt>value = {{example.value | date: "yyyy-MM-dd"}}</tt><br/>
+           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+       </form>
+     </file>
+     <file name="protractor.js" type="protractor">
+        var value = element(by.binding('example.value | date: "yyyy-MM-dd"'));
+        var valid = element(by.binding('myForm.input.$valid'));
+
+        // currently protractor/webdriver does not support
+        // sending keys to all known HTML5 input controls
+        // for various browsers (see https://github.com/angular/protractor/issues/562).
+        function setInput(val) {
+          // set the value of the element and force validation.
+          var scr = "var ipt = document.getElementById('exampleInput'); " +
+          "ipt.value = '" + val + "';" +
+          "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
+          browser.executeScript(scr);
+        }
+
+        it('should initialize to model', function() {
+          expect(value.getText()).toContain('2013-10-22');
+          expect(valid.getText()).toContain('myForm.input.$valid = true');
+        });
+
+        it('should be invalid if empty', function() {
+          setInput('');
+          expect(value.getText()).toEqual('value =');
+          expect(valid.getText()).toContain('myForm.input.$valid = false');
+        });
+
+        it('should be invalid if over max', function() {
+          setInput('2015-01-01');
+          expect(value.getText()).toContain('');
+          expect(valid.getText()).toContain('myForm.input.$valid = false');
+        });
+     </file>
+     </example>
+     */
+  'date': createDateInputType('date', DATE_REGEXP,
+         createDateParser(DATE_REGEXP, ['yyyy', 'MM', 'dd']),
+         'yyyy-MM-dd'),
+
+   /**
+    * @ngdoc input
+    * @name input[datetime-local]
+    *
+    * @description
+    * Input with datetime validation and transformation. In browsers that do not yet support
+    * the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
+    * local datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.
+    *
+    * The model must always be a Date object, otherwise AngularJS will throw an error.
+    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
+    *
+    * The timezone to be used to read/write the `Date` instance in the model can be defined using
+    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
+    *
+    * The format of the displayed time can be adjusted with the
+    * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions} `timeSecondsFormat`
+    * and `timeStripZeroSeconds`.
+    *
+    * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+    * @param {string=} name Property name of the form under which the control is published.
+    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
+    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
+    *   inside this attribute (e.g. `min="{{minDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
+    *   Note that `min` will also add native HTML5 constraint validation.
+    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
+    *   This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation
+    *   inside this attribute (e.g. `max="{{maxDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}"`).
+    *   Note that `max` will also add native HTML5 constraint validation.
+    * @param {(date|string)=} ngMin Sets the `min` validation error key to the Date / ISO datetime string
+    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
+    * @param {(date|string)=} ngMax Sets the `max` validation error key to the Date / ISO datetime string
+    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
+    * @param {string=} required Sets `required` validation error key if the value is not entered.
+    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+    *    `required` when you want to data-bind to the `required` attribute.
+    * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+    *    interaction with the input element.
+    *
+    * @example
+    <example name="datetimelocal-input-directive" module="dateExample">
+    <file name="index.html">
+      <script>
+        angular.module('dateExample', [])
+          .controller('DateController', ['$scope', function($scope) {
+            $scope.example = {
+              value: new Date(2010, 11, 28, 14, 57)
+            };
+          }]);
+      </script>
+      <form name="myForm" ng-controller="DateController as dateCtrl">
+        <label for="exampleInput">Pick a date between in 2013:</label>
+        <input type="datetime-local" id="exampleInput" name="input" ng-model="example.value"
+            placeholder="yyyy-MM-ddTHH:mm:ss" min="2001-01-01T00:00:00" max="2013-12-31T00:00:00" required />
+        <div role="alert">
+          <span class="error" ng-show="myForm.input.$error.required">
+              Required!</span>
+          <span class="error" ng-show="myForm.input.$error.datetimelocal">
+              Not a valid date!</span>
+        </div>
+        <tt>value = {{example.value | date: "yyyy-MM-ddTHH:mm:ss"}}</tt><br/>
+        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+      </form>
+    </file>
+    <file name="protractor.js" type="protractor">
+      var value = element(by.binding('example.value | date: "yyyy-MM-ddTHH:mm:ss"'));
+      var valid = element(by.binding('myForm.input.$valid'));
+
+      // currently protractor/webdriver does not support
+      // sending keys to all known HTML5 input controls
+      // for various browsers (https://github.com/angular/protractor/issues/562).
+      function setInput(val) {
+        // set the value of the element and force validation.
+        var scr = "var ipt = document.getElementById('exampleInput'); " +
+        "ipt.value = '" + val + "';" +
+        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
+        browser.executeScript(scr);
+      }
+
+      it('should initialize to model', function() {
+        expect(value.getText()).toContain('2010-12-28T14:57:00');
+        expect(valid.getText()).toContain('myForm.input.$valid = true');
+      });
+
+      it('should be invalid if empty', function() {
+        setInput('');
+        expect(value.getText()).toEqual('value =');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+
+      it('should be invalid if over max', function() {
+        setInput('2015-01-01T23:59:00');
+        expect(value.getText()).toContain('');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+    </file>
+    </example>
+    */
+  'datetime-local': createDateInputType('datetimelocal', DATETIMELOCAL_REGEXP,
+      createDateParser(DATETIMELOCAL_REGEXP, ['yyyy', 'MM', 'dd', 'HH', 'mm', 'ss', 'sss']),
+      'yyyy-MM-ddTHH:mm:ss.sss'),
+
+  /**
+   * @ngdoc input
+   * @name input[time]
+   *
+   * @description
+   * Input with time validation and transformation. In browsers that do not yet support
+   * the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
+   * local time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a
+   * Date object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.
+   *
+   * The model must always be a Date object, otherwise AngularJS will throw an error.
+   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
+   *
+   * The timezone to be used to read/write the `Date` instance in the model can be defined using
+   * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions}. By default,
+   * this is the timezone of the browser.
+   *
+   * The format of the displayed time can be adjusted with the
+   * {@link ng.directive:ngModelOptions#ngModelOptions-arguments ngModelOptions} `timeSecondsFormat`
+   * and `timeStripZeroSeconds`.
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
+   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
+   *   attribute (e.g. `min="{{minTime | date:'HH:mm:ss'}}"`). Note that `min` will also add
+   *   native HTML5 constraint validation.
+   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
+   *   This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this
+   *   attribute (e.g. `max="{{maxTime | date:'HH:mm:ss'}}"`). Note that `max` will also add
+   *   native HTML5 constraint validation.
+   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO time string the
+   *   `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
+   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO time string the
+   *   `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
+   * @param {string=} required Sets `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+   <example name="time-input-directive" module="timeExample">
+   <file name="index.html">
+     <script>
+      angular.module('timeExample', [])
+        .controller('DateController', ['$scope', function($scope) {
+          $scope.example = {
+            value: new Date(1970, 0, 1, 14, 57, 0)
+          };
+        }]);
+     </script>
+     <form name="myForm" ng-controller="DateController as dateCtrl">
+        <label for="exampleInput">Pick a time between 8am and 5pm:</label>
+        <input type="time" id="exampleInput" name="input" ng-model="example.value"
+            placeholder="HH:mm:ss" min="08:00:00" max="17:00:00" required />
+        <div role="alert">
+          <span class="error" ng-show="myForm.input.$error.required">
+              Required!</span>
+          <span class="error" ng-show="myForm.input.$error.time">
+              Not a valid date!</span>
+        </div>
+        <tt>value = {{example.value | date: "HH:mm:ss"}}</tt><br/>
+        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+     </form>
+   </file>
+   <file name="protractor.js" type="protractor">
+      var value = element(by.binding('example.value | date: "HH:mm:ss"'));
+      var valid = element(by.binding('myForm.input.$valid'));
+
+      // currently protractor/webdriver does not support
+      // sending keys to all known HTML5 input controls
+      // for various browsers (https://github.com/angular/protractor/issues/562).
+      function setInput(val) {
+        // set the value of the element and force validation.
+        var scr = "var ipt = document.getElementById('exampleInput'); " +
+        "ipt.value = '" + val + "';" +
+        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
+        browser.executeScript(scr);
+      }
+
+      it('should initialize to model', function() {
+        expect(value.getText()).toContain('14:57:00');
+        expect(valid.getText()).toContain('myForm.input.$valid = true');
+      });
+
+      it('should be invalid if empty', function() {
+        setInput('');
+        expect(value.getText()).toEqual('value =');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+
+      it('should be invalid if over max', function() {
+        setInput('23:59:00');
+        expect(value.getText()).toContain('');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+   </file>
+   </example>
+   */
+  'time': createDateInputType('time', TIME_REGEXP,
+      createDateParser(TIME_REGEXP, ['HH', 'mm', 'ss', 'sss']),
+     'HH:mm:ss.sss'),
+
+   /**
+    * @ngdoc input
+    * @name input[week]
+    *
+    * @description
+    * Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support
+    * the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
+    * week format (yyyy-W##), for example: `2013-W02`.
+    *
+    * The model must always be a Date object, otherwise AngularJS will throw an error.
+    * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
+    *
+    * The value of the resulting Date object will be set to Thursday at 00:00:00 of the requested week,
+    * due to ISO-8601 week numbering standards. Information on ISO's system for numbering the weeks of the
+    * year can be found at: https://en.wikipedia.org/wiki/ISO_8601#Week_dates
+    *
+    * The timezone to be used to read/write the `Date` instance in the model can be defined using
+    * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
+    *
+    * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+    * @param {string=} name Property name of the form under which the control is published.
+    * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
+    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
+    *   attribute (e.g. `min="{{minWeek | date:'yyyy-Www'}}"`). Note that `min` will also add
+    *   native HTML5 constraint validation.
+    * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
+    *   This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this
+    *   attribute (e.g. `max="{{maxWeek | date:'yyyy-Www'}}"`). Note that `max` will also add
+    *   native HTML5 constraint validation.
+    * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
+    *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
+    * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
+    *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
+    * @param {string=} required Sets `required` validation error key if the value is not entered.
+    * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+    *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+    *    `required` when you want to data-bind to the `required` attribute.
+    * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+    *    interaction with the input element.
+    *
+    * @example
+    <example name="week-input-directive" module="weekExample">
+    <file name="index.html">
+      <script>
+      angular.module('weekExample', [])
+        .controller('DateController', ['$scope', function($scope) {
+          $scope.example = {
+            value: new Date(2013, 0, 3)
+          };
+        }]);
+      </script>
+      <form name="myForm" ng-controller="DateController as dateCtrl">
+        <label>Pick a date between in 2013:
+          <input id="exampleInput" type="week" name="input" ng-model="example.value"
+                 placeholder="YYYY-W##" min="2012-W32"
+                 max="2013-W52" required />
+        </label>
+        <div role="alert">
+          <span class="error" ng-show="myForm.input.$error.required">
+              Required!</span>
+          <span class="error" ng-show="myForm.input.$error.week">
+              Not a valid date!</span>
+        </div>
+        <tt>value = {{example.value | date: "yyyy-Www"}}</tt><br/>
+        <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+        <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+      </form>
+    </file>
+    <file name="protractor.js" type="protractor">
+      var value = element(by.binding('example.value | date: "yyyy-Www"'));
+      var valid = element(by.binding('myForm.input.$valid'));
+
+      // currently protractor/webdriver does not support
+      // sending keys to all known HTML5 input controls
+      // for various browsers (https://github.com/angular/protractor/issues/562).
+      function setInput(val) {
+        // set the value of the element and force validation.
+        var scr = "var ipt = document.getElementById('exampleInput'); " +
+        "ipt.value = '" + val + "';" +
+        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
+        browser.executeScript(scr);
+      }
+
+      it('should initialize to model', function() {
+        expect(value.getText()).toContain('2013-W01');
+        expect(valid.getText()).toContain('myForm.input.$valid = true');
+      });
+
+      it('should be invalid if empty', function() {
+        setInput('');
+        expect(value.getText()).toEqual('value =');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+
+      it('should be invalid if over max', function() {
+        setInput('2015-W01');
+        expect(value.getText()).toContain('');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+    </file>
+    </example>
+    */
+  'week': createDateInputType('week', WEEK_REGEXP, weekParser, 'yyyy-Www'),
+
+  /**
+   * @ngdoc input
+   * @name input[month]
+   *
+   * @description
+   * Input with month validation and transformation. In browsers that do not yet support
+   * the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601
+   * month format (yyyy-MM), for example: `2009-01`.
+   *
+   * The model must always be a Date object, otherwise AngularJS will throw an error.
+   * Invalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.
+   * If the model is not set to the first of the month, the next view to model update will set it
+   * to the first of the month.
+   *
+   * The timezone to be used to read/write the `Date` instance in the model can be defined using
+   * {@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
+   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
+   *   attribute (e.g. `min="{{minMonth | date:'yyyy-MM'}}"`). Note that `min` will also add
+   *   native HTML5 constraint validation.
+   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
+   *   This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this
+   *   attribute (e.g. `max="{{maxMonth | date:'yyyy-MM'}}"`). Note that `max` will also add
+   *   native HTML5 constraint validation.
+   * @param {(date|string)=} ngMin Sets the `min` validation constraint to the Date / ISO week string
+   *   the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.
+   * @param {(date|string)=} ngMax Sets the `max` validation constraint to the Date / ISO week string
+   *   the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.
+
+   * @param {string=} required Sets `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+   <example name="month-input-directive" module="monthExample">
+   <file name="index.html">
+     <script>
+      angular.module('monthExample', [])
+        .controller('DateController', ['$scope', function($scope) {
+          $scope.example = {
+            value: new Date(2013, 9, 1)
+          };
+        }]);
+     </script>
+     <form name="myForm" ng-controller="DateController as dateCtrl">
+       <label for="exampleInput">Pick a month in 2013:</label>
+       <input id="exampleInput" type="month" name="input" ng-model="example.value"
+          placeholder="yyyy-MM" min="2013-01" max="2013-12" required />
+       <div role="alert">
+         <span class="error" ng-show="myForm.input.$error.required">
+            Required!</span>
+         <span class="error" ng-show="myForm.input.$error.month">
+            Not a valid month!</span>
+       </div>
+       <tt>value = {{example.value | date: "yyyy-MM"}}</tt><br/>
+       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+     </form>
+   </file>
+   <file name="protractor.js" type="protractor">
+      var value = element(by.binding('example.value | date: "yyyy-MM"'));
+      var valid = element(by.binding('myForm.input.$valid'));
+
+      // currently protractor/webdriver does not support
+      // sending keys to all known HTML5 input controls
+      // for various browsers (https://github.com/angular/protractor/issues/562).
+      function setInput(val) {
+        // set the value of the element and force validation.
+        var scr = "var ipt = document.getElementById('exampleInput'); " +
+        "ipt.value = '" + val + "';" +
+        "angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('" + val + "'); });";
+        browser.executeScript(scr);
+      }
+
+      it('should initialize to model', function() {
+        expect(value.getText()).toContain('2013-10');
+        expect(valid.getText()).toContain('myForm.input.$valid = true');
+      });
+
+      it('should be invalid if empty', function() {
+        setInput('');
+        expect(value.getText()).toEqual('value =');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+
+      it('should be invalid if over max', function() {
+        setInput('2015-01');
+        expect(value.getText()).toContain('');
+        expect(valid.getText()).toContain('myForm.input.$valid = false');
+      });
+   </file>
+   </example>
+   */
+  'month': createDateInputType('month', MONTH_REGEXP,
+     createDateParser(MONTH_REGEXP, ['yyyy', 'MM']),
+     'yyyy-MM'),
+
+  /**
+   * @ngdoc input
+   * @name input[number]
+   *
+   * @description
+   * Text input with number validation and transformation. Sets the `number` validation
+   * error if not a valid number.
+   *
+   * <div class="alert alert-warning">
+   * The model must always be of type `number` otherwise AngularJS will throw an error.
+   * Be aware that a string containing a number is not enough. See the {@link ngModel:numfmt}
+   * error docs for more information and an example of how to convert your model if necessary.
+   * </div>
+   *
+   *
+   *
+   * @knownIssue
+   *
+   * ### HTML5 constraint validation and `allowInvalid`
+   *
+   * In browsers that follow the
+   * [HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),
+   * `input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.
+   * If a non-number is entered in the input, the browser will report the value as an empty string,
+   * which means the view / model values in `ngModel` and subsequently the scope value
+   * will also be an empty string.
+   *
+   * @knownIssue
+   *
+   * ### Large numbers and `step` validation
+   *
+   * The `step` validation will not work correctly for very large numbers (e.g. 9999999999) due to
+   * Javascript's arithmetic limitations. If you need to handle large numbers, purpose-built
+   * libraries (e.g. https://github.com/MikeMcl/big.js/), can be included into AngularJS by
+   * {@link guide/forms#modifying-built-in-validators overwriting the validators}
+   * for `number` and / or `step`, or by {@link guide/forms#custom-validation applying custom validators}
+   * to an `input[text]` element. The source for `input[number]` type can be used as a starting
+   * point for both implementations.
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.
+   *    Can be interpolated.
+   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.
+   *    Can be interpolated.
+   * @param {string=} ngMin Like `min`, sets the `min` validation error key if the value entered is less than `ngMin`,
+   *    but does not trigger HTML5 native validation. Takes an expression.
+   * @param {string=} ngMax Like `max`, sets the `max` validation error key if the value entered is greater than `ngMax`,
+   *    but does not trigger HTML5 native validation. Takes an expression.
+   * @param {string=} step Sets the `step` validation error key if the value entered does not fit the `step` constraint.
+   *    Can be interpolated.
+   * @param {string=} ngStep Like `step`, sets the `step` validation error key if the value entered does not fit the `ngStep` constraint,
+   *    but does not trigger HTML5 native validation. Takes an expression.
+   * @param {string=} required Sets `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+   *    minlength.
+   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
+   *    any length.
+   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
+   *    that contains the regular expression body that will be converted to a regular expression
+   *    as in the ngPattern directive.
+   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+   *    If the expression evaluates to a RegExp object, then this is used directly.
+   *    If the expression evaluates to a string, then it will be converted to a RegExp
+   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+   *    `new RegExp('^abc$')`.<br />
+   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+   *    start at the index of the last search's match, thus not taking the whole input value into
+   *    account.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+      <example name="number-input-directive" module="numberExample">
+        <file name="index.html">
+         <script>
+           angular.module('numberExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.example = {
+                 value: 12
+               };
+             }]);
+         </script>
+         <form name="myForm" ng-controller="ExampleController">
+           <label>Number:
+             <input type="number" name="input" ng-model="example.value"
+                    min="0" max="99" required>
+          </label>
+           <div role="alert">
+             <span class="error" ng-show="myForm.input.$error.required">
+               Required!</span>
+             <span class="error" ng-show="myForm.input.$error.number">
+               Not valid number!</span>
+           </div>
+           <tt>value = {{example.value}}</tt><br/>
+           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+          </form>
+        </file>
+        <file name="protractor.js" type="protractor">
+          var value = element(by.binding('example.value'));
+          var valid = element(by.binding('myForm.input.$valid'));
+          var input = element(by.model('example.value'));
+
+          it('should initialize to model', function() {
+            expect(value.getText()).toContain('12');
+            expect(valid.getText()).toContain('true');
+          });
+
+          it('should be invalid if empty', function() {
+            input.clear();
+            input.sendKeys('');
+            expect(value.getText()).toEqual('value =');
+            expect(valid.getText()).toContain('false');
+          });
+
+          it('should be invalid if over max', function() {
+            input.clear();
+            input.sendKeys('123');
+            expect(value.getText()).toEqual('value =');
+            expect(valid.getText()).toContain('false');
+          });
+        </file>
+      </example>
+   */
+  'number': numberInputType,
+
+
+  /**
+   * @ngdoc input
+   * @name input[url]
+   *
+   * @description
+   * Text input with URL validation. Sets the `url` validation error key if the content is not a
+   * valid URL.
+   *
+   * <div class="alert alert-warning">
+   * **Note:** `input[url]` uses a regex to validate urls that is derived from the regex
+   * used in Chromium. If you need stricter validation, you can use `ng-pattern` or modify
+   * the built-in validators (see the {@link guide/forms Forms guide})
+   * </div>
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} required Sets `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+   *    minlength.
+   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
+   *    any length.
+   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
+   *    that contains the regular expression body that will be converted to a regular expression
+   *    as in the ngPattern directive.
+   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+   *    If the expression evaluates to a RegExp object, then this is used directly.
+   *    If the expression evaluates to a string, then it will be converted to a RegExp
+   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+   *    `new RegExp('^abc$')`.<br />
+   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+   *    start at the index of the last search's match, thus not taking the whole input value into
+   *    account.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+      <example name="url-input-directive" module="urlExample">
+        <file name="index.html">
+         <script>
+           angular.module('urlExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.url = {
+                 text: 'http://google.com'
+               };
+             }]);
+         </script>
+         <form name="myForm" ng-controller="ExampleController">
+           <label>URL:
+             <input type="url" name="input" ng-model="url.text" required>
+           <label>
+           <div role="alert">
+             <span class="error" ng-show="myForm.input.$error.required">
+               Required!</span>
+             <span class="error" ng-show="myForm.input.$error.url">
+               Not valid url!</span>
+           </div>
+           <tt>text = {{url.text}}</tt><br/>
+           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>
+          </form>
+        </file>
+        <file name="protractor.js" type="protractor">
+          var text = element(by.binding('url.text'));
+          var valid = element(by.binding('myForm.input.$valid'));
+          var input = element(by.model('url.text'));
+
+          it('should initialize to model', function() {
+            expect(text.getText()).toContain('http://google.com');
+            expect(valid.getText()).toContain('true');
+          });
+
+          it('should be invalid if empty', function() {
+            input.clear();
+            input.sendKeys('');
+
+            expect(text.getText()).toEqual('text =');
+            expect(valid.getText()).toContain('false');
+          });
+
+          it('should be invalid if not url', function() {
+            input.clear();
+            input.sendKeys('box');
+
+            expect(valid.getText()).toContain('false');
+          });
+        </file>
+      </example>
+   */
+  'url': urlInputType,
+
+
+  /**
+   * @ngdoc input
+   * @name input[email]
+   *
+   * @description
+   * Text input with email validation. Sets the `email` validation error key if not a valid email
+   * address.
+   *
+   * <div class="alert alert-warning">
+   * **Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex
+   * used in Chromium, which may not fulfill your app's requirements.
+   * If you need stricter (e.g. requiring a top-level domain), or more relaxed validation
+   * (e.g. allowing IPv6 address literals) you can use `ng-pattern` or
+   * modify the built-in validators (see the {@link guide/forms Forms guide}).
+   * </div>
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} required Sets `required` validation error key if the value is not entered.
+   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+   *    `required` when you want to data-bind to the `required` attribute.
+   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+   *    minlength.
+   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+   *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of
+   *    any length.
+   * @param {string=} pattern Similar to `ngPattern` except that the attribute value is the actual string
+   *    that contains the regular expression body that will be converted to a regular expression
+   *    as in the ngPattern directive.
+   * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+   *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+   *    If the expression evaluates to a RegExp object, then this is used directly.
+   *    If the expression evaluates to a string, then it will be converted to a RegExp
+   *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+   *    `new RegExp('^abc$')`.<br />
+   *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+   *    start at the index of the last search's match, thus not taking the whole input value into
+   *    account.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+      <example name="email-input-directive" module="emailExample">
+        <file name="index.html">
+         <script>
+           angular.module('emailExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.email = {
+                 text: 'me@example.com'
+               };
+             }]);
+         </script>
+           <form name="myForm" ng-controller="ExampleController">
+             <label>Email:
+               <input type="email" name="input" ng-model="email.text" required>
+             </label>
+             <div role="alert">
+               <span class="error" ng-show="myForm.input.$error.required">
+                 Required!</span>
+               <span class="error" ng-show="myForm.input.$error.email">
+                 Not valid email!</span>
+             </div>
+             <tt>text = {{email.text}}</tt><br/>
+             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>
+             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>
+             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>
+           </form>
+         </file>
+        <file name="protractor.js" type="protractor">
+          var text = element(by.binding('email.text'));
+          var valid = element(by.binding('myForm.input.$valid'));
+          var input = element(by.model('email.text'));
+
+          it('should initialize to model', function() {
+            expect(text.getText()).toContain('me@example.com');
+            expect(valid.getText()).toContain('true');
+          });
+
+          it('should be invalid if empty', function() {
+            input.clear();
+            input.sendKeys('');
+            expect(text.getText()).toEqual('text =');
+            expect(valid.getText()).toContain('false');
+          });
+
+          it('should be invalid if not email', function() {
+            input.clear();
+            input.sendKeys('xxx');
+
+            expect(valid.getText()).toContain('false');
+          });
+        </file>
+      </example>
+   */
+  'email': emailInputType,
+
+
+  /**
+   * @ngdoc input
+   * @name input[radio]
+   *
+   * @description
+   * HTML radio button.
+   *
+   * **Note:**<br>
+   * All inputs controlled by {@link ngModel ngModel} (including those of type `radio`) will use the
+   * value of their `name` attribute to determine the property under which their
+   * {@link ngModel.NgModelController NgModelController} will be published on the parent
+   * {@link form.FormController FormController}. Thus, if you use the same `name` for multiple
+   * inputs of a form (e.g. a group of radio inputs), only _one_ `NgModelController` will be
+   * published on the parent `FormController` under that name. The rest of the controllers will
+   * continue to work as expected, but you won't be able to access them as properties on the parent
+   * `FormController`.
+   *
+   * <div class="alert alert-info">
+   *   <p>
+   *     In plain HTML forms, the `name` attribute is used to identify groups of radio inputs, so
+   *     that the browser can manage their state (checked/unchecked) based on the state of other
+   *     inputs in the same group.
+   *   </p>
+   *   <p>
+   *     In AngularJS forms, this is not necessary. The input's state will be updated based on the
+   *     value of the underlying model data.
+   *   </p>
+   * </div>
+   *
+   * <div class="alert alert-success">
+   *   If you omit the `name` attribute on a radio input, `ngModel` will automatically assign it a
+   *   unique name.
+   * </div>
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string} value The value to which the `ngModel` expression should be set when selected.
+   *    Note that `value` only supports `string` values, i.e. the scope model needs to be a string,
+   *    too. Use `ngValue` if you need complex models (`number`, `object`, ...).
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   * @param {string} ngValue AngularJS expression to which `ngModel` will be be set when the radio
+   *    is selected. Should be used instead of the `value` attribute if you need
+   *    a non-string `ngModel` (`boolean`, `array`, ...).
+   *
+   * @example
+      <example name="radio-input-directive" module="radioExample">
+        <file name="index.html">
+         <script>
+           angular.module('radioExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.color = {
+                 name: 'blue'
+               };
+               $scope.specialValue = {
+                 "id": "12345",
+                 "value": "green"
+               };
+             }]);
+         </script>
+         <form name="myForm" ng-controller="ExampleController">
+           <label>
+             <input type="radio" ng-model="color.name" value="red">
+             Red
+           </label><br/>
+           <label>
+             <input type="radio" ng-model="color.name" ng-value="specialValue">
+             Green
+           </label><br/>
+           <label>
+             <input type="radio" ng-model="color.name" value="blue">
+             Blue
+           </label><br/>
+           <tt>color = {{color.name | json}}</tt><br/>
+          </form>
+          Note that `ng-value="specialValue"` sets radio item's value to be the value of `$scope.specialValue`.
+        </file>
+        <file name="protractor.js" type="protractor">
+          it('should change state', function() {
+            var inputs = element.all(by.model('color.name'));
+            var color = element(by.binding('color.name'));
+
+            expect(color.getText()).toContain('blue');
+
+            inputs.get(0).click();
+            expect(color.getText()).toContain('red');
+
+            inputs.get(1).click();
+            expect(color.getText()).toContain('green');
+          });
+        </file>
+      </example>
+   */
+  'radio': radioInputType,
+
+  /**
+   * @ngdoc input
+   * @name input[range]
+   *
+   * @description
+   * Native range input with validation and transformation.
+   *
+   * The model for the range input must always be a `Number`.
+   *
+   * IE9 and other browsers that do not support the `range` type fall back
+   * to a text input without any default values for `min`, `max` and `step`. Model binding,
+   * validation and number parsing are nevertheless supported.
+   *
+   * Browsers that support range (latest Chrome, Safari, Firefox, Edge) treat `input[range]`
+   * in a way that never allows the input to hold an invalid value. That means:
+   * - any non-numerical value is set to `(max + min) / 2`.
+   * - any numerical value that is less than the current min val, or greater than the current max val
+   * is set to the min / max val respectively.
+   * - additionally, the current `step` is respected, so the nearest value that satisfies a step
+   * is used.
+   *
+   * See the [HTML Spec on input[type=range]](https://www.w3.org/TR/html5/forms.html#range-state-(type=range))
+   * for more info.
+   *
+   * This has the following consequences for AngularJS:
+   *
+   * Since the element value should always reflect the current model value, a range input
+   * will set the bound ngModel expression to the value that the browser has set for the
+   * input element. For example, in the following input `<input type="range" ng-model="model.value">`,
+   * if the application sets `model.value = null`, the browser will set the input to `'50'`.
+   * AngularJS will then set the model to `50`, to prevent input and model value being out of sync.
+   *
+   * That means the model for range will immediately be set to `50` after `ngModel` has been
+   * initialized. It also means a range input can never have the required error.
+   *
+   * This does not only affect changes to the model value, but also to the values of the `min`,
+   * `max`, and `step` attributes. When these change in a way that will cause the browser to modify
+   * the input value, AngularJS will also update the model value.
+   *
+   * Automatic value adjustment also means that a range input element can never have the `required`,
+   * `min`, or `max` errors.
+   *
+   * However, `step` is currently only fully implemented by Firefox. Other browsers have problems
+   * when the step value changes dynamically - they do not adjust the element value correctly, but
+   * instead may set the `stepMismatch` error. If that's the case, the AngularJS will set the `step`
+   * error on the input, and set the model to `undefined`.
+   *
+   * Note that `input[range]` is not compatible with`ngMax`, `ngMin`, and `ngStep`, because they do
+   * not set the `min` and `max` attributes, which means that the browser won't automatically adjust
+   * the input value based on their values, and will always assume min = 0, max = 100, and step = 1.
+   *
+   * @param {string}  ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {string=} min Sets the `min` validation to ensure that the value entered is greater
+   *                  than `min`. Can be interpolated.
+   * @param {string=} max Sets the `max` validation to ensure that the value entered is less than `max`.
+   *                  Can be interpolated.
+   * @param {string=} step Sets the `step` validation to ensure that the value entered matches the `step`
+   *                  Can be interpolated.
+   * @param {expression=} ngChange AngularJS expression to be executed when the ngModel value changes due
+   *                      to user interaction with the input element.
+   * @param {expression=} ngChecked If the expression is truthy, then the `checked` attribute will be set on the
+   *                      element. **Note** : `ngChecked` should not be used alongside `ngModel`.
+   *                      Checkout {@link ng.directive:ngChecked ngChecked} for usage.
+   *
+   * @example
+      <example name="range-input-directive" module="rangeExample">
+        <file name="index.html">
+          <script>
+            angular.module('rangeExample', [])
+              .controller('ExampleController', ['$scope', function($scope) {
+                $scope.value = 75;
+                $scope.min = 10;
+                $scope.max = 90;
+              }]);
+          </script>
+          <form name="myForm" ng-controller="ExampleController">
+
+            Model as range: <input type="range" name="range" ng-model="value" min="{{min}}"  max="{{max}}">
+            <hr>
+            Model as number: <input type="number" ng-model="value"><br>
+            Min: <input type="number" ng-model="min"><br>
+            Max: <input type="number" ng-model="max"><br>
+            value = <code>{{value}}</code><br/>
+            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
+            myForm.range.$error = <code>{{myForm.range.$error}}</code>
+          </form>
+        </file>
+      </example>
+
+   * ## Range Input with ngMin & ngMax attributes
+
+   * @example
+      <example name="range-input-directive-ng" module="rangeExample">
+        <file name="index.html">
+          <script>
+            angular.module('rangeExample', [])
+              .controller('ExampleController', ['$scope', function($scope) {
+                $scope.value = 75;
+                $scope.min = 10;
+                $scope.max = 90;
+              }]);
+          </script>
+          <form name="myForm" ng-controller="ExampleController">
+            Model as range: <input type="range" name="range" ng-model="value" ng-min="min" ng-max="max">
+            <hr>
+            Model as number: <input type="number" ng-model="value"><br>
+            Min: <input type="number" ng-model="min"><br>
+            Max: <input type="number" ng-model="max"><br>
+            value = <code>{{value}}</code><br/>
+            myForm.range.$valid = <code>{{myForm.range.$valid}}</code><br/>
+            myForm.range.$error = <code>{{myForm.range.$error}}</code>
+          </form>
+        </file>
+      </example>
+
+   */
+  'range': rangeInputType,
+
+  /**
+   * @ngdoc input
+   * @name input[checkbox]
+   *
+   * @description
+   * HTML checkbox.
+   *
+   * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+   * @param {string=} name Property name of the form under which the control is published.
+   * @param {expression=} ngTrueValue The value to which the expression should be set when selected.
+   * @param {expression=} ngFalseValue The value to which the expression should be set when not selected.
+   * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+   *    interaction with the input element.
+   *
+   * @example
+      <example name="checkbox-input-directive" module="checkboxExample">
+        <file name="index.html">
+         <script>
+           angular.module('checkboxExample', [])
+             .controller('ExampleController', ['$scope', function($scope) {
+               $scope.checkboxModel = {
+                value1 : true,
+                value2 : 'YES'
+              };
+             }]);
+         </script>
+         <form name="myForm" ng-controller="ExampleController">
+           <label>Value1:
+             <input type="checkbox" ng-model="checkboxModel.value1">
+           </label><br/>
+           <label>Value2:
+             <input type="checkbox" ng-model="checkboxModel.value2"
+                    ng-true-value="'YES'" ng-false-value="'NO'">
+            </label><br/>
+           <tt>value1 = {{checkboxModel.value1}}</tt><br/>
+           <tt>value2 = {{checkboxModel.value2}}</tt><br/>
+          </form>
+        </file>
+        <file name="protractor.js" type="protractor">
+          it('should change state', function() {
+            var value1 = element(by.binding('checkboxModel.value1'));
+            var value2 = element(by.binding('checkboxModel.value2'));
+
+            expect(value1.getText()).toContain('true');
+            expect(value2.getText()).toContain('YES');
+
+            element(by.model('checkboxModel.value1')).click();
+            element(by.model('checkboxModel.value2')).click();
+
+            expect(value1.getText()).toContain('false');
+            expect(value2.getText()).toContain('NO');
+          });
+        </file>
+      </example>
+   */
+  'checkbox': checkboxInputType,
+
+  'hidden': noop,
+  'button': noop,
+  'submit': noop,
+  'reset': noop,
+  'file': noop
+};
+
+function stringBasedInputType(ctrl) {
+  ctrl.$formatters.push(function(value) {
+    return ctrl.$isEmpty(value) ? value : value.toString();
+  });
+}
+
+function textInputType(scope, element, attr, ctrl, $sniffer, $browser) {
+  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+  stringBasedInputType(ctrl);
+}
+
+function baseInputType(scope, element, attr, ctrl, $sniffer, $browser) {
+  var type = lowercase(element[0].type);
+
+  // In composition mode, users are still inputting intermediate text buffer,
+  // hold the listener until composition is done.
+  // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent
+  if (!$sniffer.android) {
+    var composing = false;
+
+    element.on('compositionstart', function() {
+      composing = true;
+    });
+
+    // Support: IE9+
+    element.on('compositionupdate', function(ev) {
+      // End composition when ev.data is empty string on 'compositionupdate' event.
+      // When the input de-focusses (e.g. by clicking away), IE triggers 'compositionupdate'
+      // instead of 'compositionend'.
+      if (isUndefined(ev.data) || ev.data === '') {
+        composing = false;
+      }
+    });
+
+    element.on('compositionend', function() {
+      composing = false;
+      listener();
+    });
+  }
+
+  var timeout;
+
+  var listener = function(ev) {
+    if (timeout) {
+      $browser.defer.cancel(timeout);
+      timeout = null;
+    }
+    if (composing) return;
+    var value = element.val(),
+        event = ev && ev.type;
+
+    // By default we will trim the value
+    // If the attribute ng-trim exists we will avoid trimming
+    // If input type is 'password', the value is never trimmed
+    if (type !== 'password' && (!attr.ngTrim || attr.ngTrim !== 'false')) {
+      value = trim(value);
+    }
+
+    // If a control is suffering from bad input (due to native validators), browsers discard its
+    // value, so it may be necessary to revalidate (by calling $setViewValue again) even if the
+    // control's value is the same empty value twice in a row.
+    if (ctrl.$viewValue !== value || (value === '' && ctrl.$$hasNativeValidators)) {
+      ctrl.$setViewValue(value, event);
+    }
+  };
+
+  // if the browser does support "input" event, we are fine - except on IE9 which doesn't fire the
+  // input event on backspace, delete or cut
+  if ($sniffer.hasEvent('input')) {
+    element.on('input', listener);
+  } else {
+    var deferListener = function(ev, input, origValue) {
+      if (!timeout) {
+        timeout = $browser.defer(function() {
+          timeout = null;
+          if (!input || input.value !== origValue) {
+            listener(ev);
+          }
+        });
+      }
+    };
+
+    element.on('keydown', /** @this */ function(event) {
+      var key = event.keyCode;
+
+      // ignore
+      //    command            modifiers                   arrows
+      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;
+
+      deferListener(event, this, this.value);
+    });
+
+    // if user modifies input value using context menu in IE, we need "paste", "cut" and "drop" events to catch it
+    if ($sniffer.hasEvent('paste')) {
+      element.on('paste cut drop', deferListener);
+    }
+  }
+
+  // if user paste into input using mouse on older browser
+  // or form autocomplete on newer browser, we need "change" event to catch it
+  element.on('change', listener);
+
+  // Some native input types (date-family) have the ability to change validity without
+  // firing any input/change events.
+  // For these event types, when native validators are present and the browser supports the type,
+  // check for validity changes on various DOM events.
+  if (PARTIAL_VALIDATION_TYPES[type] && ctrl.$$hasNativeValidators && type === attr.type) {
+    element.on(PARTIAL_VALIDATION_EVENTS, /** @this */ function(ev) {
+      if (!timeout) {
+        var validity = this[VALIDITY_STATE_PROPERTY];
+        var origBadInput = validity.badInput;
+        var origTypeMismatch = validity.typeMismatch;
+        timeout = $browser.defer(function() {
+          timeout = null;
+          if (validity.badInput !== origBadInput || validity.typeMismatch !== origTypeMismatch) {
+            listener(ev);
+          }
+        });
+      }
+    });
+  }
+
+  ctrl.$render = function() {
+    // Workaround for Firefox validation #12102.
+    var value = ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue;
+    if (element.val() !== value) {
+      element.val(value);
+    }
+  };
+}
+
+function weekParser(isoWeek, existingDate) {
+  if (isDate(isoWeek)) {
+    return isoWeek;
+  }
+
+  if (isString(isoWeek)) {
+    WEEK_REGEXP.lastIndex = 0;
+    var parts = WEEK_REGEXP.exec(isoWeek);
+    if (parts) {
+      var year = +parts[1],
+          week = +parts[2],
+          hours = 0,
+          minutes = 0,
+          seconds = 0,
+          milliseconds = 0,
+          firstThurs = getFirstThursdayOfYear(year),
+          addDays = (week - 1) * 7;
+
+      if (existingDate) {
+        hours = existingDate.getHours();
+        minutes = existingDate.getMinutes();
+        seconds = existingDate.getSeconds();
+        milliseconds = existingDate.getMilliseconds();
+      }
+
+      return new Date(year, 0, firstThurs.getDate() + addDays, hours, minutes, seconds, milliseconds);
+    }
+  }
+
+  return NaN;
+}
+
+function createDateParser(regexp, mapping) {
+  return function(iso, previousDate) {
+    var parts, map;
+
+    if (isDate(iso)) {
+      return iso;
+    }
+
+    if (isString(iso)) {
+      // When a date is JSON'ified to wraps itself inside of an extra
+      // set of double quotes. This makes the date parsing code unable
+      // to match the date string and parse it as a date.
+      if (iso.charAt(0) === '"' && iso.charAt(iso.length - 1) === '"') {
+        iso = iso.substring(1, iso.length - 1);
+      }
+      if (ISO_DATE_REGEXP.test(iso)) {
+        return new Date(iso);
+      }
+      regexp.lastIndex = 0;
+      parts = regexp.exec(iso);
+
+      if (parts) {
+        parts.shift();
+        if (previousDate) {
+          map = {
+            yyyy: previousDate.getFullYear(),
+            MM: previousDate.getMonth() + 1,
+            dd: previousDate.getDate(),
+            HH: previousDate.getHours(),
+            mm: previousDate.getMinutes(),
+            ss: previousDate.getSeconds(),
+            sss: previousDate.getMilliseconds() / 1000
+          };
+        } else {
+          map = { yyyy: 1970, MM: 1, dd: 1, HH: 0, mm: 0, ss: 0, sss: 0 };
+        }
+
+        forEach(parts, function(part, index) {
+          if (index < mapping.length) {
+            map[mapping[index]] = +part;
+          }
+        });
+
+        var date = new Date(map.yyyy, map.MM - 1, map.dd, map.HH, map.mm, map.ss || 0, map.sss * 1000 || 0);
+        if (map.yyyy < 100) {
+          // In the constructor, 2-digit years map to 1900-1999.
+          // Use `setFullYear()` to set the correct year.
+          date.setFullYear(map.yyyy);
+        }
+
+        return date;
+      }
+    }
+
+    return NaN;
+  };
+}
+
+function createDateInputType(type, regexp, parseDate, format) {
+  return function dynamicDateInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {
+    badInputChecker(scope, element, attr, ctrl, type);
+    baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+
+    var isTimeType = type === 'time' || type === 'datetimelocal';
+    var previousDate;
+    var previousTimezone;
+
+    ctrl.$parsers.push(function(value) {
+      if (ctrl.$isEmpty(value)) return null;
+
+      if (regexp.test(value)) {
+        // Note: We cannot read ctrl.$modelValue, as there might be a different
+        // parser/formatter in the processing chain so that the model
+        // contains some different data format!
+        return parseDateAndConvertTimeZoneToLocal(value, previousDate);
+      }
+      ctrl.$$parserName = type;
+      return undefined;
+    });
+
+    ctrl.$formatters.push(function(value) {
+      if (value && !isDate(value)) {
+        throw ngModelMinErr('datefmt', 'Expected `{0}` to be a date', value);
+      }
+      if (isValidDate(value)) {
+        previousDate = value;
+        var timezone = ctrl.$options.getOption('timezone');
+
+        if (timezone) {
+          previousTimezone = timezone;
+          previousDate = convertTimezoneToLocal(previousDate, timezone, true);
+        }
+
+        return formatter(value, timezone);
+      } else {
+        previousDate = null;
+        previousTimezone = null;
+        return '';
+      }
+    });
+
+    if (isDefined(attr.min) || attr.ngMin) {
+      var minVal = attr.min || $parse(attr.ngMin)(scope);
+      var parsedMinVal = parseObservedDateValue(minVal);
+
+      ctrl.$validators.min = function(value) {
+        return !isValidDate(value) || isUndefined(parsedMinVal) || parseDate(value) >= parsedMinVal;
+      };
+      attr.$observe('min', function(val) {
+        if (val !== minVal) {
+          parsedMinVal = parseObservedDateValue(val);
+          minVal = val;
+          ctrl.$validate();
+        }
+      });
+    }
+
+    if (isDefined(attr.max) || attr.ngMax) {
+      var maxVal = attr.max || $parse(attr.ngMax)(scope);
+      var parsedMaxVal = parseObservedDateValue(maxVal);
+
+      ctrl.$validators.max = function(value) {
+        return !isValidDate(value) || isUndefined(parsedMaxVal) || parseDate(value) <= parsedMaxVal;
+      };
+      attr.$observe('max', function(val) {
+        if (val !== maxVal) {
+          parsedMaxVal = parseObservedDateValue(val);
+          maxVal = val;
+          ctrl.$validate();
+        }
+      });
+    }
+
+    function isValidDate(value) {
+      // Invalid Date: getTime() returns NaN
+      return value && !(value.getTime && value.getTime() !== value.getTime());
+    }
+
+    function parseObservedDateValue(val) {
+      return isDefined(val) && !isDate(val) ? parseDateAndConvertTimeZoneToLocal(val) || undefined : val;
+    }
+
+    function parseDateAndConvertTimeZoneToLocal(value, previousDate) {
+      var timezone = ctrl.$options.getOption('timezone');
+
+      if (previousTimezone && previousTimezone !== timezone) {
+        // If the timezone has changed, adjust the previousDate to the default timezone
+        // so that the new date is converted with the correct timezone offset
+        previousDate = addDateMinutes(previousDate, timezoneToOffset(previousTimezone));
+      }
+
+      var parsedDate = parseDate(value, previousDate);
+
+      if (!isNaN(parsedDate) && timezone) {
+        parsedDate = convertTimezoneToLocal(parsedDate, timezone);
+      }
+      return parsedDate;
+    }
+
+    function formatter(value, timezone) {
+      var targetFormat = format;
+
+      if (isTimeType && isString(ctrl.$options.getOption('timeSecondsFormat'))) {
+        targetFormat = format
+          .replace('ss.sss', ctrl.$options.getOption('timeSecondsFormat'))
+          .replace(/:$/, '');
+      }
+
+      var formatted =  $filter('date')(value, targetFormat, timezone);
+
+      if (isTimeType && ctrl.$options.getOption('timeStripZeroSeconds')) {
+        formatted = formatted.replace(/(?::00)?(?:\.000)?$/, '');
+      }
+
+      return formatted;
+    }
+  };
+}
+
+function badInputChecker(scope, element, attr, ctrl, parserName) {
+  var node = element[0];
+  var nativeValidation = ctrl.$$hasNativeValidators = isObject(node.validity);
+  if (nativeValidation) {
+    ctrl.$parsers.push(function(value) {
+      var validity = element.prop(VALIDITY_STATE_PROPERTY) || {};
+      if (validity.badInput || validity.typeMismatch) {
+        ctrl.$$parserName = parserName;
+        return undefined;
+      }
+
+      return value;
+    });
+  }
+}
+
+function numberFormatterParser(ctrl) {
+  ctrl.$parsers.push(function(value) {
+    if (ctrl.$isEmpty(value))      return null;
+    if (NUMBER_REGEXP.test(value)) return parseFloat(value);
+
+    ctrl.$$parserName = 'number';
+    return undefined;
+  });
+
+  ctrl.$formatters.push(function(value) {
+    if (!ctrl.$isEmpty(value)) {
+      if (!isNumber(value)) {
+        throw ngModelMinErr('numfmt', 'Expected `{0}` to be a number', value);
+      }
+      value = value.toString();
+    }
+    return value;
+  });
+}
+
+function parseNumberAttrVal(val) {
+  if (isDefined(val) && !isNumber(val)) {
+    val = parseFloat(val);
+  }
+  return !isNumberNaN(val) ? val : undefined;
+}
+
+function isNumberInteger(num) {
+  // See http://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript#14794066
+  // (minus the assumption that `num` is a number)
+
+  // eslint-disable-next-line no-bitwise
+  return (num | 0) === num;
+}
+
+function countDecimals(num) {
+  var numString = num.toString();
+  var decimalSymbolIndex = numString.indexOf('.');
+
+  if (decimalSymbolIndex === -1) {
+    if (-1 < num && num < 1) {
+      // It may be in the exponential notation format (`1e-X`)
+      var match = /e-(\d+)$/.exec(numString);
+
+      if (match) {
+        return Number(match[1]);
+      }
+    }
+
+    return 0;
+  }
+
+  return numString.length - decimalSymbolIndex - 1;
+}
+
+function isValidForStep(viewValue, stepBase, step) {
+  // At this point `stepBase` and `step` are expected to be non-NaN values
+  // and `viewValue` is expected to be a valid stringified number.
+  var value = Number(viewValue);
+
+  var isNonIntegerValue = !isNumberInteger(value);
+  var isNonIntegerStepBase = !isNumberInteger(stepBase);
+  var isNonIntegerStep = !isNumberInteger(step);
+
+  // Due to limitations in Floating Point Arithmetic (e.g. `0.3 - 0.2 !== 0.1` or
+  // `0.5 % 0.1 !== 0`), we need to convert all numbers to integers.
+  if (isNonIntegerValue || isNonIntegerStepBase || isNonIntegerStep) {
+    var valueDecimals = isNonIntegerValue ? countDecimals(value) : 0;
+    var stepBaseDecimals = isNonIntegerStepBase ? countDecimals(stepBase) : 0;
+    var stepDecimals = isNonIntegerStep ? countDecimals(step) : 0;
+
+    var decimalCount = Math.max(valueDecimals, stepBaseDecimals, stepDecimals);
+    var multiplier = Math.pow(10, decimalCount);
+
+    value = value * multiplier;
+    stepBase = stepBase * multiplier;
+    step = step * multiplier;
+
+    if (isNonIntegerValue) value = Math.round(value);
+    if (isNonIntegerStepBase) stepBase = Math.round(stepBase);
+    if (isNonIntegerStep) step = Math.round(step);
+  }
+
+  return (value - stepBase) % step === 0;
+}
+
+function numberInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {
+  badInputChecker(scope, element, attr, ctrl, 'number');
+  numberFormatterParser(ctrl);
+  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+
+  var parsedMinVal;
+
+  if (isDefined(attr.min) || attr.ngMin) {
+    var minVal = attr.min || $parse(attr.ngMin)(scope);
+    parsedMinVal = parseNumberAttrVal(minVal);
+
+    ctrl.$validators.min = function(modelValue, viewValue) {
+      return ctrl.$isEmpty(viewValue) || isUndefined(parsedMinVal) || viewValue >= parsedMinVal;
+    };
+
+    attr.$observe('min', function(val) {
+      if (val !== minVal) {
+        parsedMinVal = parseNumberAttrVal(val);
+        minVal = val;
+        // TODO(matsko): implement validateLater to reduce number of validations
+        ctrl.$validate();
+      }
+    });
+  }
+
+  if (isDefined(attr.max) || attr.ngMax) {
+    var maxVal = attr.max || $parse(attr.ngMax)(scope);
+    var parsedMaxVal = parseNumberAttrVal(maxVal);
+
+    ctrl.$validators.max = function(modelValue, viewValue) {
+      return ctrl.$isEmpty(viewValue) || isUndefined(parsedMaxVal) || viewValue <= parsedMaxVal;
+    };
+
+    attr.$observe('max', function(val) {
+      if (val !== maxVal) {
+        parsedMaxVal = parseNumberAttrVal(val);
+        maxVal = val;
+        // TODO(matsko): implement validateLater to reduce number of validations
+        ctrl.$validate();
+      }
+    });
+  }
+
+  if (isDefined(attr.step) || attr.ngStep) {
+    var stepVal = attr.step || $parse(attr.ngStep)(scope);
+    var parsedStepVal = parseNumberAttrVal(stepVal);
+
+    ctrl.$validators.step = function(modelValue, viewValue) {
+      return ctrl.$isEmpty(viewValue) || isUndefined(parsedStepVal) ||
+        isValidForStep(viewValue, parsedMinVal || 0, parsedStepVal);
+    };
+
+    attr.$observe('step', function(val) {
+      // TODO(matsko): implement validateLater to reduce number of validations
+      if (val !== stepVal) {
+        parsedStepVal = parseNumberAttrVal(val);
+        stepVal = val;
+        ctrl.$validate();
+      }
+
+    });
+
+  }
+}
+
+function rangeInputType(scope, element, attr, ctrl, $sniffer, $browser) {
+  badInputChecker(scope, element, attr, ctrl, 'range');
+  numberFormatterParser(ctrl);
+  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+
+  var supportsRange = ctrl.$$hasNativeValidators && element[0].type === 'range',
+      minVal = supportsRange ? 0 : undefined,
+      maxVal = supportsRange ? 100 : undefined,
+      stepVal = supportsRange ? 1 : undefined,
+      validity = element[0].validity,
+      hasMinAttr = isDefined(attr.min),
+      hasMaxAttr = isDefined(attr.max),
+      hasStepAttr = isDefined(attr.step);
+
+  var originalRender = ctrl.$render;
+
+  ctrl.$render = supportsRange && isDefined(validity.rangeUnderflow) && isDefined(validity.rangeOverflow) ?
+    //Browsers that implement range will set these values automatically, but reading the adjusted values after
+    //$render would cause the min / max validators to be applied with the wrong value
+    function rangeRender() {
+      originalRender();
+      ctrl.$setViewValue(element.val());
+    } :
+    originalRender;
+
+  if (hasMinAttr) {
+    minVal = parseNumberAttrVal(attr.min);
+
+    ctrl.$validators.min = supportsRange ?
+      // Since all browsers set the input to a valid value, we don't need to check validity
+      function noopMinValidator() { return true; } :
+      // non-support browsers validate the min val
+      function minValidator(modelValue, viewValue) {
+        return ctrl.$isEmpty(viewValue) || isUndefined(minVal) || viewValue >= minVal;
+      };
+
+    setInitialValueAndObserver('min', minChange);
+  }
+
+  if (hasMaxAttr) {
+    maxVal = parseNumberAttrVal(attr.max);
+
+    ctrl.$validators.max = supportsRange ?
+      // Since all browsers set the input to a valid value, we don't need to check validity
+      function noopMaxValidator() { return true; } :
+      // non-support browsers validate the max val
+      function maxValidator(modelValue, viewValue) {
+        return ctrl.$isEmpty(viewValue) || isUndefined(maxVal) || viewValue <= maxVal;
+      };
+
+    setInitialValueAndObserver('max', maxChange);
+  }
+
+  if (hasStepAttr) {
+    stepVal = parseNumberAttrVal(attr.step);
+
+    ctrl.$validators.step = supportsRange ?
+      function nativeStepValidator() {
+        // Currently, only FF implements the spec on step change correctly (i.e. adjusting the
+        // input element value to a valid value). It's possible that other browsers set the stepMismatch
+        // validity error instead, so we can at least report an error in that case.
+        return !validity.stepMismatch;
+      } :
+      // ngStep doesn't set the setp attr, so the browser doesn't adjust the input value as setting step would
+      function stepValidator(modelValue, viewValue) {
+        return ctrl.$isEmpty(viewValue) || isUndefined(stepVal) ||
+               isValidForStep(viewValue, minVal || 0, stepVal);
+      };
+
+    setInitialValueAndObserver('step', stepChange);
+  }
+
+  function setInitialValueAndObserver(htmlAttrName, changeFn) {
+    // interpolated attributes set the attribute value only after a digest, but we need the
+    // attribute value when the input is first rendered, so that the browser can adjust the
+    // input value based on the min/max value
+    element.attr(htmlAttrName, attr[htmlAttrName]);
+    var oldVal = attr[htmlAttrName];
+    attr.$observe(htmlAttrName, function wrappedObserver(val) {
+      if (val !== oldVal) {
+        oldVal = val;
+        changeFn(val);
+      }
+    });
+  }
+
+  function minChange(val) {
+    minVal = parseNumberAttrVal(val);
+    // ignore changes before model is initialized
+    if (isNumberNaN(ctrl.$modelValue)) {
+      return;
+    }
+
+    if (supportsRange) {
+      var elVal = element.val();
+      // IE11 doesn't set the el val correctly if the minVal is greater than the element value
+      if (minVal > elVal) {
+        elVal = minVal;
+        element.val(elVal);
+      }
+      ctrl.$setViewValue(elVal);
+    } else {
+      // TODO(matsko): implement validateLater to reduce number of validations
+      ctrl.$validate();
+    }
+  }
+
+  function maxChange(val) {
+    maxVal = parseNumberAttrVal(val);
+    // ignore changes before model is initialized
+    if (isNumberNaN(ctrl.$modelValue)) {
+      return;
+    }
+
+    if (supportsRange) {
+      var elVal = element.val();
+      // IE11 doesn't set the el val correctly if the maxVal is less than the element value
+      if (maxVal < elVal) {
+        element.val(maxVal);
+        // IE11 and Chrome don't set the value to the minVal when max < min
+        elVal = maxVal < minVal ? minVal : maxVal;
+      }
+      ctrl.$setViewValue(elVal);
+    } else {
+      // TODO(matsko): implement validateLater to reduce number of validations
+      ctrl.$validate();
+    }
+  }
+
+  function stepChange(val) {
+    stepVal = parseNumberAttrVal(val);
+    // ignore changes before model is initialized
+    if (isNumberNaN(ctrl.$modelValue)) {
+      return;
+    }
+
+    // Some browsers don't adjust the input value correctly, but set the stepMismatch error
+    if (!supportsRange) {
+      // TODO(matsko): implement validateLater to reduce number of validations
+      ctrl.$validate();
+    } else if (ctrl.$viewValue !== element.val()) {
+      ctrl.$setViewValue(element.val());
+    }
+  }
+}
+
+function urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {
+  // Note: no badInputChecker here by purpose as `url` is only a validation
+  // in browsers, i.e. we can always read out input.value even if it is not valid!
+  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+  stringBasedInputType(ctrl);
+
+  ctrl.$validators.url = function(modelValue, viewValue) {
+    var value = modelValue || viewValue;
+    return ctrl.$isEmpty(value) || URL_REGEXP.test(value);
+  };
+}
+
+function emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {
+  // Note: no badInputChecker here by purpose as `url` is only a validation
+  // in browsers, i.e. we can always read out input.value even if it is not valid!
+  baseInputType(scope, element, attr, ctrl, $sniffer, $browser);
+  stringBasedInputType(ctrl);
+
+  ctrl.$validators.email = function(modelValue, viewValue) {
+    var value = modelValue || viewValue;
+    return ctrl.$isEmpty(value) || EMAIL_REGEXP.test(value);
+  };
+}
+
+function radioInputType(scope, element, attr, ctrl) {
+  var doTrim = !attr.ngTrim || trim(attr.ngTrim) !== 'false';
+  // make the name unique, if not defined
+  if (isUndefined(attr.name)) {
+    element.attr('name', nextUid());
+  }
+
+  var listener = function(ev) {
+    var value;
+    if (element[0].checked) {
+      value = attr.value;
+      if (doTrim) {
+        value = trim(value);
+      }
+      ctrl.$setViewValue(value, ev && ev.type);
+    }
+  };
+
+  element.on('change', listener);
+
+  ctrl.$render = function() {
+    var value = attr.value;
+    if (doTrim) {
+      value = trim(value);
+    }
+    element[0].checked = (value === ctrl.$viewValue);
+  };
+
+  attr.$observe('value', ctrl.$render);
+}
+
+function parseConstantExpr($parse, context, name, expression, fallback) {
+  var parseFn;
+  if (isDefined(expression)) {
+    parseFn = $parse(expression);
+    if (!parseFn.constant) {
+      throw ngModelMinErr('constexpr', 'Expected constant expression for `{0}`, but saw ' +
+                                   '`{1}`.', name, expression);
+    }
+    return parseFn(context);
+  }
+  return fallback;
+}
+
+function checkboxInputType(scope, element, attr, ctrl, $sniffer, $browser, $filter, $parse) {
+  var trueValue = parseConstantExpr($parse, scope, 'ngTrueValue', attr.ngTrueValue, true);
+  var falseValue = parseConstantExpr($parse, scope, 'ngFalseValue', attr.ngFalseValue, false);
+
+  var listener = function(ev) {
+    ctrl.$setViewValue(element[0].checked, ev && ev.type);
+  };
+
+  element.on('change', listener);
+
+  ctrl.$render = function() {
+    element[0].checked = ctrl.$viewValue;
+  };
+
+  // Override the standard `$isEmpty` because the $viewValue of an empty checkbox is always set to `false`
+  // This is because of the parser below, which compares the `$modelValue` with `trueValue` to convert
+  // it to a boolean.
+  ctrl.$isEmpty = function(value) {
+    return value === false;
+  };
+
+  ctrl.$formatters.push(function(value) {
+    return equals(value, trueValue);
+  });
+
+  ctrl.$parsers.push(function(value) {
+    return value ? trueValue : falseValue;
+  });
+}
+
+
+/**
+ * @ngdoc directive
+ * @name textarea
+ * @restrict E
+ *
+ * @description
+ * HTML textarea element control with AngularJS data-binding. The data-binding and validation
+ * properties of this element are exactly the same as those of the
+ * {@link ng.directive:input input element}.
+ *
+ * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+ * @param {string=} name Property name of the form under which the control is published.
+ * @param {string=} required Sets `required` validation error key if the value is not entered.
+ * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+ *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+ *    `required` when you want to data-bind to the `required` attribute.
+ * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+ *    minlength.
+ * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+ *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
+ *    length.
+ * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+ *    does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+ *    If the expression evaluates to a RegExp object, then this is used directly.
+ *    If the expression evaluates to a string, then it will be converted to a RegExp
+ *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+ *    `new RegExp('^abc$')`.<br />
+ *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+ *    start at the index of the last search's match, thus not taking the whole input value into
+ *    account.
+ * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+ *    interaction with the input element.
+ * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
+ *
+ * @knownIssue
+ *
+ * When specifying the `placeholder` attribute of `<textarea>`, Internet Explorer will temporarily
+ * insert the placeholder value as the textarea's content. If the placeholder value contains
+ * interpolation (`{{ ... }}`), an error will be logged in the console when AngularJS tries to update
+ * the value of the by-then-removed text node. This doesn't affect the functionality of the
+ * textarea, but can be undesirable.
+ *
+ * You can work around this Internet Explorer issue by using `ng-attr-placeholder` instead of
+ * `placeholder` on textareas, whenever you need interpolation in the placeholder value. You can
+ * find more details on `ngAttr` in the
+ * [Interpolation](guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes) section of the
+ * Developer Guide.
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name input
+ * @restrict E
+ *
+ * @description
+ * HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,
+ * input state control, and validation.
+ * Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.
+ *
+ * <div class="alert alert-warning">
+ * **Note:** Not every feature offered is available for all input types.
+ * Specifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.
+ * </div>
+ *
+ * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+ * @param {string=} name Property name of the form under which the control is published.
+ * @param {string=} required Sets `required` validation error key if the value is not entered.
+ * @param {boolean=} ngRequired Sets `required` attribute if set to true
+ * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than
+ *    minlength.
+ * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than
+ *    maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any
+ *    length.
+ * @param {string=} ngPattern Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}
+ *    value does not match a RegExp found by evaluating the AngularJS expression given in the attribute value.
+ *    If the expression evaluates to a RegExp object, then this is used directly.
+ *    If the expression evaluates to a string, then it will be converted to a RegExp
+ *    after wrapping it in `^` and `$` characters. For instance, `"abc"` will be converted to
+ *    `new RegExp('^abc$')`.<br />
+ *    **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+ *    start at the index of the last search's match, thus not taking the whole input value into
+ *    account.
+ * @param {string=} ngChange AngularJS expression to be executed when input changes due to user
+ *    interaction with the input element.
+ * @param {boolean=} [ngTrim=true] If set to false AngularJS will not automatically trim the input.
+ *    This parameter is ignored for input[type=password] controls, which will never trim the
+ *    input.
+ *
+ * @example
+    <example name="input-directive" module="inputExample">
+      <file name="index.html">
+       <script>
+          angular.module('inputExample', [])
+            .controller('ExampleController', ['$scope', function($scope) {
+              $scope.user = {name: 'guest', last: 'visitor'};
+            }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <form name="myForm">
+           <label>
+              User name:
+              <input type="text" name="userName" ng-model="user.name" required>
+           </label>
+           <div role="alert">
+             <span class="error" ng-show="myForm.userName.$error.required">
+              Required!</span>
+           </div>
+           <label>
+              Last name:
+              <input type="text" name="lastName" ng-model="user.last"
+              ng-minlength="3" ng-maxlength="10">
+           </label>
+           <div role="alert">
+             <span class="error" ng-show="myForm.lastName.$error.minlength">
+               Too short!</span>
+             <span class="error" ng-show="myForm.lastName.$error.maxlength">
+               Too long!</span>
+           </div>
+         </form>
+         <hr>
+         <tt>user = {{user}}</tt><br/>
+         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br/>
+         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br/>
+         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br/>
+         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br/>
+         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br/>
+         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br/>
+       </div>
+      </file>
+      <file name="protractor.js" type="protractor">
+        var user = element(by.exactBinding('user'));
+        var userNameValid = element(by.binding('myForm.userName.$valid'));
+        var lastNameValid = element(by.binding('myForm.lastName.$valid'));
+        var lastNameError = element(by.binding('myForm.lastName.$error'));
+        var formValid = element(by.binding('myForm.$valid'));
+        var userNameInput = element(by.model('user.name'));
+        var userLastInput = element(by.model('user.last'));
+
+        it('should initialize to model', function() {
+          expect(user.getText()).toContain('{"name":"guest","last":"visitor"}');
+          expect(userNameValid.getText()).toContain('true');
+          expect(formValid.getText()).toContain('true');
+        });
+
+        it('should be invalid if empty when required', function() {
+          userNameInput.clear();
+          userNameInput.sendKeys('');
+
+          expect(user.getText()).toContain('{"last":"visitor"}');
+          expect(userNameValid.getText()).toContain('false');
+          expect(formValid.getText()).toContain('false');
+        });
+
+        it('should be valid if empty when min length is set', function() {
+          userLastInput.clear();
+          userLastInput.sendKeys('');
+
+          expect(user.getText()).toContain('{"name":"guest","last":""}');
+          expect(lastNameValid.getText()).toContain('true');
+          expect(formValid.getText()).toContain('true');
+        });
+
+        it('should be invalid if less than required min length', function() {
+          userLastInput.clear();
+          userLastInput.sendKeys('xx');
+
+          expect(user.getText()).toContain('{"name":"guest"}');
+          expect(lastNameValid.getText()).toContain('false');
+          expect(lastNameError.getText()).toContain('minlength');
+          expect(formValid.getText()).toContain('false');
+        });
+
+        it('should be invalid if longer than max length', function() {
+          userLastInput.clear();
+          userLastInput.sendKeys('some ridiculously long name');
+
+          expect(user.getText()).toContain('{"name":"guest"}');
+          expect(lastNameValid.getText()).toContain('false');
+          expect(lastNameError.getText()).toContain('maxlength');
+          expect(formValid.getText()).toContain('false');
+        });
+      </file>
+    </example>
+ */
+var inputDirective = ['$browser', '$sniffer', '$filter', '$parse',
+    function($browser, $sniffer, $filter, $parse) {
+  return {
+    restrict: 'E',
+    require: ['?ngModel'],
+    link: {
+      pre: function(scope, element, attr, ctrls) {
+        if (ctrls[0]) {
+          (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrls[0], $sniffer,
+                                                              $browser, $filter, $parse);
+        }
+      }
+    }
+  };
+}];
+
+
+var hiddenInputBrowserCacheDirective = function() {
+  var valueProperty = {
+    configurable: true,
+    enumerable: false,
+    get: function() {
+      return this.getAttribute('value') || '';
+    },
+    set: function(val) {
+      this.setAttribute('value', val);
+    }
+  };
+
+  return {
+    restrict: 'E',
+    priority: 200,
+    compile: function(_, attr) {
+      if (lowercase(attr.type) !== 'hidden') {
+        return;
+      }
+
+      return {
+        pre: function(scope, element, attr, ctrls) {
+          var node = element[0];
+
+          // Support: Edge
+          // Moving the DOM around prevents autofillling
+          if (node.parentNode) {
+            node.parentNode.insertBefore(node, node.nextSibling);
+          }
+
+          // Support: FF, IE
+          // Avoiding direct assignment to .value prevents autofillling
+          if (Object.defineProperty) {
+            Object.defineProperty(node, 'value', valueProperty);
+          }
+        }
+      };
+    }
+  };
+};
+
+
+
+var CONSTANT_VALUE_REGEXP = /^(true|false|\d+)$/;
+/**
+ * @ngdoc directive
+ * @name ngValue
+ * @restrict A
+ * @priority 100
+ *
+ * @description
+ * Binds the given expression to the value of the element.
+ *
+ * It is mainly used on {@link input[radio] `input[radio]`} and option elements,
+ * so that when the element is selected, the {@link ngModel `ngModel`} of that element (or its
+ * {@link select `select`} parent element) is set to the bound value. It is especially useful
+ * for dynamically generated lists using {@link ngRepeat `ngRepeat`}, as shown below.
+ *
+ * It can also be used to achieve one-way binding of a given expression to an input element
+ * such as an `input[text]` or a `textarea`, when that element does not use ngModel.
+ *
+ * @element ANY
+ * @param {string=} ngValue AngularJS expression, whose value will be bound to the `value` attribute
+ * and `value` property of the element.
+ *
+ * @example
+    <example name="ngValue-directive" module="valueExample">
+      <file name="index.html">
+       <script>
+          angular.module('valueExample', [])
+            .controller('ExampleController', ['$scope', function($scope) {
+              $scope.names = ['pizza', 'unicorns', 'robots'];
+              $scope.my = { favorite: 'unicorns' };
+            }]);
+       </script>
+        <form ng-controller="ExampleController">
+          <h2>Which is your favorite?</h2>
+            <label ng-repeat="name in names" for="{{name}}">
+              {{name}}
+              <input type="radio"
+                     ng-model="my.favorite"
+                     ng-value="name"
+                     id="{{name}}"
+                     name="favorite">
+            </label>
+          <div>You chose {{my.favorite}}</div>
+        </form>
+      </file>
+      <file name="protractor.js" type="protractor">
+        var favorite = element(by.binding('my.favorite'));
+
+        it('should initialize to model', function() {
+          expect(favorite.getText()).toContain('unicorns');
+        });
+        it('should bind the values to the inputs', function() {
+          element.all(by.model('my.favorite')).get(0).click();
+          expect(favorite.getText()).toContain('pizza');
+        });
+      </file>
+    </example>
+ */
+var ngValueDirective = function() {
+  /**
+   *  inputs use the value attribute as their default value if the value property is not set.
+   *  Once the value property has been set (by adding input), it will not react to changes to
+   *  the value attribute anymore. Setting both attribute and property fixes this behavior, and
+   *  makes it possible to use ngValue as a sort of one-way bind.
+   */
+  function updateElementValue(element, attr, value) {
+    // Support: IE9 only
+    // In IE9 values are converted to string (e.g. `input.value = null` results in `input.value === 'null'`).
+    var propValue = isDefined(value) ? value : (msie === 9) ? '' : null;
+    element.prop('value', propValue);
+    attr.$set('value', value);
+  }
+
+  return {
+    restrict: 'A',
+    priority: 100,
+    compile: function(tpl, tplAttr) {
+      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {
+        return function ngValueConstantLink(scope, elm, attr) {
+          var value = scope.$eval(attr.ngValue);
+          updateElementValue(elm, attr, value);
+        };
+      } else {
+        return function ngValueLink(scope, elm, attr) {
+          scope.$watch(attr.ngValue, function valueWatchAction(value) {
+            updateElementValue(elm, attr, value);
+          });
+        };
+      }
+    }
+  };
+};
+
+/**
+ * @ngdoc directive
+ * @name ngBind
+ * @restrict AC
+ *
+ * @description
+ * The `ngBind` attribute tells AngularJS to replace the text content of the specified HTML element
+ * with the value of a given expression, and to update the text content when the value of that
+ * expression changes.
+ *
+ * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like
+ * `{{ expression }}` which is similar but less verbose.
+ *
+ * It is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily
+ * displayed by the browser in its raw state before AngularJS compiles it. Since `ngBind` is an
+ * element attribute, it makes the bindings invisible to the user while the page is loading.
+ *
+ * An alternative solution to this problem would be using the
+ * {@link ng.directive:ngCloak ngCloak} directive.
+ *
+ *
+ * @element ANY
+ * @param {expression} ngBind {@link guide/expression Expression} to evaluate.
+ *
+ * @example
+ * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.
+   <example module="bindExample" name="ng-bind">
+     <file name="index.html">
+       <script>
+         angular.module('bindExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.name = 'Whirled';
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+         <label>Enter name: <input type="text" ng-model="name"></label><br>
+         Hello <span ng-bind="name"></span>!
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-bind', function() {
+         var nameInput = element(by.model('name'));
+
+         expect(element(by.binding('name')).getText()).toBe('Whirled');
+         nameInput.clear();
+         nameInput.sendKeys('world');
+         expect(element(by.binding('name')).getText()).toBe('world');
+       });
+     </file>
+   </example>
+ */
+var ngBindDirective = ['$compile', function($compile) {
+  return {
+    restrict: 'AC',
+    compile: function ngBindCompile(templateElement) {
+      $compile.$$addBindingClass(templateElement);
+      return function ngBindLink(scope, element, attr) {
+        $compile.$$addBindingInfo(element, attr.ngBind);
+        element = element[0];
+        scope.$watch(attr.ngBind, function ngBindWatchAction(value) {
+          element.textContent = stringify(value);
+        });
+      };
+    }
+  };
+}];
+
+
+/**
+ * @ngdoc directive
+ * @name ngBindTemplate
+ *
+ * @description
+ * The `ngBindTemplate` directive specifies that the element
+ * text content should be replaced with the interpolation of the template
+ * in the `ngBindTemplate` attribute.
+ * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`
+ * expressions. This directive is needed since some HTML elements
+ * (such as TITLE and OPTION) cannot contain SPAN elements.
+ *
+ * @element ANY
+ * @param {string} ngBindTemplate template of form
+ *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.
+ *
+ * @example
+ * Try it here: enter text in text box and watch the greeting change.
+   <example module="bindExample" name="ng-bind-template">
+     <file name="index.html">
+       <script>
+         angular.module('bindExample', [])
+           .controller('ExampleController', ['$scope', function($scope) {
+             $scope.salutation = 'Hello';
+             $scope.name = 'World';
+           }]);
+       </script>
+       <div ng-controller="ExampleController">
+        <label>Salutation: <input type="text" ng-model="salutation"></label><br>
+        <label>Name: <input type="text" ng-model="name"></label><br>
+        <pre ng-bind-template="{{salutation}} {{name}}!"></pre>
+       </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-bind', function() {
+         var salutationElem = element(by.binding('salutation'));
+         var salutationInput = element(by.model('salutation'));
+         var nameInput = element(by.model('name'));
+
+         expect(salutationElem.getText()).toBe('Hello World!');
+
+         salutationInput.clear();
+         salutationInput.sendKeys('Greetings');
+         nameInput.clear();
+         nameInput.sendKeys('user');
+
+         expect(salutationElem.getText()).toBe('Greetings user!');
+       });
+     </file>
+   </example>
+ */
+var ngBindTemplateDirective = ['$interpolate', '$compile', function($interpolate, $compile) {
+  return {
+    compile: function ngBindTemplateCompile(templateElement) {
+      $compile.$$addBindingClass(templateElement);
+      return function ngBindTemplateLink(scope, element, attr) {
+        var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));
+        $compile.$$addBindingInfo(element, interpolateFn.expressions);
+        element = element[0];
+        attr.$observe('ngBindTemplate', function(value) {
+          element.textContent = isUndefined(value) ? '' : value;
+        });
+      };
+    }
+  };
+}];
+
+
+/**
+ * @ngdoc directive
+ * @name ngBindHtml
+ *
+ * @description
+ * Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default,
+ * the resulting HTML content will be sanitized using the {@link ngSanitize.$sanitize $sanitize} service.
+ * To utilize this functionality, ensure that `$sanitize` is available, for example, by including {@link
+ * ngSanitize} in your module's dependencies (not in core AngularJS). In order to use {@link ngSanitize}
+ * in your module's dependencies, you need to include "angular-sanitize.js" in your application.
+ *
+ * You may also bypass sanitization for values you know are safe. To do so, bind to
+ * an explicitly trusted value via {@link ng.$sce#trustAsHtml $sce.trustAsHtml}.  See the example
+ * under {@link ng.$sce#show-me-an-example-using-sce- Strict Contextual Escaping (SCE)}.
+ *
+ * Note: If a `$sanitize` service is unavailable and the bound value isn't explicitly trusted, you
+ * will have an exception (instead of an exploit.)
+ *
+ * @element ANY
+ * @param {expression} ngBindHtml {@link guide/expression Expression} to evaluate.
+ *
+ * @example
+
+   <example module="bindHtmlExample" deps="angular-sanitize.js" name="ng-bind-html">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+        <p ng-bind-html="myHTML"></p>
+       </div>
+     </file>
+
+     <file name="script.js">
+       angular.module('bindHtmlExample', ['ngSanitize'])
+         .controller('ExampleController', ['$scope', function($scope) {
+           $scope.myHTML =
+              'I am an <code>HTML</code>string with ' +
+              '<a href="#">links!</a> and other <em>stuff</em>';
+         }]);
+     </file>
+
+     <file name="protractor.js" type="protractor">
+       it('should check ng-bind-html', function() {
+         expect(element(by.binding('myHTML')).getText()).toBe(
+             'I am an HTMLstring with links! and other stuff');
+       });
+     </file>
+   </example>
+ */
+var ngBindHtmlDirective = ['$sce', '$parse', '$compile', function($sce, $parse, $compile) {
+  return {
+    restrict: 'A',
+    compile: function ngBindHtmlCompile(tElement, tAttrs) {
+      var ngBindHtmlGetter = $parse(tAttrs.ngBindHtml);
+      var ngBindHtmlWatch = $parse(tAttrs.ngBindHtml, function sceValueOf(val) {
+        // Unwrap the value to compare the actual inner safe value, not the wrapper object.
+        return $sce.valueOf(val);
+      });
+      $compile.$$addBindingClass(tElement);
+
+      return function ngBindHtmlLink(scope, element, attr) {
+        $compile.$$addBindingInfo(element, attr.ngBindHtml);
+
+        scope.$watch(ngBindHtmlWatch, function ngBindHtmlWatchAction() {
+          // The watched value is the unwrapped value. To avoid re-escaping, use the direct getter.
+          var value = ngBindHtmlGetter(scope);
+          element.html($sce.getTrustedHtml(value) || '');
+        });
+      };
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngChange
+ * @restrict A
+ *
+ * @description
+ * Evaluate the given expression when the user changes the input.
+ * The expression is evaluated immediately, unlike the JavaScript onchange event
+ * which only triggers at the end of a change (usually, when the user leaves the
+ * form element or presses the return key).
+ *
+ * The `ngChange` expression is only evaluated when a change in the input value causes
+ * a new value to be committed to the model.
+ *
+ * It will not be evaluated:
+ * * if the value returned from the `$parsers` transformation pipeline has not changed
+ * * if the input has continued to be invalid since the model will stay `null`
+ * * if the model is changed programmatically and not by a change to the input value
+ *
+ *
+ * Note, this directive requires `ngModel` to be present.
+ *
+ * @element ANY
+ * @param {expression} ngChange {@link guide/expression Expression} to evaluate upon change
+ * in input value.
+ *
+ * @example
+ * <example name="ngChange-directive" module="changeExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('changeExample', [])
+ *         .controller('ExampleController', ['$scope', function($scope) {
+ *           $scope.counter = 0;
+ *           $scope.change = function() {
+ *             $scope.counter++;
+ *           };
+ *         }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <input type="checkbox" ng-model="confirmed" ng-change="change()" id="ng-change-example1" />
+ *       <input type="checkbox" ng-model="confirmed" id="ng-change-example2" />
+ *       <label for="ng-change-example2">Confirmed</label><br />
+ *       <tt>debug = {{confirmed}}</tt><br/>
+ *       <tt>counter = {{counter}}</tt><br/>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     var counter = element(by.binding('counter'));
+ *     var debug = element(by.binding('confirmed'));
+ *
+ *     it('should evaluate the expression if changing from view', function() {
+ *       expect(counter.getText()).toContain('0');
+ *
+ *       element(by.id('ng-change-example1')).click();
+ *
+ *       expect(counter.getText()).toContain('1');
+ *       expect(debug.getText()).toContain('true');
+ *     });
+ *
+ *     it('should not evaluate the expression if changing from model', function() {
+ *       element(by.id('ng-change-example2')).click();
+
+ *       expect(counter.getText()).toContain('0');
+ *       expect(debug.getText()).toContain('true');
+ *     });
+ *   </file>
+ * </example>
+ */
+var ngChangeDirective = valueFn({
+  restrict: 'A',
+  require: 'ngModel',
+  link: function(scope, element, attr, ctrl) {
+    ctrl.$viewChangeListeners.push(function() {
+      scope.$eval(attr.ngChange);
+    });
+  }
+});
+
+/* exported
+  ngClassDirective,
+  ngClassEvenDirective,
+  ngClassOddDirective
+*/
+
+function classDirective(name, selector) {
+  name = 'ngClass' + name;
+  var indexWatchExpression;
+
+  return ['$parse', function($parse) {
+    return {
+      restrict: 'AC',
+      link: function(scope, element, attr) {
+        var classCounts = element.data('$classCounts');
+        var oldModulo = true;
+        var oldClassString;
+
+        if (!classCounts) {
+          // Use createMap() to prevent class assumptions involving property
+          // names in Object.prototype
+          classCounts = createMap();
+          element.data('$classCounts', classCounts);
+        }
+
+        if (name !== 'ngClass') {
+          if (!indexWatchExpression) {
+            indexWatchExpression = $parse('$index', function moduloTwo($index) {
+              // eslint-disable-next-line no-bitwise
+              return $index & 1;
+            });
+          }
+
+          scope.$watch(indexWatchExpression, ngClassIndexWatchAction);
+        }
+
+        scope.$watch($parse(attr[name], toClassString), ngClassWatchAction);
+
+        function addClasses(classString) {
+          classString = digestClassCounts(split(classString), 1);
+          attr.$addClass(classString);
+        }
+
+        function removeClasses(classString) {
+          classString = digestClassCounts(split(classString), -1);
+          attr.$removeClass(classString);
+        }
+
+        function updateClasses(oldClassString, newClassString) {
+          var oldClassArray = split(oldClassString);
+          var newClassArray = split(newClassString);
+
+          var toRemoveArray = arrayDifference(oldClassArray, newClassArray);
+          var toAddArray = arrayDifference(newClassArray, oldClassArray);
+
+          var toRemoveString = digestClassCounts(toRemoveArray, -1);
+          var toAddString = digestClassCounts(toAddArray, 1);
+
+          attr.$addClass(toAddString);
+          attr.$removeClass(toRemoveString);
+        }
+
+        function digestClassCounts(classArray, count) {
+          var classesToUpdate = [];
+
+          forEach(classArray, function(className) {
+            if (count > 0 || classCounts[className]) {
+              classCounts[className] = (classCounts[className] || 0) + count;
+              if (classCounts[className] === +(count > 0)) {
+                classesToUpdate.push(className);
+              }
+            }
+          });
+
+          return classesToUpdate.join(' ');
+        }
+
+        function ngClassIndexWatchAction(newModulo) {
+          // This watch-action should run before the `ngClassWatchAction()`, thus it
+          // adds/removes `oldClassString`. If the `ngClass` expression has changed as well, the
+          // `ngClassWatchAction()` will update the classes.
+          if (newModulo === selector) {
+            addClasses(oldClassString);
+          } else {
+            removeClasses(oldClassString);
+          }
+
+          oldModulo = newModulo;
+        }
+
+        function ngClassWatchAction(newClassString) {
+          if (oldModulo === selector) {
+            updateClasses(oldClassString, newClassString);
+          }
+
+          oldClassString = newClassString;
+        }
+      }
+    };
+  }];
+
+  // Helpers
+  function arrayDifference(tokens1, tokens2) {
+    if (!tokens1 || !tokens1.length) return [];
+    if (!tokens2 || !tokens2.length) return tokens1;
+
+    var values = [];
+
+    outer:
+    for (var i = 0; i < tokens1.length; i++) {
+      var token = tokens1[i];
+      for (var j = 0; j < tokens2.length; j++) {
+        if (token === tokens2[j]) continue outer;
+      }
+      values.push(token);
+    }
+
+    return values;
+  }
+
+  function split(classString) {
+    return classString && classString.split(' ');
+  }
+
+  function toClassString(classValue) {
+    if (!classValue) return classValue;
+
+    var classString = classValue;
+
+    if (isArray(classValue)) {
+      classString = classValue.map(toClassString).join(' ');
+    } else if (isObject(classValue)) {
+      classString = Object.keys(classValue).
+        filter(function(key) { return classValue[key]; }).
+        join(' ');
+    } else if (!isString(classValue)) {
+      classString = classValue + '';
+    }
+
+    return classString;
+  }
+}
+
+/**
+ * @ngdoc directive
+ * @name ngClass
+ * @restrict AC
+ * @element ANY
+ *
+ * @description
+ * The `ngClass` directive allows you to dynamically set CSS classes on an HTML element by databinding
+ * an expression that represents all classes to be added.
+ *
+ * The directive operates in three different ways, depending on which of three types the expression
+ * evaluates to:
+ *
+ * 1. If the expression evaluates to a string, the string should be one or more space-delimited class
+ * names.
+ *
+ * 2. If the expression evaluates to an object, then for each key-value pair of the
+ * object with a truthy value the corresponding key is used as a class name.
+ *
+ * 3. If the expression evaluates to an array, each element of the array should either be a string as in
+ * type 1 or an object as in type 2. This means that you can mix strings and objects together in an array
+ * to give you more control over what CSS classes appear. See the code below for an example of this.
+ *
+ *
+ * The directive won't add duplicate classes if a particular class was already set.
+ *
+ * When the expression changes, the previously added classes are removed and only then are the
+ * new classes added.
+ *
+ * @knownIssue
+ * You should not use {@link guide/interpolation interpolation} in the value of the `class`
+ * attribute, when using the `ngClass` directive on the same element.
+ * See {@link guide/interpolation#known-issues here} for more info.
+ *
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
+ * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
+ * | {@link ng.$animate#setClass setClass} | just before classes are added and classes are removed from the element at the same time |
+ *
+ * ### ngClass and pre-existing CSS3 Transitions/Animations
+   The ngClass directive still supports CSS3 Transitions/Animations even if they do not follow the ngAnimate CSS naming structure.
+   Upon animation ngAnimate will apply supplementary CSS classes to track the start and end of an animation, but this will not hinder
+   any pre-existing CSS transitions already on the element. To get an idea of what happens during a class-based animation, be sure
+   to view the step by step details of {@link $animate#addClass $animate.addClass} and
+   {@link $animate#removeClass $animate.removeClass}.
+ *
+ * @param {expression} ngClass {@link guide/expression Expression} to eval. The result
+ *   of the evaluation can be a string representing space delimited class
+ *   names, an array, or a map of class names to boolean values. In the case of a map, the
+ *   names of the properties whose values are truthy will be added as css classes to the
+ *   element.
+ *
+ * @example
+ * ### Basic
+   <example name="ng-class">
+     <file name="index.html">
+       <p ng-class="{strike: deleted, bold: important, 'has-error': error}">Map Syntax Example</p>
+       <label>
+          <input type="checkbox" ng-model="deleted">
+          deleted (apply "strike" class)
+       </label><br>
+       <label>
+          <input type="checkbox" ng-model="important">
+          important (apply "bold" class)
+       </label><br>
+       <label>
+          <input type="checkbox" ng-model="error">
+          error (apply "has-error" class)
+       </label>
+       <hr>
+       <p ng-class="style">Using String Syntax</p>
+       <input type="text" ng-model="style"
+              placeholder="Type: bold strike red" aria-label="Type: bold strike red">
+       <hr>
+       <p ng-class="[style1, style2, style3]">Using Array Syntax</p>
+       <input ng-model="style1"
+              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red"><br>
+       <input ng-model="style2"
+              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 2"><br>
+       <input ng-model="style3"
+              placeholder="Type: bold, strike or red" aria-label="Type: bold, strike or red 3"><br>
+       <hr>
+       <p ng-class="[style4, {orange: warning}]">Using Array and Map Syntax</p>
+       <input ng-model="style4" placeholder="Type: bold, strike" aria-label="Type: bold, strike"><br>
+       <label><input type="checkbox" ng-model="warning"> warning (apply "orange" class)</label>
+     </file>
+     <file name="style.css">
+       .strike {
+           text-decoration: line-through;
+       }
+       .bold {
+           font-weight: bold;
+       }
+       .red {
+           color: red;
+       }
+       .has-error {
+           color: red;
+           background-color: yellow;
+       }
+       .orange {
+           color: orange;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       var ps = element.all(by.css('p'));
+
+       it('should let you toggle the class', function() {
+
+         expect(ps.first().getAttribute('class')).not.toMatch(/bold/);
+         expect(ps.first().getAttribute('class')).not.toMatch(/has-error/);
+
+         element(by.model('important')).click();
+         expect(ps.first().getAttribute('class')).toMatch(/bold/);
+
+         element(by.model('error')).click();
+         expect(ps.first().getAttribute('class')).toMatch(/has-error/);
+       });
+
+       it('should let you toggle string example', function() {
+         expect(ps.get(1).getAttribute('class')).toBe('');
+         element(by.model('style')).clear();
+         element(by.model('style')).sendKeys('red');
+         expect(ps.get(1).getAttribute('class')).toBe('red');
+       });
+
+       it('array example should have 3 classes', function() {
+         expect(ps.get(2).getAttribute('class')).toBe('');
+         element(by.model('style1')).sendKeys('bold');
+         element(by.model('style2')).sendKeys('strike');
+         element(by.model('style3')).sendKeys('red');
+         expect(ps.get(2).getAttribute('class')).toBe('bold strike red');
+       });
+
+       it('array with map example should have 2 classes', function() {
+         expect(ps.last().getAttribute('class')).toBe('');
+         element(by.model('style4')).sendKeys('bold');
+         element(by.model('warning')).click();
+         expect(ps.last().getAttribute('class')).toBe('bold orange');
+       });
+     </file>
+   </example>
+
+   @example
+   ### Animations
+
+   The example below demonstrates how to perform animations using ngClass.
+
+   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class">
+     <file name="index.html">
+      <input id="setbtn" type="button" value="set" ng-click="myVar='my-class'">
+      <input id="clearbtn" type="button" value="clear" ng-click="myVar=''">
+      <br>
+      <span class="base-class" ng-class="myVar">Sample Text</span>
+     </file>
+     <file name="style.css">
+       .base-class {
+         transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
+       }
+
+       .base-class.my-class {
+         color: red;
+         font-size:3em;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-class', function() {
+         expect(element(by.css('.base-class')).getAttribute('class')).not.
+           toMatch(/my-class/);
+
+         element(by.id('setbtn')).click();
+
+         expect(element(by.css('.base-class')).getAttribute('class')).
+           toMatch(/my-class/);
+
+         element(by.id('clearbtn')).click();
+
+         expect(element(by.css('.base-class')).getAttribute('class')).not.
+           toMatch(/my-class/);
+       });
+     </file>
+   </example>
+ */
+var ngClassDirective = classDirective('', true);
+
+/**
+ * @ngdoc directive
+ * @name ngClassOdd
+ * @restrict AC
+ *
+ * @description
+ * The `ngClassOdd` and `ngClassEven` directives work exactly as
+ * {@link ng.directive:ngClass ngClass}, except they work in
+ * conjunction with `ngRepeat` and take effect only on odd (even) rows.
+ *
+ * This directive can be applied only within the scope of an
+ * {@link ng.directive:ngRepeat ngRepeat}.
+ *
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
+ * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
+ *
+ * @element ANY
+ * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result
+ *   of the evaluation can be a string representing space delimited class names or an array.
+ *
+ * @example
+   <example name="ng-class-odd">
+     <file name="index.html">
+        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
+          <li ng-repeat="name in names">
+           <span ng-class-odd="'odd'" ng-class-even="'even'">
+             {{name}}
+           </span>
+          </li>
+        </ol>
+     </file>
+     <file name="style.css">
+       .odd {
+         color: red;
+       }
+       .even {
+         color: blue;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-class-odd and ng-class-even', function() {
+         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
+           toMatch(/odd/);
+         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
+           toMatch(/even/);
+       });
+     </file>
+   </example>
+ *
+ * <hr />
+ * @example
+ * An example on how to implement animations using `ngClassOdd`:
+ *
+   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class-odd-animate">
+     <file name="index.html">
+       <div ng-init="items=['Item 3', 'Item 2', 'Item 1', 'Item 0']">
+         <button ng-click="items.unshift('Item ' + items.length)">Add item</button>
+         <hr />
+         <table>
+           <tr ng-repeat="item in items" ng-class-odd="'odd'">
+             <td>{{ item }}</td>
+           </tr>
+         </table>
+       </div>
+     </file>
+     <file name="style.css">
+       .odd {
+         background: rgba(255, 255, 0, 0.25);
+       }
+
+       .odd-add, .odd-remove {
+         transition: 1.5s;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should add new entries to the beginning of the list', function() {
+         var button = element(by.buttonText('Add item'));
+         var rows = element.all(by.repeater('item in items'));
+
+         expect(rows.count()).toBe(4);
+         expect(rows.get(0).getText()).toBe('Item 3');
+         expect(rows.get(1).getText()).toBe('Item 2');
+
+         button.click();
+
+         expect(rows.count()).toBe(5);
+         expect(rows.get(0).getText()).toBe('Item 4');
+         expect(rows.get(1).getText()).toBe('Item 3');
+       });
+
+       it('should add odd class to odd entries', function() {
+         var button = element(by.buttonText('Add item'));
+         var rows = element.all(by.repeater('item in items'));
+
+         expect(rows.get(0).getAttribute('class')).toMatch(/odd/);
+         expect(rows.get(1).getAttribute('class')).not.toMatch(/odd/);
+
+         button.click();
+
+         expect(rows.get(0).getAttribute('class')).toMatch(/odd/);
+         expect(rows.get(1).getAttribute('class')).not.toMatch(/odd/);
+       });
+     </file>
+   </example>
+ */
+var ngClassOddDirective = classDirective('Odd', 0);
+
+/**
+ * @ngdoc directive
+ * @name ngClassEven
+ * @restrict AC
+ *
+ * @description
+ * The `ngClassOdd` and `ngClassEven` directives work exactly as
+ * {@link ng.directive:ngClass ngClass}, except they work in
+ * conjunction with `ngRepeat` and take effect only on odd (even) rows.
+ *
+ * This directive can be applied only within the scope of an
+ * {@link ng.directive:ngRepeat ngRepeat}.
+ *
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#addClass addClass}       | just before the class is applied to the element   |
+ * | {@link ng.$animate#removeClass removeClass} | just before the class is removed from the element |
+ *
+ * @element ANY
+ * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The
+ *   result of the evaluation can be a string representing space delimited class names or an array.
+ *
+ * @example
+   <example name="ng-class-even">
+     <file name="index.html">
+        <ol ng-init="names=['John', 'Mary', 'Cate', 'Suz']">
+          <li ng-repeat="name in names">
+           <span ng-class-odd="'odd'" ng-class-even="'even'">
+             {{name}} &nbsp; &nbsp; &nbsp;
+           </span>
+          </li>
+        </ol>
+     </file>
+     <file name="style.css">
+       .odd {
+         color: red;
+       }
+       .even {
+         color: blue;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-class-odd and ng-class-even', function() {
+         expect(element(by.repeater('name in names').row(0).column('name')).getAttribute('class')).
+           toMatch(/odd/);
+         expect(element(by.repeater('name in names').row(1).column('name')).getAttribute('class')).
+           toMatch(/even/);
+       });
+     </file>
+   </example>
+ *
+ * <hr />
+ * @example
+ * An example on how to implement animations using `ngClassEven`:
+ *
+   <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-class-even-animate">
+     <file name="index.html">
+       <div ng-init="items=['Item 3', 'Item 2', 'Item 1', 'Item 0']">
+         <button ng-click="items.unshift('Item ' + items.length)">Add item</button>
+         <hr />
+         <table>
+           <tr ng-repeat="item in items" ng-class-even="'even'">
+             <td>{{ item }}</td>
+           </tr>
+         </table>
+       </div>
+     </file>
+     <file name="style.css">
+       .even {
+         background: rgba(255, 255, 0, 0.25);
+       }
+
+       .even-add, .even-remove {
+         transition: 1.5s;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should add new entries to the beginning of the list', function() {
+         var button = element(by.buttonText('Add item'));
+         var rows = element.all(by.repeater('item in items'));
+
+         expect(rows.count()).toBe(4);
+         expect(rows.get(0).getText()).toBe('Item 3');
+         expect(rows.get(1).getText()).toBe('Item 2');
+
+         button.click();
+
+         expect(rows.count()).toBe(5);
+         expect(rows.get(0).getText()).toBe('Item 4');
+         expect(rows.get(1).getText()).toBe('Item 3');
+       });
+
+       it('should add even class to even entries', function() {
+         var button = element(by.buttonText('Add item'));
+         var rows = element.all(by.repeater('item in items'));
+
+         expect(rows.get(0).getAttribute('class')).not.toMatch(/even/);
+         expect(rows.get(1).getAttribute('class')).toMatch(/even/);
+
+         button.click();
+
+         expect(rows.get(0).getAttribute('class')).not.toMatch(/even/);
+         expect(rows.get(1).getAttribute('class')).toMatch(/even/);
+       });
+     </file>
+   </example>
+ */
+var ngClassEvenDirective = classDirective('Even', 1);
+
+/**
+ * @ngdoc directive
+ * @name ngCloak
+ * @restrict AC
+ *
+ * @description
+ * The `ngCloak` directive is used to prevent the AngularJS html template from being briefly
+ * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this
+ * directive to avoid the undesirable flicker effect caused by the html template display.
+ *
+ * The directive can be applied to the `<body>` element, but the preferred usage is to apply
+ * multiple `ngCloak` directives to small portions of the page to permit progressive rendering
+ * of the browser view.
+ *
+ * `ngCloak` works in cooperation with the following css rule embedded within `angular.js` and
+ * `angular.min.js`.
+ * For CSP mode please add `angular-csp.css` to your html file (see {@link ng.directive:ngCsp ngCsp}).
+ *
+ * ```css
+ * [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
+ *   display: none !important;
+ * }
+ * ```
+ *
+ * When this css rule is loaded by the browser, all html elements (including their children) that
+ * are tagged with the `ngCloak` directive are hidden. When AngularJS encounters this directive
+ * during the compilation of the template it deletes the `ngCloak` element attribute, making
+ * the compiled element visible.
+ *
+ * For the best result, the `angular.js` script must be loaded in the head section of the html
+ * document; alternatively, the css rule above must be included in the external stylesheet of the
+ * application.
+ *
+ * @element ANY
+ *
+ * @example
+   <example name="ng-cloak">
+     <file name="index.html">
+        <div id="template1" ng-cloak>{{ 'hello' }}</div>
+        <div id="template2" class="ng-cloak">{{ 'world' }}</div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should remove the template directive and css class', function() {
+         expect($('#template1').getAttribute('ng-cloak')).
+           toBeNull();
+         expect($('#template2').getAttribute('ng-cloak')).
+           toBeNull();
+       });
+     </file>
+   </example>
+ *
+ */
+var ngCloakDirective = ngDirective({
+  compile: function(element, attr) {
+    attr.$set('ngCloak', undefined);
+    element.removeClass('ng-cloak');
+  }
+});
+
+/**
+ * @ngdoc directive
+ * @name ngController
+ *
+ * @description
+ * The `ngController` directive attaches a controller class to the view. This is a key aspect of how angular
+ * supports the principles behind the Model-View-Controller design pattern.
+ *
+ * MVC components in angular:
+ *
+ * * Model — Models are the properties of a scope; scopes are attached to the DOM where scope properties
+ *   are accessed through bindings.
+ * * View — The template (HTML with data bindings) that is rendered into the View.
+ * * Controller — The `ngController` directive specifies a Controller class; the class contains business
+ *   logic behind the application to decorate the scope with functions and values
+ *
+ * Note that you can also attach controllers to the DOM by declaring it in a route definition
+ * via the {@link ngRoute.$route $route} service. A common mistake is to declare the controller
+ * again using `ng-controller` in the template itself.  This will cause the controller to be attached
+ * and executed twice.
+ *
+ * @element ANY
+ * @scope
+ * @priority 500
+ * @param {expression} ngController Name of a constructor function registered with the current
+ * {@link ng.$controllerProvider $controllerProvider} or an {@link guide/expression expression}
+ * that on the current scope evaluates to a constructor function.
+ *
+ * The controller instance can be published into a scope property by specifying
+ * `ng-controller="as propertyName"`.
+ *
+ * @example
+ * Here is a simple form for editing user contact information. Adding, removing, clearing, and
+ * greeting are methods declared on the controller (see source tab). These methods can
+ * easily be called from the AngularJS markup. Any changes to the data are automatically reflected
+ * in the View without the need for a manual update.
+ *
+ * Two different declaration styles are included below:
+ *
+ * * one binds methods and properties directly onto the controller using `this`:
+ * `ng-controller="SettingsController1 as settings"`
+ * * one injects `$scope` into the controller:
+ * `ng-controller="SettingsController2"`
+ *
+ * The second option is more common in the AngularJS community, and is generally used in boilerplates
+ * and in this guide. However, there are advantages to binding properties directly to the controller
+ * and avoiding scope.
+ *
+ * * Using `controller as` makes it obvious which controller you are accessing in the template when
+ * multiple controllers apply to an element.
+ * * If you are writing your controllers as classes you have easier access to the properties and
+ * methods, which will appear on the scope, from inside the controller code.
+ * * Since there is always a `.` in the bindings, you don't have to worry about prototypal
+ * inheritance masking primitives.
+ *
+ * This example demonstrates the `controller as` syntax.
+ *
+ * <example name="ngControllerAs" module="controllerAsExample">
+ *   <file name="index.html">
+ *    <div id="ctrl-as-exmpl" ng-controller="SettingsController1 as settings">
+ *      <label>Name: <input type="text" ng-model="settings.name"/></label>
+ *      <button ng-click="settings.greet()">greet</button><br/>
+ *      Contact:
+ *      <ul>
+ *        <li ng-repeat="contact in settings.contacts">
+ *          <select ng-model="contact.type" aria-label="Contact method" id="select_{{$index}}">
+ *             <option>phone</option>
+ *             <option>email</option>
+ *          </select>
+ *          <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
+ *          <button ng-click="settings.clearContact(contact)">clear</button>
+ *          <button ng-click="settings.removeContact(contact)" aria-label="Remove">X</button>
+ *        </li>
+ *        <li><button ng-click="settings.addContact()">add</button></li>
+ *     </ul>
+ *    </div>
+ *   </file>
+ *   <file name="app.js">
+ *    angular.module('controllerAsExample', [])
+ *      .controller('SettingsController1', SettingsController1);
+ *
+ *    function SettingsController1() {
+ *      this.name = 'John Smith';
+ *      this.contacts = [
+ *        {type: 'phone', value: '408 555 1212'},
+ *        {type: 'email', value: 'john.smith@example.org'}
+ *      ];
+ *    }
+ *
+ *    SettingsController1.prototype.greet = function() {
+ *      alert(this.name);
+ *    };
+ *
+ *    SettingsController1.prototype.addContact = function() {
+ *      this.contacts.push({type: 'email', value: 'yourname@example.org'});
+ *    };
+ *
+ *    SettingsController1.prototype.removeContact = function(contactToRemove) {
+ *     var index = this.contacts.indexOf(contactToRemove);
+ *      this.contacts.splice(index, 1);
+ *    };
+ *
+ *    SettingsController1.prototype.clearContact = function(contact) {
+ *      contact.type = 'phone';
+ *      contact.value = '';
+ *    };
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     it('should check controller as', function() {
+ *       var container = element(by.id('ctrl-as-exmpl'));
+ *         expect(container.element(by.model('settings.name'))
+ *           .getAttribute('value')).toBe('John Smith');
+ *
+ *       var firstRepeat =
+ *           container.element(by.repeater('contact in settings.contacts').row(0));
+ *       var secondRepeat =
+ *           container.element(by.repeater('contact in settings.contacts').row(1));
+ *
+ *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *           .toBe('408 555 1212');
+ *
+ *       expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *           .toBe('john.smith@example.org');
+ *
+ *       firstRepeat.element(by.buttonText('clear')).click();
+ *
+ *       expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *           .toBe('');
+ *
+ *       container.element(by.buttonText('add')).click();
+ *
+ *       expect(container.element(by.repeater('contact in settings.contacts').row(2))
+ *           .element(by.model('contact.value'))
+ *           .getAttribute('value'))
+ *           .toBe('yourname@example.org');
+ *     });
+ *   </file>
+ * </example>
+ *
+ * This example demonstrates the "attach to `$scope`" style of controller.
+ *
+ * <example name="ngController" module="controllerExample">
+ *  <file name="index.html">
+ *   <div id="ctrl-exmpl" ng-controller="SettingsController2">
+ *     <label>Name: <input type="text" ng-model="name"/></label>
+ *     <button ng-click="greet()">greet</button><br/>
+ *     Contact:
+ *     <ul>
+ *       <li ng-repeat="contact in contacts">
+ *         <select ng-model="contact.type" id="select_{{$index}}">
+ *            <option>phone</option>
+ *            <option>email</option>
+ *         </select>
+ *         <input type="text" ng-model="contact.value" aria-labelledby="select_{{$index}}" />
+ *         <button ng-click="clearContact(contact)">clear</button>
+ *         <button ng-click="removeContact(contact)">X</button>
+ *       </li>
+ *       <li>[ <button ng-click="addContact()">add</button> ]</li>
+ *    </ul>
+ *   </div>
+ *  </file>
+ *  <file name="app.js">
+ *   angular.module('controllerExample', [])
+ *     .controller('SettingsController2', ['$scope', SettingsController2]);
+ *
+ *   function SettingsController2($scope) {
+ *     $scope.name = 'John Smith';
+ *     $scope.contacts = [
+ *       {type:'phone', value:'408 555 1212'},
+ *       {type:'email', value:'john.smith@example.org'}
+ *     ];
+ *
+ *     $scope.greet = function() {
+ *       alert($scope.name);
+ *     };
+ *
+ *     $scope.addContact = function() {
+ *       $scope.contacts.push({type:'email', value:'yourname@example.org'});
+ *     };
+ *
+ *     $scope.removeContact = function(contactToRemove) {
+ *       var index = $scope.contacts.indexOf(contactToRemove);
+ *       $scope.contacts.splice(index, 1);
+ *     };
+ *
+ *     $scope.clearContact = function(contact) {
+ *       contact.type = 'phone';
+ *       contact.value = '';
+ *     };
+ *   }
+ *  </file>
+ *  <file name="protractor.js" type="protractor">
+ *    it('should check controller', function() {
+ *      var container = element(by.id('ctrl-exmpl'));
+ *
+ *      expect(container.element(by.model('name'))
+ *          .getAttribute('value')).toBe('John Smith');
+ *
+ *      var firstRepeat =
+ *          container.element(by.repeater('contact in contacts').row(0));
+ *      var secondRepeat =
+ *          container.element(by.repeater('contact in contacts').row(1));
+ *
+ *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *          .toBe('408 555 1212');
+ *      expect(secondRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *          .toBe('john.smith@example.org');
+ *
+ *      firstRepeat.element(by.buttonText('clear')).click();
+ *
+ *      expect(firstRepeat.element(by.model('contact.value')).getAttribute('value'))
+ *          .toBe('');
+ *
+ *      container.element(by.buttonText('add')).click();
+ *
+ *      expect(container.element(by.repeater('contact in contacts').row(2))
+ *          .element(by.model('contact.value'))
+ *          .getAttribute('value'))
+ *          .toBe('yourname@example.org');
+ *    });
+ *  </file>
+ *</example>
+
+ */
+var ngControllerDirective = [function() {
+  return {
+    restrict: 'A',
+    scope: true,
+    controller: '@',
+    priority: 500
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngCsp
+ *
+ * @restrict A
+ * @element ANY
+ * @description
+ *
+ * AngularJS has some features that can conflict with certain restrictions that are applied when using
+ * [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) rules.
+ *
+ * If you intend to implement CSP with these rules then you must tell AngularJS not to use these
+ * features.
+ *
+ * This is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.
+ *
+ *
+ * The following default rules in CSP affect AngularJS:
+ *
+ * * The use of `eval()`, `Function(string)` and similar functions to dynamically create and execute
+ * code from strings is forbidden. AngularJS makes use of this in the {@link $parse} service to
+ * provide a 30% increase in the speed of evaluating AngularJS expressions. (This CSP rule can be
+ * disabled with the CSP keyword `unsafe-eval`, but it is generally not recommended as it would
+ * weaken the protections offered by CSP.)
+ *
+ * * The use of inline resources, such as inline `<script>` and `<style>` elements, are forbidden.
+ * This prevents apps from injecting custom styles directly into the document. AngularJS makes use of
+ * this to include some CSS rules (e.g. {@link ngCloak} and {@link ngHide}). To make these
+ * directives work when a CSP rule is blocking inline styles, you must link to the `angular-csp.css`
+ * in your HTML manually. (This CSP rule can be disabled with the CSP keyword `unsafe-inline`, but
+ * it is generally not recommended as it would weaken the protections offered by CSP.)
+ *
+ * If you do not provide `ngCsp` then AngularJS tries to autodetect if CSP is blocking dynamic code
+ * creation from strings (e.g., `unsafe-eval` not specified in CSP header) and automatically
+ * deactivates this feature in the {@link $parse} service. This autodetection, however, triggers a
+ * CSP error to be logged in the console:
+ *
+ * ```
+ * Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of
+ * script in the following Content Security Policy directive: "default-src 'self'". Note that
+ * 'script-src' was not explicitly set, so 'default-src' is used as a fallback.
+ * ```
+ *
+ * This error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`
+ * directive on an element of the HTML document that appears before the `<script>` tag that loads
+ * the `angular.js` file.
+ *
+ * *Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*
+ *
+ * You can specify which of the CSP related AngularJS features should be deactivated by providing
+ * a value for the `ng-csp` attribute. The options are as follows:
+ *
+ * * no-inline-style: this stops AngularJS from injecting CSS styles into the DOM
+ *
+ * * no-unsafe-eval: this stops AngularJS from optimizing $parse with unsafe eval of strings
+ *
+ * You can use these values in the following combinations:
+ *
+ *
+ * * No declaration means that AngularJS will assume that you can do inline styles, but it will do
+ * a runtime check for unsafe-eval. E.g. `<body>`. This is backwardly compatible with previous
+ * versions of AngularJS.
+ *
+ * * A simple `ng-csp` (or `data-ng-csp`) attribute will tell AngularJS to deactivate both inline
+ * styles and unsafe eval. E.g. `<body ng-csp>`. This is backwardly compatible with previous
+ * versions of AngularJS.
+ *
+ * * Specifying only `no-unsafe-eval` tells AngularJS that we must not use eval, but that we can
+ * inject inline styles. E.g. `<body ng-csp="no-unsafe-eval">`.
+ *
+ * * Specifying only `no-inline-style` tells AngularJS that we must not inject styles, but that we can
+ * run eval - no automatic check for unsafe eval will occur. E.g. `<body ng-csp="no-inline-style">`
+ *
+ * * Specifying both `no-unsafe-eval` and `no-inline-style` tells AngularJS that we must not inject
+ * styles nor use eval, which is the same as an empty: ng-csp.
+ * E.g.`<body ng-csp="no-inline-style;no-unsafe-eval">`
+ *
+ * @example
+ *
+ * This example shows how to apply the `ngCsp` directive to the `html` tag.
+   ```html
+     <!doctype html>
+     <html ng-app ng-csp>
+     ...
+     ...
+     </html>
+   ```
+
+  <!-- Note: the `.csp` suffix in the example name triggers CSP mode in our http server! -->
+  <example name="example.csp" module="cspExample" ng-csp="true">
+    <file name="index.html">
+      <div ng-controller="MainController as ctrl">
+        <div>
+          <button ng-click="ctrl.inc()" id="inc">Increment</button>
+          <span id="counter">
+            {{ctrl.counter}}
+          </span>
+        </div>
+
+        <div>
+          <button ng-click="ctrl.evil()" id="evil">Evil</button>
+          <span id="evilError">
+            {{ctrl.evilError}}
+          </span>
+        </div>
+      </div>
+    </file>
+    <file name="script.js">
+       angular.module('cspExample', [])
+         .controller('MainController', function MainController() {
+            this.counter = 0;
+            this.inc = function() {
+              this.counter++;
+            };
+            this.evil = function() {
+              try {
+                eval('1+2'); // eslint-disable-line no-eval
+              } catch (e) {
+                this.evilError = e.message;
+              }
+            };
+          });
+    </file>
+    <file name="protractor.js" type="protractor">
+      var util, webdriver;
+
+      var incBtn = element(by.id('inc'));
+      var counter = element(by.id('counter'));
+      var evilBtn = element(by.id('evil'));
+      var evilError = element(by.id('evilError'));
+
+      function getAndClearSevereErrors() {
+        return browser.manage().logs().get('browser').then(function(browserLog) {
+          return browserLog.filter(function(logEntry) {
+            return logEntry.level.value > webdriver.logging.Level.WARNING.value;
+          });
+        });
+      }
+
+      function clearErrors() {
+        getAndClearSevereErrors();
+      }
+
+      function expectNoErrors() {
+        getAndClearSevereErrors().then(function(filteredLog) {
+          expect(filteredLog.length).toEqual(0);
+          if (filteredLog.length) {
+            console.log('browser console errors: ' + util.inspect(filteredLog));
+          }
+        });
+      }
+
+      function expectError(regex) {
+        getAndClearSevereErrors().then(function(filteredLog) {
+          var found = false;
+          filteredLog.forEach(function(log) {
+            if (log.message.match(regex)) {
+              found = true;
+            }
+          });
+          if (!found) {
+            throw new Error('expected an error that matches ' + regex);
+          }
+        });
+      }
+
+      beforeEach(function() {
+        util = require('util');
+        webdriver = require('selenium-webdriver');
+      });
+
+      // For now, we only test on Chrome,
+      // as Safari does not load the page with Protractor's injected scripts,
+      // and Firefox webdriver always disables content security policy (#6358)
+      if (browser.params.browser !== 'chrome') {
+        return;
+      }
+
+      it('should not report errors when the page is loaded', function() {
+        // clear errors so we are not dependent on previous tests
+        clearErrors();
+        // Need to reload the page as the page is already loaded when
+        // we come here
+        browser.driver.getCurrentUrl().then(function(url) {
+          browser.get(url);
+        });
+        expectNoErrors();
+      });
+
+      it('should evaluate expressions', function() {
+        expect(counter.getText()).toEqual('0');
+        incBtn.click();
+        expect(counter.getText()).toEqual('1');
+        expectNoErrors();
+      });
+
+      it('should throw and report an error when using "eval"', function() {
+        evilBtn.click();
+        expect(evilError.getText()).toMatch(/Content Security Policy/);
+        expectError(/Content Security Policy/);
+      });
+    </file>
+  </example>
+  */
+
+// `ngCsp` is not implemented as a proper directive any more, because we need it be processed while
+// we bootstrap the app (before `$parse` is instantiated). For this reason, we just have the `csp()`
+// fn that looks for the `ng-csp` attribute anywhere in the current doc.
+
+/**
+ * @ngdoc directive
+ * @name ngClick
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * The ngClick directive allows you to specify custom behavior when
+ * an element is clicked.
+ *
+ * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon
+ * click. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-click">
+     <file name="index.html">
+      <button ng-click="count = count + 1" ng-init="count=0">
+        Increment
+      </button>
+      <span>
+        count: {{count}}
+      </span>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-click', function() {
+         expect(element(by.binding('count')).getText()).toMatch('0');
+         element(by.css('button')).click();
+         expect(element(by.binding('count')).getText()).toMatch('1');
+       });
+     </file>
+   </example>
+ */
+/*
+ * A collection of directives that allows creation of custom event handlers that are defined as
+ * AngularJS expressions and are compiled and executed within the current scope.
+ */
+var ngEventDirectives = {};
+
+// For events that might fire synchronously during DOM manipulation
+// we need to execute their event handlers asynchronously using $evalAsync,
+// so that they are not executed in an inconsistent state.
+var forceAsyncEvents = {
+  'blur': true,
+  'focus': true
+};
+forEach(
+  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '),
+  function(eventName) {
+    var directiveName = directiveNormalize('ng-' + eventName);
+    ngEventDirectives[directiveName] = ['$parse', '$rootScope', '$exceptionHandler', function($parse, $rootScope, $exceptionHandler) {
+      return createEventDirective($parse, $rootScope, $exceptionHandler, directiveName, eventName, forceAsyncEvents[eventName]);
+    }];
+  }
+);
+
+function createEventDirective($parse, $rootScope, $exceptionHandler, directiveName, eventName, forceAsync) {
+  return {
+    restrict: 'A',
+    compile: function($element, attr) {
+      // NOTE:
+      // We expose the powerful `$event` object on the scope that provides access to the Window,
+      // etc. This is OK, because expressions are not sandboxed any more (and the expression
+      // sandbox was never meant to be a security feature anyway).
+      var fn = $parse(attr[directiveName]);
+      return function ngEventHandler(scope, element) {
+        element.on(eventName, function(event) {
+          var callback = function() {
+            fn(scope, {$event: event});
+          };
+
+          if (!$rootScope.$$phase) {
+            scope.$apply(callback);
+          } else if (forceAsync) {
+            scope.$evalAsync(callback);
+          } else {
+            try {
+              callback();
+            } catch (error) {
+              $exceptionHandler(error);
+            }
+          }
+        });
+      };
+    }
+  };
+}
+
+/**
+ * @ngdoc directive
+ * @name ngDblclick
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * The `ngDblclick` directive allows you to specify custom behavior on a dblclick event.
+ *
+ * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon
+ * a dblclick. (The Event object is available as `$event`)
+ *
+ * @example
+   <example name="ng-dblclick">
+     <file name="index.html">
+      <button ng-dblclick="count = count + 1" ng-init="count=0">
+        Increment (on double click)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngMousedown
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * The ngMousedown directive allows you to specify custom behavior on mousedown event.
+ *
+ * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon
+ * mousedown. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mousedown">
+     <file name="index.html">
+      <button ng-mousedown="count = count + 1" ng-init="count=0">
+        Increment (on mouse down)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngMouseup
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on mouseup event.
+ *
+ * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon
+ * mouseup. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mouseup">
+     <file name="index.html">
+      <button ng-mouseup="count = count + 1" ng-init="count=0">
+        Increment (on mouse up)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngMouseover
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on mouseover event.
+ *
+ * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon
+ * mouseover. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mouseover">
+     <file name="index.html">
+      <button ng-mouseover="count = count + 1" ng-init="count=0">
+        Increment (when mouse is over)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngMouseenter
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on mouseenter event.
+ *
+ * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon
+ * mouseenter. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mouseenter">
+     <file name="index.html">
+      <button ng-mouseenter="count = count + 1" ng-init="count=0">
+        Increment (when mouse enters)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngMouseleave
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on mouseleave event.
+ *
+ * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon
+ * mouseleave. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mouseleave">
+     <file name="index.html">
+      <button ng-mouseleave="count = count + 1" ng-init="count=0">
+        Increment (when mouse leaves)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngMousemove
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on mousemove event.
+ *
+ * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon
+ * mousemove. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-mousemove">
+     <file name="index.html">
+      <button ng-mousemove="count = count + 1" ng-init="count=0">
+        Increment (when mouse moves)
+      </button>
+      count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngKeydown
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on keydown event.
+ *
+ * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon
+ * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
+ *
+ * @example
+   <example name="ng-keydown">
+     <file name="index.html">
+      <input ng-keydown="count = count + 1" ng-init="count=0">
+      key down count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngKeyup
+ * @restrict A
+ * @element ANY
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on keyup event.
+ *
+ * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon
+ * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)
+ *
+ * @example
+   <example name="ng-keyup">
+     <file name="index.html">
+       <p>Typing in the input box below updates the key count</p>
+       <input ng-keyup="count = count + 1" ng-init="count=0"> key up count: {{count}}
+
+       <p>Typing in the input box below updates the keycode</p>
+       <input ng-keyup="event=$event">
+       <p>event keyCode: {{ event.keyCode }}</p>
+       <p>event altKey: {{ event.altKey }}</p>
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngKeypress
+ * @restrict A
+ * @element ANY
+ *
+ * @description
+ * Specify custom behavior on keypress event.
+ *
+ * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon
+ * keypress. ({@link guide/expression#-event- Event object is available as `$event`}
+ * and can be interrogated for keyCode, altKey, etc.)
+ *
+ * @example
+   <example name="ng-keypress">
+     <file name="index.html">
+      <input ng-keypress="count = count + 1" ng-init="count=0">
+      key press count: {{count}}
+     </file>
+   </example>
+ */
+
+
+/**
+ * @ngdoc directive
+ * @name ngSubmit
+ * @restrict A
+ * @element form
+ * @priority 0
+ *
+ * @description
+ * Enables binding AngularJS expressions to onsubmit events.
+ *
+ * Additionally it prevents the default action (which for form means sending the request to the
+ * server and reloading the current page), but only if the form does not contain `action`,
+ * `data-action`, or `x-action` attributes.
+ *
+ * <div class="alert alert-warning">
+ * **Warning:** Be careful not to cause "double-submission" by using both the `ngClick` and
+ * `ngSubmit` handlers together. See the
+ * {@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}
+ * for a detailed discussion of when `ngSubmit` may be triggered.
+ * </div>
+ *
+ * @param {expression} ngSubmit {@link guide/expression Expression} to eval.
+ * ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example module="submitExample" name="ng-submit">
+     <file name="index.html">
+      <script>
+        angular.module('submitExample', [])
+          .controller('ExampleController', ['$scope', function($scope) {
+            $scope.list = [];
+            $scope.text = 'hello';
+            $scope.submit = function() {
+              if ($scope.text) {
+                $scope.list.push(this.text);
+                $scope.text = '';
+              }
+            };
+          }]);
+      </script>
+      <form ng-submit="submit()" ng-controller="ExampleController">
+        Enter text and hit enter:
+        <input type="text" ng-model="text" name="text" />
+        <input type="submit" id="submit" value="Submit" />
+        <pre>list={{list}}</pre>
+      </form>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should check ng-submit', function() {
+         expect(element(by.binding('list')).getText()).toBe('list=[]');
+         element(by.css('#submit')).click();
+         expect(element(by.binding('list')).getText()).toContain('hello');
+         expect(element(by.model('text')).getAttribute('value')).toBe('');
+       });
+       it('should ignore empty strings', function() {
+         expect(element(by.binding('list')).getText()).toBe('list=[]');
+         element(by.css('#submit')).click();
+         element(by.css('#submit')).click();
+         expect(element(by.binding('list')).getText()).toContain('hello');
+        });
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngFocus
+ * @restrict A
+ * @element window, input, select, textarea, a
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on focus event.
+ *
+ * Note: As the `focus` event is executed synchronously when calling `input.focus()`
+ * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
+ * during an `$apply` to ensure a consistent state.
+ *
+ * @param {expression} ngFocus {@link guide/expression Expression} to evaluate upon
+ * focus. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+ * See {@link ng.directive:ngClick ngClick}
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngBlur
+ * @restrict A
+ * @element window, input, select, textarea, a
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on blur event.
+ *
+ * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when
+ * an element has lost focus.
+ *
+ * Note: As the `blur` event is executed synchronously also during DOM manipulations
+ * (e.g. removing a focussed input),
+ * AngularJS executes the expression using `scope.$evalAsync` if the event is fired
+ * during an `$apply` to ensure a consistent state.
+ *
+ * @param {expression} ngBlur {@link guide/expression Expression} to evaluate upon
+ * blur. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+ * See {@link ng.directive:ngClick ngClick}
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngCopy
+ * @restrict A
+ * @element window, input, select, textarea, a
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on copy event.
+ *
+ * @param {expression} ngCopy {@link guide/expression Expression} to evaluate upon
+ * copy. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-copy">
+     <file name="index.html">
+      <input ng-copy="copied=true" ng-init="copied=false; value='copy me'" ng-model="value">
+      copied: {{copied}}
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngCut
+ * @restrict A
+ * @element window, input, select, textarea, a
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on cut event.
+ *
+ * @param {expression} ngCut {@link guide/expression Expression} to evaluate upon
+ * cut. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-cut">
+     <file name="index.html">
+      <input ng-cut="cut=true" ng-init="cut=false; value='cut me'" ng-model="value">
+      cut: {{cut}}
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngPaste
+ * @restrict A
+ * @element window, input, select, textarea, a
+ * @priority 0
+ *
+ * @description
+ * Specify custom behavior on paste event.
+ *
+ * @param {expression} ngPaste {@link guide/expression Expression} to evaluate upon
+ * paste. ({@link guide/expression#-event- Event object is available as `$event`})
+ *
+ * @example
+   <example name="ng-paste">
+     <file name="index.html">
+      <input ng-paste="paste=true" ng-init="paste=false" placeholder='paste here'>
+      pasted: {{paste}}
+     </file>
+   </example>
+ */
+
+/**
+ * @ngdoc directive
+ * @name ngIf
+ * @restrict A
+ * @multiElement
+ *
+ * @description
+ * The `ngIf` directive removes or recreates a portion of the DOM tree based on an
+ * {expression}. If the expression assigned to `ngIf` evaluates to a false
+ * value then the element is removed from the DOM, otherwise a clone of the
+ * element is reinserted into the DOM.
+ *
+ * `ngIf` differs from `ngShow` and `ngHide` in that `ngIf` completely removes and recreates the
+ * element in the DOM rather than changing its visibility via the `display` css property.  A common
+ * case when this difference is significant is when using css selectors that rely on an element's
+ * position within the DOM, such as the `:first-child` or `:last-child` pseudo-classes.
+ *
+ * Note that when an element is removed using `ngIf` its scope is destroyed and a new scope
+ * is created when the element is restored.  The scope created within `ngIf` inherits from
+ * its parent scope using
+ * [prototypal inheritance](https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance).
+ * An important implication of this is if `ngModel` is used within `ngIf` to bind to
+ * a javascript primitive defined in the parent scope. In this case any modifications made to the
+ * variable within the child scope will override (hide) the value in the parent scope.
+ *
+ * Also, `ngIf` recreates elements using their compiled state. An example of this behavior
+ * is if an element's class attribute is directly modified after it's compiled, using something like
+ * jQuery's `.addClass()` method, and the element is later removed. When `ngIf` recreates the element
+ * the added class will be lost because the original compiled state is used to regenerate the element.
+ *
+ * Additionally, you can provide animations via the `ngAnimate` module to animate the `enter`
+ * and `leave` effects.
+ *
+ * @animations
+ * | Animation                        | Occurs                               |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#enter enter}  | just after the `ngIf` contents change and a new DOM element is created and injected into the `ngIf` container |
+ * | {@link ng.$animate#leave leave}  | just before the `ngIf` contents are removed from the DOM |
+ *
+ * @element ANY
+ * @scope
+ * @priority 600
+ * @param {expression} ngIf If the {@link guide/expression expression} is falsy then
+ *     the element is removed from the DOM tree. If it is truthy a copy of the compiled
+ *     element is added to the DOM tree.
+ *
+ * @example
+  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-if">
+    <file name="index.html">
+      <label>Click me: <input type="checkbox" ng-model="checked" ng-init="checked=true" /></label><br/>
+      Show when checked:
+      <span ng-if="checked" class="animate-if">
+        This is removed when the checkbox is unchecked.
+      </span>
+    </file>
+    <file name="animations.css">
+      .animate-if {
+        background:white;
+        border:1px solid black;
+        padding:10px;
+      }
+
+      .animate-if.ng-enter, .animate-if.ng-leave {
+        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
+      }
+
+      .animate-if.ng-enter,
+      .animate-if.ng-leave.ng-leave-active {
+        opacity:0;
+      }
+
+      .animate-if.ng-leave,
+      .animate-if.ng-enter.ng-enter-active {
+        opacity:1;
+      }
+    </file>
+  </example>
+ */
+var ngIfDirective = ['$animate', '$compile', function($animate, $compile) {
+  return {
+    multiElement: true,
+    transclude: 'element',
+    priority: 600,
+    terminal: true,
+    restrict: 'A',
+    $$tlb: true,
+    link: function($scope, $element, $attr, ctrl, $transclude) {
+        var block, childScope, previousElements;
+        $scope.$watch($attr.ngIf, function ngIfWatchAction(value) {
+
+          if (value) {
+            if (!childScope) {
+              $transclude(function(clone, newScope) {
+                childScope = newScope;
+                clone[clone.length++] = $compile.$$createComment('end ngIf', $attr.ngIf);
+                // Note: We only need the first/last node of the cloned nodes.
+                // However, we need to keep the reference to the jqlite wrapper as it might be changed later
+                // by a directive with templateUrl when its template arrives.
+                block = {
+                  clone: clone
+                };
+                $animate.enter(clone, $element.parent(), $element);
+              });
+            }
+          } else {
+            if (previousElements) {
+              previousElements.remove();
+              previousElements = null;
+            }
+            if (childScope) {
+              childScope.$destroy();
+              childScope = null;
+            }
+            if (block) {
+              previousElements = getBlockNodes(block.clone);
+              $animate.leave(previousElements).done(function(response) {
+                if (response !== false) previousElements = null;
+              });
+              block = null;
+            }
+          }
+        });
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngInclude
+ * @restrict ECA
+ * @scope
+ * @priority -400
+ *
+ * @description
+ * Fetches, compiles and includes an external HTML fragment.
+ *
+ * By default, the template URL is restricted to the same domain and protocol as the
+ * application document. This is done by calling {@link $sce#getTrustedResourceUrl
+ * $sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols
+ * you may either add them to your {@link ng.$sceDelegateProvider#trustedResourceUrlList trusted
+ * resource URL list} or {@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to
+ * AngularJS's {@link ng.$sce Strict Contextual Escaping}.
+ *
+ * In addition, the browser's
+ * [Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)
+ * and [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)
+ * policy may further restrict whether the template is successfully loaded.
+ * For example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`
+ * access on some browsers.
+ *
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#enter enter}  | when the expression changes, on the new include |
+ * | {@link ng.$animate#leave leave}  | when the expression changes, on the old include |
+ *
+ * The enter and leave animation occur concurrently.
+ *
+ * @param {string} ngInclude|src AngularJS expression evaluating to URL. If the source is a string constant,
+ *                 make sure you wrap it in **single** quotes, e.g. `src="'myPartialTemplate.html'"`.
+ * @param {string=} onload Expression to evaluate when a new partial is loaded.
+ *                  <div class="alert alert-warning">
+ *                  **Note:** When using onload on SVG elements in IE11, the browser will try to call
+ *                  a function with the name on the window element, which will usually throw a
+ *                  "function is undefined" error. To fix this, you can instead use `data-onload` or a
+ *                  different form that {@link guide/directive#normalization matches} `onload`.
+ *                  </div>
+   *
+ * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll
+ *                  $anchorScroll} to scroll the viewport after the content is loaded.
+ *
+ *                  - If the attribute is not set, disable scrolling.
+ *                  - If the attribute is set without value, enable scrolling.
+ *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.
+ *
+ * @example
+  <example module="includeExample" deps="angular-animate.js" animations="true" name="ng-include">
+    <file name="index.html">
+     <div ng-controller="ExampleController">
+       <select ng-model="template" ng-options="t.name for t in templates">
+        <option value="">(blank)</option>
+       </select>
+       url of the template: <code>{{template.url}}</code>
+       <hr/>
+       <div class="slide-animate-container">
+         <div class="slide-animate" ng-include="template.url"></div>
+       </div>
+     </div>
+    </file>
+    <file name="script.js">
+      angular.module('includeExample', ['ngAnimate'])
+        .controller('ExampleController', ['$scope', function($scope) {
+          $scope.templates =
+            [{ name: 'template1.html', url: 'template1.html'},
+             { name: 'template2.html', url: 'template2.html'}];
+          $scope.template = $scope.templates[0];
+        }]);
+     </file>
+    <file name="template1.html">
+      Content of template1.html
+    </file>
+    <file name="template2.html">
+      Content of template2.html
+    </file>
+    <file name="animations.css">
+      .slide-animate-container {
+        position:relative;
+        background:white;
+        border:1px solid black;
+        height:40px;
+        overflow:hidden;
+      }
+
+      .slide-animate {
+        padding:10px;
+      }
+
+      .slide-animate.ng-enter, .slide-animate.ng-leave {
+        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
+
+        position:absolute;
+        top:0;
+        left:0;
+        right:0;
+        bottom:0;
+        display:block;
+        padding:10px;
+      }
+
+      .slide-animate.ng-enter {
+        top:-50px;
+      }
+      .slide-animate.ng-enter.ng-enter-active {
+        top:0;
+      }
+
+      .slide-animate.ng-leave {
+        top:0;
+      }
+      .slide-animate.ng-leave.ng-leave-active {
+        top:50px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      var templateSelect = element(by.model('template'));
+      var includeElem = element(by.css('[ng-include]'));
+
+      it('should load template1.html', function() {
+        expect(includeElem.getText()).toMatch(/Content of template1.html/);
+      });
+
+      it('should load template2.html', function() {
+        if (browser.params.browser === 'firefox') {
+          // Firefox can't handle using selects
+          // See https://github.com/angular/protractor/issues/480
+          return;
+        }
+        templateSelect.click();
+        templateSelect.all(by.css('option')).get(2).click();
+        expect(includeElem.getText()).toMatch(/Content of template2.html/);
+      });
+
+      it('should change to blank', function() {
+        if (browser.params.browser === 'firefox') {
+          // Firefox can't handle using selects
+          return;
+        }
+        templateSelect.click();
+        templateSelect.all(by.css('option')).get(0).click();
+        expect(includeElem.isPresent()).toBe(false);
+      });
+    </file>
+  </example>
+ */
+
+
+/**
+ * @ngdoc event
+ * @name ngInclude#$includeContentRequested
+ * @eventType emit on the scope ngInclude was declared in
+ * @description
+ * Emitted every time the ngInclude content is requested.
+ *
+ * @param {Object} angularEvent Synthetic event object.
+ * @param {String} src URL of content to load.
+ */
+
+
+/**
+ * @ngdoc event
+ * @name ngInclude#$includeContentLoaded
+ * @eventType emit on the current ngInclude scope
+ * @description
+ * Emitted every time the ngInclude content is reloaded.
+ *
+ * @param {Object} angularEvent Synthetic event object.
+ * @param {String} src URL of content to load.
+ */
+
+
+/**
+ * @ngdoc event
+ * @name ngInclude#$includeContentError
+ * @eventType emit on the scope ngInclude was declared in
+ * @description
+ * Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)
+ *
+ * @param {Object} angularEvent Synthetic event object.
+ * @param {String} src URL of content to load.
+ */
+var ngIncludeDirective = ['$templateRequest', '$anchorScroll', '$animate',
+                  function($templateRequest,   $anchorScroll,   $animate) {
+  return {
+    restrict: 'ECA',
+    priority: 400,
+    terminal: true,
+    transclude: 'element',
+    controller: angular.noop,
+    compile: function(element, attr) {
+      var srcExp = attr.ngInclude || attr.src,
+          onloadExp = attr.onload || '',
+          autoScrollExp = attr.autoscroll;
+
+      return function(scope, $element, $attr, ctrl, $transclude) {
+        var changeCounter = 0,
+            currentScope,
+            previousElement,
+            currentElement;
+
+        var cleanupLastIncludeContent = function() {
+          if (previousElement) {
+            previousElement.remove();
+            previousElement = null;
+          }
+          if (currentScope) {
+            currentScope.$destroy();
+            currentScope = null;
+          }
+          if (currentElement) {
+            $animate.leave(currentElement).done(function(response) {
+              if (response !== false) previousElement = null;
+            });
+            previousElement = currentElement;
+            currentElement = null;
+          }
+        };
+
+        scope.$watch(srcExp, function ngIncludeWatchAction(src) {
+          var afterAnimation = function(response) {
+            if (response !== false && isDefined(autoScrollExp) &&
+              (!autoScrollExp || scope.$eval(autoScrollExp))) {
+                $anchorScroll();
+            }
+          };
+          var thisChangeId = ++changeCounter;
+
+          if (src) {
+            //set the 2nd param to true to ignore the template request error so that the inner
+            //contents and scope can be cleaned up.
+            $templateRequest(src, true).then(function(response) {
+              if (scope.$$destroyed) return;
+
+              if (thisChangeId !== changeCounter) return;
+              var newScope = scope.$new();
+              ctrl.template = response;
+
+              // Note: This will also link all children of ng-include that were contained in the original
+              // html. If that content contains controllers, ... they could pollute/change the scope.
+              // However, using ng-include on an element with additional content does not make sense...
+              // Note: We can't remove them in the cloneAttchFn of $transclude as that
+              // function is called before linking the content, which would apply child
+              // directives to non existing elements.
+              var clone = $transclude(newScope, function(clone) {
+                cleanupLastIncludeContent();
+                $animate.enter(clone, null, $element).done(afterAnimation);
+              });
+
+              currentScope = newScope;
+              currentElement = clone;
+
+              currentScope.$emit('$includeContentLoaded', src);
+              scope.$eval(onloadExp);
+            }, function() {
+              if (scope.$$destroyed) return;
+
+              if (thisChangeId === changeCounter) {
+                cleanupLastIncludeContent();
+                scope.$emit('$includeContentError', src);
+              }
+            });
+            scope.$emit('$includeContentRequested', src);
+          } else {
+            cleanupLastIncludeContent();
+            ctrl.template = null;
+          }
+        });
+      };
+    }
+  };
+}];
+
+// This directive is called during the $transclude call of the first `ngInclude` directive.
+// It will replace and compile the content of the element with the loaded template.
+// We need this directive so that the element content is already filled when
+// the link function of another directive on the same element as ngInclude
+// is called.
+var ngIncludeFillContentDirective = ['$compile',
+  function($compile) {
+    return {
+      restrict: 'ECA',
+      priority: -400,
+      require: 'ngInclude',
+      link: function(scope, $element, $attr, ctrl) {
+        if (toString.call($element[0]).match(/SVG/)) {
+          // WebKit: https://bugs.webkit.org/show_bug.cgi?id=135698 --- SVG elements do not
+          // support innerHTML, so detect this here and try to generate the contents
+          // specially.
+          $element.empty();
+          $compile(jqLiteBuildFragment(ctrl.template, window.document).childNodes)(scope,
+              function namespaceAdaptedClone(clone) {
+            $element.append(clone);
+          }, {futureParentElement: $element});
+          return;
+        }
+
+        $element.html(ctrl.template);
+        $compile($element.contents())(scope);
+      }
+    };
+  }];
+
+/**
+ * @ngdoc directive
+ * @name ngInit
+ * @restrict AC
+ * @priority 450
+ * @element ANY
+ *
+ * @param {expression} ngInit {@link guide/expression Expression} to eval.
+ *
+ * @description
+ * The `ngInit` directive allows you to evaluate an expression in the
+ * current scope.
+ *
+ * <div class="alert alert-danger">
+ * This directive can be abused to add unnecessary amounts of logic into your templates.
+ * There are only a few appropriate uses of `ngInit`:
+ * <ul>
+ *   <li>aliasing special properties of {@link ng.directive:ngRepeat `ngRepeat`},
+ *     as seen in the demo below.</li>
+ *   <li>initializing data during development, or for examples, as seen throughout these docs.</li>
+ *   <li>injecting data via server side scripting.</li>
+ * </ul>
+ *
+ * Besides these few cases, you should use {@link guide/component Components} or
+ * {@link guide/controller Controllers} rather than `ngInit` to initialize values on a scope.
+ * </div>
+ *
+ * <div class="alert alert-warning">
+ * **Note**: If you have assignment in `ngInit` along with a {@link ng.$filter `filter`}, make
+ * sure you have parentheses to ensure correct operator precedence:
+ * <pre class="prettyprint">
+ * `<div ng-init="test1 = ($index | toString)"></div>`
+ * </pre>
+ * </div>
+ *
+ * @example
+   <example module="initExample" name="ng-init">
+     <file name="index.html">
+   <script>
+     angular.module('initExample', [])
+       .controller('ExampleController', ['$scope', function($scope) {
+         $scope.list = [['a', 'b'], ['c', 'd']];
+       }]);
+   </script>
+   <div ng-controller="ExampleController">
+     <div ng-repeat="innerList in list" ng-init="outerIndex = $index">
+       <div ng-repeat="value in innerList" ng-init="innerIndex = $index">
+          <span class="example-init">list[ {{outerIndex}} ][ {{innerIndex}} ] = {{value}};</span>
+       </div>
+     </div>
+   </div>
+     </file>
+     <file name="protractor.js" type="protractor">
+       it('should alias index positions', function() {
+         var elements = element.all(by.css('.example-init'));
+         expect(elements.get(0).getText()).toBe('list[ 0 ][ 0 ] = a;');
+         expect(elements.get(1).getText()).toBe('list[ 0 ][ 1 ] = b;');
+         expect(elements.get(2).getText()).toBe('list[ 1 ][ 0 ] = c;');
+         expect(elements.get(3).getText()).toBe('list[ 1 ][ 1 ] = d;');
+       });
+     </file>
+   </example>
+ */
+var ngInitDirective = ngDirective({
+  priority: 450,
+  compile: function() {
+    return {
+      pre: function(scope, element, attrs) {
+        scope.$eval(attrs.ngInit);
+      }
+    };
+  }
+});
+
+/**
+ * @ngdoc directive
+ * @name ngList
+ * @restrict A
+ * @priority 100
+ *
+ * @param {string=} ngList optional delimiter that should be used to split the value.
+ *
+ * @description
+ * Text input that converts between a delimited string and an array of strings. The default
+ * delimiter is a comma followed by a space - equivalent to `ng-list=", "`. You can specify a custom
+ * delimiter as the value of the `ngList` attribute - for example, `ng-list=" | "`.
+ *
+ * The behaviour of the directive is affected by the use of the `ngTrim` attribute.
+ * * If `ngTrim` is set to `"false"` then whitespace around both the separator and each
+ *   list item is respected. This implies that the user of the directive is responsible for
+ *   dealing with whitespace but also allows you to use whitespace as a delimiter, such as a
+ *   tab or newline character.
+ * * Otherwise whitespace around the delimiter is ignored when splitting (although it is respected
+ *   when joining the list items back together) and whitespace around each list item is stripped
+ *   before it is added to the model.
+ *
+ * @example
+ * ### Validation
+ *
+ * <example name="ngList-directive" module="listExample">
+ *   <file name="app.js">
+ *      angular.module('listExample', [])
+ *        .controller('ExampleController', ['$scope', function($scope) {
+ *          $scope.names = ['morpheus', 'neo', 'trinity'];
+ *        }]);
+ *   </file>
+ *   <file name="index.html">
+ *    <form name="myForm" ng-controller="ExampleController">
+ *      <label>List: <input name="namesInput" ng-model="names" ng-list required></label>
+ *      <span role="alert">
+ *        <span class="error" ng-show="myForm.namesInput.$error.required">
+ *        Required!</span>
+ *      </span>
+ *      <br>
+ *      <tt>names = {{names}}</tt><br/>
+ *      <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>
+ *      <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>
+ *      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>
+ *      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>
+ *     </form>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     var listInput = element(by.model('names'));
+ *     var names = element(by.exactBinding('names'));
+ *     var valid = element(by.binding('myForm.namesInput.$valid'));
+ *     var error = element(by.css('span.error'));
+ *
+ *     it('should initialize to model', function() {
+ *       expect(names.getText()).toContain('["morpheus","neo","trinity"]');
+ *       expect(valid.getText()).toContain('true');
+ *       expect(error.getCssValue('display')).toBe('none');
+ *     });
+ *
+ *     it('should be invalid if empty', function() {
+ *       listInput.clear();
+ *       listInput.sendKeys('');
+ *
+ *       expect(names.getText()).toContain('');
+ *       expect(valid.getText()).toContain('false');
+ *       expect(error.getCssValue('display')).not.toBe('none');
+ *     });
+ *   </file>
+ * </example>
+ *
+ * @example
+ * ### Splitting on newline
+ *
+ * <example name="ngList-directive-newlines">
+ *   <file name="index.html">
+ *    <textarea ng-model="list" ng-list="&#10;" ng-trim="false"></textarea>
+ *    <pre>{{ list | json }}</pre>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     it("should split the text by newlines", function() {
+ *       var listInput = element(by.model('list'));
+ *       var output = element(by.binding('list | json'));
+ *       listInput.sendKeys('abc\ndef\nghi');
+ *       expect(output.getText()).toContain('[\n  "abc",\n  "def",\n  "ghi"\n]');
+ *     });
+ *   </file>
+ * </example>
+ *
+ */
+var ngListDirective = function() {
+  return {
+    restrict: 'A',
+    priority: 100,
+    require: 'ngModel',
+    link: function(scope, element, attr, ctrl) {
+      var ngList = attr.ngList || ', ';
+      var trimValues = attr.ngTrim !== 'false';
+      var separator = trimValues ? trim(ngList) : ngList;
+
+      var parse = function(viewValue) {
+        // If the viewValue is invalid (say required but empty) it will be `undefined`
+        if (isUndefined(viewValue)) return;
+
+        var list = [];
+
+        if (viewValue) {
+          forEach(viewValue.split(separator), function(value) {
+            if (value) list.push(trimValues ? trim(value) : value);
+          });
+        }
+
+        return list;
+      };
+
+      ctrl.$parsers.push(parse);
+      ctrl.$formatters.push(function(value) {
+        if (isArray(value)) {
+          return value.join(ngList);
+        }
+
+        return undefined;
+      });
+
+      // Override the standard $isEmpty because an empty array means the input is empty.
+      ctrl.$isEmpty = function(value) {
+        return !value || !value.length;
+      };
+    }
+  };
+};
+
+/* global VALID_CLASS: true,
+  INVALID_CLASS: true,
+  PRISTINE_CLASS: true,
+  DIRTY_CLASS: true,
+  UNTOUCHED_CLASS: true,
+  TOUCHED_CLASS: true,
+  PENDING_CLASS: true,
+  addSetValidityMethod: true,
+  setupValidity: true,
+  defaultModelOptions: false
+*/
+
+
+var VALID_CLASS = 'ng-valid',
+    INVALID_CLASS = 'ng-invalid',
+    PRISTINE_CLASS = 'ng-pristine',
+    DIRTY_CLASS = 'ng-dirty',
+    UNTOUCHED_CLASS = 'ng-untouched',
+    TOUCHED_CLASS = 'ng-touched',
+    EMPTY_CLASS = 'ng-empty',
+    NOT_EMPTY_CLASS = 'ng-not-empty';
+
+var ngModelMinErr = minErr('ngModel');
+
+/**
+ * @ngdoc type
+ * @name ngModel.NgModelController
+ * @property {*} $viewValue The actual value from the control's view. For `input` elements, this is a
+ * String. See {@link ngModel.NgModelController#$setViewValue} for information about when the $viewValue
+ * is set.
+ *
+ * @property {*} $modelValue The value in the model that the control is bound to.
+ *
+ * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever
+ *  the control updates the ngModelController with a new {@link ngModel.NgModelController#$viewValue
+    `$viewValue`} from the DOM, usually via user input.
+    See {@link ngModel.NgModelController#$setViewValue `$setViewValue()`} for a detailed lifecycle explanation.
+    Note that the `$parsers` are not called when the bound ngModel expression changes programmatically.
+
+  The functions are called in array order, each passing
+    its return value through to the next. The last return value is forwarded to the
+    {@link ngModel.NgModelController#$validators `$validators`} collection.
+
+  Parsers are used to sanitize / convert the {@link ngModel.NgModelController#$viewValue
+    `$viewValue`}.
+
+  Returning `undefined` from a parser means a parse error occurred. In that case,
+    no {@link ngModel.NgModelController#$validators `$validators`} will run and the `ngModel`
+    will be set to `undefined` unless {@link ngModelOptions `ngModelOptions.allowInvalid`}
+    is set to `true`. The parse error is stored in `ngModel.$error.parse`.
+
+  This simple example shows a parser that would convert text input value to lowercase:
+ * ```js
+ * function parse(value) {
+ *   if (value) {
+ *     return value.toLowerCase();
+ *   }
+ * }
+ * ngModelController.$parsers.push(parse);
+ * ```
+
+ *
+ * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever
+    the bound ngModel expression changes programmatically. The `$formatters` are not called when the
+    value of the control is changed by user interaction.
+
+  Formatters are used to format / convert the {@link ngModel.NgModelController#$modelValue
+    `$modelValue`} for display in the control.
+
+  The functions are called in reverse array order, each passing the value through to the
+    next. The last return value is used as the actual DOM value.
+
+  This simple example shows a formatter that would convert the model value to uppercase:
+
+ * ```js
+ * function format(value) {
+ *   if (value) {
+ *     return value.toUpperCase();
+ *   }
+ * }
+ * ngModel.$formatters.push(format);
+ * ```
+ *
+ * @property {Object.<string, function>} $validators A collection of validators that are applied
+ *      whenever the model value changes. The key value within the object refers to the name of the
+ *      validator while the function refers to the validation operation. The validation operation is
+ *      provided with the model value as an argument and must return a true or false value depending
+ *      on the response of that validation.
+ *
+ * ```js
+ * ngModel.$validators.validCharacters = function(modelValue, viewValue) {
+ *   var value = modelValue || viewValue;
+ *   return /[0-9]+/.test(value) &&
+ *          /[a-z]+/.test(value) &&
+ *          /[A-Z]+/.test(value) &&
+ *          /\W+/.test(value);
+ * };
+ * ```
+ *
+ * @property {Object.<string, function>} $asyncValidators A collection of validations that are expected to
+ *      perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided
+ *      is expected to return a promise when it is run during the model validation process. Once the promise
+ *      is delivered then the validation status will be set to true when fulfilled and false when rejected.
+ *      When the asynchronous validators are triggered, each of the validators will run in parallel and the model
+ *      value will only be updated once all validators have been fulfilled. As long as an asynchronous validator
+ *      is unfulfilled, its key will be added to the controllers `$pending` property. Also, all asynchronous validators
+ *      will only run once all synchronous validators have passed.
+ *
+ * Please note that if $http is used then it is important that the server returns a success HTTP response code
+ * in order to fulfill the validation and a status level of `4xx` in order to reject the validation.
+ *
+ * ```js
+ * ngModel.$asyncValidators.uniqueUsername = function(modelValue, viewValue) {
+ *   var value = modelValue || viewValue;
+ *
+ *   // Lookup user by username
+ *   return $http.get('/api/users/' + value).
+ *      then(function resolved() {
+ *        //username exists, this means validation fails
+ *        return $q.reject('exists');
+ *      }, function rejected() {
+ *        //username does not exist, therefore this validation passes
+ *        return true;
+ *      });
+ * };
+ * ```
+ *
+ * @property {Array.<Function>} $viewChangeListeners Array of functions to execute whenever
+ *     a change to {@link ngModel.NgModelController#$viewValue `$viewValue`} has caused a change
+ *     to {@link ngModel.NgModelController#$modelValue `$modelValue`}.
+ *     It is called with no arguments, and its return value is ignored.
+ *     This can be used in place of additional $watches against the model value.
+ *
+ * @property {Object} $error An object hash with all failing validator ids as keys.
+ * @property {Object} $pending An object hash with all pending validator ids as keys.
+ *
+ * @property {boolean} $untouched True if control has not lost focus yet.
+ * @property {boolean} $touched True if control has lost focus.
+ * @property {boolean} $pristine True if user has not interacted with the control yet.
+ * @property {boolean} $dirty True if user has already interacted with the control.
+ * @property {boolean} $valid True if there is no error.
+ * @property {boolean} $invalid True if at least one error on the control.
+ * @property {string} $name The name attribute of the control.
+ *
+ * @description
+ *
+ * `NgModelController` provides API for the {@link ngModel `ngModel`} directive.
+ * The controller contains services for data-binding, validation, CSS updates, and value formatting
+ * and parsing. It purposefully does not contain any logic which deals with DOM rendering or
+ * listening to DOM events.
+ * Such DOM related logic should be provided by other directives which make use of
+ * `NgModelController` for data-binding to control elements.
+ * AngularJS provides this DOM logic for most {@link input `input`} elements.
+ * At the end of this page you can find a {@link ngModel.NgModelController#custom-control-example
+ * custom control example} that uses `ngModelController` to bind to `contenteditable` elements.
+ *
+ * @example
+ * ### Custom Control Example
+ * This example shows how to use `NgModelController` with a custom control to achieve
+ * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)
+ * collaborate together to achieve the desired result.
+ *
+ * `contenteditable` is an HTML5 attribute, which tells the browser to let the element
+ * contents be edited in place by the user.
+ *
+ * We are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}
+ * module to automatically remove "bad" content like inline event listener (e.g. `<span onclick="...">`).
+ * However, as we are using `$sce` the model can still decide to provide unsafe content if it marks
+ * that content using the `$sce` service.
+ *
+ * <example name="NgModelController" module="customControl" deps="angular-sanitize.js">
+    <file name="style.css">
+      [contenteditable] {
+        border: 1px solid black;
+        background-color: white;
+        min-height: 20px;
+      }
+
+      .ng-invalid {
+        border: 1px solid red;
+      }
+
+    </file>
+    <file name="script.js">
+      angular.module('customControl', ['ngSanitize']).
+        directive('contenteditable', ['$sce', function($sce) {
+          return {
+            restrict: 'A', // only activate on element attribute
+            require: '?ngModel', // get a hold of NgModelController
+            link: function(scope, element, attrs, ngModel) {
+              if (!ngModel) return; // do nothing if no ng-model
+
+              // Specify how UI should be updated
+              ngModel.$render = function() {
+                element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));
+              };
+
+              // Listen for change events to enable binding
+              element.on('blur keyup change', function() {
+                scope.$evalAsync(read);
+              });
+              read(); // initialize
+
+              // Write data to the model
+              function read() {
+                var html = element.html();
+                // When we clear the content editable the browser leaves a <br> behind
+                // If strip-br attribute is provided then we strip this out
+                if (attrs.stripBr && html === '<br>') {
+                  html = '';
+                }
+                ngModel.$setViewValue(html);
+              }
+            }
+          };
+        }]);
+    </file>
+    <file name="index.html">
+      <form name="myForm">
+       <div contenteditable
+            name="myWidget" ng-model="userContent"
+            strip-br="true"
+            required>Change me!</div>
+        <span ng-show="myForm.myWidget.$error.required">Required!</span>
+       <hr>
+       <textarea ng-model="userContent" aria-label="Dynamic textarea"></textarea>
+      </form>
+    </file>
+    <file name="protractor.js" type="protractor">
+    it('should data-bind and become invalid', function() {
+      if (browser.params.browser === 'safari' || browser.params.browser === 'firefox') {
+        // SafariDriver can't handle contenteditable
+        // and Firefox driver can't clear contenteditables very well
+        return;
+      }
+      var contentEditable = element(by.css('[contenteditable]'));
+      var content = 'Change me!';
+
+      expect(contentEditable.getText()).toEqual(content);
+
+      contentEditable.clear();
+      contentEditable.sendKeys(protractor.Key.BACK_SPACE);
+      expect(contentEditable.getText()).toEqual('');
+      expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);
+    });
+    </file>
+ * </example>
+ *
+ *
+ */
+NgModelController.$inject = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse', '$animate', '$timeout', '$q', '$interpolate'];
+function NgModelController($scope, $exceptionHandler, $attr, $element, $parse, $animate, $timeout, $q, $interpolate) {
+  this.$viewValue = Number.NaN;
+  this.$modelValue = Number.NaN;
+  this.$$rawModelValue = undefined; // stores the parsed modelValue / model set from scope regardless of validity.
+  this.$validators = {};
+  this.$asyncValidators = {};
+  this.$parsers = [];
+  this.$formatters = [];
+  this.$viewChangeListeners = [];
+  this.$untouched = true;
+  this.$touched = false;
+  this.$pristine = true;
+  this.$dirty = false;
+  this.$valid = true;
+  this.$invalid = false;
+  this.$error = {}; // keep invalid keys here
+  this.$$success = {}; // keep valid keys here
+  this.$pending = undefined; // keep pending keys here
+  this.$name = $interpolate($attr.name || '', false)($scope);
+  this.$$parentForm = nullFormCtrl;
+  this.$options = defaultModelOptions;
+  this.$$updateEvents = '';
+  // Attach the correct context to the event handler function for updateOn
+  this.$$updateEventHandler = this.$$updateEventHandler.bind(this);
+
+  this.$$parsedNgModel = $parse($attr.ngModel);
+  this.$$parsedNgModelAssign = this.$$parsedNgModel.assign;
+  this.$$ngModelGet = this.$$parsedNgModel;
+  this.$$ngModelSet = this.$$parsedNgModelAssign;
+  this.$$pendingDebounce = null;
+  this.$$parserValid = undefined;
+  this.$$parserName = 'parse';
+
+  this.$$currentValidationRunId = 0;
+
+  this.$$scope = $scope;
+  this.$$rootScope = $scope.$root;
+  this.$$attr = $attr;
+  this.$$element = $element;
+  this.$$animate = $animate;
+  this.$$timeout = $timeout;
+  this.$$parse = $parse;
+  this.$$q = $q;
+  this.$$exceptionHandler = $exceptionHandler;
+
+  setupValidity(this);
+  setupModelWatcher(this);
+}
+
+NgModelController.prototype = {
+  $$initGetterSetters: function() {
+    if (this.$options.getOption('getterSetter')) {
+      var invokeModelGetter = this.$$parse(this.$$attr.ngModel + '()'),
+          invokeModelSetter = this.$$parse(this.$$attr.ngModel + '($$$p)');
+
+      this.$$ngModelGet = function($scope) {
+        var modelValue = this.$$parsedNgModel($scope);
+        if (isFunction(modelValue)) {
+          modelValue = invokeModelGetter($scope);
+        }
+        return modelValue;
+      };
+      this.$$ngModelSet = function($scope, newValue) {
+        if (isFunction(this.$$parsedNgModel($scope))) {
+          invokeModelSetter($scope, {$$$p: newValue});
+        } else {
+          this.$$parsedNgModelAssign($scope, newValue);
+        }
+      };
+    } else if (!this.$$parsedNgModel.assign) {
+      throw ngModelMinErr('nonassign', 'Expression \'{0}\' is non-assignable. Element: {1}',
+          this.$$attr.ngModel, startingTag(this.$$element));
+    }
+  },
+
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$render
+   *
+   * @description
+   * Called when the view needs to be updated. It is expected that the user of the ng-model
+   * directive will implement this method.
+   *
+   * The `$render()` method is invoked in the following situations:
+   *
+   * * `$rollbackViewValue()` is called.  If we are rolling back the view value to the last
+   *   committed value then `$render()` is called to update the input control.
+   * * The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and
+   *   the `$viewValue` are different from last time.
+   *
+   * Since `ng-model` does not do a deep watch, `$render()` is only invoked if the values of
+   * `$modelValue` and `$viewValue` are actually different from their previous values. If `$modelValue`
+   * or `$viewValue` are objects (rather than a string or number) then `$render()` will not be
+   * invoked if you only change a property on the objects.
+   */
+  $render: noop,
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$isEmpty
+   *
+   * @description
+   * This is called when we need to determine if the value of an input is empty.
+   *
+   * For instance, the required directive does this to work out if the input has data or not.
+   *
+   * The default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.
+   *
+   * You can override this for input directives whose concept of being empty is different from the
+   * default. The `checkboxInputType` directive does this because in its case a value of `false`
+   * implies empty.
+   *
+   * @param {*} value The value of the input to check for emptiness.
+   * @returns {boolean} True if `value` is "empty".
+   */
+  $isEmpty: function(value) {
+    // eslint-disable-next-line no-self-compare
+    return isUndefined(value) || value === '' || value === null || value !== value;
+  },
+
+  $$updateEmptyClasses: function(value) {
+    if (this.$isEmpty(value)) {
+      this.$$animate.removeClass(this.$$element, NOT_EMPTY_CLASS);
+      this.$$animate.addClass(this.$$element, EMPTY_CLASS);
+    } else {
+      this.$$animate.removeClass(this.$$element, EMPTY_CLASS);
+      this.$$animate.addClass(this.$$element, NOT_EMPTY_CLASS);
+    }
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$setPristine
+   *
+   * @description
+   * Sets the control to its pristine state.
+   *
+   * This method can be called to remove the `ng-dirty` class and set the control to its pristine
+   * state (`ng-pristine` class). A model is considered to be pristine when the control
+   * has not been changed from when first compiled.
+   */
+  $setPristine: function() {
+    this.$dirty = false;
+    this.$pristine = true;
+    this.$$animate.removeClass(this.$$element, DIRTY_CLASS);
+    this.$$animate.addClass(this.$$element, PRISTINE_CLASS);
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$setDirty
+   *
+   * @description
+   * Sets the control to its dirty state.
+   *
+   * This method can be called to remove the `ng-pristine` class and set the control to its dirty
+   * state (`ng-dirty` class). A model is considered to be dirty when the control has been changed
+   * from when first compiled.
+   */
+  $setDirty: function() {
+    this.$dirty = true;
+    this.$pristine = false;
+    this.$$animate.removeClass(this.$$element, PRISTINE_CLASS);
+    this.$$animate.addClass(this.$$element, DIRTY_CLASS);
+    this.$$parentForm.$setDirty();
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$setUntouched
+   *
+   * @description
+   * Sets the control to its untouched state.
+   *
+   * This method can be called to remove the `ng-touched` class and set the control to its
+   * untouched state (`ng-untouched` class). Upon compilation, a model is set as untouched
+   * by default, however this function can be used to restore that state if the model has
+   * already been touched by the user.
+   */
+  $setUntouched: function() {
+    this.$touched = false;
+    this.$untouched = true;
+    this.$$animate.setClass(this.$$element, UNTOUCHED_CLASS, TOUCHED_CLASS);
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$setTouched
+   *
+   * @description
+   * Sets the control to its touched state.
+   *
+   * This method can be called to remove the `ng-untouched` class and set the control to its
+   * touched state (`ng-touched` class). A model is considered to be touched when the user has
+   * first focused the control element and then shifted focus away from the control (blur event).
+   */
+  $setTouched: function() {
+    this.$touched = true;
+    this.$untouched = false;
+    this.$$animate.setClass(this.$$element, TOUCHED_CLASS, UNTOUCHED_CLASS);
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$rollbackViewValue
+   *
+   * @description
+   * Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,
+   * which may be caused by a pending debounced event or because the input is waiting for some
+   * future event.
+   *
+   * If you have an input that uses `ng-model-options` to set up debounced updates or updates that
+   * depend on special events such as `blur`, there can be a period when the `$viewValue` is out of
+   * sync with the ngModel's `$modelValue`.
+   *
+   * In this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update
+   * and reset the input to the last committed view value.
+   *
+   * It is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`
+   * programmatically before these debounced/future events have resolved/occurred, because AngularJS's
+   * dirty checking mechanism is not able to tell whether the model has actually changed or not.
+   *
+   * The `$rollbackViewValue()` method should be called before programmatically changing the model of an
+   * input which may have such events pending. This is important in order to make sure that the
+   * input field will be updated with the new model value and any pending operations are cancelled.
+   *
+   * @example
+   * <example name="ng-model-cancel-update" module="cancel-update-example">
+   *   <file name="app.js">
+   *     angular.module('cancel-update-example', [])
+   *
+   *     .controller('CancelUpdateController', ['$scope', function($scope) {
+   *       $scope.model = {value1: '', value2: ''};
+   *
+   *       $scope.setEmpty = function(e, value, rollback) {
+   *         if (e.keyCode === 27) {
+   *           e.preventDefault();
+   *           if (rollback) {
+   *             $scope.myForm[value].$rollbackViewValue();
+   *           }
+   *           $scope.model[value] = '';
+   *         }
+   *       };
+   *     }]);
+   *   </file>
+   *   <file name="index.html">
+   *     <div ng-controller="CancelUpdateController">
+   *       <p>Both of these inputs are only updated if they are blurred. Hitting escape should
+   *       empty them. Follow these steps and observe the difference:</p>
+   *       <ol>
+   *         <li>Type something in the input. You will see that the model is not yet updated</li>
+   *         <li>Press the Escape key.
+   *           <ol>
+   *             <li> In the first example, nothing happens, because the model is already '', and no
+   *             update is detected. If you blur the input, the model will be set to the current view.
+   *             </li>
+   *             <li> In the second example, the pending update is cancelled, and the input is set back
+   *             to the last committed view value (''). Blurring the input does nothing.
+   *             </li>
+   *           </ol>
+   *         </li>
+   *       </ol>
+   *
+   *       <form name="myForm" ng-model-options="{ updateOn: 'blur' }">
+   *         <div>
+   *           <p id="inputDescription1">Without $rollbackViewValue():</p>
+   *           <input name="value1" aria-describedby="inputDescription1" ng-model="model.value1"
+   *                  ng-keydown="setEmpty($event, 'value1')">
+   *           value1: "{{ model.value1 }}"
+   *         </div>
+   *
+   *         <div>
+   *           <p id="inputDescription2">With $rollbackViewValue():</p>
+   *           <input name="value2" aria-describedby="inputDescription2" ng-model="model.value2"
+   *                  ng-keydown="setEmpty($event, 'value2', true)">
+   *           value2: "{{ model.value2 }}"
+   *         </div>
+   *       </form>
+   *     </div>
+   *   </file>
+       <file name="style.css">
+          div {
+            display: table-cell;
+          }
+          div:nth-child(1) {
+            padding-right: 30px;
+          }
+
+        </file>
+   * </example>
+   */
+  $rollbackViewValue: function() {
+    this.$$timeout.cancel(this.$$pendingDebounce);
+    this.$viewValue = this.$$lastCommittedViewValue;
+    this.$render();
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$validate
+   *
+   * @description
+   * Runs each of the registered validators (first synchronous validators and then
+   * asynchronous validators).
+   * If the validity changes to invalid, the model will be set to `undefined`,
+   * unless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.
+   * If the validity changes to valid, it will set the model to the last available valid
+   * `$modelValue`, i.e. either the last parsed value or the last value set from the scope.
+   */
+  $validate: function() {
+
+    // ignore $validate before model is initialized
+    if (isNumberNaN(this.$modelValue)) {
+      return;
+    }
+
+    var viewValue = this.$$lastCommittedViewValue;
+    // Note: we use the $$rawModelValue as $modelValue might have been
+    // set to undefined during a view -> model update that found validation
+    // errors. We can't parse the view here, since that could change
+    // the model although neither viewValue nor the model on the scope changed
+    var modelValue = this.$$rawModelValue;
+
+    var prevValid = this.$valid;
+    var prevModelValue = this.$modelValue;
+
+    var allowInvalid = this.$options.getOption('allowInvalid');
+
+    var that = this;
+    this.$$runValidators(modelValue, viewValue, function(allValid) {
+      // If there was no change in validity, don't update the model
+      // This prevents changing an invalid modelValue to undefined
+      if (!allowInvalid && prevValid !== allValid) {
+        // Note: Don't check this.$valid here, as we could have
+        // external validators (e.g. calculated on the server),
+        // that just call $setValidity and need the model value
+        // to calculate their validity.
+        that.$modelValue = allValid ? modelValue : undefined;
+
+        if (that.$modelValue !== prevModelValue) {
+          that.$$writeModelToScope();
+        }
+      }
+    });
+  },
+
+  $$runValidators: function(modelValue, viewValue, doneCallback) {
+    this.$$currentValidationRunId++;
+    var localValidationRunId = this.$$currentValidationRunId;
+    var that = this;
+
+    // check parser error
+    if (!processParseErrors()) {
+      validationDone(false);
+      return;
+    }
+    if (!processSyncValidators()) {
+      validationDone(false);
+      return;
+    }
+    processAsyncValidators();
+
+    function processParseErrors() {
+      var errorKey = that.$$parserName;
+
+      if (isUndefined(that.$$parserValid)) {
+        setValidity(errorKey, null);
+      } else {
+        if (!that.$$parserValid) {
+          forEach(that.$validators, function(v, name) {
+            setValidity(name, null);
+          });
+          forEach(that.$asyncValidators, function(v, name) {
+            setValidity(name, null);
+          });
+        }
+
+        // Set the parse error last, to prevent unsetting it, should a $validators key == parserName
+        setValidity(errorKey, that.$$parserValid);
+        return that.$$parserValid;
+      }
+      return true;
+    }
+
+    function processSyncValidators() {
+      var syncValidatorsValid = true;
+      forEach(that.$validators, function(validator, name) {
+        var result = Boolean(validator(modelValue, viewValue));
+        syncValidatorsValid = syncValidatorsValid && result;
+        setValidity(name, result);
+      });
+      if (!syncValidatorsValid) {
+        forEach(that.$asyncValidators, function(v, name) {
+          setValidity(name, null);
+        });
+        return false;
+      }
+      return true;
+    }
+
+    function processAsyncValidators() {
+      var validatorPromises = [];
+      var allValid = true;
+      forEach(that.$asyncValidators, function(validator, name) {
+        var promise = validator(modelValue, viewValue);
+        if (!isPromiseLike(promise)) {
+          throw ngModelMinErr('nopromise',
+            'Expected asynchronous validator to return a promise but got \'{0}\' instead.', promise);
+        }
+        setValidity(name, undefined);
+        validatorPromises.push(promise.then(function() {
+          setValidity(name, true);
+        }, function() {
+          allValid = false;
+          setValidity(name, false);
+        }));
+      });
+      if (!validatorPromises.length) {
+        validationDone(true);
+      } else {
+        that.$$q.all(validatorPromises).then(function() {
+          validationDone(allValid);
+        }, noop);
+      }
+    }
+
+    function setValidity(name, isValid) {
+      if (localValidationRunId === that.$$currentValidationRunId) {
+        that.$setValidity(name, isValid);
+      }
+    }
+
+    function validationDone(allValid) {
+      if (localValidationRunId === that.$$currentValidationRunId) {
+
+        doneCallback(allValid);
+      }
+    }
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$commitViewValue
+   *
+   * @description
+   * Commit a pending update to the `$modelValue`.
+   *
+   * Updates may be pending by a debounced event or because the input is waiting for a some future
+   * event defined in `ng-model-options`. this method is rarely needed as `NgModelController`
+   * usually handles calling this in response to input events.
+   */
+  $commitViewValue: function() {
+    var viewValue = this.$viewValue;
+
+    this.$$timeout.cancel(this.$$pendingDebounce);
+
+    // If the view value has not changed then we should just exit, except in the case where there is
+    // a native validator on the element. In this case the validation state may have changed even though
+    // the viewValue has stayed empty.
+    if (this.$$lastCommittedViewValue === viewValue && (viewValue !== '' || !this.$$hasNativeValidators)) {
+      return;
+    }
+    this.$$updateEmptyClasses(viewValue);
+    this.$$lastCommittedViewValue = viewValue;
+
+    // change to dirty
+    if (this.$pristine) {
+      this.$setDirty();
+    }
+    this.$$parseAndValidate();
+  },
+
+  $$parseAndValidate: function() {
+    var viewValue = this.$$lastCommittedViewValue;
+    var modelValue = viewValue;
+    var that = this;
+
+    this.$$parserValid = isUndefined(modelValue) ? undefined : true;
+
+    // Reset any previous parse error
+    this.$setValidity(this.$$parserName, null);
+    this.$$parserName = 'parse';
+
+    if (this.$$parserValid) {
+      for (var i = 0; i < this.$parsers.length; i++) {
+        modelValue = this.$parsers[i](modelValue);
+        if (isUndefined(modelValue)) {
+          this.$$parserValid = false;
+          break;
+        }
+      }
+    }
+    if (isNumberNaN(this.$modelValue)) {
+      // this.$modelValue has not been touched yet...
+      this.$modelValue = this.$$ngModelGet(this.$$scope);
+    }
+    var prevModelValue = this.$modelValue;
+    var allowInvalid = this.$options.getOption('allowInvalid');
+    this.$$rawModelValue = modelValue;
+
+    if (allowInvalid) {
+      this.$modelValue = modelValue;
+      writeToModelIfNeeded();
+    }
+
+    // Pass the $$lastCommittedViewValue here, because the cached viewValue might be out of date.
+    // This can happen if e.g. $setViewValue is called from inside a parser
+    this.$$runValidators(modelValue, this.$$lastCommittedViewValue, function(allValid) {
+      if (!allowInvalid) {
+        // Note: Don't check this.$valid here, as we could have
+        // external validators (e.g. calculated on the server),
+        // that just call $setValidity and need the model value
+        // to calculate their validity.
+        that.$modelValue = allValid ? modelValue : undefined;
+        writeToModelIfNeeded();
+      }
+    });
+
+    function writeToModelIfNeeded() {
+      if (that.$modelValue !== prevModelValue) {
+        that.$$writeModelToScope();
+      }
+    }
+  },
+
+  $$writeModelToScope: function() {
+    this.$$ngModelSet(this.$$scope, this.$modelValue);
+    forEach(this.$viewChangeListeners, function(listener) {
+      try {
+        listener();
+      } catch (e) {
+        // eslint-disable-next-line no-invalid-this
+        this.$$exceptionHandler(e);
+      }
+    }, this);
+  },
+
+  /**
+   * @ngdoc method
+   * @name ngModel.NgModelController#$setViewValue
+   *
+   * @description
+   * Update the view value.
+   *
+   * This method should be called when a control wants to change the view value; typically,
+   * this is done from within a DOM event handler. For example, the {@link ng.directive:input input}
+   * directive calls it when the value of the input changes and {@link ng.directive:select select}
+   * calls it when an option is selected.
+   *
+   * When `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`
+   * and `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged
+   * value is sent directly for processing through the `$parsers` pipeline. After this, the `$validators` and
+   * `$asyncValidators` are called and the value is applied to `$modelValue`.
+   * Finally, the value is set to the **expression** specified in the `ng-model` attribute and
+   * all the registered change listeners, in the `$viewChangeListeners` list are called.
+   *
+   * In case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`
+   * and the `default` trigger is not listed, all those actions will remain pending until one of the
+   * `updateOn` events is triggered on the DOM element.
+   * All these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}
+   * directive is used with a custom debounce for this particular event.
+   * Note that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`
+   * is specified, once the timer runs out.
+   *
+   * When used with standard inputs, the view value will always be a string (which is in some cases
+   * parsed into another type, such as a `Date` object for `input[date]`.)
+   * However, custom controls might also pass objects to this method. In this case, we should make
+   * a copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not
+   * perform a deep watch of objects, it only looks for a change of identity. If you only change
+   * the property of the object then ngModel will not realize that the object has changed and
+   * will not invoke the `$parsers` and `$validators` pipelines. For this reason, you should
+   * not change properties of the copy once it has been passed to `$setViewValue`.
+   * Otherwise you may cause the model value on the scope to change incorrectly.
+   *
+   * <div class="alert alert-info">
+   * In any case, the value passed to the method should always reflect the current value
+   * of the control. For example, if you are calling `$setViewValue` for an input element,
+   * you should pass the input DOM value. Otherwise, the control and the scope model become
+   * out of sync. It's also important to note that `$setViewValue` does not call `$render` or change
+   * the control's DOM value in any way. If we want to change the control's DOM value
+   * programmatically, we should update the `ngModel` scope expression. Its new value will be
+   * picked up by the model controller, which will run it through the `$formatters`, `$render` it
+   * to update the DOM, and finally call `$validate` on it.
+   * </div>
+   *
+   * @param {*} value value from the view.
+   * @param {string} trigger Event that triggered the update.
+   */
+  $setViewValue: function(value, trigger) {
+    this.$viewValue = value;
+    if (this.$options.getOption('updateOnDefault')) {
+      this.$$debounceViewValueCommit(trigger);
+    }
+  },
+
+  $$debounceViewValueCommit: function(trigger) {
+    var debounceDelay = this.$options.getOption('debounce');
+
+    if (isNumber(debounceDelay[trigger])) {
+      debounceDelay = debounceDelay[trigger];
+    } else if (isNumber(debounceDelay['default']) &&
+      this.$options.getOption('updateOn').indexOf(trigger) === -1
+    ) {
+      debounceDelay = debounceDelay['default'];
+    } else if (isNumber(debounceDelay['*'])) {
+      debounceDelay = debounceDelay['*'];
+    }
+
+    this.$$timeout.cancel(this.$$pendingDebounce);
+    var that = this;
+    if (debounceDelay > 0) { // this fails if debounceDelay is an object
+      this.$$pendingDebounce = this.$$timeout(function() {
+        that.$commitViewValue();
+      }, debounceDelay);
+    } else if (this.$$rootScope.$$phase) {
+      this.$commitViewValue();
+    } else {
+      this.$$scope.$apply(function() {
+        that.$commitViewValue();
+      });
+    }
+  },
+
+  /**
+   * @ngdoc method
+   *
+   * @name ngModel.NgModelController#$overrideModelOptions
+   *
+   * @description
+   *
+   * Override the current model options settings programmatically.
+   *
+   * The previous `ModelOptions` value will not be modified. Instead, a
+   * new `ModelOptions` object will inherit from the previous one overriding
+   * or inheriting settings that are defined in the given parameter.
+   *
+   * See {@link ngModelOptions} for information about what options can be specified
+   * and how model option inheritance works.
+   *
+   * <div class="alert alert-warning">
+   * **Note:** this function only affects the options set on the `ngModelController`,
+   * and not the options on the {@link ngModelOptions} directive from which they might have been
+   * obtained initially.
+   * </div>
+   *
+   * <div class="alert alert-danger">
+   * **Note:** it is not possible to override the `getterSetter` option.
+   * </div>
+   *
+   * @param {Object} options a hash of settings to override the previous options
+   *
+   */
+  $overrideModelOptions: function(options) {
+    this.$options = this.$options.createChild(options);
+    this.$$setUpdateOnEvents();
+  },
+
+  /**
+   * @ngdoc method
+   *
+   * @name  ngModel.NgModelController#$processModelValue
+
+   * @description
+   *
+   * Runs the model -> view pipeline on the current
+   * {@link ngModel.NgModelController#$modelValue $modelValue}.
+   *
+   * The following actions are performed by this method:
+   *
+   * - the `$modelValue` is run through the {@link ngModel.NgModelController#$formatters $formatters}
+   * and the result is set to the {@link ngModel.NgModelController#$viewValue $viewValue}
+   * - the `ng-empty` or `ng-not-empty` class is set on the element
+   * - if the `$viewValue` has changed:
+   *   - {@link ngModel.NgModelController#$render $render} is called on the control
+   *   - the {@link ngModel.NgModelController#$validators $validators} are run and
+   *   the validation status is set.
+   *
+   * This method is called by ngModel internally when the bound scope value changes.
+   * Application developers usually do not have to call this function themselves.
+   *
+   * This function can be used when the `$viewValue` or the rendered DOM value are not correctly
+   * formatted and the `$modelValue` must be run through the `$formatters` again.
+   *
+   * @example
+   * Consider a text input with an autocomplete list (for fruit), where the items are
+   * objects with a name and an id.
+   * A user enters `ap` and then selects `Apricot` from the list.
+   * Based on this, the autocomplete widget will call `$setViewValue({name: 'Apricot', id: 443})`,
+   * but the rendered value will still be `ap`.
+   * The widget can then call `ctrl.$processModelValue()` to run the model -> view
+   * pipeline again, which formats the object to the string `Apricot`,
+   * then updates the `$viewValue`, and finally renders it in the DOM.
+   *
+   * <example module="inputExample" name="ng-model-process">
+     <file name="index.html">
+      <div ng-controller="inputController" style="display: flex;">
+        <div style="margin-right: 30px;">
+          Search Fruit:
+          <basic-autocomplete items="items" on-select="selectedFruit = item"></basic-autocomplete>
+        </div>
+        <div>
+          Model:<br>
+          <pre>{{selectedFruit | json}}</pre>
+        </div>
+      </div>
+     </file>
+     <file name="app.js">
+      angular.module('inputExample', [])
+        .controller('inputController', function($scope) {
+          $scope.items = [
+            {name: 'Apricot', id: 443},
+            {name: 'Clementine', id: 972},
+            {name: 'Durian', id: 169},
+            {name: 'Jackfruit', id: 982},
+            {name: 'Strawberry', id: 863}
+          ];
+        })
+        .component('basicAutocomplete', {
+          bindings: {
+            items: '<',
+            onSelect: '&'
+          },
+          templateUrl: 'autocomplete.html',
+          controller: function($element, $scope) {
+            var that = this;
+            var ngModel;
+
+            that.$postLink = function() {
+              ngModel = $element.find('input').controller('ngModel');
+
+              ngModel.$formatters.push(function(value) {
+                return (value && value.name) || value;
+              });
+
+              ngModel.$parsers.push(function(value) {
+                var match = value;
+                for (var i = 0; i < that.items.length; i++) {
+                  if (that.items[i].name === value) {
+                    match = that.items[i];
+                    break;
+                  }
+                }
+
+                return match;
+              });
+            };
+
+            that.selectItem = function(item) {
+              ngModel.$setViewValue(item);
+              ngModel.$processModelValue();
+              that.onSelect({item: item});
+            };
+          }
+        });
+     </file>
+     <file name="autocomplete.html">
+       <div>
+         <input type="search" ng-model="$ctrl.searchTerm" />
+         <ul>
+           <li ng-repeat="item in $ctrl.items | filter:$ctrl.searchTerm">
+             <button ng-click="$ctrl.selectItem(item)">{{ item.name }}</button>
+           </li>
+         </ul>
+       </div>
+     </file>
+   * </example>
+   *
+   */
+  $processModelValue: function() {
+    var viewValue = this.$$format();
+
+    if (this.$viewValue !== viewValue) {
+      this.$$updateEmptyClasses(viewValue);
+      this.$viewValue = this.$$lastCommittedViewValue = viewValue;
+      this.$render();
+      // It is possible that model and view value have been updated during render
+      this.$$runValidators(this.$modelValue, this.$viewValue, noop);
+    }
+  },
+
+  /**
+   * This method is called internally to run the $formatters on the $modelValue
+   */
+  $$format: function() {
+    var formatters = this.$formatters,
+        idx = formatters.length;
+
+    var viewValue = this.$modelValue;
+    while (idx--) {
+      viewValue = formatters[idx](viewValue);
+    }
+
+    return viewValue;
+  },
+
+  /**
+   * This method is called internally when the bound scope value changes.
+   */
+  $$setModelValue: function(modelValue) {
+    this.$modelValue = this.$$rawModelValue = modelValue;
+    this.$$parserValid = undefined;
+    this.$processModelValue();
+  },
+
+  $$setUpdateOnEvents: function() {
+    if (this.$$updateEvents) {
+      this.$$element.off(this.$$updateEvents, this.$$updateEventHandler);
+    }
+
+    this.$$updateEvents = this.$options.getOption('updateOn');
+    if (this.$$updateEvents) {
+      this.$$element.on(this.$$updateEvents, this.$$updateEventHandler);
+    }
+  },
+
+  $$updateEventHandler: function(ev) {
+    this.$$debounceViewValueCommit(ev && ev.type);
+  }
+};
+
+function setupModelWatcher(ctrl) {
+  // model -> value
+  // Note: we cannot use a normal scope.$watch as we want to detect the following:
+  // 1. scope value is 'a'
+  // 2. user enters 'b'
+  // 3. ng-change kicks in and reverts scope value to 'a'
+  //    -> scope value did not change since the last digest as
+  //       ng-change executes in apply phase
+  // 4. view should be changed back to 'a'
+  ctrl.$$scope.$watch(function ngModelWatch(scope) {
+    var modelValue = ctrl.$$ngModelGet(scope);
+
+    // if scope model value and ngModel value are out of sync
+    // This cannot be moved to the action function, because it would not catch the
+    // case where the model is changed in the ngChange function or the model setter
+    if (modelValue !== ctrl.$modelValue &&
+      // checks for NaN is needed to allow setting the model to NaN when there's an asyncValidator
+      // eslint-disable-next-line no-self-compare
+      (ctrl.$modelValue === ctrl.$modelValue || modelValue === modelValue)
+    ) {
+      ctrl.$$setModelValue(modelValue);
+    }
+
+    return modelValue;
+  });
+}
+
+/**
+ * @ngdoc method
+ * @name ngModel.NgModelController#$setValidity
+ *
+ * @description
+ * Change the validity state, and notify the form.
+ *
+ * This method can be called within $parsers/$formatters or a custom validation implementation.
+ * However, in most cases it should be sufficient to use the `ngModel.$validators` and
+ * `ngModel.$asyncValidators` collections which will call `$setValidity` automatically.
+ *
+ * @param {string} validationErrorKey Name of the validator. The `validationErrorKey` will be assigned
+ *        to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`
+ *        (for unfulfilled `$asyncValidators`), so that it is available for data-binding.
+ *        The `validationErrorKey` should be in camelCase and will get converted into dash-case
+ *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`
+ *        classes and can be bound to as `{{ someForm.someControl.$error.myError }}`.
+ * @param {boolean} isValid Whether the current state is valid (true), invalid (false), pending (undefined),
+ *                          or skipped (null). Pending is used for unfulfilled `$asyncValidators`.
+ *                          Skipped is used by AngularJS when validators do not run because of parse errors and
+ *                          when `$asyncValidators` do not run because any of the `$validators` failed.
+ */
+addSetValidityMethod({
+  clazz: NgModelController,
+  set: function(object, property) {
+    object[property] = true;
+  },
+  unset: function(object, property) {
+    delete object[property];
+  }
+});
+
+
+/**
+ * @ngdoc directive
+ * @name ngModel
+ * @restrict A
+ * @priority 1
+ * @param {expression} ngModel assignable {@link guide/expression Expression} to bind to.
+ *
+ * @description
+ * The `ngModel` directive binds an `input`,`select`, `textarea` (or custom form control) to a
+ * property on the scope using {@link ngModel.NgModelController NgModelController},
+ * which is created and exposed by this directive.
+ *
+ * `ngModel` is responsible for:
+ *
+ * - Binding the view into the model, which other directives such as `input`, `textarea` or `select`
+ *   require.
+ * - Providing validation behavior (i.e. required, number, email, url).
+ * - Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).
+ * - Setting related css classes on the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`, `ng-touched`,
+ *   `ng-untouched`, `ng-empty`, `ng-not-empty`) including animations.
+ * - Registering the control with its parent {@link ng.directive:form form}.
+ *
+ * Note: `ngModel` will try to bind to the property given by evaluating the expression on the
+ * current scope. If the property doesn't already exist on this scope, it will be created
+ * implicitly and added to the scope.
+ *
+ * For best practices on using `ngModel`, see:
+ *
+ *  - [Understanding Scopes](https://github.com/angular/angular.js/wiki/Understanding-Scopes)
+ *
+ * For basic examples, how to use `ngModel`, see:
+ *
+ *  - {@link ng.directive:input input}
+ *    - {@link input[text] text}
+ *    - {@link input[checkbox] checkbox}
+ *    - {@link input[radio] radio}
+ *    - {@link input[number] number}
+ *    - {@link input[email] email}
+ *    - {@link input[url] url}
+ *    - {@link input[date] date}
+ *    - {@link input[datetime-local] datetime-local}
+ *    - {@link input[time] time}
+ *    - {@link input[month] month}
+ *    - {@link input[week] week}
+ *  - {@link ng.directive:select select}
+ *  - {@link ng.directive:textarea textarea}
+ *
+ * ## Complex Models (objects or collections)
+ *
+ * By default, `ngModel` watches the model by reference, not value. This is important to know when
+ * binding inputs to models that are objects (e.g. `Date`) or collections (e.g. arrays). If only properties of the
+ * object or collection change, `ngModel` will not be notified and so the input will not be  re-rendered.
+ *
+ * The model must be assigned an entirely new object or collection before a re-rendering will occur.
+ *
+ * Some directives have options that will cause them to use a custom `$watchCollection` on the model expression
+ * - for example, `ngOptions` will do so when a `track by` clause is included in the comprehension expression or
+ * if the select is given the `multiple` attribute.
+ *
+ * The `$watchCollection()` method only does a shallow comparison, meaning that changing properties deeper than the
+ * first level of the object (or only changing the properties of an item in the collection if it's an array) will still
+ * not trigger a re-rendering of the model.
+ *
+ * ## CSS classes
+ * The following CSS classes are added and removed on the associated input/select/textarea element
+ * depending on the validity of the model.
+ *
+ *  - `ng-valid`: the model is valid
+ *  - `ng-invalid`: the model is invalid
+ *  - `ng-valid-[key]`: for each valid key added by `$setValidity`
+ *  - `ng-invalid-[key]`: for each invalid key added by `$setValidity`
+ *  - `ng-pristine`: the control hasn't been interacted with yet
+ *  - `ng-dirty`: the control has been interacted with
+ *  - `ng-touched`: the control has been blurred
+ *  - `ng-untouched`: the control hasn't been blurred
+ *  - `ng-pending`: any `$asyncValidators` are unfulfilled
+ *  - `ng-empty`: the view does not contain a value or the value is deemed "empty", as defined
+ *     by the {@link ngModel.NgModelController#$isEmpty} method
+ *  - `ng-not-empty`: the view contains a non-empty value
+ *
+ * Keep in mind that ngAnimate can detect each of these classes when added and removed.
+ *
+ * @animations
+ * Animations within models are triggered when any of the associated CSS classes are added and removed
+ * on the input element which is attached to the model. These classes include: `.ng-pristine`, `.ng-dirty`,
+ * `.ng-invalid` and `.ng-valid` as well as any other validations that are performed on the model itself.
+ * The animations that are triggered within ngModel are similar to how they work in ngClass and
+ * animations can be hooked into using CSS transitions, keyframes as well as JS animations.
+ *
+ * The following example shows a simple way to utilize CSS transitions to style an input element
+ * that has been rendered as invalid after it has been validated:
+ *
+ * <pre>
+ * //be sure to include ngAnimate as a module to hook into more
+ * //advanced animations
+ * .my-input {
+ *   transition:0.5s linear all;
+ *   background: white;
+ * }
+ * .my-input.ng-invalid {
+ *   background: red;
+ *   color:white;
+ * }
+ * </pre>
+ *
+ * @example
+ * ### Basic Usage
+ * <example deps="angular-animate.js" animations="true" fixBase="true" module="inputExample" name="ng-model">
+     <file name="index.html">
+       <script>
+        angular.module('inputExample', [])
+          .controller('ExampleController', ['$scope', function($scope) {
+            $scope.val = '1';
+          }]);
+       </script>
+       <style>
+         .my-input {
+           transition:all linear 0.5s;
+           background: transparent;
+         }
+         .my-input.ng-invalid {
+           color:white;
+           background: red;
+         }
+       </style>
+       <p id="inputDescription">
+        Update input to see transitions when valid/invalid.
+        Integer is a valid value.
+       </p>
+       <form name="testForm" ng-controller="ExampleController">
+         <input ng-model="val" ng-pattern="/^\d+$/" name="anim" class="my-input"
+                aria-describedby="inputDescription" />
+       </form>
+     </file>
+ * </example>
+ *
+ * @example
+ * ### Binding to a getter/setter
+ *
+ * Sometimes it's helpful to bind `ngModel` to a getter/setter function.  A getter/setter is a
+ * function that returns a representation of the model when called with zero arguments, and sets
+ * the internal state of a model when called with an argument. It's sometimes useful to use this
+ * for models that have an internal representation that's different from what the model exposes
+ * to the view.
+ *
+ * <div class="alert alert-success">
+ * **Best Practice:** It's best to keep getters fast because AngularJS is likely to call them more
+ * frequently than other parts of your code.
+ * </div>
+ *
+ * You use this behavior by adding `ng-model-options="{ getterSetter: true }"` to an element that
+ * has `ng-model` attached to it. You can also add `ng-model-options="{ getterSetter: true }"` to
+ * a `<form>`, which will enable this behavior for all `<input>`s within it. See
+ * {@link ng.directive:ngModelOptions `ngModelOptions`} for more.
+ *
+ * The following example shows how to use `ngModel` with a getter/setter:
+ *
+ * @example
+ * <example name="ngModel-getter-setter" module="getterSetterExample">
+     <file name="index.html">
+       <div ng-controller="ExampleController">
+         <form name="userForm">
+           <label>Name:
+             <input type="text" name="userName"
+                    ng-model="user.name"
+                    ng-model-options="{ getterSetter: true }" />
+           </label>
+         </form>
+         <pre>user.name = <span ng-bind="user.name()"></span></pre>
+       </div>
+     </file>
+     <file name="app.js">
+       angular.module('getterSetterExample', [])
+         .controller('ExampleController', ['$scope', function($scope) {
+           var _name = 'Brian';
+           $scope.user = {
+             name: function(newName) {
+              // Note that newName can be undefined for two reasons:
+              // 1. Because it is called as a getter and thus called with no arguments
+              // 2. Because the property should actually be set to undefined. This happens e.g. if the
+              //    input is invalid
+              return arguments.length ? (_name = newName) : _name;
+             }
+           };
+         }]);
+     </file>
+ * </example>
+ */
+var ngModelDirective = ['$rootScope', function($rootScope) {
+  return {
+    restrict: 'A',
+    require: ['ngModel', '^?form', '^?ngModelOptions'],
+    controller: NgModelController,
+    // Prelink needs to run before any input directive
+    // so that we can set the NgModelOptions in NgModelController
+    // before anyone else uses it.
+    priority: 1,
+    compile: function ngModelCompile(element) {
+      // Setup initial state of the control
+      element.addClass(PRISTINE_CLASS).addClass(UNTOUCHED_CLASS).addClass(VALID_CLASS);
+
+      return {
+        pre: function ngModelPreLink(scope, element, attr, ctrls) {
+          var modelCtrl = ctrls[0],
+              formCtrl = ctrls[1] || modelCtrl.$$parentForm,
+              optionsCtrl = ctrls[2];
+
+          if (optionsCtrl) {
+            modelCtrl.$options = optionsCtrl.$options;
+          }
+
+          modelCtrl.$$initGetterSetters();
+
+          // notify others, especially parent forms
+          formCtrl.$addControl(modelCtrl);
+
+          attr.$observe('name', function(newValue) {
+            if (modelCtrl.$name !== newValue) {
+              modelCtrl.$$parentForm.$$renameControl(modelCtrl, newValue);
+            }
+          });
+
+          scope.$on('$destroy', function() {
+            modelCtrl.$$parentForm.$removeControl(modelCtrl);
+          });
+        },
+        post: function ngModelPostLink(scope, element, attr, ctrls) {
+          var modelCtrl = ctrls[0];
+          modelCtrl.$$setUpdateOnEvents();
+
+          function setTouched() {
+            modelCtrl.$setTouched();
+          }
+
+          element.on('blur', function() {
+            if (modelCtrl.$touched) return;
+
+            if ($rootScope.$$phase) {
+              scope.$evalAsync(setTouched);
+            } else {
+              scope.$apply(setTouched);
+            }
+          });
+        }
+      };
+    }
+  };
+}];
+
+/* exported defaultModelOptions */
+var defaultModelOptions;
+var DEFAULT_REGEXP = /(\s+|^)default(\s+|$)/;
+
+/**
+ * @ngdoc type
+ * @name ModelOptions
+ * @description
+ * A container for the options set by the {@link ngModelOptions} directive
+ */
+function ModelOptions(options) {
+  this.$$options = options;
+}
+
+ModelOptions.prototype = {
+
+  /**
+   * @ngdoc method
+   * @name ModelOptions#getOption
+   * @param {string} name the name of the option to retrieve
+   * @returns {*} the value of the option
+   * @description
+   * Returns the value of the given option
+   */
+  getOption: function(name) {
+    return this.$$options[name];
+  },
+
+  /**
+   * @ngdoc method
+   * @name ModelOptions#createChild
+   * @param {Object} options a hash of options for the new child that will override the parent's options
+   * @return {ModelOptions} a new `ModelOptions` object initialized with the given options.
+   */
+  createChild: function(options) {
+    var inheritAll = false;
+
+    // make a shallow copy
+    options = extend({}, options);
+
+    // Inherit options from the parent if specified by the value `"$inherit"`
+    forEach(options, /** @this */ function(option, key) {
+      if (option === '$inherit') {
+        if (key === '*') {
+          inheritAll = true;
+        } else {
+          options[key] = this.$$options[key];
+          // `updateOn` is special so we must also inherit the `updateOnDefault` option
+          if (key === 'updateOn') {
+            options.updateOnDefault = this.$$options.updateOnDefault;
+          }
+        }
+      } else {
+        if (key === 'updateOn') {
+          // If the `updateOn` property contains the `default` event then we have to remove
+          // it from the event list and set the `updateOnDefault` flag.
+          options.updateOnDefault = false;
+          options[key] = trim(option.replace(DEFAULT_REGEXP, function() {
+            options.updateOnDefault = true;
+            return ' ';
+          }));
+        }
+      }
+    }, this);
+
+    if (inheritAll) {
+      // We have a property of the form: `"*": "$inherit"`
+      delete options['*'];
+      defaults(options, this.$$options);
+    }
+
+    // Finally add in any missing defaults
+    defaults(options, defaultModelOptions.$$options);
+
+    return new ModelOptions(options);
+  }
+};
+
+
+defaultModelOptions = new ModelOptions({
+  updateOn: '',
+  updateOnDefault: true,
+  debounce: 0,
+  getterSetter: false,
+  allowInvalid: false,
+  timezone: null
+});
+
+
+/**
+ * @ngdoc directive
+ * @name ngModelOptions
+ * @restrict A
+ * @priority 10
+ *
+ * @description
+ * This directive allows you to modify the behaviour of {@link ngModel} directives within your
+ * application. You can specify an `ngModelOptions` directive on any element. All {@link ngModel}
+ * directives will use the options of their nearest `ngModelOptions` ancestor.
+ *
+ * The `ngModelOptions` settings are found by evaluating the value of the attribute directive as
+ * an AngularJS expression. This expression should evaluate to an object, whose properties contain
+ * the settings. For example: `<div ng-model-options="{ debounce: 100 }"`.
+ *
+ * ## Inheriting Options
+ *
+ * You can specify that an `ngModelOptions` setting should be inherited from a parent `ngModelOptions`
+ * directive by giving it the value of `"$inherit"`.
+ * Then it will inherit that setting from the first `ngModelOptions` directive found by traversing up the
+ * DOM tree. If there is no ancestor element containing an `ngModelOptions` directive then default settings
+ * will be used.
+ *
+ * For example given the following fragment of HTML
+ *
+ *
+ * ```html
+ * <div ng-model-options="{ allowInvalid: true, debounce: 200 }">
+ *   <form ng-model-options="{ updateOn: 'blur', allowInvalid: '$inherit' }">
+ *     <input ng-model-options="{ updateOn: 'default', allowInvalid: '$inherit' }" />
+ *   </form>
+ * </div>
+ * ```
+ *
+ * the `input` element will have the following settings
+ *
+ * ```js
+ * { allowInvalid: true, updateOn: 'default', debounce: 0 }
+ * ```
+ *
+ * Notice that the `debounce` setting was not inherited and used the default value instead.
+ *
+ * You can specify that all undefined settings are automatically inherited from an ancestor by
+ * including a property with key of `"*"` and value of `"$inherit"`.
+ *
+ * For example given the following fragment of HTML
+ *
+ *
+ * ```html
+ * <div ng-model-options="{ allowInvalid: true, debounce: 200 }">
+ *   <form ng-model-options="{ updateOn: 'blur', "*": '$inherit' }">
+ *     <input ng-model-options="{ updateOn: 'default', "*": '$inherit' }" />
+ *   </form>
+ * </div>
+ * ```
+ *
+ * the `input` element will have the following settings
+ *
+ * ```js
+ * { allowInvalid: true, updateOn: 'default', debounce: 200 }
+ * ```
+ *
+ * Notice that the `debounce` setting now inherits the value from the outer `<div>` element.
+ *
+ * If you are creating a reusable component then you should be careful when using `"*": "$inherit"`
+ * since you may inadvertently inherit a setting in the future that changes the behavior of your component.
+ *
+ *
+ * ## Triggering and debouncing model updates
+ *
+ * The `updateOn` and `debounce` properties allow you to specify a custom list of events that will
+ * trigger a model update and/or a debouncing delay so that the actual update only takes place when
+ * a timer expires; this timer will be reset after another change takes place.
+ *
+ * Given the nature of `ngModelOptions`, the value displayed inside input fields in the view might
+ * be different from the value in the actual model. This means that if you update the model you
+ * should also invoke {@link ngModel.NgModelController#$rollbackViewValue} on the relevant input field in
+ * order to make sure it is synchronized with the model and that any debounced action is canceled.
+ *
+ * The easiest way to reference the control's {@link ngModel.NgModelController#$rollbackViewValue}
+ * method is by making sure the input is placed inside a form that has a `name` attribute. This is
+ * important because `form` controllers are published to the related scope under the name in their
+ * `name` attribute.
+ *
+ * Any pending changes will take place immediately when an enclosing form is submitted via the
+ * `submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`
+ * to have access to the updated model.
+ *
+ * ### Overriding immediate updates
+ *
+ * The following example shows how to override immediate updates. Changes on the inputs within the
+ * form will update the model only when the control loses focus (blur event). If `escape` key is
+ * pressed while the input field is focused, the value is reset to the value in the current model.
+ *
+ * <example name="ngModelOptions-directive-blur" module="optionsExample">
+ *   <file name="index.html">
+ *     <div ng-controller="ExampleController">
+ *       <form name="userForm">
+ *         <label>
+ *           Name:
+ *           <input type="text" name="userName"
+ *                  ng-model="user.name"
+ *                  ng-model-options="{ updateOn: 'blur' }"
+ *                  ng-keyup="cancel($event)" />
+ *         </label><br />
+ *         <label>
+ *           Other data:
+ *           <input type="text" ng-model="user.data" />
+ *         </label><br />
+ *       </form>
+ *       <pre>user.name = <span ng-bind="user.name"></span></pre>
+ *     </div>
+ *   </file>
+ *   <file name="app.js">
+ *     angular.module('optionsExample', [])
+ *       .controller('ExampleController', ['$scope', function($scope) {
+ *         $scope.user = { name: 'say', data: '' };
+ *
+ *         $scope.cancel = function(e) {
+ *           if (e.keyCode === 27) {
+ *             $scope.userForm.userName.$rollbackViewValue();
+ *           }
+ *         };
+ *       }]);
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     var model = element(by.binding('user.name'));
+ *     var input = element(by.model('user.name'));
+ *     var other = element(by.model('user.data'));
+ *
+ *     it('should allow custom events', function() {
+ *       input.sendKeys(' hello');
+ *       input.click();
+ *       expect(model.getText()).toEqual('say');
+ *       other.click();
+ *       expect(model.getText()).toEqual('say hello');
+ *     });
+ *
+ *     it('should $rollbackViewValue when model changes', function() {
+ *       input.sendKeys(' hello');
+ *       expect(input.getAttribute('value')).toEqual('say hello');
+ *       input.sendKeys(protractor.Key.ESCAPE);
+ *       expect(input.getAttribute('value')).toEqual('say');
+ *       other.click();
+ *       expect(model.getText()).toEqual('say');
+ *     });
+ *   </file>
+ * </example>
+ *
+ * ### Debouncing updates
+ *
+ * The next example shows how to debounce model changes. Model will be updated only 1 sec after last change.
+ * If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.
+ *
+ * <example name="ngModelOptions-directive-debounce" module="optionsExample">
+ *   <file name="index.html">
+ *     <div ng-controller="ExampleController">
+ *       <form name="userForm">
+ *         Name:
+ *         <input type="text" name="userName"
+ *                ng-model="user.name"
+ *                ng-model-options="{ debounce: 1000 }" />
+ *         <button ng-click="userForm.userName.$rollbackViewValue(); user.name=''">Clear</button><br />
+ *       </form>
+ *       <pre>user.name = <span ng-bind="user.name"></span></pre>
+ *     </div>
+ *   </file>
+ *   <file name="app.js">
+ *     angular.module('optionsExample', [])
+ *       .controller('ExampleController', ['$scope', function($scope) {
+ *         $scope.user = { name: 'say' };
+ *       }]);
+ *   </file>
+ * </example>
+ *
+ * ### Default events, extra triggers, and catch-all debounce values
+ *
+ * This example shows the relationship between "default" update events and
+ * additional `updateOn` triggers.
+ *
+ * `default` events are those that are bound to the control, and when fired, update the `$viewValue`
+ * via {@link ngModel.NgModelController#$setViewValue $setViewValue}. Every event that is not listed
+ * in `updateOn` is considered a "default" event, since different control types have different
+ * default events.
+ *
+ * The control in this example updates by "default", "click", and "blur", with different `debounce`
+ * values. You can see that "click" doesn't have an individual `debounce` value -
+ * therefore it uses the `*` debounce value.
+ *
+ * There is also a button that calls {@link ngModel.NgModelController#$setViewValue $setViewValue}
+ * directly with a "custom" event. Since "custom" is not defined in the `updateOn` list,
+ * it is considered a "default" event and will update the
+ * control if "default" is defined in `updateOn`, and will receive the "default" debounce value.
+ * Note that this is just to illustrate how custom controls would possibly call `$setViewValue`.
+ *
+ * You can change the `updateOn` and `debounce` configuration to test different scenarios. This
+ * is done with {@link ngModel.NgModelController#$overrideModelOptions $overrideModelOptions}.
+ *
+  <example name="ngModelOptions-advanced" module="optionsExample">
+    <file name="index.html">
+       <model-update-demo></model-update-demo>
+    </file>
+    <file name="app.js">
+      angular.module('optionsExample', [])
+        .component('modelUpdateDemo', {
+          templateUrl: 'template.html',
+          controller: function() {
+            this.name = 'Chinua';
+
+            this.options = {
+              updateOn: 'default blur click',
+              debounce: {
+                default: 2000,
+                blur: 0,
+                '*': 1000
+              }
+            };
+
+            this.updateEvents = function() {
+              var eventList = this.options.updateOn.split(' ');
+              eventList.push('*');
+              var events = {};
+
+              for (var i = 0; i < eventList.length; i++) {
+                events[eventList[i]] = this.options.debounce[eventList[i]];
+              }
+
+              this.events = events;
+            };
+
+            this.updateOptions = function() {
+              var options = angular.extend(this.options, {
+                updateOn: Object.keys(this.events).join(' ').replace('*', ''),
+                debounce: this.events
+              });
+
+              this.form.input.$overrideModelOptions(options);
+            };
+
+            // Initialize the event form
+            this.updateEvents();
+          }
+        });
+    </file>
+    <file name="template.html">
+      <form name="$ctrl.form">
+        Input: <input type="text" name="input" ng-model="$ctrl.name" ng-model-options="$ctrl.options" />
+      </form>
+      Model: <tt>{{$ctrl.name}}</tt>
+      <hr>
+      <button ng-click="$ctrl.form.input.$setViewValue('some value', 'custom')">Trigger setViewValue with 'some value' and 'custom' event</button>
+
+      <hr>
+      <form ng-submit="$ctrl.updateOptions()">
+        <b>updateOn</b><br>
+        <input type="text" ng-model="$ctrl.options.updateOn" ng-change="$ctrl.updateEvents()" ng-model-options="{debounce: 500}">
+
+        <table>
+          <tr>
+            <th>Option</th>
+            <th>Debounce value</th>
+          </tr>
+          <tr ng-repeat="(key, value) in $ctrl.events">
+            <td>{{key}}</td>
+            <td><input type="number" ng-model="$ctrl.events[key]" /></td>
+          </tr>
+        </table>
+
+        <br>
+        <input type="submit" value="Update options">
+      </form>
+    </file>
+  </example>
+ *
+ *
+ * ## Model updates and validation
+ *
+ * The default behaviour in `ngModel` is that the model value is set to `undefined` when the
+ * validation determines that the value is invalid. By setting the `allowInvalid` property to true,
+ * the model will still be updated even if the value is invalid.
+ *
+ *
+ * ## Connecting to the scope
+ *
+ * By setting the `getterSetter` property to true you are telling ngModel that the `ngModel` expression
+ * on the scope refers to a "getter/setter" function rather than the value itself.
+ *
+ * The following example shows how to bind to getter/setters:
+ *
+ * <example name="ngModelOptions-directive-getter-setter" module="getterSetterExample">
+ *   <file name="index.html">
+ *     <div ng-controller="ExampleController">
+ *       <form name="userForm">
+ *         <label>
+ *           Name:
+ *           <input type="text" name="userName"
+ *                  ng-model="user.name"
+ *                  ng-model-options="{ getterSetter: true }" />
+ *         </label>
+ *       </form>
+ *       <pre>user.name = <span ng-bind="user.name()"></span></pre>
+ *     </div>
+ *   </file>
+ *   <file name="app.js">
+ *     angular.module('getterSetterExample', [])
+ *       .controller('ExampleController', ['$scope', function($scope) {
+ *         var _name = 'Brian';
+ *         $scope.user = {
+ *           name: function(newName) {
+ *             return angular.isDefined(newName) ? (_name = newName) : _name;
+ *           }
+ *         };
+ *       }]);
+ *   </file>
+ * </example>
+ *
+ *
+ * ## Programmatically changing options
+ *
+ * The `ngModelOptions` expression is only evaluated once when the directive is linked; it is not
+ * watched for changes. However, it is possible to override the options on a single
+ * {@link ngModel.NgModelController} instance with
+ * {@link ngModel.NgModelController#$overrideModelOptions `NgModelController#$overrideModelOptions()`}.
+ * See also the example for
+ * {@link ngModelOptions#default-events-extra-triggers-and-catch-all-debounce-values
+ * Default events, extra triggers, and catch-all debounce values}.
+ *
+ *
+ * ## Specifying timezones
+ *
+ * You can specify the timezone that date/time input directives expect by providing its name in the
+ * `timezone` property.
+ *
+ *
+ * ## Formatting the value of `time` and `datetime-local`
+ *
+ * With the options `timeSecondsFormat` and `timeStripZeroSeconds` it is possible to adjust the value
+ * that is displayed in the control. Note that browsers may apply their own formatting
+ * in the user interface.
+ *
+   <example name="ngModelOptions-time-format" module="timeExample">
+     <file name="index.html">
+       <time-example></time-example>
+     </file>
+     <file name="script.js">
+        angular.module('timeExample', [])
+          .component('timeExample', {
+            templateUrl: 'timeExample.html',
+            controller: function() {
+              this.time = new Date(1970, 0, 1, 14, 57, 0);
+
+              this.options = {
+                timeSecondsFormat: 'ss',
+                timeStripZeroSeconds: true
+              };
+
+              this.optionChange = function() {
+                this.timeForm.timeFormatted.$overrideModelOptions(this.options);
+                this.time = new Date(this.time);
+              };
+            }
+          });
+     </file>
+     <file name="timeExample.html">
+       <form name="$ctrl.timeForm">
+         <strong>Default</strong>:
+         <input type="time" ng-model="$ctrl.time" step="any" /><br>
+         <strong>With options</strong>:
+         <input type="time" name="timeFormatted" ng-model="$ctrl.time" step="any" ng-model-options="$ctrl.options" />
+         <br>
+
+         Options:<br>
+         <code>timeSecondsFormat</code>:
+         <input
+           type="text"
+           ng-model="$ctrl.options.timeSecondsFormat"
+           ng-change="$ctrl.optionChange()">
+         <br>
+         <code>timeStripZeroSeconds</code>:
+         <input
+           type="checkbox"
+           ng-model="$ctrl.options.timeStripZeroSeconds"
+           ng-change="$ctrl.optionChange()">
+        </form>
+      </file>
+ *  </example>
+ *
+ * @param {Object} ngModelOptions options to apply to {@link ngModel} directives on this element and
+ *   and its descendents.
+ *
+ * **General options**:
+ *
+ *   - `updateOn`: string specifying which event should the input be bound to. You can set several
+ *     events using an space delimited list. There is a special event called `default` that
+ *     matches the default events belonging to the control. These are the events that are bound to
+ *     the control, and when fired, update the `$viewValue` via `$setViewValue`.
+ *
+ *     `ngModelOptions` considers every event that is not listed in `updateOn` a "default" event,
+ *     since different control types use different default events.
+ *
+ *     See also the section {@link ngModelOptions#triggering-and-debouncing-model-updates
+ *     Triggering and debouncing model updates}.
+ *
+ *   - `debounce`: integer value which contains the debounce model update value in milliseconds. A
+ *     value of 0 triggers an immediate update. If an object is supplied instead, you can specify a
+ *     custom value for each event. For example:
+ *     ```
+ *     ng-model-options="{
+ *       updateOn: 'default blur',
+ *       debounce: { 'default': 500, 'blur': 0 }
+ *     }"
+ *     ```
+ *     You can use the `*` key to specify a debounce value that applies to all events that are not
+ *     specifically listed. In the following example, `mouseup` would have a debounce delay of 1000:
+ *     ```
+ *     ng-model-options="{
+ *       updateOn: 'default blur mouseup',
+ *       debounce: { 'default': 500, 'blur': 0, '*': 1000 }
+ *     }"
+ *     ```
+ *   - `allowInvalid`: boolean value which indicates that the model can be set with values that did
+ *     not validate correctly instead of the default behavior of setting the model to undefined.
+ *   - `getterSetter`: boolean value which determines whether or not to treat functions bound to
+ *     `ngModel` as getters/setters.
+ *
+ *
+ *  **Input-type specific options**:
+ *
+ *   - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for
+ *     `<input type="date" />`, `<input type="time" />`, ... . It understands UTC/GMT and the
+ *     continental US time zone abbreviations, but for general use, use a time zone offset, for
+ *     example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)
+ *     If not specified, the timezone of the browser will be used.
+ *     Note that changing the timezone will have no effect on the current date, and is only applied after
+ *     the next input / model change.
+ *
+ *   - `timeSecondsFormat`: Defines if the `time` and `datetime-local` types should show seconds and
+ *     milliseconds. The option follows the format string of {@link date date filter}.
+ *     By default, the options is `undefined` which is equal to `'ss.sss'` (seconds and milliseconds).
+ *     The other options are `'ss'` (strips milliseconds), and `''` (empty string), which strips both
+ *     seconds and milliseconds.
+ *     Note that browsers that support `time` and `datetime-local` require the hour and minutes
+ *     part of the time string, and may show the value differently in the user interface.
+ *     {@link ngModelOptions#formatting-the-value-of-time-and-datetime-local- See the example}.
+ *
+ *   - `timeStripZeroSeconds`: Defines if the `time` and `datetime-local` types should strip the
+ *     seconds and milliseconds from the formatted value if they are zero. This option is applied
+ *     after `timeSecondsFormat`.
+ *     This option can be used to make the formatting consistent over different browsers, as some
+ *     browsers with support for `time` will natively hide the milliseconds and
+ *     seconds if they are zero, but others won't, and browsers that don't implement these input
+ *     types will always show the full string.
+ *     {@link ngModelOptions#formatting-the-value-of-time-and-datetime-local- See the example}.
+ *
+ */
+var ngModelOptionsDirective = function() {
+  NgModelOptionsController.$inject = ['$attrs', '$scope'];
+  function NgModelOptionsController($attrs, $scope) {
+    this.$$attrs = $attrs;
+    this.$$scope = $scope;
+  }
+  NgModelOptionsController.prototype = {
+    $onInit: function() {
+      var parentOptions = this.parentCtrl ? this.parentCtrl.$options : defaultModelOptions;
+      var modelOptionsDefinition = this.$$scope.$eval(this.$$attrs.ngModelOptions);
+
+      this.$options = parentOptions.createChild(modelOptionsDefinition);
+    }
+  };
+
+  return {
+    restrict: 'A',
+    // ngModelOptions needs to run before ngModel and input directives
+    priority: 10,
+    require: {parentCtrl: '?^^ngModelOptions'},
+    bindToController: true,
+    controller: NgModelOptionsController
+  };
+};
+
+
+// shallow copy over values from `src` that are not already specified on `dst`
+function defaults(dst, src) {
+  forEach(src, function(value, key) {
+    if (!isDefined(dst[key])) {
+      dst[key] = value;
+    }
+  });
+}
+
+/**
+ * @ngdoc directive
+ * @name ngNonBindable
+ * @restrict AC
+ * @priority 1000
+ * @element ANY
+ *
+ * @description
+ * The `ngNonBindable` directive tells AngularJS not to compile or bind the contents of the current
+ * DOM element, including directives on the element itself that have a lower priority than
+ * `ngNonBindable`. This is useful if the element contains what appears to be AngularJS directives
+ * and bindings but which should be ignored by AngularJS. This could be the case if you have a site
+ * that displays snippets of code, for instance.
+ *
+ * @example
+ * In this example there are two locations where a simple interpolation binding (`{{}}`) is present,
+ * but the one wrapped in `ngNonBindable` is left alone.
+ *
+  <example name="ng-non-bindable">
+    <file name="index.html">
+      <div>Normal: {{1 + 2}}</div>
+      <div ng-non-bindable>Ignored: {{1 + 2}}</div>
+    </file>
+    <file name="protractor.js" type="protractor">
+     it('should check ng-non-bindable', function() {
+       expect(element(by.binding('1 + 2')).getText()).toContain('3');
+       expect(element.all(by.css('div')).last().getText()).toMatch(/1 \+ 2/);
+     });
+    </file>
+  </example>
+ */
+var ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });
+
+/* exported ngOptionsDirective */
+
+/* global jqLiteRemove */
+
+var ngOptionsMinErr = minErr('ngOptions');
+
+/**
+ * @ngdoc directive
+ * @name ngOptions
+ * @restrict A
+ *
+ * @description
+ *
+ * The `ngOptions` attribute can be used to dynamically generate a list of `<option>`
+ * elements for the `<select>` element using the array or object obtained by evaluating the
+ * `ngOptions` comprehension expression.
+ *
+ * In many cases, {@link ng.directive:ngRepeat ngRepeat} can be used on `<option>` elements instead of
+ * `ngOptions` to achieve a similar result. However, `ngOptions` provides some benefits:
+ * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
+ * comprehension expression
+ * - reduced memory consumption by not creating a new scope for each repeated instance
+ * - increased render speed by creating the options in a documentFragment instead of individually
+ *
+ * When an item in the `<select>` menu is selected, the array element or object property
+ * represented by the selected option will be bound to the model identified by the `ngModel`
+ * directive.
+ *
+ * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
+ * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
+ * option. See example below for demonstration.
+ *
+ * ## Complex Models (objects or collections)
+ *
+ * By default, `ngModel` watches the model by reference, not value. This is important to know when
+ * binding the select to a model that is an object or a collection.
+ *
+ * One issue occurs if you want to preselect an option. For example, if you set
+ * the model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,
+ * because the objects are not identical. So by default, you should always reference the item in your collection
+ * for preselections, e.g.: `$scope.selected = $scope.collection[3]`.
+ *
+ * Another solution is to use a `track by` clause, because then `ngOptions` will track the identity
+ * of the item not by reference, but by the result of the `track by` expression. For example, if your
+ * collection items have an id property, you would `track by item.id`.
+ *
+ * A different issue with objects or collections is that ngModel won't detect if an object property or
+ * a collection item changes. For that reason, `ngOptions` additionally watches the model using
+ * `$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.
+ * This allows ngOptions to trigger a re-rendering of the options even if the actual object/collection
+ * has not changed identity, but only a property on the object or an item in the collection changes.
+ *
+ * Note that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection
+ * if the model is an array). This means that changing a property deeper than the first level inside the
+ * object/collection will not trigger a re-rendering.
+ *
+ * ## `select` **`as`**
+ *
+ * Using `select` **`as`** will bind the result of the `select` expression to the model, but
+ * the value of the `<select>` and `<option>` html elements will be either the index (for array data sources)
+ * or property name (for object data sources) of the value within the collection. If a **`track by`** expression
+ * is used, the result of that expression will be set as the value of the `option` and `select` elements.
+ *
+ *
+ * ### `select` **`as`** and **`track by`**
+ *
+ * <div class="alert alert-warning">
+ * Be careful when using `select` **`as`** and **`track by`** in the same expression.
+ * </div>
+ *
+ * Given this array of items on the $scope:
+ *
+ * ```js
+ * $scope.items = [{
+ *   id: 1,
+ *   label: 'aLabel',
+ *   subItem: { name: 'aSubItem' }
+ * }, {
+ *   id: 2,
+ *   label: 'bLabel',
+ *   subItem: { name: 'bSubItem' }
+ * }];
+ * ```
+ *
+ * This will work:
+ *
+ * ```html
+ * <select ng-options="item as item.label for item in items track by item.id" ng-model="selected"></select>
+ * ```
+ * ```js
+ * $scope.selected = $scope.items[0];
+ * ```
+ *
+ * but this will not work:
+ *
+ * ```html
+ * <select ng-options="item.subItem as item.label for item in items track by item.id" ng-model="selected"></select>
+ * ```
+ * ```js
+ * $scope.selected = $scope.items[0].subItem;
+ * ```
+ *
+ * In both examples, the **`track by`** expression is applied successfully to each `item` in the
+ * `items` array. Because the selected option has been set programmatically in the controller, the
+ * **`track by`** expression is also applied to the `ngModel` value. In the first example, the
+ * `ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with
+ * no issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**
+ * expression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value
+ * is not matched against any `<option>` and the `<select>` appears as having no selected value.
+ *
+ *
+ * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+ * @param {comprehension_expression} ngOptions in one of the following forms:
+ *
+ *   * for array data sources:
+ *     * `label` **`for`** `value` **`in`** `array`
+ *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`
+ *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array`
+ *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array`
+ *     * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
+ *     * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`
+ *     * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`
+ *        (for including a filter with `track by`)
+ *   * for object data sources:
+ *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
+ *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`
+ *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`
+ *     * `label` **`disable when`** `disable` **`for (`**`key`**`,`** `value`**`) in`** `object`
+ *     * `select` **`as`** `label` **`group by`** `group`
+ *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
+ *     * `select` **`as`** `label` **`disable when`** `disable`
+ *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`
+ *
+ * Where:
+ *
+ *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.
+ *   * `value`: local variable which will refer to each item in the `array` or each property value
+ *      of `object` during iteration.
+ *   * `key`: local variable which will refer to a property name in `object` during iteration.
+ *   * `label`: The result of this expression will be the label for `<option>` element. The
+ *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).
+ *   * `select`: The result of this expression will be bound to the model of the parent `<select>`
+ *      element. If not specified, `select` expression will default to `value`.
+ *   * `group`: The result of this expression will be used to group options using the `<optgroup>`
+ *      DOM element.
+ *   * `disable`: The result of this expression will be used to disable the rendered `<option>`
+ *      element. Return `true` to disable.
+ *   * `trackexpr`: Used when working with an array of objects. The result of this expression will be
+ *      used to identify the objects in the array. The `trackexpr` will most likely refer to the
+ *     `value` variable (e.g. `value.propertyName`). With this the selection is preserved
+ *      even when the options are recreated (e.g. reloaded from the server).
+ * @param {string=} name Property name of the form under which the control is published.
+ * @param {string=} required The control is considered valid only if value is entered.
+ * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to
+ *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of
+ *    `required` when you want to data-bind to the `required` attribute.
+ * @param {string=} ngAttrSize sets the size of the select element dynamically. Uses the
+ * {@link guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes ngAttr} directive.
+ *
+ * @example
+    <example module="selectExample" name="select">
+      <file name="index.html">
+        <script>
+        angular.module('selectExample', [])
+          .controller('ExampleController', ['$scope', function($scope) {
+            $scope.colors = [
+              {name:'black', shade:'dark'},
+              {name:'white', shade:'light', notAnOption: true},
+              {name:'red', shade:'dark'},
+              {name:'blue', shade:'dark', notAnOption: true},
+              {name:'yellow', shade:'light', notAnOption: false}
+            ];
+            $scope.myColor = $scope.colors[2]; // red
+          }]);
+        </script>
+        <div ng-controller="ExampleController">
+          <ul>
+            <li ng-repeat="color in colors">
+              <label>Name: <input ng-model="color.name"></label>
+              <label><input type="checkbox" ng-model="color.notAnOption"> Disabled?</label>
+              <button ng-click="colors.splice($index, 1)" aria-label="Remove">X</button>
+            </li>
+            <li>
+              <button ng-click="colors.push({})">add</button>
+            </li>
+          </ul>
+          <hr/>
+          <label>Color (null not allowed):
+            <select ng-model="myColor" ng-options="color.name for color in colors"></select>
+          </label><br/>
+          <label>Color (null allowed):
+          <span  class="nullable">
+            <select ng-model="myColor" ng-options="color.name for color in colors">
+              <option value="">-- choose color --</option>
+            </select>
+          </span></label><br/>
+
+          <label>Color grouped by shade:
+            <select ng-model="myColor" ng-options="color.name group by color.shade for color in colors">
+            </select>
+          </label><br/>
+
+          <label>Color grouped by shade, with some disabled:
+            <select ng-model="myColor"
+                  ng-options="color.name group by color.shade disable when color.notAnOption for color in colors">
+            </select>
+          </label><br/>
+
+
+
+          Select <button ng-click="myColor = { name:'not in list', shade: 'other' }">bogus</button>.
+          <br/>
+          <hr/>
+          Currently selected: {{ {selected_color:myColor} }}
+          <div style="border:solid 1px black; height:20px"
+               ng-style="{'background-color':myColor.name}">
+          </div>
+        </div>
+      </file>
+      <file name="protractor.js" type="protractor">
+         it('should check ng-options', function() {
+           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');
+           element.all(by.model('myColor')).first().click();
+           element.all(by.css('select[ng-model="myColor"] option')).first().click();
+           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');
+           element(by.css('.nullable select[ng-model="myColor"]')).click();
+           element.all(by.css('.nullable select[ng-model="myColor"] option')).first().click();
+           expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');
+         });
+      </file>
+    </example>
+ */
+
+/* eslint-disable max-len */
+//                     //00001111111111000000000002222222222000000000000000000000333333333300000000000000000000000004444444444400000000000005555555555555000000000666666666666600000007777777777777000000000000000888888888800000000000000000009999999999
+var NG_OPTIONS_REGEXP = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;
+                        // 1: value expression (valueFn)
+                        // 2: label expression (displayFn)
+                        // 3: group by expression (groupByFn)
+                        // 4: disable when expression (disableWhenFn)
+                        // 5: array item variable name
+                        // 6: object item key variable name
+                        // 7: object item value variable name
+                        // 8: collection expression
+                        // 9: track by expression
+/* eslint-enable */
+
+
+var ngOptionsDirective = ['$compile', '$document', '$parse', function($compile, $document, $parse) {
+
+  function parseOptionsExpression(optionsExp, selectElement, scope) {
+
+    var match = optionsExp.match(NG_OPTIONS_REGEXP);
+    if (!(match)) {
+      throw ngOptionsMinErr('iexp',
+        'Expected expression in form of ' +
+        '\'_select_ (as _label_)? for (_key_,)?_value_ in _collection_\'' +
+        ' but got \'{0}\'. Element: {1}',
+        optionsExp, startingTag(selectElement));
+    }
+
+    // Extract the parts from the ngOptions expression
+
+    // The variable name for the value of the item in the collection
+    var valueName = match[5] || match[7];
+    // The variable name for the key of the item in the collection
+    var keyName = match[6];
+
+    // An expression that generates the viewValue for an option if there is a label expression
+    var selectAs = / as /.test(match[0]) && match[1];
+    // An expression that is used to track the id of each object in the options collection
+    var trackBy = match[9];
+    // An expression that generates the viewValue for an option if there is no label expression
+    var valueFn = $parse(match[2] ? match[1] : valueName);
+    var selectAsFn = selectAs && $parse(selectAs);
+    var viewValueFn = selectAsFn || valueFn;
+    var trackByFn = trackBy && $parse(trackBy);
+
+    // Get the value by which we are going to track the option
+    // if we have a trackFn then use that (passing scope and locals)
+    // otherwise just hash the given viewValue
+    var getTrackByValueFn = trackBy ?
+                              function(value, locals) { return trackByFn(scope, locals); } :
+                              function getHashOfValue(value) { return hashKey(value); };
+    var getTrackByValue = function(value, key) {
+      return getTrackByValueFn(value, getLocals(value, key));
+    };
+
+    var displayFn = $parse(match[2] || match[1]);
+    var groupByFn = $parse(match[3] || '');
+    var disableWhenFn = $parse(match[4] || '');
+    var valuesFn = $parse(match[8]);
+
+    var locals = {};
+    var getLocals = keyName ? function(value, key) {
+      locals[keyName] = key;
+      locals[valueName] = value;
+      return locals;
+    } : function(value) {
+      locals[valueName] = value;
+      return locals;
+    };
+
+
+    function Option(selectValue, viewValue, label, group, disabled) {
+      this.selectValue = selectValue;
+      this.viewValue = viewValue;
+      this.label = label;
+      this.group = group;
+      this.disabled = disabled;
+    }
+
+    function getOptionValuesKeys(optionValues) {
+      var optionValuesKeys;
+
+      if (!keyName && isArrayLike(optionValues)) {
+        optionValuesKeys = optionValues;
+      } else {
+        // if object, extract keys, in enumeration order, unsorted
+        optionValuesKeys = [];
+        for (var itemKey in optionValues) {
+          if (optionValues.hasOwnProperty(itemKey) && itemKey.charAt(0) !== '$') {
+            optionValuesKeys.push(itemKey);
+          }
+        }
+      }
+      return optionValuesKeys;
+    }
+
+    return {
+      trackBy: trackBy,
+      getTrackByValue: getTrackByValue,
+      getWatchables: $parse(valuesFn, function(optionValues) {
+        // Create a collection of things that we would like to watch (watchedArray)
+        // so that they can all be watched using a single $watchCollection
+        // that only runs the handler once if anything changes
+        var watchedArray = [];
+        optionValues = optionValues || [];
+
+        var optionValuesKeys = getOptionValuesKeys(optionValues);
+        var optionValuesLength = optionValuesKeys.length;
+        for (var index = 0; index < optionValuesLength; index++) {
+          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];
+          var value = optionValues[key];
+
+          var locals = getLocals(value, key);
+          var selectValue = getTrackByValueFn(value, locals);
+          watchedArray.push(selectValue);
+
+          // Only need to watch the displayFn if there is a specific label expression
+          if (match[2] || match[1]) {
+            var label = displayFn(scope, locals);
+            watchedArray.push(label);
+          }
+
+          // Only need to watch the disableWhenFn if there is a specific disable expression
+          if (match[4]) {
+            var disableWhen = disableWhenFn(scope, locals);
+            watchedArray.push(disableWhen);
+          }
+        }
+        return watchedArray;
+      }),
+
+      getOptions: function() {
+
+        var optionItems = [];
+        var selectValueMap = {};
+
+        // The option values were already computed in the `getWatchables` fn,
+        // which must have been called to trigger `getOptions`
+        var optionValues = valuesFn(scope) || [];
+        var optionValuesKeys = getOptionValuesKeys(optionValues);
+        var optionValuesLength = optionValuesKeys.length;
+
+        for (var index = 0; index < optionValuesLength; index++) {
+          var key = (optionValues === optionValuesKeys) ? index : optionValuesKeys[index];
+          var value = optionValues[key];
+          var locals = getLocals(value, key);
+          var viewValue = viewValueFn(scope, locals);
+          var selectValue = getTrackByValueFn(viewValue, locals);
+          var label = displayFn(scope, locals);
+          var group = groupByFn(scope, locals);
+          var disabled = disableWhenFn(scope, locals);
+          var optionItem = new Option(selectValue, viewValue, label, group, disabled);
+
+          optionItems.push(optionItem);
+          selectValueMap[selectValue] = optionItem;
+        }
+
+        return {
+          items: optionItems,
+          selectValueMap: selectValueMap,
+          getOptionFromViewValue: function(value) {
+            return selectValueMap[getTrackByValue(value)];
+          },
+          getViewValueFromOption: function(option) {
+            // If the viewValue could be an object that may be mutated by the application,
+            // we need to make a copy and not return the reference to the value on the option.
+            return trackBy ? copy(option.viewValue) : option.viewValue;
+          }
+        };
+      }
+    };
+  }
+
+
+  // Support: IE 9 only
+  // We can't just jqLite('<option>') since jqLite is not smart enough
+  // to create it in <select> and IE barfs otherwise.
+  var optionTemplate = window.document.createElement('option'),
+      optGroupTemplate = window.document.createElement('optgroup');
+
+    function ngOptionsPostLink(scope, selectElement, attr, ctrls) {
+
+      var selectCtrl = ctrls[0];
+      var ngModelCtrl = ctrls[1];
+      var multiple = attr.multiple;
+
+      // The emptyOption allows the application developer to provide their own custom "empty"
+      // option when the viewValue does not match any of the option values.
+      for (var i = 0, children = selectElement.children(), ii = children.length; i < ii; i++) {
+        if (children[i].value === '') {
+          selectCtrl.hasEmptyOption = true;
+          selectCtrl.emptyOption = children.eq(i);
+          break;
+        }
+      }
+
+      // The empty option will be compiled and rendered before we first generate the options
+      selectElement.empty();
+
+      var providedEmptyOption = !!selectCtrl.emptyOption;
+
+      var unknownOption = jqLite(optionTemplate.cloneNode(false));
+      unknownOption.val('?');
+
+      var options;
+      var ngOptions = parseOptionsExpression(attr.ngOptions, selectElement, scope);
+      // This stores the newly created options before they are appended to the select.
+      // Since the contents are removed from the fragment when it is appended,
+      // we only need to create it once.
+      var listFragment = $document[0].createDocumentFragment();
+
+      // Overwrite the implementation. ngOptions doesn't use hashes
+      selectCtrl.generateUnknownOptionValue = function(val) {
+        return '?';
+      };
+
+      // Update the controller methods for multiple selectable options
+      if (!multiple) {
+
+        selectCtrl.writeValue = function writeNgOptionsValue(value) {
+          // The options might not be defined yet when ngModel tries to render
+          if (!options) return;
+
+          var selectedOption = selectElement[0].options[selectElement[0].selectedIndex];
+          var option = options.getOptionFromViewValue(value);
+
+          // Make sure to remove the selected attribute from the previously selected option
+          // Otherwise, screen readers might get confused
+          if (selectedOption) selectedOption.removeAttribute('selected');
+
+          if (option) {
+            // Don't update the option when it is already selected.
+            // For example, the browser will select the first option by default. In that case,
+            // most properties are set automatically - except the `selected` attribute, which we
+            // set always
+
+            if (selectElement[0].value !== option.selectValue) {
+              selectCtrl.removeUnknownOption();
+
+              selectElement[0].value = option.selectValue;
+              option.element.selected = true;
+            }
+
+            option.element.setAttribute('selected', 'selected');
+          } else {
+            selectCtrl.selectUnknownOrEmptyOption(value);
+          }
+        };
+
+        selectCtrl.readValue = function readNgOptionsValue() {
+
+          var selectedOption = options.selectValueMap[selectElement.val()];
+
+          if (selectedOption && !selectedOption.disabled) {
+            selectCtrl.unselectEmptyOption();
+            selectCtrl.removeUnknownOption();
+            return options.getViewValueFromOption(selectedOption);
+          }
+          return null;
+        };
+
+        // If we are using `track by` then we must watch the tracked value on the model
+        // since ngModel only watches for object identity change
+        // FIXME: When a user selects an option, this watch will fire needlessly
+        if (ngOptions.trackBy) {
+          scope.$watch(
+            function() { return ngOptions.getTrackByValue(ngModelCtrl.$viewValue); },
+            function() { ngModelCtrl.$render(); }
+          );
+        }
+
+      } else {
+
+        selectCtrl.writeValue = function writeNgOptionsMultiple(values) {
+          // The options might not be defined yet when ngModel tries to render
+          if (!options) return;
+
+          // Only set `<option>.selected` if necessary, in order to prevent some browsers from
+          // scrolling to `<option>` elements that are outside the `<select>` element's viewport.
+          var selectedOptions = values && values.map(getAndUpdateSelectedOption) || [];
+
+          options.items.forEach(function(option) {
+            if (option.element.selected && !includes(selectedOptions, option)) {
+              option.element.selected = false;
+            }
+          });
+        };
+
+
+        selectCtrl.readValue = function readNgOptionsMultiple() {
+          var selectedValues = selectElement.val() || [],
+              selections = [];
+
+          forEach(selectedValues, function(value) {
+            var option = options.selectValueMap[value];
+            if (option && !option.disabled) selections.push(options.getViewValueFromOption(option));
+          });
+
+          return selections;
+        };
+
+        // If we are using `track by` then we must watch these tracked values on the model
+        // since ngModel only watches for object identity change
+        if (ngOptions.trackBy) {
+
+          scope.$watchCollection(function() {
+            if (isArray(ngModelCtrl.$viewValue)) {
+              return ngModelCtrl.$viewValue.map(function(value) {
+                return ngOptions.getTrackByValue(value);
+              });
+            }
+          }, function() {
+            ngModelCtrl.$render();
+          });
+
+        }
+      }
+
+      if (providedEmptyOption) {
+
+        // compile the element since there might be bindings in it
+        $compile(selectCtrl.emptyOption)(scope);
+
+        selectElement.prepend(selectCtrl.emptyOption);
+
+        if (selectCtrl.emptyOption[0].nodeType === NODE_TYPE_COMMENT) {
+          // This means the empty option has currently no actual DOM node, probably because
+          // it has been modified by a transclusion directive.
+          selectCtrl.hasEmptyOption = false;
+
+          // Redefine the registerOption function, which will catch
+          // options that are added by ngIf etc. (rendering of the node is async because of
+          // lazy transclusion)
+          selectCtrl.registerOption = function(optionScope, optionEl) {
+            if (optionEl.val() === '') {
+              selectCtrl.hasEmptyOption = true;
+              selectCtrl.emptyOption = optionEl;
+              selectCtrl.emptyOption.removeClass('ng-scope');
+              // This ensures the new empty option is selected if previously no option was selected
+              ngModelCtrl.$render();
+
+              optionEl.on('$destroy', function() {
+                var needsRerender = selectCtrl.$isEmptyOptionSelected();
+
+                selectCtrl.hasEmptyOption = false;
+                selectCtrl.emptyOption = undefined;
+
+                if (needsRerender) ngModelCtrl.$render();
+              });
+            }
+          };
+
+        } else {
+          // remove the class, which is added automatically because we recompile the element and it
+          // becomes the compilation root
+          selectCtrl.emptyOption.removeClass('ng-scope');
+        }
+
+      }
+
+      // We will re-render the option elements if the option values or labels change
+      scope.$watchCollection(ngOptions.getWatchables, updateOptions);
+
+      // ------------------------------------------------------------------ //
+
+      function addOptionElement(option, parent) {
+        var optionElement = optionTemplate.cloneNode(false);
+        parent.appendChild(optionElement);
+        updateOptionElement(option, optionElement);
+      }
+
+      function getAndUpdateSelectedOption(viewValue) {
+        var option = options.getOptionFromViewValue(viewValue);
+        var element = option && option.element;
+
+        if (element && !element.selected) element.selected = true;
+
+        return option;
+      }
+
+      function updateOptionElement(option, element) {
+        option.element = element;
+        element.disabled = option.disabled;
+        // Support: IE 11 only, Edge 12-13 only
+        // NOTE: The label must be set before the value, otherwise IE 11 & Edge create unresponsive
+        // selects in certain circumstances when multiple selects are next to each other and display
+        // the option list in listbox style, i.e. the select is [multiple], or specifies a [size].
+        // See https://github.com/angular/angular.js/issues/11314 for more info.
+        // This is unfortunately untestable with unit / e2e tests
+        if (option.label !== element.label) {
+          element.label = option.label;
+          element.textContent = option.label;
+        }
+        element.value = option.selectValue;
+      }
+
+      function updateOptions() {
+        var previousValue = options && selectCtrl.readValue();
+
+        // We must remove all current options, but cannot simply set innerHTML = null
+        // since the providedEmptyOption might have an ngIf on it that inserts comments which we
+        // must preserve.
+        // Instead, iterate over the current option elements and remove them or their optgroup
+        // parents
+        if (options) {
+
+          for (var i = options.items.length - 1; i >= 0; i--) {
+            var option = options.items[i];
+            if (isDefined(option.group)) {
+              jqLiteRemove(option.element.parentNode);
+            } else {
+              jqLiteRemove(option.element);
+            }
+          }
+        }
+
+        options = ngOptions.getOptions();
+
+        var groupElementMap = {};
+
+        options.items.forEach(function addOption(option) {
+          var groupElement;
+
+          if (isDefined(option.group)) {
+
+            // This option is to live in a group
+            // See if we have already created this group
+            groupElement = groupElementMap[option.group];
+
+            if (!groupElement) {
+
+              groupElement = optGroupTemplate.cloneNode(false);
+              listFragment.appendChild(groupElement);
+
+              // Update the label on the group element
+              // "null" is special cased because of Safari
+              groupElement.label = option.group === null ? 'null' : option.group;
+
+              // Store it for use later
+              groupElementMap[option.group] = groupElement;
+            }
+
+            addOptionElement(option, groupElement);
+
+          } else {
+
+            // This option is not in a group
+            addOptionElement(option, listFragment);
+          }
+        });
+
+        selectElement[0].appendChild(listFragment);
+
+        ngModelCtrl.$render();
+
+        // Check to see if the value has changed due to the update to the options
+        if (!ngModelCtrl.$isEmpty(previousValue)) {
+          var nextValue = selectCtrl.readValue();
+          var isNotPrimitive = ngOptions.trackBy || multiple;
+          if (isNotPrimitive ? !equals(previousValue, nextValue) : previousValue !== nextValue) {
+            ngModelCtrl.$setViewValue(nextValue);
+            ngModelCtrl.$render();
+          }
+        }
+      }
+  }
+
+  return {
+    restrict: 'A',
+    terminal: true,
+    require: ['select', 'ngModel'],
+    link: {
+      pre: function ngOptionsPreLink(scope, selectElement, attr, ctrls) {
+        // Deactivate the SelectController.register method to prevent
+        // option directives from accidentally registering themselves
+        // (and unwanted $destroy handlers etc.)
+        ctrls[0].registerOption = noop;
+      },
+      post: ngOptionsPostLink
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngPluralize
+ * @restrict EA
+ *
+ * @description
+ * `ngPluralize` is a directive that displays messages according to en-US localization rules.
+ * These rules are bundled with angular.js, but can be overridden
+ * (see {@link guide/i18n AngularJS i18n} dev guide). You configure ngPluralize directive
+ * by specifying the mappings between
+ * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
+ * and the strings to be displayed.
+ *
+ * ## Plural categories and explicit number rules
+ * There are two
+ * [plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)
+ * in AngularJS's default en-US locale: "one" and "other".
+ *
+ * While a plural category may match many numbers (for example, in en-US locale, "other" can match
+ * any number that is not 1), an explicit number rule can only match one number. For example, the
+ * explicit number rule for "3" matches the number 3. There are examples of plural categories
+ * and explicit number rules throughout the rest of this documentation.
+ *
+ * ## Configuring ngPluralize
+ * You configure ngPluralize by providing 2 attributes: `count` and `when`.
+ * You can also provide an optional attribute, `offset`.
+ *
+ * The value of the `count` attribute can be either a string or an {@link guide/expression
+ * AngularJS expression}; these are evaluated on the current scope for its bound value.
+ *
+ * The `when` attribute specifies the mappings between plural categories and the actual
+ * string to be displayed. The value of the attribute should be a JSON object.
+ *
+ * The following example shows how to configure ngPluralize:
+ *
+ * ```html
+ * <ng-pluralize count="personCount"
+                 when="{'0': 'Nobody is viewing.',
+ *                      'one': '1 person is viewing.',
+ *                      'other': '{} people are viewing.'}">
+ * </ng-pluralize>
+ *```
+ *
+ * In the example, `"0: Nobody is viewing."` is an explicit number rule. If you did not
+ * specify this rule, 0 would be matched to the "other" category and "0 people are viewing"
+ * would be shown instead of "Nobody is viewing". You can specify an explicit number rule for
+ * other numbers, for example 12, so that instead of showing "12 people are viewing", you can
+ * show "a dozen people are viewing".
+ *
+ * You can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted
+ * into pluralized strings. In the previous example, AngularJS will replace `{}` with
+ * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder
+ * for <span ng-non-bindable>{{numberExpression}}</span>.
+ *
+ * If no rule is defined for a category, then an empty string is displayed and a warning is generated.
+ * Note that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.
+ *
+ * ## Configuring ngPluralize with offset
+ * The `offset` attribute allows further customization of pluralized text, which can result in
+ * a better user experience. For example, instead of the message "4 people are viewing this document",
+ * you might display "John, Kate and 2 others are viewing this document".
+ * The offset attribute allows you to offset a number by any desired value.
+ * Let's take a look at an example:
+ *
+ * ```html
+ * <ng-pluralize count="personCount" offset=2
+ *               when="{'0': 'Nobody is viewing.',
+ *                      '1': '{{person1}} is viewing.',
+ *                      '2': '{{person1}} and {{person2}} are viewing.',
+ *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',
+ *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
+ * </ng-pluralize>
+ * ```
+ *
+ * Notice that we are still using two plural categories(one, other), but we added
+ * three explicit number rules 0, 1 and 2.
+ * When one person, perhaps John, views the document, "John is viewing" will be shown.
+ * When three people view the document, no explicit number rule is found, so
+ * an offset of 2 is taken off 3, and AngularJS uses 1 to decide the plural category.
+ * In this case, plural category 'one' is matched and "John, Mary and one other person are viewing"
+ * is shown.
+ *
+ * Note that when you specify offsets, you must provide explicit number rules for
+ * numbers from 0 up to and including the offset. If you use an offset of 3, for example,
+ * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for
+ * plural categories "one" and "other".
+ *
+ * @param {string|expression} count The variable to be bound to.
+ * @param {string} when The mapping between plural category to its corresponding strings.
+ * @param {number=} offset Offset to deduct from the total number.
+ *
+ * @example
+    <example module="pluralizeExample" name="ng-pluralize">
+      <file name="index.html">
+        <script>
+          angular.module('pluralizeExample', [])
+            .controller('ExampleController', ['$scope', function($scope) {
+              $scope.person1 = 'Igor';
+              $scope.person2 = 'Misko';
+              $scope.personCount = 1;
+            }]);
+        </script>
+        <div ng-controller="ExampleController">
+          <label>Person 1:<input type="text" ng-model="person1" value="Igor" /></label><br/>
+          <label>Person 2:<input type="text" ng-model="person2" value="Misko" /></label><br/>
+          <label>Number of People:<input type="text" ng-model="personCount" value="1" /></label><br/>
+
+          <!--- Example with simple pluralization rules for en locale --->
+          Without Offset:
+          <ng-pluralize count="personCount"
+                        when="{'0': 'Nobody is viewing.',
+                               'one': '1 person is viewing.',
+                               'other': '{} people are viewing.'}">
+          </ng-pluralize><br>
+
+          <!--- Example with offset --->
+          With Offset(2):
+          <ng-pluralize count="personCount" offset=2
+                        when="{'0': 'Nobody is viewing.',
+                               '1': '{{person1}} is viewing.',
+                               '2': '{{person1}} and {{person2}} are viewing.',
+                               'one': '{{person1}}, {{person2}} and one other person are viewing.',
+                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}">
+          </ng-pluralize>
+        </div>
+      </file>
+      <file name="protractor.js" type="protractor">
+        it('should show correct pluralized string', function() {
+          var withoutOffset = element.all(by.css('ng-pluralize')).get(0);
+          var withOffset = element.all(by.css('ng-pluralize')).get(1);
+          var countInput = element(by.model('personCount'));
+
+          expect(withoutOffset.getText()).toEqual('1 person is viewing.');
+          expect(withOffset.getText()).toEqual('Igor is viewing.');
+
+          countInput.clear();
+          countInput.sendKeys('0');
+
+          expect(withoutOffset.getText()).toEqual('Nobody is viewing.');
+          expect(withOffset.getText()).toEqual('Nobody is viewing.');
+
+          countInput.clear();
+          countInput.sendKeys('2');
+
+          expect(withoutOffset.getText()).toEqual('2 people are viewing.');
+          expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');
+
+          countInput.clear();
+          countInput.sendKeys('3');
+
+          expect(withoutOffset.getText()).toEqual('3 people are viewing.');
+          expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');
+
+          countInput.clear();
+          countInput.sendKeys('4');
+
+          expect(withoutOffset.getText()).toEqual('4 people are viewing.');
+          expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');
+        });
+        it('should show data-bound names', function() {
+          var withOffset = element.all(by.css('ng-pluralize')).get(1);
+          var personCount = element(by.model('personCount'));
+          var person1 = element(by.model('person1'));
+          var person2 = element(by.model('person2'));
+          personCount.clear();
+          personCount.sendKeys('4');
+          person1.clear();
+          person1.sendKeys('Di');
+          person2.clear();
+          person2.sendKeys('Vojta');
+          expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');
+        });
+      </file>
+    </example>
+ */
+var ngPluralizeDirective = ['$locale', '$interpolate', '$log', function($locale, $interpolate, $log) {
+  var BRACE = /{}/g,
+      IS_WHEN = /^when(Minus)?(.+)$/;
+
+  return {
+    link: function(scope, element, attr) {
+      var numberExp = attr.count,
+          whenExp = attr.$attr.when && element.attr(attr.$attr.when), // we have {{}} in attrs
+          offset = attr.offset || 0,
+          whens = scope.$eval(whenExp) || {},
+          whensExpFns = {},
+          startSymbol = $interpolate.startSymbol(),
+          endSymbol = $interpolate.endSymbol(),
+          braceReplacement = startSymbol + numberExp + '-' + offset + endSymbol,
+          watchRemover = angular.noop,
+          lastCount;
+
+      forEach(attr, function(expression, attributeName) {
+        var tmpMatch = IS_WHEN.exec(attributeName);
+        if (tmpMatch) {
+          var whenKey = (tmpMatch[1] ? '-' : '') + lowercase(tmpMatch[2]);
+          whens[whenKey] = element.attr(attr.$attr[attributeName]);
+        }
+      });
+      forEach(whens, function(expression, key) {
+        whensExpFns[key] = $interpolate(expression.replace(BRACE, braceReplacement));
+
+      });
+
+      scope.$watch(numberExp, function ngPluralizeWatchAction(newVal) {
+        var count = parseFloat(newVal);
+        var countIsNaN = isNumberNaN(count);
+
+        if (!countIsNaN && !(count in whens)) {
+          // If an explicit number rule such as 1, 2, 3... is defined, just use it.
+          // Otherwise, check it against pluralization rules in $locale service.
+          count = $locale.pluralCat(count - offset);
+        }
+
+        // If both `count` and `lastCount` are NaN, we don't need to re-register a watch.
+        // In JS `NaN !== NaN`, so we have to explicitly check.
+        if ((count !== lastCount) && !(countIsNaN && isNumberNaN(lastCount))) {
+          watchRemover();
+          var whenExpFn = whensExpFns[count];
+          if (isUndefined(whenExpFn)) {
+            if (newVal != null) {
+              $log.debug('ngPluralize: no rule defined for \'' + count + '\' in ' + whenExp);
+            }
+            watchRemover = noop;
+            updateElementText();
+          } else {
+            watchRemover = scope.$watch(whenExpFn, updateElementText);
+          }
+          lastCount = count;
+        }
+      });
+
+      function updateElementText(newText) {
+        element.text(newText || '');
+      }
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngRef
+ * @restrict A
+ *
+ * @description
+ * The `ngRef` attribute tells AngularJS to assign the controller of a component (or a directive)
+ * to the given property in the current scope. It is also possible to add the jqlite-wrapped DOM
+ * element to the scope.
+ *
+ * If the element with `ngRef` is destroyed `null` is assigned to the property.
+ *
+ * Note that if you want to assign from a child into the parent scope, you must initialize the
+ * target property on the parent scope, otherwise `ngRef` will assign on the child scope.
+ * This commonly happens when assigning elements or components wrapped in {@link ngIf} or
+ * {@link ngRepeat}. See the second example below.
+ *
+ *
+ * @element ANY
+ * @param {string} ngRef property name - A valid AngularJS expression identifier to which the
+ *                       controller or jqlite-wrapped DOM element will be bound.
+ * @param {string=} ngRefRead read value - The name of a directive (or component) on this element,
+ *                            or the special string `$element`. If a name is provided, `ngRef` will
+ *                            assign the matching controller. If `$element` is provided, the element
+ *                            itself is assigned (even if a controller is available).
+ *
+ *
+ * @example
+ * ### Simple toggle
+ * This example shows how the controller of the component toggle
+ * is reused in the template through the scope to use its logic.
+ * <example name="ng-ref-component" module="myApp">
+ *   <file name="index.html">
+ *     <my-toggle ng-ref="myToggle"></my-toggle>
+ *     <button ng-click="myToggle.toggle()">Toggle</button>
+ *     <div ng-show="myToggle.isOpen()">
+ *       You are using a component in the same template to show it.
+ *     </div>
+ *   </file>
+ *   <file name="index.js">
+ *     angular.module('myApp', [])
+ *     .component('myToggle', {
+ *       controller: function ToggleController() {
+ *         var opened = false;
+ *         this.isOpen = function() { return opened; };
+ *         this.toggle = function() { opened = !opened; };
+ *       }
+ *     });
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *      it('should publish the toggle into the scope', function() {
+ *        var toggle = element(by.buttonText('Toggle'));
+ *        expect(toggle.evaluate('myToggle.isOpen()')).toEqual(false);
+ *        toggle.click();
+ *        expect(toggle.evaluate('myToggle.isOpen()')).toEqual(true);
+ *      });
+ *   </file>
+ * </example>
+ *
+ * @example
+ * ### ngRef inside scopes
+ * This example shows how `ngRef` works with child scopes. The `ngRepeat`-ed `myWrapper` components
+ * are assigned to the scope of `myRoot`, because the `toggles` property has been initialized.
+ * The repeated `myToggle` components are published to the child scopes created by `ngRepeat`.
+ * `ngIf` behaves similarly - the assignment of `myToggle` happens in the `ngIf` child scope,
+ * because the target property has not been initialized on the `myRoot` component controller.
+ *
+ * <example name="ng-ref-scopes" module="myApp">
+ *   <file name="index.html">
+ *     <my-root></my-root>
+ *   </file>
+ *   <file name="index.js">
+ *     angular.module('myApp', [])
+ *     .component('myRoot', {
+ *       templateUrl: 'root.html',
+ *       controller: function() {
+ *         this.wrappers = []; // initialize the array so that the wrappers are assigned into the parent scope
+ *       }
+ *     })
+ *     .component('myToggle', {
+ *       template: '<strong>myToggle</strong><button ng-click="$ctrl.toggle()" ng-transclude></button>',
+ *       transclude: true,
+ *       controller: function ToggleController() {
+ *         var opened = false;
+ *         this.isOpen = function() { return opened; };
+ *         this.toggle = function() { opened = !opened; };
+ *       }
+ *     })
+ *     .component('myWrapper', {
+ *       transclude: true,
+ *       template: '<strong>myWrapper</strong>' +
+ *         '<div>ngRepeatToggle.isOpen(): {{$ctrl.ngRepeatToggle.isOpen() | json}}</div>' +
+ *         '<my-toggle ng-ref="$ctrl.ngRepeatToggle"><ng-transclude></ng-transclude></my-toggle>'
+ *     });
+ *   </file>
+ *   <file name="root.html">
+ *     <strong>myRoot</strong>
+ *     <my-toggle ng-ref="$ctrl.outerToggle">Outer Toggle</my-toggle>
+ *     <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
+ *     <div><em>wrappers assigned to root</em><br>
+ *     <div ng-repeat="wrapper in $ctrl.wrappers">
+ *       wrapper.ngRepeatToggle.isOpen(): {{wrapper.ngRepeatToggle.isOpen() | json}}
+ *     </div>
+ *
+ *     <ul>
+ *       <li ng-repeat="(index, value) in [1,2,3]">
+ *         <strong>ngRepeat</strong>
+ *         <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
+ *         <my-wrapper ng-ref="$ctrl.wrappers[index]">ngRepeat Toggle {{$index + 1}}</my-wrapper>
+ *       </li>
+ *     </ul>
+ *
+ *     <div>ngIfToggle.isOpen(): {{ngIfToggle.isOpen()}} // This is always undefined because it's
+ *       assigned to the child scope created by ngIf.
+ *     </div>
+ *     <div ng-if="true">
+          <strong>ngIf</strong>
+ *        <my-toggle ng-ref="ngIfToggle">ngIf Toggle</my-toggle>
+ *        <div>ngIfToggle.isOpen(): {{ngIfToggle.isOpen() | json}}</div>
+ *        <div>outerToggle.isOpen(): {{$ctrl.outerToggle.isOpen() | json}}</div>
+ *     </div>
+ *   </file>
+ *   <file name="styles.css">
+ *     ul {
+ *       list-style: none;
+ *       padding-left: 0;
+ *     }
+ *
+ *     li[ng-repeat] {
+ *       background: lightgreen;
+ *       padding: 8px;
+ *       margin: 8px;
+ *     }
+ *
+ *     [ng-if] {
+ *       background: lightgrey;
+ *       padding: 8px;
+ *     }
+ *
+ *     my-root {
+ *       background: lightgoldenrodyellow;
+ *       padding: 8px;
+ *       display: block;
+ *     }
+ *
+ *     my-wrapper {
+ *       background: lightsalmon;
+ *       padding: 8px;
+ *       display: block;
+ *     }
+ *
+ *     my-toggle {
+ *       background: lightblue;
+ *       padding: 8px;
+ *       display: block;
+ *     }
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *      var OuterToggle = function() {
+ *        this.toggle = function() {
+ *          element(by.buttonText('Outer Toggle')).click();
+ *        };
+ *        this.isOpen = function() {
+ *          return element.all(by.binding('outerToggle.isOpen()')).first().getText();
+ *        };
+ *      };
+ *      var NgRepeatToggle = function(i) {
+ *        var parent = element.all(by.repeater('(index, value) in [1,2,3]')).get(i - 1);
+ *        this.toggle = function() {
+ *          element(by.buttonText('ngRepeat Toggle ' + i)).click();
+ *        };
+ *        this.isOpen = function() {
+ *          return parent.element(by.binding('ngRepeatToggle.isOpen() | json')).getText();
+ *        };
+ *        this.isOuterOpen = function() {
+ *          return parent.element(by.binding('outerToggle.isOpen() | json')).getText();
+ *        };
+ *      };
+ *      var NgRepeatToggles = function() {
+ *        var toggles = [1,2,3].map(function(i) { return new NgRepeatToggle(i); });
+ *        this.forEach = function(fn) {
+ *          toggles.forEach(fn);
+ *        };
+ *        this.isOuterOpen = function(i) {
+ *          return toggles[i - 1].isOuterOpen();
+ *        };
+ *      };
+ *      var NgIfToggle = function() {
+ *        var parent = element(by.css('[ng-if]'));
+ *        this.toggle = function() {
+ *          element(by.buttonText('ngIf Toggle')).click();
+ *        };
+ *        this.isOpen = function() {
+ *          return by.binding('ngIfToggle.isOpen() | json').getText();
+ *        };
+ *        this.isOuterOpen = function() {
+ *          return parent.element(by.binding('outerToggle.isOpen() | json')).getText();
+ *        };
+ *      };
+ *
+ *      it('should toggle the outer toggle', function() {
+ *        var outerToggle = new OuterToggle();
+ *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): false');
+ *        outerToggle.toggle();
+ *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): true');
+ *      });
+ *
+ *      it('should toggle all outer toggles', function() {
+ *        var outerToggle = new OuterToggle();
+ *        var repeatToggles = new NgRepeatToggles();
+ *        var ifToggle = new NgIfToggle();
+ *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): false');
+ *        expect(repeatToggles.isOuterOpen(1)).toEqual('outerToggle.isOpen(): false');
+ *        expect(repeatToggles.isOuterOpen(2)).toEqual('outerToggle.isOpen(): false');
+ *        expect(repeatToggles.isOuterOpen(3)).toEqual('outerToggle.isOpen(): false');
+ *        expect(ifToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
+ *        outerToggle.toggle();
+ *        expect(outerToggle.isOpen()).toEqual('outerToggle.isOpen(): true');
+ *        expect(repeatToggles.isOuterOpen(1)).toEqual('outerToggle.isOpen(): true');
+ *        expect(repeatToggles.isOuterOpen(2)).toEqual('outerToggle.isOpen(): true');
+ *        expect(repeatToggles.isOuterOpen(3)).toEqual('outerToggle.isOpen(): true');
+ *        expect(ifToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): true');
+ *      });
+ *
+ *      it('should toggle each repeat iteration separately', function() {
+ *        var repeatToggles = new NgRepeatToggles();
+ *
+ *        repeatToggles.forEach(function(repeatToggle) {
+ *          expect(repeatToggle.isOpen()).toEqual('ngRepeatToggle.isOpen(): false');
+ *          expect(repeatToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
+ *          repeatToggle.toggle();
+ *          expect(repeatToggle.isOpen()).toEqual('ngRepeatToggle.isOpen(): true');
+ *          expect(repeatToggle.isOuterOpen()).toEqual('outerToggle.isOpen(): false');
+ *        });
+ *      });
+ *   </file>
+ * </example>
+ *
+ */
+
+var ngRefMinErr = minErr('ngRef');
+
+var ngRefDirective = ['$parse', function($parse) {
+  return {
+    priority: -1, // Needed for compatibility with element transclusion on the same element
+    restrict: 'A',
+    compile: function(tElement, tAttrs) {
+      // Get the expected controller name, converts <data-some-thing> into "someThing"
+      var controllerName = directiveNormalize(nodeName_(tElement));
+
+      // Get the expression for value binding
+      var getter = $parse(tAttrs.ngRef);
+      var setter = getter.assign || function() {
+        throw ngRefMinErr('nonassign', 'Expression in ngRef="{0}" is non-assignable!', tAttrs.ngRef);
+      };
+
+      return function(scope, element, attrs) {
+        var refValue;
+
+        if (attrs.hasOwnProperty('ngRefRead')) {
+          if (attrs.ngRefRead === '$element') {
+            refValue = element;
+          } else {
+            refValue = element.data('$' + attrs.ngRefRead + 'Controller');
+
+            if (!refValue) {
+              throw ngRefMinErr(
+                'noctrl',
+                'The controller for ngRefRead="{0}" could not be found on ngRef="{1}"',
+                attrs.ngRefRead,
+                tAttrs.ngRef
+              );
+            }
+          }
+        } else {
+          refValue = element.data('$' + controllerName + 'Controller');
+        }
+
+        refValue = refValue || element;
+
+        setter(scope, refValue);
+
+        // when the element is removed, remove it (nullify it)
+        element.on('$destroy', function() {
+          // only remove it if value has not changed,
+          // because animations (and other procedures) may duplicate elements
+          if (getter(scope) === refValue) {
+            setter(scope, null);
+          }
+        });
+      };
+    }
+  };
+}];
+
+/* exported ngRepeatDirective */
+
+/**
+ * @ngdoc directive
+ * @name ngRepeat
+ * @multiElement
+ * @restrict A
+ *
+ * @description
+ * The `ngRepeat` directive instantiates a template once per item from a collection. Each template
+ * instance gets its own scope, where the given loop variable is set to the current collection item,
+ * and `$index` is set to the item index or key.
+ *
+ * Special properties are exposed on the local scope of each template instance, including:
+ *
+ * | Variable  | Type            | Details                                                                     |
+ * |-----------|-----------------|-----------------------------------------------------------------------------|
+ * | `$index`  | {@type number}  | iterator offset of the repeated element (0..length-1)                       |
+ * | `$first`  | {@type boolean} | true if the repeated element is first in the iterator.                      |
+ * | `$middle` | {@type boolean} | true if the repeated element is between the first and last in the iterator. |
+ * | `$last`   | {@type boolean} | true if the repeated element is last in the iterator.                       |
+ * | `$even`   | {@type boolean} | true if the iterator position `$index` is even (otherwise false).           |
+ * | `$odd`    | {@type boolean} | true if the iterator position `$index` is odd (otherwise false).            |
+ *
+ * <div class="alert alert-info">
+ *   Creating aliases for these properties is possible with {@link ng.directive:ngInit `ngInit`}.
+ *   This may be useful when, for instance, nesting ngRepeats.
+ * </div>
+ *
+ *
+ * ## Iterating over object properties
+ *
+ * It is possible to get `ngRepeat` to iterate over the properties of an object using the following
+ * syntax:
+ *
+ * ```js
+ * <div ng-repeat="(key, value) in myObj"> ... </div>
+ * ```
+ *
+ * However, there are a few limitations compared to array iteration:
+ *
+ * - The JavaScript specification does not define the order of keys
+ *   returned for an object, so AngularJS relies on the order returned by the browser
+ *   when running `for key in myObj`. Browsers generally follow the strategy of providing
+ *   keys in the order in which they were defined, although there are exceptions when keys are deleted
+ *   and reinstated. See the
+ *   [MDN page on `delete` for more info](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete#Cross-browser_notes).
+ *
+ * - `ngRepeat` will silently *ignore* object keys starting with `$`, because
+ *   it's a prefix used by AngularJS for public (`$`) and private (`$$`) properties.
+ *
+ * - The built-in filters {@link ng.orderBy orderBy} and {@link ng.filter filter} do not work with
+ *   objects, and will throw an error if used with one.
+ *
+ * If you are hitting any of these limitations, the recommended workaround is to convert your object into an array
+ * that is sorted into the order that you prefer before providing it to `ngRepeat`. You could
+ * do this with a filter such as [toArrayFilter](http://ngmodules.org/modules/angular-toArrayFilter)
+ * or implement a `$watch` on the object yourself.
+ *
+ *
+ * ## Tracking and Duplicates
+ *
+ * `ngRepeat` uses {@link $rootScope.Scope#$watchCollection $watchCollection} to detect changes in
+ * the collection. When a change happens, `ngRepeat` then makes the corresponding changes to the DOM:
+ *
+ * * When an item is added, a new instance of the template is added to the DOM.
+ * * When an item is removed, its template instance is removed from the DOM.
+ * * When items are reordered, their respective templates are reordered in the DOM.
+ *
+ * To minimize creation of DOM elements, `ngRepeat` uses a function
+ * to "keep track" of all items in the collection and their corresponding DOM elements.
+ * For example, if an item is added to the collection, `ngRepeat` will know that all other items
+ * already have DOM elements, and will not re-render them.
+ *
+ * All different types of tracking functions, their syntax, and their support for duplicate
+ * items in collections can be found in the
+ * {@link ngRepeat#ngRepeat-arguments ngRepeat expression description}.
+ *
+ * <div class="alert alert-success">
+ * **Best Practice:** If you are working with objects that have a unique identifier property, you
+ * should track by this identifier instead of the object instance,
+ * e.g. `item in items track by item.id`.
+ * Should you reload your data later, `ngRepeat` will not have to rebuild the DOM elements for items
+ * it has already rendered, even if the JavaScript objects in the collection have been substituted
+ * for new ones. For large collections, this significantly improves rendering performance.
+ * </div>
+ *
+ * ### Effects of DOM Element re-use
+ *
+ * When DOM elements are re-used, ngRepeat updates the scope for the element, which will
+ * automatically update any active bindings on the template. However, other
+ * functionality will not be updated, because the element is not re-created:
+ *
+ * - Directives are not re-compiled
+ * - {@link guide/expression#one-time-binding one-time expressions} on the repeated template are not
+ * updated if they have stabilized.
+ *
+ * The above affects all kinds of element re-use due to tracking, but may be especially visible
+ * when tracking by `$index` due to the way ngRepeat re-uses elements.
+ *
+ * The following example shows the effects of different actions with tracking:
+
+  <example module="ngRepeat" name="ngRepeat-tracking" deps="angular-animate.js" animations="true">
+    <file name="script.js">
+      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {
+        var friends = [
+          {name:'John', age:25},
+          {name:'Mary', age:40},
+          {name:'Peter', age:85}
+        ];
+
+        $scope.removeFirst = function() {
+          $scope.friends.shift();
+        };
+
+        $scope.updateAge = function() {
+          $scope.friends.forEach(function(el) {
+            el.age = el.age + 5;
+          });
+        };
+
+        $scope.copy = function() {
+          $scope.friends = angular.copy($scope.friends);
+        };
+
+        $scope.reset = function() {
+          $scope.friends = angular.copy(friends);
+        };
+
+        $scope.reset();
+      });
+    </file>
+    <file name="index.html">
+      <div ng-controller="repeatController">
+        <ol>
+          <li>When you click "Update Age", only the first list updates the age, because all others have
+          a one-time binding on the age property. If you then click "Copy", the current friend list
+          is copied, and now the second list updates the age, because the identity of the collection items
+          has changed and the list must be re-rendered. The 3rd and 4th list stay the same, because all the
+          items are already known according to their tracking functions.
+          </li>
+          <li>When you click "Remove First", the 4th list has the wrong age on both remaining items. This is
+          due to tracking by $index: when the first collection item is removed, ngRepeat reuses the first
+          DOM element for the new first collection item, and so on. Since the age property is one-time
+          bound, the value remains from the collection item which was previously at this index.
+          </li>
+        </ol>
+
+        <button ng-click="removeFirst()">Remove First</button>
+        <button ng-click="updateAge()">Update Age</button>
+        <button ng-click="copy()">Copy</button>
+        <br><button ng-click="reset()">Reset List</button>
+        <br>
+        <code>track by $id(friend)</code> (default):
+        <ul class="example-animate-container">
+          <li class="animate-repeat" ng-repeat="friend in friends">
+            {{friend.name}} is {{friend.age}} years old.
+          </li>
+        </ul>
+        <code>track by $id(friend)</code> (default), with age one-time binding:
+        <ul class="example-animate-container">
+          <li class="animate-repeat" ng-repeat="friend in friends">
+            {{friend.name}} is {{::friend.age}} years old.
+          </li>
+        </ul>
+        <code>track by friend.name</code>, with age one-time binding:
+        <ul class="example-animate-container">
+          <li class="animate-repeat" ng-repeat="friend in friends track by friend.name">
+            {{friend.name}}  is {{::friend.age}} years old.
+          </li>
+        </ul>
+        <code>track by $index</code>, with age one-time binding:
+        <ul class="example-animate-container">
+          <li class="animate-repeat" ng-repeat="friend in friends track by $index">
+            {{friend.name}} is {{::friend.age}} years old.
+          </li>
+        </ul>
+      </div>
+    </file>
+    <file name="animations.css">
+      .example-animate-container {
+        background:white;
+        border:1px solid black;
+        list-style:none;
+        margin:0;
+        padding:0 10px;
+      }
+
+      .animate-repeat {
+        line-height:30px;
+        list-style:none;
+        box-sizing:border-box;
+      }
+
+      .animate-repeat.ng-move,
+      .animate-repeat.ng-enter,
+      .animate-repeat.ng-leave {
+        transition:all linear 0.5s;
+      }
+
+      .animate-repeat.ng-leave.ng-leave-active,
+      .animate-repeat.ng-move,
+      .animate-repeat.ng-enter {
+        opacity:0;
+        max-height:0;
+      }
+
+      .animate-repeat.ng-leave,
+      .animate-repeat.ng-move.ng-move-active,
+      .animate-repeat.ng-enter.ng-enter-active {
+        opacity:1;
+        max-height:30px;
+      }
+    </file>
+  </example>
+
+ *
+ * ## Special repeat start and end points
+ * To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending
+ * the range of the repeater by defining explicit start and end points by using **ng-repeat-start** and **ng-repeat-end** respectively.
+ * The **ng-repeat-start** directive works the same as **ng-repeat**, but will repeat all the HTML code (including the tag it's defined on)
+ * up to and including the ending HTML tag where **ng-repeat-end** is placed.
+ *
+ * The example below makes use of this feature:
+ * ```html
+ *   <header ng-repeat-start="item in items">
+ *     Header {{ item }}
+ *   </header>
+ *   <div class="body">
+ *     Body {{ item }}
+ *   </div>
+ *   <footer ng-repeat-end>
+ *     Footer {{ item }}
+ *   </footer>
+ * ```
+ *
+ * And with an input of {@type ['A','B']} for the items variable in the example above, the output will evaluate to:
+ * ```html
+ *   <header>
+ *     Header A
+ *   </header>
+ *   <div class="body">
+ *     Body A
+ *   </div>
+ *   <footer>
+ *     Footer A
+ *   </footer>
+ *   <header>
+ *     Header B
+ *   </header>
+ *   <div class="body">
+ *     Body B
+ *   </div>
+ *   <footer>
+ *     Footer B
+ *   </footer>
+ * ```
+ *
+ * The custom start and end points for ngRepeat also support all other HTML directive syntax flavors provided in AngularJS (such
+ * as **data-ng-repeat-start**, **x-ng-repeat-start** and **ng:repeat-start**).
+ *
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#enter enter} | when a new item is added to the list or when an item is revealed after a filter |
+ * | {@link ng.$animate#leave leave} | when an item is removed from the list or when an item is filtered out |
+ * | {@link ng.$animate#move move } | when an adjacent item is filtered out causing a reorder or when the item contents are reordered |
+ *
+ * See the example below for defining CSS animations with ngRepeat.
+ *
+ * @element ANY
+ * @scope
+ * @priority 1000
+ * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. These
+ *   formats are currently supported:
+ *
+ *   * `variable in expression` – where variable is the user defined loop variable and `expression`
+ *     is a scope expression giving the collection to enumerate.
+ *
+ *     For example: `album in artist.albums`.
+ *
+ *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,
+ *     and `expression` is the scope expression giving the collection to enumerate.
+ *
+ *     For example: `(name, age) in {'adam':10, 'amalie':12}`.
+ *
+ *   * `variable in expression track by tracking_expression` – You can also provide an optional tracking expression
+ *     which can be used to associate the objects in the collection with the DOM elements. If no tracking expression
+ *     is specified, ng-repeat associates elements by identity. It is an error to have
+ *     more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are
+ *     mapped to the same DOM element, which is not possible.)
+ *
+ *     *Default tracking: $id()*: `item in items` is equivalent to `item in items track by $id(item)`.
+ *     This implies that the DOM elements will be associated by item identity in the collection.
+ *
+ *     The built-in `$id()` function can be used to assign a unique
+ *     `$$hashKey` property to each item in the collection. This property is then used as a key to associated DOM elements
+ *     with the corresponding item in the collection by identity. Moving the same object would move
+ *     the DOM element in the same way in the DOM.
+ *     Note that the default id function does not support duplicate primitive values (`number`, `string`),
+ *     but supports duplictae non-primitive values (`object`) that are *equal* in shape.
+ *
+ *     *Custom Expression*: It is possible to use any AngularJS expression to compute the tracking
+ *     id, for example with a function, or using a property on the collection items.
+ *     `item in items track by item.id` is a typical pattern when the items have a unique identifier,
+ *     e.g. database id. In this case the object identity does not matter. Two objects are considered
+ *     equivalent as long as their `id` property is same.
+ *     Tracking by unique identifier is the most performant way and should be used whenever possible.
+ *
+ *     *$index*: This special property tracks the collection items by their index, and
+ *     re-uses the DOM elements that match that index, e.g. `item in items track by $index`. This can
+ *     be used for a performance improvement if no unique identfier is available and the identity of
+ *     the collection items cannot be easily computed. It also allows duplicates.
+ *
+ *     <div class="alert alert-warning">
+ *       <strong>Note:</strong> Re-using DOM elements can have unforeseen effects. Read the
+ *       {@link ngRepeat#tracking-and-duplicates section on tracking and duplicates} for
+ *       more info.
+ *     </div>
+ *
+ *     <div class="alert alert-warning">
+ *       <strong>Note:</strong> the `track by` expression must come last - after any filters, and the alias expression:
+ *       `item in items | filter:searchText as results  track by item.id`
+ *     </div>
+ *
+ *   * `variable in expression as alias_expression` – You can also provide an optional alias expression which will then store the
+ *     intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message
+ *     when a filter is active on the repeater, but the filtered result set is empty.
+ *
+ *     For example: `item in items | filter:x as results` will store the fragment of the repeated items as `results`, but only after
+ *     the items have been processed through the filter.
+ *
+ *     Please note that `as [variable name]` is not an operator but rather a part of ngRepeat
+ *     micro-syntax so it can be used only after all filters (and not as operator, inside an expression).
+ *
+ *     For example: `item in items | filter : x | orderBy : order | limitTo : limit as results track by item.id` .
+ *
+ * @example
+ * This example uses `ngRepeat` to display a list of people. A filter is used to restrict the displayed
+ * results by name or by age. New (entering) and removed (leaving) items are animated.
+  <example module="ngRepeat" name="ngRepeat" deps="angular-animate.js" animations="true">
+    <file name="index.html">
+      <div ng-controller="repeatController">
+        I have {{friends.length}} friends. They are:
+        <input type="search" ng-model="q" placeholder="filter friends..." aria-label="filter friends" />
+        <ul class="example-animate-container">
+          <li class="animate-repeat" ng-repeat="friend in friends | filter:q as results track by friend.name">
+            [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.
+          </li>
+          <li class="animate-repeat" ng-if="results.length === 0">
+            <strong>No results found...</strong>
+          </li>
+        </ul>
+      </div>
+    </file>
+    <file name="script.js">
+      angular.module('ngRepeat', ['ngAnimate']).controller('repeatController', function($scope) {
+        $scope.friends = [
+          {name:'John', age:25, gender:'boy'},
+          {name:'Jessie', age:30, gender:'girl'},
+          {name:'Johanna', age:28, gender:'girl'},
+          {name:'Joy', age:15, gender:'girl'},
+          {name:'Mary', age:28, gender:'girl'},
+          {name:'Peter', age:95, gender:'boy'},
+          {name:'Sebastian', age:50, gender:'boy'},
+          {name:'Erika', age:27, gender:'girl'},
+          {name:'Patrick', age:40, gender:'boy'},
+          {name:'Samantha', age:60, gender:'girl'}
+        ];
+      });
+    </file>
+    <file name="animations.css">
+      .example-animate-container {
+        background:white;
+        border:1px solid black;
+        list-style:none;
+        margin:0;
+        padding:0 10px;
+      }
+
+      .animate-repeat {
+        line-height:30px;
+        list-style:none;
+        box-sizing:border-box;
+      }
+
+      .animate-repeat.ng-move,
+      .animate-repeat.ng-enter,
+      .animate-repeat.ng-leave {
+        transition:all linear 0.5s;
+      }
+
+      .animate-repeat.ng-leave.ng-leave-active,
+      .animate-repeat.ng-move,
+      .animate-repeat.ng-enter {
+        opacity:0;
+        max-height:0;
+      }
+
+      .animate-repeat.ng-leave,
+      .animate-repeat.ng-move.ng-move-active,
+      .animate-repeat.ng-enter.ng-enter-active {
+        opacity:1;
+        max-height:30px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      var friends = element.all(by.repeater('friend in friends'));
+
+      it('should render initial data set', function() {
+        expect(friends.count()).toBe(10);
+        expect(friends.get(0).getText()).toEqual('[1] John who is 25 years old.');
+        expect(friends.get(1).getText()).toEqual('[2] Jessie who is 30 years old.');
+        expect(friends.last().getText()).toEqual('[10] Samantha who is 60 years old.');
+        expect(element(by.binding('friends.length')).getText())
+            .toMatch("I have 10 friends. They are:");
+      });
+
+       it('should update repeater when filter predicate changes', function() {
+         expect(friends.count()).toBe(10);
+
+         element(by.model('q')).sendKeys('ma');
+
+         expect(friends.count()).toBe(2);
+         expect(friends.get(0).getText()).toEqual('[1] Mary who is 28 years old.');
+         expect(friends.last().getText()).toEqual('[2] Samantha who is 60 years old.');
+       });
+      </file>
+    </example>
+ */
+var ngRepeatDirective = ['$parse', '$animate', '$compile', function($parse, $animate, $compile) {
+  var NG_REMOVED = '$$NG_REMOVED';
+  var ngRepeatMinErr = minErr('ngRepeat');
+
+  var updateScope = function(scope, index, valueIdentifier, value, keyIdentifier, key, arrayLength) {
+    // TODO(perf): generate setters to shave off ~40ms or 1-1.5%
+    scope[valueIdentifier] = value;
+    if (keyIdentifier) scope[keyIdentifier] = key;
+    scope.$index = index;
+    scope.$first = (index === 0);
+    scope.$last = (index === (arrayLength - 1));
+    scope.$middle = !(scope.$first || scope.$last);
+    // eslint-disable-next-line no-bitwise
+    scope.$odd = !(scope.$even = (index & 1) === 0);
+  };
+
+  var getBlockStart = function(block) {
+    return block.clone[0];
+  };
+
+  var getBlockEnd = function(block) {
+    return block.clone[block.clone.length - 1];
+  };
+
+  var trackByIdArrayFn = function($scope, key, value) {
+    return hashKey(value);
+  };
+
+  var trackByIdObjFn = function($scope, key) {
+    return key;
+  };
+
+  return {
+    restrict: 'A',
+    multiElement: true,
+    transclude: 'element',
+    priority: 1000,
+    terminal: true,
+    $$tlb: true,
+    compile: function ngRepeatCompile($element, $attr) {
+      var expression = $attr.ngRepeat;
+      var ngRepeatEndComment = $compile.$$createComment('end ngRepeat', expression);
+
+      var match = expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
+
+      if (!match) {
+        throw ngRepeatMinErr('iexp', 'Expected expression in form of \'_item_ in _collection_[ track by _id_]\' but got \'{0}\'.',
+            expression);
+      }
+
+      var lhs = match[1];
+      var rhs = match[2];
+      var aliasAs = match[3];
+      var trackByExp = match[4];
+
+      match = lhs.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);
+
+      if (!match) {
+        throw ngRepeatMinErr('iidexp', '\'_item_\' in \'_item_ in _collection_\' should be an identifier or \'(_key_, _value_)\' expression, but got \'{0}\'.',
+            lhs);
+      }
+      var valueIdentifier = match[3] || match[1];
+      var keyIdentifier = match[2];
+
+      if (aliasAs && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(aliasAs) ||
+          /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(aliasAs))) {
+        throw ngRepeatMinErr('badident', 'alias \'{0}\' is invalid --- must be a valid JS identifier which is not a reserved name.',
+          aliasAs);
+      }
+
+      var trackByIdExpFn;
+
+      if (trackByExp) {
+        var hashFnLocals = {$id: hashKey};
+        var trackByExpGetter = $parse(trackByExp);
+
+        trackByIdExpFn = function($scope, key, value, index) {
+          // assign key, value, and $index to the locals so that they can be used in hash functions
+          if (keyIdentifier) hashFnLocals[keyIdentifier] = key;
+          hashFnLocals[valueIdentifier] = value;
+          hashFnLocals.$index = index;
+          return trackByExpGetter($scope, hashFnLocals);
+        };
+      }
+
+      return function ngRepeatLink($scope, $element, $attr, ctrl, $transclude) {
+
+        // Store a list of elements from previous run. This is a hash where key is the item from the
+        // iterator, and the value is objects with following properties.
+        //   - scope: bound scope
+        //   - clone: previous element.
+        //   - index: position
+        //
+        // We are using no-proto object so that we don't need to guard against inherited props via
+        // hasOwnProperty.
+        var lastBlockMap = createMap();
+
+        //watch props
+        $scope.$watchCollection(rhs, function ngRepeatAction(collection) {
+          var index, length,
+              previousNode = $element[0],     // node that cloned nodes should be inserted after
+                                              // initialized to the comment node anchor
+              nextNode,
+              // Same as lastBlockMap but it has the current state. It will become the
+              // lastBlockMap on the next iteration.
+              nextBlockMap = createMap(),
+              collectionLength,
+              key, value, // key/value of iteration
+              trackById,
+              trackByIdFn,
+              collectionKeys,
+              block,       // last object information {scope, element, id}
+              nextBlockOrder,
+              elementsToRemove;
+
+          if (aliasAs) {
+            $scope[aliasAs] = collection;
+          }
+
+          if (isArrayLike(collection)) {
+            collectionKeys = collection;
+            trackByIdFn = trackByIdExpFn || trackByIdArrayFn;
+          } else {
+            trackByIdFn = trackByIdExpFn || trackByIdObjFn;
+            // if object, extract keys, in enumeration order, unsorted
+            collectionKeys = [];
+            for (var itemKey in collection) {
+              if (hasOwnProperty.call(collection, itemKey) && itemKey.charAt(0) !== '$') {
+                collectionKeys.push(itemKey);
+              }
+            }
+          }
+
+          collectionLength = collectionKeys.length;
+          nextBlockOrder = new Array(collectionLength);
+
+          // locate existing items
+          for (index = 0; index < collectionLength; index++) {
+            key = (collection === collectionKeys) ? index : collectionKeys[index];
+            value = collection[key];
+            trackById = trackByIdFn($scope, key, value, index);
+            if (lastBlockMap[trackById]) {
+              // found previously seen block
+              block = lastBlockMap[trackById];
+              delete lastBlockMap[trackById];
+              nextBlockMap[trackById] = block;
+              nextBlockOrder[index] = block;
+            } else if (nextBlockMap[trackById]) {
+              // if collision detected. restore lastBlockMap and throw an error
+              forEach(nextBlockOrder, function(block) {
+                if (block && block.scope) lastBlockMap[block.id] = block;
+              });
+              throw ngRepeatMinErr('dupes',
+                  'Duplicates in a repeater are not allowed. Use \'track by\' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}',
+                  expression, trackById, value);
+            } else {
+              // new never before seen block
+              nextBlockOrder[index] = {id: trackById, scope: undefined, clone: undefined};
+              nextBlockMap[trackById] = true;
+            }
+          }
+
+          // Clear the value property from the hashFnLocals object to prevent a reference to the last value
+          // being leaked into the ngRepeatCompile function scope
+          if (hashFnLocals) {
+            hashFnLocals[valueIdentifier] = undefined;
+          }
+
+          // remove leftover items
+          for (var blockKey in lastBlockMap) {
+            block = lastBlockMap[blockKey];
+            elementsToRemove = getBlockNodes(block.clone);
+            $animate.leave(elementsToRemove);
+            if (elementsToRemove[0].parentNode) {
+              // if the element was not removed yet because of pending animation, mark it as deleted
+              // so that we can ignore it later
+              for (index = 0, length = elementsToRemove.length; index < length; index++) {
+                elementsToRemove[index][NG_REMOVED] = true;
+              }
+            }
+            block.scope.$destroy();
+          }
+
+          // we are not using forEach for perf reasons (trying to avoid #call)
+          for (index = 0; index < collectionLength; index++) {
+            key = (collection === collectionKeys) ? index : collectionKeys[index];
+            value = collection[key];
+            block = nextBlockOrder[index];
+
+            if (block.scope) {
+              // if we have already seen this object, then we need to reuse the
+              // associated scope/element
+
+              nextNode = previousNode;
+
+              // skip nodes that are already pending removal via leave animation
+              do {
+                nextNode = nextNode.nextSibling;
+              } while (nextNode && nextNode[NG_REMOVED]);
+
+              if (getBlockStart(block) !== nextNode) {
+                // existing item which got moved
+                $animate.move(getBlockNodes(block.clone), null, previousNode);
+              }
+              previousNode = getBlockEnd(block);
+              updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);
+            } else {
+              // new item which we don't know about
+              $transclude(function ngRepeatTransclude(clone, scope) {
+                block.scope = scope;
+                // http://jsperf.com/clone-vs-createcomment
+                var endNode = ngRepeatEndComment.cloneNode(false);
+                clone[clone.length++] = endNode;
+
+                $animate.enter(clone, null, previousNode);
+                previousNode = endNode;
+                // Note: We only need the first/last node of the cloned nodes.
+                // However, we need to keep the reference to the jqlite wrapper as it might be changed later
+                // by a directive with templateUrl when its template arrives.
+                block.clone = clone;
+                nextBlockMap[block.id] = block;
+                updateScope(block.scope, index, valueIdentifier, value, keyIdentifier, key, collectionLength);
+              });
+            }
+          }
+          lastBlockMap = nextBlockMap;
+        });
+      };
+    }
+  };
+}];
+
+var NG_HIDE_CLASS = 'ng-hide';
+var NG_HIDE_IN_PROGRESS_CLASS = 'ng-hide-animate';
+/**
+ * @ngdoc directive
+ * @name ngShow
+ * @multiElement
+ *
+ * @description
+ * The `ngShow` directive shows or hides the given HTML element based on the expression provided to
+ * the `ngShow` attribute.
+ *
+ * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
+ * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
+ * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
+ * {@link ng.directive:ngCsp ngCsp}).
+ *
+ * ```html
+ * <!-- when $scope.myValue is truthy (element is visible) -->
+ * <div ng-show="myValue"></div>
+ *
+ * <!-- when $scope.myValue is falsy (element is hidden) -->
+ * <div ng-show="myValue" class="ng-hide"></div>
+ * ```
+ *
+ * When the `ngShow` expression evaluates to a falsy value then the `.ng-hide` CSS class is added
+ * to the class attribute on the element causing it to become hidden. When truthy, the `.ng-hide`
+ * CSS class is removed from the element causing the element not to appear hidden.
+ *
+ * ## Why is `!important` used?
+ *
+ * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
+ * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
+ * simple as changing the display style on a HTML list item would make hidden elements appear
+ * visible. This also becomes a bigger issue when dealing with CSS frameworks.
+ *
+ * By using `!important`, the show and hide behavior will work as expected despite any clash between
+ * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
+ * developer chooses to override the styling to change how to hide an element then it is just a
+ * matter of using `!important` in their own CSS code.
+ *
+ * ### Overriding `.ng-hide`
+ *
+ * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
+ * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
+ * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
+ * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
+ *
+ * ```css
+ * .ng-hide:not(.ng-hide-animate) {
+ *   /&#42; These are just alternative ways of hiding an element &#42;/
+ *   display: block!important;
+ *   position: absolute;
+ *   top: -9999px;
+ *   left: -9999px;
+ * }
+ * ```
+ *
+ * By default you don't need to override anything in CSS and the animations will work around the
+ * display style.
+ *
+ * @animations
+ * | Animation                                           | Occurs                                                                                                        |
+ * |-----------------------------------------------------|---------------------------------------------------------------------------------------------------------------|
+ * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngShow` expression evaluates to a non truthy value and just before the contents are set to hidden. |
+ * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngShow` expression evaluates to a truthy value and just before contents are set to visible.        |
+ *
+ * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
+ * directive expression is true and false. This system works like the animation system present with
+ * `ngClass` except that you must also include the `!important` flag to override the display
+ * property so that the elements are not actually hidden during the animation.
+ *
+ * ```css
+ * /&#42; A working example can be found at the bottom of this page. &#42;/
+ * .my-element.ng-hide-add, .my-element.ng-hide-remove {
+ *   transition: all 0.5s linear;
+ * }
+ *
+ * .my-element.ng-hide-add { ... }
+ * .my-element.ng-hide-add.ng-hide-add-active { ... }
+ * .my-element.ng-hide-remove { ... }
+ * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
+ * ```
+ *
+ * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
+ * to block during animation states - ngAnimate will automatically handle the style toggling for you.
+ *
+ * @element ANY
+ * @param {expression} ngShow If the {@link guide/expression expression} is truthy/falsy then the
+ *                            element is shown/hidden respectively.
+ *
+ * @example
+ * A simple example, animating the element's opacity:
+ *
+  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-simple">
+    <file name="index.html">
+      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
+      <div class="check-element animate-show-hide" ng-show="checked">
+        I show up when your checkbox is checked.
+      </div>
+    </file>
+    <file name="animations.css">
+      .animate-show-hide.ng-hide {
+        opacity: 0;
+      }
+
+      .animate-show-hide.ng-hide-add,
+      .animate-show-hide.ng-hide-remove {
+        transition: all linear 0.5s;
+      }
+
+      .check-element {
+        border: 1px solid black;
+        opacity: 1;
+        padding: 10px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      it('should check ngShow', function() {
+        var checkbox = element(by.model('checked'));
+        var checkElem = element(by.css('.check-element'));
+
+        expect(checkElem.isDisplayed()).toBe(false);
+        checkbox.click();
+        expect(checkElem.isDisplayed()).toBe(true);
+      });
+    </file>
+  </example>
+ *
+ * <hr />
+ * @example
+ * A more complex example, featuring different show/hide animations:
+ *
+  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-show-complex">
+    <file name="index.html">
+      Show: <input type="checkbox" ng-model="checked" aria-label="Toggle ngShow"><br />
+      <div class="check-element funky-show-hide" ng-show="checked">
+        I show up when your checkbox is checked.
+      </div>
+    </file>
+    <file name="animations.css">
+      body {
+        overflow: hidden;
+        perspective: 1000px;
+      }
+
+      .funky-show-hide.ng-hide-add {
+        transform: rotateZ(0);
+        transform-origin: right;
+        transition: all 0.5s ease-in-out;
+      }
+
+      .funky-show-hide.ng-hide-add.ng-hide-add-active {
+        transform: rotateZ(-135deg);
+      }
+
+      .funky-show-hide.ng-hide-remove {
+        transform: rotateY(90deg);
+        transform-origin: left;
+        transition: all 0.5s ease;
+      }
+
+      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
+        transform: rotateY(0);
+      }
+
+      .check-element {
+        border: 1px solid black;
+        opacity: 1;
+        padding: 10px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      it('should check ngShow', function() {
+        var checkbox = element(by.model('checked'));
+        var checkElem = element(by.css('.check-element'));
+
+        expect(checkElem.isDisplayed()).toBe(false);
+        checkbox.click();
+        expect(checkElem.isDisplayed()).toBe(true);
+      });
+    </file>
+  </example>
+ *
+ * @knownIssue
+ *
+ * ### Flickering when using ngShow to toggle between elements
+ *
+ * When using {@link ngShow} and / or {@link ngHide} to toggle between elements, it can
+ * happen that both the element to show and the element to hide are visible for a very short time.
+ *
+ * This usually happens when the {@link ngAnimate ngAnimate module} is included, but no actual animations
+ * are defined for {@link ngShow} / {@link ngHide}. Internet Explorer is affected more often than
+ * other browsers.
+ *
+ * There are several way to mitigate this problem:
+ *
+ * - {@link guide/animations#how-to-selectively-enable-disable-and-skip-animations Disable animations on the affected elements}.
+ * - Use {@link ngIf} or {@link ngSwitch} instead of {@link ngShow} / {@link ngHide}.
+ * - Use the special CSS selector `ng-hide.ng-hide-animate` to set `{display: none}` or similar on the affected elements.
+ * - Use `ng-class="{'ng-hide': expression}` instead of instead of {@link ngShow} / {@link ngHide}.
+ * - Define an animation on the affected elements.
+ */
+var ngShowDirective = ['$animate', function($animate) {
+  return {
+    restrict: 'A',
+    multiElement: true,
+    link: function(scope, element, attr) {
+      scope.$watch(attr.ngShow, function ngShowWatchAction(value) {
+        // we're adding a temporary, animation-specific class for ng-hide since this way
+        // we can control when the element is actually displayed on screen without having
+        // to have a global/greedy CSS selector that breaks when other animations are run.
+        // Read: https://github.com/angular/angular.js/issues/9103#issuecomment-58335845
+        $animate[value ? 'removeClass' : 'addClass'](element, NG_HIDE_CLASS, {
+          tempClasses: NG_HIDE_IN_PROGRESS_CLASS
+        });
+      });
+    }
+  };
+}];
+
+
+/**
+ * @ngdoc directive
+ * @name ngHide
+ * @multiElement
+ *
+ * @description
+ * The `ngHide` directive shows or hides the given HTML element based on the expression provided to
+ * the `ngHide` attribute.
+ *
+ * The element is shown or hidden by removing or adding the `.ng-hide` CSS class onto the element.
+ * The `.ng-hide` CSS class is predefined in AngularJS and sets the display style to none (using an
+ * `!important` flag). For CSP mode please add `angular-csp.css` to your HTML file (see
+ * {@link ng.directive:ngCsp ngCsp}).
+ *
+ * ```html
+ * <!-- when $scope.myValue is truthy (element is hidden) -->
+ * <div ng-hide="myValue" class="ng-hide"></div>
+ *
+ * <!-- when $scope.myValue is falsy (element is visible) -->
+ * <div ng-hide="myValue"></div>
+ * ```
+ *
+ * When the `ngHide` expression evaluates to a truthy value then the `.ng-hide` CSS class is added
+ * to the class attribute on the element causing it to become hidden. When falsy, the `.ng-hide`
+ * CSS class is removed from the element causing the element not to appear hidden.
+ *
+ * ## Why is `!important` used?
+ *
+ * You may be wondering why `!important` is used for the `.ng-hide` CSS class. This is because the
+ * `.ng-hide` selector can be easily overridden by heavier selectors. For example, something as
+ * simple as changing the display style on a HTML list item would make hidden elements appear
+ * visible. This also becomes a bigger issue when dealing with CSS frameworks.
+ *
+ * By using `!important`, the show and hide behavior will work as expected despite any clash between
+ * CSS selector specificity (when `!important` isn't used with any conflicting styles). If a
+ * developer chooses to override the styling to change how to hide an element then it is just a
+ * matter of using `!important` in their own CSS code.
+ *
+ * ### Overriding `.ng-hide`
+ *
+ * By default, the `.ng-hide` class will style the element with `display: none !important`. If you
+ * wish to change the hide behavior with `ngShow`/`ngHide`, you can simply overwrite the styles for
+ * the `.ng-hide` CSS class. Note that the selector that needs to be used is actually
+ * `.ng-hide:not(.ng-hide-animate)` to cope with extra animation classes that can be added.
+ *
+ * ```css
+ * .ng-hide:not(.ng-hide-animate) {
+ *   /&#42; These are just alternative ways of hiding an element &#42;/
+ *   display: block!important;
+ *   position: absolute;
+ *   top: -9999px;
+ *   left: -9999px;
+ * }
+ * ```
+ *
+ * By default you don't need to override in CSS anything and the animations will work around the
+ * display style.
+ *
+ * @animations
+ * | Animation                                           | Occurs                                                                                                     |
+ * |-----------------------------------------------------|------------------------------------------------------------------------------------------------------------|
+ * | {@link $animate#addClass addClass} `.ng-hide`       | After the `ngHide` expression evaluates to a truthy value and just before the contents are set to hidden.  |
+ * | {@link $animate#removeClass removeClass} `.ng-hide` | After the `ngHide` expression evaluates to a non truthy value and just before contents are set to visible. |
+ *
+ * Animations in `ngShow`/`ngHide` work with the show and hide events that are triggered when the
+ * directive expression is true and false. This system works like the animation system present with
+ * `ngClass` except that you must also include the `!important` flag to override the display
+ * property so that the elements are not actually hidden during the animation.
+ *
+ * ```css
+ * /&#42; A working example can be found at the bottom of this page. &#42;/
+ * .my-element.ng-hide-add, .my-element.ng-hide-remove {
+ *   transition: all 0.5s linear;
+ * }
+ *
+ * .my-element.ng-hide-add { ... }
+ * .my-element.ng-hide-add.ng-hide-add-active { ... }
+ * .my-element.ng-hide-remove { ... }
+ * .my-element.ng-hide-remove.ng-hide-remove-active { ... }
+ * ```
+ *
+ * Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property
+ * to block during animation states - ngAnimate will automatically handle the style toggling for you.
+ *
+ * @element ANY
+ * @param {expression} ngHide If the {@link guide/expression expression} is truthy/falsy then the
+ *                            element is hidden/shown respectively.
+ *
+ * @example
+ * A simple example, animating the element's opacity:
+ *
+  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-simple">
+    <file name="index.html">
+      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
+      <div class="check-element animate-show-hide" ng-hide="checked">
+        I hide when your checkbox is checked.
+      </div>
+    </file>
+    <file name="animations.css">
+      .animate-show-hide.ng-hide {
+        opacity: 0;
+      }
+
+      .animate-show-hide.ng-hide-add,
+      .animate-show-hide.ng-hide-remove {
+        transition: all linear 0.5s;
+      }
+
+      .check-element {
+        border: 1px solid black;
+        opacity: 1;
+        padding: 10px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      it('should check ngHide', function() {
+        var checkbox = element(by.model('checked'));
+        var checkElem = element(by.css('.check-element'));
+
+        expect(checkElem.isDisplayed()).toBe(true);
+        checkbox.click();
+        expect(checkElem.isDisplayed()).toBe(false);
+      });
+    </file>
+  </example>
+ *
+ * <hr />
+ * @example
+ * A more complex example, featuring different show/hide animations:
+ *
+  <example module="ngAnimate" deps="angular-animate.js" animations="true" name="ng-hide-complex">
+    <file name="index.html">
+      Hide: <input type="checkbox" ng-model="checked" aria-label="Toggle ngHide"><br />
+      <div class="check-element funky-show-hide" ng-hide="checked">
+        I hide when your checkbox is checked.
+      </div>
+    </file>
+    <file name="animations.css">
+      body {
+        overflow: hidden;
+        perspective: 1000px;
+      }
+
+      .funky-show-hide.ng-hide-add {
+        transform: rotateZ(0);
+        transform-origin: right;
+        transition: all 0.5s ease-in-out;
+      }
+
+      .funky-show-hide.ng-hide-add.ng-hide-add-active {
+        transform: rotateZ(-135deg);
+      }
+
+      .funky-show-hide.ng-hide-remove {
+        transform: rotateY(90deg);
+        transform-origin: left;
+        transition: all 0.5s ease;
+      }
+
+      .funky-show-hide.ng-hide-remove.ng-hide-remove-active {
+        transform: rotateY(0);
+      }
+
+      .check-element {
+        border: 1px solid black;
+        opacity: 1;
+        padding: 10px;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      it('should check ngHide', function() {
+        var checkbox = element(by.model('checked'));
+        var checkElem = element(by.css('.check-element'));
+
+        expect(checkElem.isDisplayed()).toBe(true);
+        checkbox.click();
+        expect(checkElem.isDisplayed()).toBe(false);
+      });
+    </file>
+  </example>
+ *
+ * @knownIssue
+ *
+ * ### Flickering when using ngHide to toggle between elements
+ *
+ * When using {@link ngShow} and / or {@link ngHide} to toggle between elements, it can
+ * happen that both the element to show and the element to hide are visible for a very short time.
+ *
+ * This usually happens when the {@link ngAnimate ngAnimate module} is included, but no actual animations
+ * are defined for {@link ngShow} / {@link ngHide}. Internet Explorer is affected more often than
+ * other browsers.
+ *
+ * There are several way to mitigate this problem:
+ *
+ * - {@link guide/animations#how-to-selectively-enable-disable-and-skip-animations Disable animations on the affected elements}.
+ * - Use {@link ngIf} or {@link ngSwitch} instead of {@link ngShow} / {@link ngHide}.
+ * - Use the special CSS selector `ng-hide.ng-hide-animate` to set `{display: none}` or similar on the affected elements.
+ * - Use `ng-class="{'ng-hide': expression}` instead of instead of {@link ngShow} / {@link ngHide}.
+ * - Define an animation on the affected elements.
+ */
+var ngHideDirective = ['$animate', function($animate) {
+  return {
+    restrict: 'A',
+    multiElement: true,
+    link: function(scope, element, attr) {
+      scope.$watch(attr.ngHide, function ngHideWatchAction(value) {
+        // The comment inside of the ngShowDirective explains why we add and
+        // remove a temporary class for the show/hide animation
+        $animate[value ? 'addClass' : 'removeClass'](element,NG_HIDE_CLASS, {
+          tempClasses: NG_HIDE_IN_PROGRESS_CLASS
+        });
+      });
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngStyle
+ * @restrict AC
+ *
+ * @description
+ * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.
+ *
+ * @knownIssue
+ * You should not use {@link guide/interpolation interpolation} in the value of the `style`
+ * attribute, when using the `ngStyle` directive on the same element.
+ * See {@link guide/interpolation#known-issues here} for more info.
+ *
+ * @element ANY
+ * @param {expression} ngStyle
+ *
+ * {@link guide/expression Expression} which evals to an
+ * object whose keys are CSS style names and values are corresponding values for those CSS
+ * keys.
+ *
+ * Since some CSS style names are not valid keys for an object, they must be quoted.
+ * See the 'background-color' style in the example below.
+ *
+ * @example
+   <example name="ng-style">
+     <file name="index.html">
+        <input type="button" value="set color" ng-click="myStyle={color:'red'}">
+        <input type="button" value="set background" ng-click="myStyle={'background-color':'blue'}">
+        <input type="button" value="clear" ng-click="myStyle={}">
+        <br/>
+        <span ng-style="myStyle">Sample Text</span>
+        <pre>myStyle={{myStyle}}</pre>
+     </file>
+     <file name="style.css">
+       span {
+         color: black;
+       }
+     </file>
+     <file name="protractor.js" type="protractor">
+       var colorSpan = element(by.css('span'));
+
+       it('should check ng-style', function() {
+         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(0, 0, 0, 1\)|rgb\(0, 0, 0\)/);
+         element(by.css('input[value=\'set color\']')).click();
+         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(255, 0, 0, 1\)|rgb\(255, 0, 0\)/);
+         element(by.css('input[value=clear]')).click();
+         expect(colorSpan.getCssValue('color')).toMatch(/rgba\(0, 0, 0, 1\)|rgb\(0, 0, 0\)/);
+       });
+     </file>
+   </example>
+ */
+var ngStyleDirective = ngDirective(function(scope, element, attr) {
+  scope.$watchCollection(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {
+    if (oldStyles && (newStyles !== oldStyles)) {
+      forEach(oldStyles, function(val, style) { element.css(style, ''); });
+    }
+    if (newStyles) element.css(newStyles);
+  });
+});
+
+/**
+ * @ngdoc directive
+ * @name ngSwitch
+ * @restrict EA
+ *
+ * @description
+ * The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.
+ * Elements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location
+ * as specified in the template.
+ *
+ * The directive itself works similar to ngInclude, however, instead of downloading template code (or loading it
+ * from the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element
+ * matches the value obtained from the evaluated expression. In other words, you define a container element
+ * (where you place the directive), place an expression on the **`on="..."` attribute**
+ * (or the **`ng-switch="..."` attribute**), define any inner elements inside of the directive and place
+ * a when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on
+ * expression is evaluated. If a matching expression is not found via a when attribute then an element with the default
+ * attribute is displayed.
+ *
+ * <div class="alert alert-info">
+ * Be aware that the attribute values to match against cannot be expressions. They are interpreted
+ * as literal string values to match against.
+ * For example, **`ng-switch-when="someVal"`** will match against the string `"someVal"` not against the
+ * value of the expression `$scope.someVal`.
+ * </div>
+
+ * @animations
+ * | Animation                        | Occurs                              |
+ * |----------------------------------|-------------------------------------|
+ * | {@link ng.$animate#enter enter}  | after the ngSwitch contents change and the matched child element is placed inside the container |
+ * | {@link ng.$animate#leave leave}  | after the ngSwitch contents change and just before the former contents are removed from the DOM |
+ *
+ * @usage
+ *
+ * ```
+ * <ANY ng-switch="expression">
+ *   <ANY ng-switch-when="matchValue1">...</ANY>
+ *   <ANY ng-switch-when="matchValue2">...</ANY>
+ *   <ANY ng-switch-default>...</ANY>
+ * </ANY>
+ * ```
+ *
+ *
+ * @scope
+ * @priority 1200
+ * @param {*} ngSwitch|on expression to match against <code>ng-switch-when</code>.
+ * On child elements add:
+ *
+ * * `ngSwitchWhen`: the case statement to match against. If match then this
+ *   case will be displayed. If the same match appears multiple times, all the
+ *   elements will be displayed. It is possible to associate multiple values to
+ *   the same `ngSwitchWhen` by defining the optional attribute
+ *   `ngSwitchWhenSeparator`. The separator will be used to split the value of
+ *   the `ngSwitchWhen` attribute into multiple tokens, and the element will show
+ *   if any of the `ngSwitch` evaluates to any of these tokens.
+ * * `ngSwitchDefault`: the default case when no other case match. If there
+ *   are multiple default cases, all of them will be displayed when no other
+ *   case match.
+ *
+ *
+ * @example
+  <example module="switchExample" deps="angular-animate.js" animations="true" name="ng-switch">
+    <file name="index.html">
+      <div ng-controller="ExampleController">
+        <select ng-model="selection" ng-options="item for item in items">
+        </select>
+        <code>selection={{selection}}</code>
+        <hr/>
+        <div class="animate-switch-container"
+          ng-switch on="selection">
+            <div class="animate-switch" ng-switch-when="settings|options" ng-switch-when-separator="|">Settings Div</div>
+            <div class="animate-switch" ng-switch-when="home">Home Span</div>
+            <div class="animate-switch" ng-switch-default>default</div>
+        </div>
+      </div>
+    </file>
+    <file name="script.js">
+      angular.module('switchExample', ['ngAnimate'])
+        .controller('ExampleController', ['$scope', function($scope) {
+          $scope.items = ['settings', 'home', 'options', 'other'];
+          $scope.selection = $scope.items[0];
+        }]);
+    </file>
+    <file name="animations.css">
+      .animate-switch-container {
+        position:relative;
+        background:white;
+        border:1px solid black;
+        height:40px;
+        overflow:hidden;
+      }
+
+      .animate-switch {
+        padding:10px;
+      }
+
+      .animate-switch.ng-animate {
+        transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;
+
+        position:absolute;
+        top:0;
+        left:0;
+        right:0;
+        bottom:0;
+      }
+
+      .animate-switch.ng-leave.ng-leave-active,
+      .animate-switch.ng-enter {
+        top:-50px;
+      }
+      .animate-switch.ng-leave,
+      .animate-switch.ng-enter.ng-enter-active {
+        top:0;
+      }
+    </file>
+    <file name="protractor.js" type="protractor">
+      var switchElem = element(by.css('[ng-switch]'));
+      var select = element(by.model('selection'));
+
+      it('should start in settings', function() {
+        expect(switchElem.getText()).toMatch(/Settings Div/);
+      });
+      it('should change to home', function() {
+        select.all(by.css('option')).get(1).click();
+        expect(switchElem.getText()).toMatch(/Home Span/);
+      });
+      it('should change to settings via "options"', function() {
+        select.all(by.css('option')).get(2).click();
+        expect(switchElem.getText()).toMatch(/Settings Div/);
+      });
+      it('should select default', function() {
+        select.all(by.css('option')).get(3).click();
+        expect(switchElem.getText()).toMatch(/default/);
+      });
+    </file>
+  </example>
+ */
+var ngSwitchDirective = ['$animate', '$compile', function($animate, $compile) {
+  return {
+    require: 'ngSwitch',
+
+    // asks for $scope to fool the BC controller module
+    controller: ['$scope', function NgSwitchController() {
+     this.cases = {};
+    }],
+    link: function(scope, element, attr, ngSwitchController) {
+      var watchExpr = attr.ngSwitch || attr.on,
+          selectedTranscludes = [],
+          selectedElements = [],
+          previousLeaveAnimations = [],
+          selectedScopes = [];
+
+      var spliceFactory = function(array, index) {
+          return function(response) {
+            if (response !== false) array.splice(index, 1);
+          };
+      };
+
+      scope.$watch(watchExpr, function ngSwitchWatchAction(value) {
+        var i, ii;
+
+        // Start with the last, in case the array is modified during the loop
+        while (previousLeaveAnimations.length) {
+          $animate.cancel(previousLeaveAnimations.pop());
+        }
+
+        for (i = 0, ii = selectedScopes.length; i < ii; ++i) {
+          var selected = getBlockNodes(selectedElements[i].clone);
+          selectedScopes[i].$destroy();
+          var runner = previousLeaveAnimations[i] = $animate.leave(selected);
+          runner.done(spliceFactory(previousLeaveAnimations, i));
+        }
+
+        selectedElements.length = 0;
+        selectedScopes.length = 0;
+
+        if ((selectedTranscludes = ngSwitchController.cases['!' + value] || ngSwitchController.cases['?'])) {
+          forEach(selectedTranscludes, function(selectedTransclude) {
+            selectedTransclude.transclude(function(caseElement, selectedScope) {
+              selectedScopes.push(selectedScope);
+              var anchor = selectedTransclude.element;
+              caseElement[caseElement.length++] = $compile.$$createComment('end ngSwitchWhen');
+              var block = { clone: caseElement };
+
+              selectedElements.push(block);
+              $animate.enter(caseElement, anchor.parent(), anchor);
+            });
+          });
+        }
+      });
+    }
+  };
+}];
+
+var ngSwitchWhenDirective = ngDirective({
+  transclude: 'element',
+  priority: 1200,
+  require: '^ngSwitch',
+  multiElement: true,
+  link: function(scope, element, attrs, ctrl, $transclude) {
+
+    var cases = attrs.ngSwitchWhen.split(attrs.ngSwitchWhenSeparator).sort().filter(
+      // Filter duplicate cases
+      function(element, index, array) { return array[index - 1] !== element; }
+    );
+
+    forEach(cases, function(whenCase) {
+      ctrl.cases['!' + whenCase] = (ctrl.cases['!' + whenCase] || []);
+      ctrl.cases['!' + whenCase].push({ transclude: $transclude, element: element });
+    });
+  }
+});
+
+var ngSwitchDefaultDirective = ngDirective({
+  transclude: 'element',
+  priority: 1200,
+  require: '^ngSwitch',
+  multiElement: true,
+  link: function(scope, element, attr, ctrl, $transclude) {
+    ctrl.cases['?'] = (ctrl.cases['?'] || []);
+    ctrl.cases['?'].push({ transclude: $transclude, element: element });
+   }
+});
+
+/**
+ * @ngdoc directive
+ * @name ngTransclude
+ * @restrict EAC
+ *
+ * @description
+ * Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.
+ *
+ * You can specify that you want to insert a named transclusion slot, instead of the default slot, by providing the slot name
+ * as the value of the `ng-transclude` or `ng-transclude-slot` attribute.
+ *
+ * If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing
+ * content of this element will be removed before the transcluded content is inserted.
+ * If the transcluded content is empty (or only whitespace), the existing content is left intact. This lets you provide fallback
+ * content in the case that no transcluded content is provided.
+ *
+ * @element ANY
+ *
+ * @param {string} ngTransclude|ngTranscludeSlot the name of the slot to insert at this point. If this is not provided, is empty
+ *                                               or its value is the same as the name of the attribute then the default slot is used.
+ *
+ * @example
+ * ### Basic transclusion
+ * This example demonstrates basic transclusion of content into a component directive.
+ * <example name="simpleTranscludeExample" module="transcludeExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('transcludeExample', [])
+ *        .directive('pane', function(){
+ *           return {
+ *             restrict: 'E',
+ *             transclude: true,
+ *             scope: { title:'@' },
+ *             template: '<div style="border: 1px solid black;">' +
+ *                         '<div style="background-color: gray">{{title}}</div>' +
+ *                         '<ng-transclude></ng-transclude>' +
+ *                       '</div>'
+ *           };
+ *       })
+ *       .controller('ExampleController', ['$scope', function($scope) {
+ *         $scope.title = 'Lorem Ipsum';
+ *         $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
+ *       }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <input ng-model="title" aria-label="title"> <br/>
+ *       <textarea ng-model="text" aria-label="text"></textarea> <br/>
+ *       <pane title="{{title}}"><span>{{text}}</span></pane>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *      it('should have transcluded', function() {
+ *        var titleElement = element(by.model('title'));
+ *        titleElement.clear();
+ *        titleElement.sendKeys('TITLE');
+ *        var textElement = element(by.model('text'));
+ *        textElement.clear();
+ *        textElement.sendKeys('TEXT');
+ *        expect(element(by.binding('title')).getText()).toEqual('TITLE');
+ *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
+ *      });
+ *   </file>
+ * </example>
+ *
+ * @example
+ * ### Transclude fallback content
+ * This example shows how to use `NgTransclude` with fallback content, that
+ * is displayed if no transcluded content is provided.
+ *
+ * <example module="transcludeFallbackContentExample" name="ng-transclude">
+ * <file name="index.html">
+ * <script>
+ * angular.module('transcludeFallbackContentExample', [])
+ * .directive('myButton', function(){
+ *             return {
+ *               restrict: 'E',
+ *               transclude: true,
+ *               scope: true,
+ *               template: '<button style="cursor: pointer;">' +
+ *                           '<ng-transclude>' +
+ *                             '<b style="color: red;">Button1</b>' +
+ *                           '</ng-transclude>' +
+ *                         '</button>'
+ *             };
+ *         });
+ * </script>
+ * <!-- fallback button content -->
+ * <my-button id="fallback"></my-button>
+ * <!-- modified button content -->
+ * <my-button id="modified">
+ *   <i style="color: green;">Button2</i>
+ * </my-button>
+ * </file>
+ * <file name="protractor.js" type="protractor">
+ * it('should have different transclude element content', function() {
+ *          expect(element(by.id('fallback')).getText()).toBe('Button1');
+ *          expect(element(by.id('modified')).getText()).toBe('Button2');
+ *        });
+ * </file>
+ * </example>
+ *
+ * @example
+ * ### Multi-slot transclusion
+ * This example demonstrates using multi-slot transclusion in a component directive.
+ * <example name="multiSlotTranscludeExample" module="multiSlotTranscludeExample">
+ *   <file name="index.html">
+ *    <style>
+ *      .title, .footer {
+ *        background-color: gray
+ *      }
+ *    </style>
+ *    <div ng-controller="ExampleController">
+ *      <input ng-model="title" aria-label="title"> <br/>
+ *      <textarea ng-model="text" aria-label="text"></textarea> <br/>
+ *      <pane>
+ *        <pane-title><a ng-href="{{link}}">{{title}}</a></pane-title>
+ *        <pane-body><p>{{text}}</p></pane-body>
+ *      </pane>
+ *    </div>
+ *   </file>
+ *   <file name="app.js">
+ *    angular.module('multiSlotTranscludeExample', [])
+ *     .directive('pane', function() {
+ *        return {
+ *          restrict: 'E',
+ *          transclude: {
+ *            'title': '?paneTitle',
+ *            'body': 'paneBody',
+ *            'footer': '?paneFooter'
+ *          },
+ *          template: '<div style="border: 1px solid black;">' +
+ *                      '<div class="title" ng-transclude="title">Fallback Title</div>' +
+ *                      '<div ng-transclude="body"></div>' +
+ *                      '<div class="footer" ng-transclude="footer">Fallback Footer</div>' +
+ *                    '</div>'
+ *        };
+ *    })
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.title = 'Lorem Ipsum';
+ *      $scope.link = 'https://google.com';
+ *      $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';
+ *    }]);
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *      it('should have transcluded the title and the body', function() {
+ *        var titleElement = element(by.model('title'));
+ *        titleElement.clear();
+ *        titleElement.sendKeys('TITLE');
+ *        var textElement = element(by.model('text'));
+ *        textElement.clear();
+ *        textElement.sendKeys('TEXT');
+ *        expect(element(by.css('.title')).getText()).toEqual('TITLE');
+ *        expect(element(by.binding('text')).getText()).toEqual('TEXT');
+ *        expect(element(by.css('.footer')).getText()).toEqual('Fallback Footer');
+ *      });
+ *   </file>
+ * </example>
+ */
+var ngTranscludeMinErr = minErr('ngTransclude');
+var ngTranscludeDirective = ['$compile', function($compile) {
+  return {
+    restrict: 'EAC',
+    compile: function ngTranscludeCompile(tElement) {
+
+      // Remove and cache any original content to act as a fallback
+      var fallbackLinkFn = $compile(tElement.contents());
+      tElement.empty();
+
+      return function ngTranscludePostLink($scope, $element, $attrs, controller, $transclude) {
+
+        if (!$transclude) {
+          throw ngTranscludeMinErr('orphan',
+          'Illegal use of ngTransclude directive in the template! ' +
+          'No parent directive that requires a transclusion found. ' +
+          'Element: {0}',
+          startingTag($element));
+        }
+
+
+        // If the attribute is of the form: `ng-transclude="ng-transclude"` then treat it like the default
+        if ($attrs.ngTransclude === $attrs.$attr.ngTransclude) {
+          $attrs.ngTransclude = '';
+        }
+        var slotName = $attrs.ngTransclude || $attrs.ngTranscludeSlot;
+
+        // If the slot is required and no transclusion content is provided then this call will throw an error
+        $transclude(ngTranscludeCloneAttachFn, null, slotName);
+
+        // If the slot is optional and no transclusion content is provided then use the fallback content
+        if (slotName && !$transclude.isSlotFilled(slotName)) {
+          useFallbackContent();
+        }
+
+        function ngTranscludeCloneAttachFn(clone, transcludedScope) {
+          if (clone.length && notWhitespace(clone)) {
+            $element.append(clone);
+          } else {
+            useFallbackContent();
+            // There is nothing linked against the transcluded scope since no content was available,
+            // so it should be safe to clean up the generated scope.
+            transcludedScope.$destroy();
+          }
+        }
+
+        function useFallbackContent() {
+          // Since this is the fallback content rather than the transcluded content,
+          // we link against the scope of this directive rather than the transcluded scope
+          fallbackLinkFn($scope, function(clone) {
+            $element.append(clone);
+          });
+        }
+
+        function notWhitespace(nodes) {
+          for (var i = 0, ii = nodes.length; i < ii; i++) {
+            var node = nodes[i];
+            if (node.nodeType !== NODE_TYPE_TEXT || node.nodeValue.trim()) {
+              return true;
+            }
+          }
+        }
+      };
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name script
+ * @restrict E
+ *
+ * @description
+ * Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the
+ * template can be used by {@link ng.directive:ngInclude `ngInclude`},
+ * {@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the
+ * `<script>` element must be specified as `text/ng-template`, and a cache name for the template must be
+ * assigned through the element's `id`, which can then be used as a directive's `templateUrl`.
+ *
+ * @param {string} type Must be set to `'text/ng-template'`.
+ * @param {string} id Cache name of the template.
+ *
+ * @example
+  <example  name="script-tag">
+    <file name="index.html">
+      <script type="text/ng-template" id="/tpl.html">
+        Content of the template.
+      </script>
+
+      <a ng-click="currentTpl='/tpl.html'" id="tpl-link">Load inlined template</a>
+      <div id="tpl-content" ng-include src="currentTpl"></div>
+    </file>
+    <file name="protractor.js" type="protractor">
+      it('should load template defined inside script tag', function() {
+        element(by.css('#tpl-link')).click();
+        expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);
+      });
+    </file>
+  </example>
+ */
+var scriptDirective = ['$templateCache', function($templateCache) {
+  return {
+    restrict: 'E',
+    terminal: true,
+    compile: function(element, attr) {
+      if (attr.type === 'text/ng-template') {
+        var templateUrl = attr.id,
+            text = element[0].text;
+
+        $templateCache.put(templateUrl, text);
+      }
+    }
+  };
+}];
+
+/* exported selectDirective, optionDirective */
+
+var noopNgModelController = { $setViewValue: noop, $render: noop };
+
+function setOptionSelectedStatus(optionEl, value) {
+  optionEl.prop('selected', value);
+  /**
+   * When unselecting an option, setting the property to null / false should be enough
+   * However, screenreaders might react to the selected attribute instead, see
+   * https://github.com/angular/angular.js/issues/14419
+   * Note: "selected" is a boolean attr and will be removed when the "value" arg in attr() is false
+   * or null
+   */
+  optionEl.attr('selected', value);
+}
+
+/**
+ * @ngdoc type
+ * @name  select.SelectController
+ *
+ * @description
+ * The controller for the {@link ng.select select} directive. The controller exposes
+ * a few utility methods that can be used to augment the behavior of a regular or an
+ * {@link ng.ngOptions ngOptions} select element.
+ *
+ * @example
+ * ### Set a custom error when the unknown option is selected
+ *
+ * This example sets a custom error "unknownValue" on the ngModelController
+ * when the select element's unknown option is selected, i.e. when the model is set to a value
+ * that is not matched by any option.
+ *
+ * <example name="select-unknown-value-error" module="staticSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="testSelect"> Single select: </label><br>
+ *     <select name="testSelect" ng-model="selected" unknown-value-error>
+ *       <option value="option-1">Option 1</option>
+ *       <option value="option-2">Option 2</option>
+ *     </select><br>
+ *     <span class="error" ng-if="myForm.testSelect.$error.unknownValue">
+ *       Error: The current model doesn't match any option</span><br>
+ *
+ *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
+ *   </form>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('staticSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.selected = null;
+ *
+ *      $scope.forceUnknownOption = function() {
+ *        $scope.selected = 'nonsense';
+ *      };
+ *   }])
+ *   .directive('unknownValueError', function() {
+ *     return {
+ *       require: ['ngModel', 'select'],
+ *       link: function(scope, element, attrs, ctrls) {
+ *         var ngModelCtrl = ctrls[0];
+ *         var selectCtrl = ctrls[1];
+ *
+ *         ngModelCtrl.$validators.unknownValue = function(modelValue, viewValue) {
+ *           if (selectCtrl.$isUnknownOptionSelected()) {
+ *             return false;
+ *           }
+ *
+ *           return true;
+ *         };
+ *       }
+ *
+ *     };
+ *   });
+ * </file>
+ *</example>
+ *
+ *
+ * @example
+ * ### Set the "required" error when the unknown option is selected.
+ *
+ * By default, the "required" error on the ngModelController is only set on a required select
+ * when the empty option is selected. This example adds a custom directive that also sets the
+ * error when the unknown option is selected.
+ *
+ * <example name="select-unknown-value-required" module="staticSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="testSelect"> Select: </label><br>
+ *     <select name="testSelect" ng-model="selected" required unknown-value-required>
+ *       <option value="option-1">Option 1</option>
+ *       <option value="option-2">Option 2</option>
+ *     </select><br>
+ *     <span class="error" ng-if="myForm.testSelect.$error.required">Error: Please select a value</span><br>
+ *
+ *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
+ *   </form>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('staticSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.selected = null;
+ *
+ *      $scope.forceUnknownOption = function() {
+ *        $scope.selected = 'nonsense';
+ *      };
+ *   }])
+ *   .directive('unknownValueRequired', function() {
+ *     return {
+ *       priority: 1, // This directive must run after the required directive has added its validator
+ *       require: ['ngModel', 'select'],
+ *       link: function(scope, element, attrs, ctrls) {
+ *         var ngModelCtrl = ctrls[0];
+ *         var selectCtrl = ctrls[1];
+ *
+ *         var originalRequiredValidator = ngModelCtrl.$validators.required;
+ *
+ *         ngModelCtrl.$validators.required = function() {
+ *           if (attrs.required && selectCtrl.$isUnknownOptionSelected()) {
+ *             return false;
+ *           }
+ *
+ *           return originalRequiredValidator.apply(this, arguments);
+ *         };
+ *       }
+ *     };
+ *   });
+ * </file>
+ * <file name="protractor.js" type="protractor">
+ *  it('should show the error message when the unknown option is selected', function() {
+
+      var error = element(by.className('error'));
+
+      expect(error.getText()).toBe('Error: Please select a value');
+
+      element(by.cssContainingText('option', 'Option 1')).click();
+
+      expect(error.isPresent()).toBe(false);
+
+      element(by.tagName('button')).click();
+
+      expect(error.getText()).toBe('Error: Please select a value');
+    });
+ * </file>
+ *</example>
+ *
+ *
+ */
+var SelectController =
+        ['$element', '$scope', /** @this */ function($element, $scope) {
+
+  var self = this,
+      optionsMap = new NgMap();
+
+  self.selectValueMap = {}; // Keys are the hashed values, values the original values
+
+  // If the ngModel doesn't get provided then provide a dummy noop version to prevent errors
+  self.ngModelCtrl = noopNgModelController;
+  self.multiple = false;
+
+  // The "unknown" option is one that is prepended to the list if the viewValue
+  // does not match any of the options. When it is rendered the value of the unknown
+  // option is '? XXX ?' where XXX is the hashKey of the value that is not known.
+  //
+  // Support: IE 9 only
+  // We can't just jqLite('<option>') since jqLite is not smart enough
+  // to create it in <select> and IE barfs otherwise.
+  self.unknownOption = jqLite(window.document.createElement('option'));
+
+  // The empty option is an option with the value '' that the application developer can
+  // provide inside the select. It is always selectable and indicates that a "null" selection has
+  // been made by the user.
+  // If the select has an empty option, and the model of the select is set to "undefined" or "null",
+  // the empty option is selected.
+  // If the model is set to a different unmatched value, the unknown option is rendered and
+  // selected, i.e both are present, because a "null" selection and an unknown value are different.
+  self.hasEmptyOption = false;
+  self.emptyOption = undefined;
+
+  self.renderUnknownOption = function(val) {
+    var unknownVal = self.generateUnknownOptionValue(val);
+    self.unknownOption.val(unknownVal);
+    $element.prepend(self.unknownOption);
+    setOptionSelectedStatus(self.unknownOption, true);
+    $element.val(unknownVal);
+  };
+
+  self.updateUnknownOption = function(val) {
+    var unknownVal = self.generateUnknownOptionValue(val);
+    self.unknownOption.val(unknownVal);
+    setOptionSelectedStatus(self.unknownOption, true);
+    $element.val(unknownVal);
+  };
+
+  self.generateUnknownOptionValue = function(val) {
+    return '? ' + hashKey(val) + ' ?';
+  };
+
+  self.removeUnknownOption = function() {
+    if (self.unknownOption.parent()) self.unknownOption.remove();
+  };
+
+  self.selectEmptyOption = function() {
+    if (self.emptyOption) {
+      $element.val('');
+      setOptionSelectedStatus(self.emptyOption, true);
+    }
+  };
+
+  self.unselectEmptyOption = function() {
+    if (self.hasEmptyOption) {
+      setOptionSelectedStatus(self.emptyOption, false);
+    }
+  };
+
+  $scope.$on('$destroy', function() {
+    // disable unknown option so that we don't do work when the whole select is being destroyed
+    self.renderUnknownOption = noop;
+  });
+
+  // Read the value of the select control, the implementation of this changes depending
+  // upon whether the select can have multiple values and whether ngOptions is at work.
+  self.readValue = function readSingleValue() {
+    var val = $element.val();
+    // ngValue added option values are stored in the selectValueMap, normal interpolations are not
+    var realVal = val in self.selectValueMap ? self.selectValueMap[val] : val;
+
+    if (self.hasOption(realVal)) {
+      return realVal;
+    }
+
+    return null;
+  };
+
+
+  // Write the value to the select control, the implementation of this changes depending
+  // upon whether the select can have multiple values and whether ngOptions is at work.
+  self.writeValue = function writeSingleValue(value) {
+    // Make sure to remove the selected attribute from the previously selected option
+    // Otherwise, screen readers might get confused
+    var currentlySelectedOption = $element[0].options[$element[0].selectedIndex];
+    if (currentlySelectedOption) setOptionSelectedStatus(jqLite(currentlySelectedOption), false);
+
+    if (self.hasOption(value)) {
+      self.removeUnknownOption();
+
+      var hashedVal = hashKey(value);
+      $element.val(hashedVal in self.selectValueMap ? hashedVal : value);
+
+      // Set selected attribute and property on selected option for screen readers
+      var selectedOption = $element[0].options[$element[0].selectedIndex];
+      setOptionSelectedStatus(jqLite(selectedOption), true);
+    } else {
+      self.selectUnknownOrEmptyOption(value);
+    }
+  };
+
+
+  // Tell the select control that an option, with the given value, has been added
+  self.addOption = function(value, element) {
+    // Skip comment nodes, as they only pollute the `optionsMap`
+    if (element[0].nodeType === NODE_TYPE_COMMENT) return;
+
+    assertNotHasOwnProperty(value, '"option value"');
+    if (value === '') {
+      self.hasEmptyOption = true;
+      self.emptyOption = element;
+    }
+    var count = optionsMap.get(value) || 0;
+    optionsMap.set(value, count + 1);
+    // Only render at the end of a digest. This improves render performance when many options
+    // are added during a digest and ensures all relevant options are correctly marked as selected
+    scheduleRender();
+  };
+
+  // Tell the select control that an option, with the given value, has been removed
+  self.removeOption = function(value) {
+    var count = optionsMap.get(value);
+    if (count) {
+      if (count === 1) {
+        optionsMap.delete(value);
+        if (value === '') {
+          self.hasEmptyOption = false;
+          self.emptyOption = undefined;
+        }
+      } else {
+        optionsMap.set(value, count - 1);
+      }
+    }
+  };
+
+  // Check whether the select control has an option matching the given value
+  self.hasOption = function(value) {
+    return !!optionsMap.get(value);
+  };
+
+  /**
+   * @ngdoc method
+   * @name select.SelectController#$hasEmptyOption
+   *
+   * @description
+   *
+   * Returns `true` if the select element currently has an empty option
+   * element, i.e. an option that signifies that the select is empty / the selection is null.
+   *
+   */
+  self.$hasEmptyOption = function() {
+    return self.hasEmptyOption;
+  };
+
+  /**
+   * @ngdoc method
+   * @name select.SelectController#$isUnknownOptionSelected
+   *
+   * @description
+   *
+   * Returns `true` if the select element's unknown option is selected. The unknown option is added
+   * and automatically selected whenever the select model doesn't match any option.
+   *
+   */
+  self.$isUnknownOptionSelected = function() {
+    // Presence of the unknown option means it is selected
+    return $element[0].options[0] === self.unknownOption[0];
+  };
+
+  /**
+   * @ngdoc method
+   * @name select.SelectController#$isEmptyOptionSelected
+   *
+   * @description
+   *
+   * Returns `true` if the select element has an empty option and this empty option is currently
+   * selected. Returns `false` if the select element has no empty option or it is not selected.
+   *
+   */
+  self.$isEmptyOptionSelected = function() {
+    return self.hasEmptyOption && $element[0].options[$element[0].selectedIndex] === self.emptyOption[0];
+  };
+
+  self.selectUnknownOrEmptyOption = function(value) {
+    if (value == null && self.emptyOption) {
+      self.removeUnknownOption();
+      self.selectEmptyOption();
+    } else if (self.unknownOption.parent().length) {
+      self.updateUnknownOption(value);
+    } else {
+      self.renderUnknownOption(value);
+    }
+  };
+
+  var renderScheduled = false;
+  function scheduleRender() {
+    if (renderScheduled) return;
+    renderScheduled = true;
+    $scope.$$postDigest(function() {
+      renderScheduled = false;
+      self.ngModelCtrl.$render();
+    });
+  }
+
+  var updateScheduled = false;
+  function scheduleViewValueUpdate(renderAfter) {
+    if (updateScheduled) return;
+
+    updateScheduled = true;
+
+    $scope.$$postDigest(function() {
+      if ($scope.$$destroyed) return;
+
+      updateScheduled = false;
+      self.ngModelCtrl.$setViewValue(self.readValue());
+      if (renderAfter) self.ngModelCtrl.$render();
+    });
+  }
+
+
+  self.registerOption = function(optionScope, optionElement, optionAttrs, interpolateValueFn, interpolateTextFn) {
+
+    if (optionAttrs.$attr.ngValue) {
+      // The value attribute is set by ngValue
+      var oldVal, hashedVal;
+      optionAttrs.$observe('value', function valueAttributeObserveAction(newVal) {
+
+        var removal;
+        var previouslySelected = optionElement.prop('selected');
+
+        if (isDefined(hashedVal)) {
+          self.removeOption(oldVal);
+          delete self.selectValueMap[hashedVal];
+          removal = true;
+        }
+
+        hashedVal = hashKey(newVal);
+        oldVal = newVal;
+        self.selectValueMap[hashedVal] = newVal;
+        self.addOption(newVal, optionElement);
+        // Set the attribute directly instead of using optionAttrs.$set - this stops the observer
+        // from firing a second time. Other $observers on value will also get the result of the
+        // ngValue expression, not the hashed value
+        optionElement.attr('value', hashedVal);
+
+        if (removal && previouslySelected) {
+          scheduleViewValueUpdate();
+        }
+
+      });
+    } else if (interpolateValueFn) {
+      // The value attribute is interpolated
+      optionAttrs.$observe('value', function valueAttributeObserveAction(newVal) {
+        // This method is overwritten in ngOptions and has side-effects!
+        self.readValue();
+
+        var removal;
+        var previouslySelected = optionElement.prop('selected');
+
+        if (isDefined(oldVal)) {
+          self.removeOption(oldVal);
+          removal = true;
+        }
+        oldVal = newVal;
+        self.addOption(newVal, optionElement);
+
+        if (removal && previouslySelected) {
+          scheduleViewValueUpdate();
+        }
+      });
+    } else if (interpolateTextFn) {
+      // The text content is interpolated
+      optionScope.$watch(interpolateTextFn, function interpolateWatchAction(newVal, oldVal) {
+        optionAttrs.$set('value', newVal);
+        var previouslySelected = optionElement.prop('selected');
+        if (oldVal !== newVal) {
+          self.removeOption(oldVal);
+        }
+        self.addOption(newVal, optionElement);
+
+        if (oldVal && previouslySelected) {
+          scheduleViewValueUpdate();
+        }
+      });
+    } else {
+      // The value attribute is static
+      self.addOption(optionAttrs.value, optionElement);
+    }
+
+
+    optionAttrs.$observe('disabled', function(newVal) {
+
+      // Since model updates will also select disabled options (like ngOptions),
+      // we only have to handle options becoming disabled, not enabled
+
+      if (newVal === 'true' || newVal && optionElement.prop('selected')) {
+        if (self.multiple) {
+          scheduleViewValueUpdate(true);
+        } else {
+          self.ngModelCtrl.$setViewValue(null);
+          self.ngModelCtrl.$render();
+        }
+      }
+    });
+
+    optionElement.on('$destroy', function() {
+      var currentValue = self.readValue();
+      var removeValue = optionAttrs.value;
+
+      self.removeOption(removeValue);
+      scheduleRender();
+
+      if (self.multiple && currentValue && currentValue.indexOf(removeValue) !== -1 ||
+          currentValue === removeValue
+      ) {
+        // When multiple (selected) options are destroyed at the same time, we don't want
+        // to run a model update for each of them. Instead, run a single update in the $$postDigest
+        scheduleViewValueUpdate(true);
+      }
+    });
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name select
+ * @restrict E
+ *
+ * @description
+ * HTML `select` element with AngularJS data-binding.
+ *
+ * The `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding
+ * between the scope and the `<select>` control (including setting default values).
+ * It also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or
+ * {@link ngOptions `ngOptions`} directives.
+ *
+ * When an item in the `<select>` menu is selected, the value of the selected option will be bound
+ * to the model identified by the `ngModel` directive. With static or repeated options, this is
+ * the content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.
+ * Value and textContent can be interpolated.
+ *
+ * The {@link select.SelectController select controller} exposes utility functions that can be used
+ * to manipulate the select's behavior.
+ *
+ * ## Matching model and option values
+ *
+ * In general, the match between the model and an option is evaluated by strictly comparing the model
+ * value against the value of the available options.
+ *
+ * If you are setting the option value with the option's `value` attribute, or textContent, the
+ * value will always be a `string` which means that the model value must also be a string.
+ * Otherwise the `select` directive cannot match them correctly.
+ *
+ * To bind the model to a non-string value, you can use one of the following strategies:
+ * - the {@link ng.ngOptions `ngOptions`} directive
+ *   ({@link ng.select#using-select-with-ngoptions-and-setting-a-default-value})
+ * - the {@link ng.ngValue `ngValue`} directive, which allows arbitrary expressions to be
+ *   option values ({@link ng.select#using-ngvalue-to-bind-the-model-to-an-array-of-objects Example})
+ * - model $parsers / $formatters to convert the string value
+ *   ({@link ng.select#binding-select-to-a-non-string-value-via-ngmodel-parsing-formatting Example})
+ *
+ * If the viewValue of `ngModel` does not match any of the options, then the control
+ * will automatically add an "unknown" option, which it then removes when the mismatch is resolved.
+ *
+ * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can
+ * be nested into the `<select>` element. This element will then represent the `null` or "not selected"
+ * option. See example below for demonstration.
+ *
+ * ## Choosing between `ngRepeat` and `ngOptions`
+ *
+ * In many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions
+ * ngOptions} to achieve a similar result. However, `ngOptions` provides some benefits:
+ * - more flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the
+ * comprehension expression
+ * - reduced memory consumption by not creating a new scope for each repeated instance
+ * - increased render speed by creating the options in a documentFragment instead of individually
+ *
+ * Specifically, select with repeated options slows down significantly starting at 2000 options in
+ * Chrome and Internet Explorer / Edge.
+ *
+ *
+ * @param {string} ngModel Assignable AngularJS expression to data-bind to.
+ * @param {string=} name Property name of the form under which the control is published.
+ * @param {string=} multiple Allows multiple options to be selected. The selected values will be
+ *     bound to the model as an array.
+ * @param {string=} required Sets `required` validation error key if the value is not entered.
+ * @param {string=} ngRequired Adds required attribute and required validation constraint to
+ * the element when the ngRequired expression evaluates to true. Use ngRequired instead of required
+ * when you want to data-bind to the required attribute.
+ * @param {string=} ngChange AngularJS expression to be executed when selected option(s) changes due to user
+ *    interaction with the select element.
+ * @param {string=} ngOptions sets the options that the select is populated with and defines what is
+ * set on the model on selection. See {@link ngOptions `ngOptions`}.
+ * @param {string=} ngAttrSize sets the size of the select element dynamically. Uses the
+ * {@link guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes ngAttr} directive.
+ *
+ *
+ * @example
+ * ### Simple `select` elements with static options
+ *
+ * <example name="static-select" module="staticSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="singleSelect"> Single select: </label><br>
+ *     <select name="singleSelect" ng-model="data.singleSelect">
+ *       <option value="option-1">Option 1</option>
+ *       <option value="option-2">Option 2</option>
+ *     </select><br>
+ *
+ *     <label for="singleSelect"> Single select with "not selected" option and dynamic option values: </label><br>
+ *     <select name="singleSelect" id="singleSelect" ng-model="data.singleSelect">
+ *       <option value="">---Please select---</option> <!-- not selected / blank option -->
+ *       <option value="{{data.option1}}">Option 1</option> <!-- interpolation -->
+ *       <option value="option-2">Option 2</option>
+ *     </select><br>
+ *     <button ng-click="forceUnknownOption()">Force unknown option</button><br>
+ *     <tt>singleSelect = {{data.singleSelect}}</tt>
+ *
+ *     <hr>
+ *     <label for="multipleSelect"> Multiple select: </label><br>
+ *     <select name="multipleSelect" id="multipleSelect" ng-model="data.multipleSelect" multiple>
+ *       <option value="option-1">Option 1</option>
+ *       <option value="option-2">Option 2</option>
+ *       <option value="option-3">Option 3</option>
+ *     </select><br>
+ *     <tt>multipleSelect = {{data.multipleSelect}}</tt><br/>
+ *   </form>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('staticSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.data = {
+ *       singleSelect: null,
+ *       multipleSelect: [],
+ *       option1: 'option-1'
+ *      };
+ *
+ *      $scope.forceUnknownOption = function() {
+ *        $scope.data.singleSelect = 'nonsense';
+ *      };
+ *   }]);
+ * </file>
+ *</example>
+ *
+ * @example
+ * ### Using `ngRepeat` to generate `select` options
+ * <example name="select-ngrepeat" module="ngrepeatSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="repeatSelect"> Repeat select: </label>
+ *     <select name="repeatSelect" id="repeatSelect" ng-model="data.model">
+ *       <option ng-repeat="option in data.availableOptions" value="{{option.id}}">{{option.name}}</option>
+ *     </select>
+ *   </form>
+ *   <hr>
+ *   <tt>model = {{data.model}}</tt><br/>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('ngrepeatSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.data = {
+ *       model: null,
+ *       availableOptions: [
+ *         {id: '1', name: 'Option A'},
+ *         {id: '2', name: 'Option B'},
+ *         {id: '3', name: 'Option C'}
+ *       ]
+ *      };
+ *   }]);
+ * </file>
+ *</example>
+ *
+ * @example
+ * ### Using `ngValue` to bind the model to an array of objects
+ * <example name="select-ngvalue" module="ngvalueSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="ngvalueselect"> ngvalue select: </label>
+ *     <select size="6" name="ngvalueselect" ng-model="data.model" multiple>
+ *       <option ng-repeat="option in data.availableOptions" ng-value="option.value">{{option.name}}</option>
+ *     </select>
+ *   </form>
+ *   <hr>
+ *   <pre>model = {{data.model | json}}</pre><br/>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('ngvalueSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.data = {
+ *       model: null,
+ *       availableOptions: [
+           {value: 'myString', name: 'string'},
+           {value: 1, name: 'integer'},
+           {value: true, name: 'boolean'},
+           {value: null, name: 'null'},
+           {value: {prop: 'value'}, name: 'object'},
+           {value: ['a'], name: 'array'}
+ *       ]
+ *      };
+ *   }]);
+ * </file>
+ *</example>
+ *
+ * @example
+ * ### Using `select` with `ngOptions` and setting a default value
+ * See the {@link ngOptions ngOptions documentation} for more `ngOptions` usage examples.
+ *
+ * <example name="select-with-default-values" module="defaultValueSelect">
+ * <file name="index.html">
+ * <div ng-controller="ExampleController">
+ *   <form name="myForm">
+ *     <label for="mySelect">Make a choice:</label>
+ *     <select name="mySelect" id="mySelect"
+ *       ng-options="option.name for option in data.availableOptions track by option.id"
+ *       ng-model="data.selectedOption"></select>
+ *   </form>
+ *   <hr>
+ *   <tt>option = {{data.selectedOption}}</tt><br/>
+ * </div>
+ * </file>
+ * <file name="app.js">
+ *  angular.module('defaultValueSelect', [])
+ *    .controller('ExampleController', ['$scope', function($scope) {
+ *      $scope.data = {
+ *       availableOptions: [
+ *         {id: '1', name: 'Option A'},
+ *         {id: '2', name: 'Option B'},
+ *         {id: '3', name: 'Option C'}
+ *       ],
+ *       selectedOption: {id: '3', name: 'Option C'} //This sets the default value of the select in the ui
+ *       };
+ *   }]);
+ * </file>
+ *</example>
+ *
+ * @example
+ * ### Binding `select` to a non-string value via `ngModel` parsing / formatting
+ *
+ * <example name="select-with-non-string-options" module="nonStringSelect">
+ *   <file name="index.html">
+ *     <select ng-model="model.id" convert-to-number>
+ *       <option value="0">Zero</option>
+ *       <option value="1">One</option>
+ *       <option value="2">Two</option>
+ *     </select>
+ *     {{ model }}
+ *   </file>
+ *   <file name="app.js">
+ *     angular.module('nonStringSelect', [])
+ *       .run(function($rootScope) {
+ *         $rootScope.model = { id: 2 };
+ *       })
+ *       .directive('convertToNumber', function() {
+ *         return {
+ *           require: 'ngModel',
+ *           link: function(scope, element, attrs, ngModel) {
+ *             ngModel.$parsers.push(function(val) {
+ *               return parseInt(val, 10);
+ *             });
+ *             ngModel.$formatters.push(function(val) {
+ *               return '' + val;
+ *             });
+ *           }
+ *         };
+ *       });
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+ *     it('should initialize to model', function() {
+ *       expect(element(by.model('model.id')).$('option:checked').getText()).toEqual('Two');
+ *     });
+ *   </file>
+ * </example>
+ *
+ */
+var selectDirective = function() {
+
+  return {
+    restrict: 'E',
+    require: ['select', '?ngModel'],
+    controller: SelectController,
+    priority: 1,
+    link: {
+      pre: selectPreLink,
+      post: selectPostLink
+    }
+  };
+
+  function selectPreLink(scope, element, attr, ctrls) {
+
+      var selectCtrl = ctrls[0];
+      var ngModelCtrl = ctrls[1];
+
+      // if ngModel is not defined, we don't need to do anything but set the registerOption
+      // function to noop, so options don't get added internally
+      if (!ngModelCtrl) {
+        selectCtrl.registerOption = noop;
+        return;
+      }
+
+
+      selectCtrl.ngModelCtrl = ngModelCtrl;
+
+      // When the selected item(s) changes we delegate getting the value of the select control
+      // to the `readValue` method, which can be changed if the select can have multiple
+      // selected values or if the options are being generated by `ngOptions`
+      element.on('change', function() {
+        selectCtrl.removeUnknownOption();
+        scope.$apply(function() {
+          ngModelCtrl.$setViewValue(selectCtrl.readValue());
+        });
+      });
+
+      // If the select allows multiple values then we need to modify how we read and write
+      // values from and to the control; also what it means for the value to be empty and
+      // we have to add an extra watch since ngModel doesn't work well with arrays - it
+      // doesn't trigger rendering if only an item in the array changes.
+      if (attr.multiple) {
+        selectCtrl.multiple = true;
+
+        // Read value now needs to check each option to see if it is selected
+        selectCtrl.readValue = function readMultipleValue() {
+          var array = [];
+          forEach(element.find('option'), function(option) {
+            if (option.selected && !option.disabled) {
+              var val = option.value;
+              array.push(val in selectCtrl.selectValueMap ? selectCtrl.selectValueMap[val] : val);
+            }
+          });
+          return array;
+        };
+
+        // Write value now needs to set the selected property of each matching option
+        selectCtrl.writeValue = function writeMultipleValue(value) {
+          forEach(element.find('option'), function(option) {
+            var shouldBeSelected = !!value && (includes(value, option.value) ||
+                                               includes(value, selectCtrl.selectValueMap[option.value]));
+            var currentlySelected = option.selected;
+
+            // Support: IE 9-11 only, Edge 12-15+
+            // In IE and Edge adding options to the selection via shift+click/UP/DOWN
+            // will de-select already selected options if "selected" on those options was set
+            // more than once (i.e. when the options were already selected)
+            // So we only modify the selected property if necessary.
+            // Note: this behavior cannot be replicated via unit tests because it only shows in the
+            // actual user interface.
+            if (shouldBeSelected !== currentlySelected) {
+              setOptionSelectedStatus(jqLite(option), shouldBeSelected);
+            }
+
+          });
+        };
+
+        // we have to do it on each watch since ngModel watches reference, but
+        // we need to work of an array, so we need to see if anything was inserted/removed
+        var lastView, lastViewRef = NaN;
+        scope.$watch(function selectMultipleWatch() {
+          if (lastViewRef === ngModelCtrl.$viewValue && !equals(lastView, ngModelCtrl.$viewValue)) {
+            lastView = shallowCopy(ngModelCtrl.$viewValue);
+            ngModelCtrl.$render();
+          }
+          lastViewRef = ngModelCtrl.$viewValue;
+        });
+
+        // If we are a multiple select then value is now a collection
+        // so the meaning of $isEmpty changes
+        ngModelCtrl.$isEmpty = function(value) {
+          return !value || value.length === 0;
+        };
+
+      }
+    }
+
+    function selectPostLink(scope, element, attrs, ctrls) {
+      // if ngModel is not defined, we don't need to do anything
+      var ngModelCtrl = ctrls[1];
+      if (!ngModelCtrl) return;
+
+      var selectCtrl = ctrls[0];
+
+      // We delegate rendering to the `writeValue` method, which can be changed
+      // if the select can have multiple selected values or if the options are being
+      // generated by `ngOptions`.
+      // This must be done in the postLink fn to prevent $render to be called before
+      // all nodes have been linked correctly.
+      ngModelCtrl.$render = function() {
+        selectCtrl.writeValue(ngModelCtrl.$viewValue);
+      };
+    }
+};
+
+
+// The option directive is purely designed to communicate the existence (or lack of)
+// of dynamically created (and destroyed) option elements to their containing select
+// directive via its controller.
+var optionDirective = ['$interpolate', function($interpolate) {
+  return {
+    restrict: 'E',
+    priority: 100,
+    compile: function(element, attr) {
+      var interpolateValueFn, interpolateTextFn;
+
+      if (isDefined(attr.ngValue)) {
+        // Will be handled by registerOption
+      } else if (isDefined(attr.value)) {
+        // If the value attribute is defined, check if it contains an interpolation
+        interpolateValueFn = $interpolate(attr.value, true);
+      } else {
+        // If the value attribute is not defined then we fall back to the
+        // text content of the option element, which may be interpolated
+        interpolateTextFn = $interpolate(element.text(), true);
+        if (!interpolateTextFn) {
+          attr.$set('value', element.text());
+        }
+      }
+
+      return function(scope, element, attr) {
+        // This is an optimization over using ^^ since we don't want to have to search
+        // all the way to the root of the DOM for every single option element
+        var selectCtrlName = '$selectController',
+            parent = element.parent(),
+            selectCtrl = parent.data(selectCtrlName) ||
+              parent.parent().data(selectCtrlName); // in case we are in optgroup
+
+        if (selectCtrl) {
+          selectCtrl.registerOption(scope, element, attr, interpolateValueFn, interpolateTextFn);
+        }
+      };
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngRequired
+ * @restrict A
+ *
+ * @param {expression} ngRequired AngularJS expression. If it evaluates to `true`, it sets the
+ *                                `required` attribute to the element and adds the `required`
+ *                                {@link ngModel.NgModelController#$validators `validator`}.
+ *
+ * @description
+ *
+ * ngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
+ * It is most often used for {@link input `input`} and {@link select `select`} controls, but can also be
+ * applied to custom controls.
+ *
+ * The directive sets the `required` attribute on the element if the AngularJS expression inside
+ * `ngRequired` evaluates to true. A special directive for setting `required` is necessary because we
+ * cannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}
+ * for more info.
+ *
+ * The validator will set the `required` error key to true if the `required` attribute is set and
+ * calling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the
+ * {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the
+ * `$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing
+ * custom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.
+ *
+ * @example
+ * <example name="ngRequiredDirective" module="ngRequiredExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('ngRequiredExample', [])
+ *         .controller('ExampleController', ['$scope', function($scope) {
+ *           $scope.required = true;
+ *         }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <form name="form">
+ *         <label for="required">Toggle required: </label>
+ *         <input type="checkbox" ng-model="required" id="required" />
+ *         <br>
+ *         <label for="input">This input must be filled if `required` is true: </label>
+ *         <input type="text" ng-model="model" id="input" name="input" ng-required="required" /><br>
+ *         <hr>
+ *         required error set? = <code>{{form.input.$error.required}}</code><br>
+ *         model = <code>{{model}}</code>
+ *       </form>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+       var required = element(by.binding('form.input.$error.required'));
+       var model = element(by.binding('model'));
+       var input = element(by.id('input'));
+
+       it('should set the required error', function() {
+         expect(required.getText()).toContain('true');
+
+         input.sendKeys('123');
+         expect(required.getText()).not.toContain('true');
+         expect(model.getText()).toContain('123');
+       });
+ *   </file>
+ * </example>
+ */
+var requiredDirective = ['$parse', function($parse) {
+  return {
+    restrict: 'A',
+    require: '?ngModel',
+    link: function(scope, elm, attr, ctrl) {
+      if (!ctrl) return;
+      // For boolean attributes like required, presence means true
+      var value = attr.hasOwnProperty('required') || $parse(attr.ngRequired)(scope);
+
+      if (!attr.ngRequired) {
+        // force truthy in case we are on non input element
+        // (input elements do this automatically for boolean attributes like required)
+        attr.required = true;
+      }
+
+      ctrl.$validators.required = function(modelValue, viewValue) {
+        return !value || !ctrl.$isEmpty(viewValue);
+      };
+
+      attr.$observe('required', function(newVal) {
+
+        if (value !== newVal) {
+          value = newVal;
+          ctrl.$validate();
+        }
+      });
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngPattern
+ * @restrict A
+ *
+ * @param {expression|RegExp} ngPattern AngularJS expression that must evaluate to a `RegExp` or a `String`
+ *                                      parsable into a `RegExp`, or a `RegExp` literal. See above for
+ *                                      more details.
+ *
+ * @description
+ *
+ * ngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
+ * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
+ *
+ * The validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
+ * does not match a RegExp which is obtained from the `ngPattern` attribute value:
+ * - the value is an AngularJS expression:
+ *   - If the expression evaluates to a RegExp object, then this is used directly.
+ *   - If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it
+ *     in `^` and `$` characters. For instance, `"abc"` will be converted to `new RegExp('^abc$')`.
+ * - If the value is a RegExp literal, e.g. `ngPattern="/^\d+$/"`, it is used directly.
+ *
+ * <div class="alert alert-info">
+ * **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to
+ * start at the index of the last search's match, thus not taking the whole input value into
+ * account.
+ * </div>
+ *
+ * <div class="alert alert-info">
+ * **Note:** This directive is also added when the plain `pattern` attribute is used, with two
+ * differences:
+ * <ol>
+ *   <li>
+ *     `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is
+ *     not available.
+ *   </li>
+ *   <li>
+ *     The `ngPattern` attribute must be an expression, while the `pattern` value must be
+ *     interpolated.
+ *   </li>
+ * </ol>
+ * </div>
+ *
+ * @example
+ * <example name="ngPatternDirective" module="ngPatternExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('ngPatternExample', [])
+ *         .controller('ExampleController', ['$scope', function($scope) {
+ *           $scope.regex = '\\d+';
+ *         }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <form name="form">
+ *         <label for="regex">Set a pattern (regex string): </label>
+ *         <input type="text" ng-model="regex" id="regex" />
+ *         <br>
+ *         <label for="input">This input is restricted by the current pattern: </label>
+ *         <input type="text" ng-model="model" id="input" name="input" ng-pattern="regex" /><br>
+ *         <hr>
+ *         input valid? = <code>{{form.input.$valid}}</code><br>
+ *         model = <code>{{model}}</code>
+ *       </form>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+       var model = element(by.binding('model'));
+       var input = element(by.id('input'));
+
+       it('should validate the input with the default pattern', function() {
+         input.sendKeys('aaa');
+         expect(model.getText()).not.toContain('aaa');
+
+         input.clear().then(function() {
+           input.sendKeys('123');
+           expect(model.getText()).toContain('123');
+         });
+       });
+ *   </file>
+ * </example>
+ */
+var patternDirective = ['$parse', function($parse) {
+  return {
+    restrict: 'A',
+    require: '?ngModel',
+    compile: function(tElm, tAttr) {
+      var patternExp;
+      var parseFn;
+
+      if (tAttr.ngPattern) {
+        patternExp = tAttr.ngPattern;
+
+        // ngPattern might be a scope expression, or an inlined regex, which is not parsable.
+        // We get value of the attribute here, so we can compare the old and the new value
+        // in the observer to avoid unnecessary validations
+        if (tAttr.ngPattern.charAt(0) === '/' && REGEX_STRING_REGEXP.test(tAttr.ngPattern)) {
+          parseFn = function() { return tAttr.ngPattern; };
+        } else {
+          parseFn = $parse(tAttr.ngPattern);
+        }
+      }
+
+      return function(scope, elm, attr, ctrl) {
+        if (!ctrl) return;
+
+        var attrVal = attr.pattern;
+
+        if (attr.ngPattern) {
+          attrVal = parseFn(scope);
+        } else {
+          patternExp = attr.pattern;
+        }
+
+        var regexp = parsePatternAttr(attrVal, patternExp, elm);
+
+        attr.$observe('pattern', function(newVal) {
+          var oldRegexp = regexp;
+
+          regexp = parsePatternAttr(newVal, patternExp, elm);
+
+          if ((oldRegexp && oldRegexp.toString()) !== (regexp && regexp.toString())) {
+            ctrl.$validate();
+          }
+        });
+
+        ctrl.$validators.pattern = function(modelValue, viewValue) {
+          // HTML5 pattern constraint validates the input value, so we validate the viewValue
+          return ctrl.$isEmpty(viewValue) || isUndefined(regexp) || regexp.test(viewValue);
+        };
+      };
+    }
+
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngMaxlength
+ * @restrict A
+ *
+ * @param {expression} ngMaxlength AngularJS expression that must evaluate to a `Number` or `String`
+ *                                 parsable into a `Number`. Used as value for the `maxlength`
+ *                                 {@link ngModel.NgModelController#$validators validator}.
+ *
+ * @description
+ *
+ * ngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
+ * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
+ *
+ * The validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
+ * is longer than the integer obtained by evaluating the AngularJS expression given in the
+ * `ngMaxlength` attribute value.
+ *
+ * <div class="alert alert-info">
+ * **Note:** This directive is also added when the plain `maxlength` attribute is used, with two
+ * differences:
+ * <ol>
+ *   <li>
+ *     `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint
+ *     validation is not available.
+ *   </li>
+ *   <li>
+ *     The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be
+ *     interpolated.
+ *   </li>
+ * </ol>
+ * </div>
+ *
+ * @example
+ * <example name="ngMaxlengthDirective" module="ngMaxlengthExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('ngMaxlengthExample', [])
+ *         .controller('ExampleController', ['$scope', function($scope) {
+ *           $scope.maxlength = 5;
+ *         }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <form name="form">
+ *         <label for="maxlength">Set a maxlength: </label>
+ *         <input type="number" ng-model="maxlength" id="maxlength" />
+ *         <br>
+ *         <label for="input">This input is restricted by the current maxlength: </label>
+ *         <input type="text" ng-model="model" id="input" name="input" ng-maxlength="maxlength" /><br>
+ *         <hr>
+ *         input valid? = <code>{{form.input.$valid}}</code><br>
+ *         model = <code>{{model}}</code>
+ *       </form>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+       var model = element(by.binding('model'));
+       var input = element(by.id('input'));
+
+       it('should validate the input with the default maxlength', function() {
+         input.sendKeys('abcdef');
+         expect(model.getText()).not.toContain('abcdef');
+
+         input.clear().then(function() {
+           input.sendKeys('abcde');
+           expect(model.getText()).toContain('abcde');
+         });
+       });
+ *   </file>
+ * </example>
+ */
+var maxlengthDirective = ['$parse', function($parse) {
+  return {
+    restrict: 'A',
+    require: '?ngModel',
+    link: function(scope, elm, attr, ctrl) {
+      if (!ctrl) return;
+
+      var maxlength = attr.maxlength || $parse(attr.ngMaxlength)(scope);
+      var maxlengthParsed = parseLength(maxlength);
+
+      attr.$observe('maxlength', function(value) {
+        if (maxlength !== value) {
+          maxlengthParsed = parseLength(value);
+          maxlength = value;
+          ctrl.$validate();
+        }
+      });
+      ctrl.$validators.maxlength = function(modelValue, viewValue) {
+        return (maxlengthParsed < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxlengthParsed);
+      };
+    }
+  };
+}];
+
+/**
+ * @ngdoc directive
+ * @name ngMinlength
+ * @restrict A
+ *
+ * @param {expression} ngMinlength AngularJS expression that must evaluate to a `Number` or `String`
+ *                                 parsable into a `Number`. Used as value for the `minlength`
+ *                                 {@link ngModel.NgModelController#$validators validator}.
+ *
+ * @description
+ *
+ * ngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.
+ * It is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.
+ *
+ * The validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}
+ * is shorter than the integer obtained by evaluating the AngularJS expression given in the
+ * `ngMinlength` attribute value.
+ *
+ * <div class="alert alert-info">
+ * **Note:** This directive is also added when the plain `minlength` attribute is used, with two
+ * differences:
+ * <ol>
+ *   <li>
+ *     `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint
+ *     validation is not available.
+ *   </li>
+ *   <li>
+ *     The `ngMinlength` value must be an expression, while the `minlength` value must be
+ *     interpolated.
+ *   </li>
+ * </ol>
+ * </div>
+ *
+ * @example
+ * <example name="ngMinlengthDirective" module="ngMinlengthExample">
+ *   <file name="index.html">
+ *     <script>
+ *       angular.module('ngMinlengthExample', [])
+ *         .controller('ExampleController', ['$scope', function($scope) {
+ *           $scope.minlength = 3;
+ *         }]);
+ *     </script>
+ *     <div ng-controller="ExampleController">
+ *       <form name="form">
+ *         <label for="minlength">Set a minlength: </label>
+ *         <input type="number" ng-model="minlength" id="minlength" />
+ *         <br>
+ *         <label for="input">This input is restricted by the current minlength: </label>
+ *         <input type="text" ng-model="model" id="input" name="input" ng-minlength="minlength" /><br>
+ *         <hr>
+ *         input valid? = <code>{{form.input.$valid}}</code><br>
+ *         model = <code>{{model}}</code>
+ *       </form>
+ *     </div>
+ *   </file>
+ *   <file name="protractor.js" type="protractor">
+       var model = element(by.binding('model'));
+       var input = element(by.id('input'));
+
+       it('should validate the input with the default minlength', function() {
+         input.sendKeys('ab');
+         expect(model.getText()).not.toContain('ab');
+
+         input.sendKeys('abc');
+         expect(model.getText()).toContain('abc');
+       });
+ *   </file>
+ * </example>
+ */
+var minlengthDirective = ['$parse', function($parse) {
+  return {
+    restrict: 'A',
+    require: '?ngModel',
+    link: function(scope, elm, attr, ctrl) {
+      if (!ctrl) return;
+
+      var minlength = attr.minlength || $parse(attr.ngMinlength)(scope);
+      var minlengthParsed = parseLength(minlength) || -1;
+
+      attr.$observe('minlength', function(value) {
+        if (minlength !== value) {
+          minlengthParsed = parseLength(value) || -1;
+          minlength = value;
+          ctrl.$validate();
+        }
+
+      });
+      ctrl.$validators.minlength = function(modelValue, viewValue) {
+        return ctrl.$isEmpty(viewValue) || viewValue.length >= minlengthParsed;
+      };
+    }
+  };
+}];
+
+
+function parsePatternAttr(regex, patternExp, elm) {
+  if (!regex) return undefined;
+
+  if (isString(regex)) {
+    regex = new RegExp('^' + regex + '$');
+  }
+
+  if (!regex.test) {
+    throw minErr('ngPattern')('noregexp',
+      'Expected {0} to be a RegExp but was {1}. Element: {2}', patternExp,
+      regex, startingTag(elm));
+  }
+
+  return regex;
+}
+
+function parseLength(val) {
+  var intVal = toInt(val);
+  return isNumberNaN(intVal) ? -1 : intVal;
+}
+
+if (window.angular.bootstrap) {
+  // AngularJS is already loaded, so we can return here...
+  if (window.console) {
+    console.log('WARNING: Tried to load AngularJS more than once.');
+  }
+  return;
+}
+
+// try to bind to jquery now so that one can write jqLite(fn)
+// but we will rebind on bootstrap again.
+bindJQuery();
+
+publishExternalAPI(angular);
+
+angular.module("ngLocale", [], ["$provide", function($provide) {
+var PLURAL_CATEGORY = {ZERO: "zero", ONE: "one", TWO: "two", FEW: "few", MANY: "many", OTHER: "other"};
+function getDecimals(n) {
+  n = n + '';
+  var i = n.indexOf('.');
+  return (i == -1) ? 0 : n.length - i - 1;
+}
+
+function getVF(n, opt_precision) {
+  var v = opt_precision;
+
+  if (undefined === v) {
+    v = Math.min(getDecimals(n), 3);
+  }
+
+  var base = Math.pow(10, v);
+  var f = ((n * base) | 0) % base;
+  return {v: v, f: f};
+}
+
+$provide.value("$locale", {
+  "DATETIME_FORMATS": {
+    "AMPMS": [
+      "AM",
+      "PM"
+    ],
+    "DAY": [
+      "Sunday",
+      "Monday",
+      "Tuesday",
+      "Wednesday",
+      "Thursday",
+      "Friday",
+      "Saturday"
+    ],
+    "ERANAMES": [
+      "Before Christ",
+      "Anno Domini"
+    ],
+    "ERAS": [
+      "BC",
+      "AD"
+    ],
+    "FIRSTDAYOFWEEK": 6,
+    "MONTH": [
+      "January",
+      "February",
+      "March",
+      "April",
+      "May",
+      "June",
+      "July",
+      "August",
+      "September",
+      "October",
+      "November",
+      "December"
+    ],
+    "SHORTDAY": [
+      "Sun",
+      "Mon",
+      "Tue",
+      "Wed",
+      "Thu",
+      "Fri",
+      "Sat"
+    ],
+    "SHORTMONTH": [
+      "Jan",
+      "Feb",
+      "Mar",
+      "Apr",
+      "May",
+      "Jun",
+      "Jul",
+      "Aug",
+      "Sep",
+      "Oct",
+      "Nov",
+      "Dec"
+    ],
+    "STANDALONEMONTH": [
+      "January",
+      "February",
+      "March",
+      "April",
+      "May",
+      "June",
+      "July",
+      "August",
+      "September",
+      "October",
+      "November",
+      "December"
+    ],
+    "WEEKENDRANGE": [
+      5,
+      6
+    ],
+    "fullDate": "EEEE, MMMM d, y",
+    "longDate": "MMMM d, y",
+    "medium": "MMM d, y h:mm:ss a",
+    "mediumDate": "MMM d, y",
+    "mediumTime": "h:mm:ss a",
+    "short": "M/d/yy h:mm a",
+    "shortDate": "M/d/yy",
+    "shortTime": "h:mm a"
+  },
+  "NUMBER_FORMATS": {
+    "CURRENCY_SYM": "$",
+    "DECIMAL_SEP": ".",
+    "GROUP_SEP": ",",
+    "PATTERNS": [
+      {
+        "gSize": 3,
+        "lgSize": 3,
+        "maxFrac": 3,
+        "minFrac": 0,
+        "minInt": 1,
+        "negPre": "-",
+        "negSuf": "",
+        "posPre": "",
+        "posSuf": ""
+      },
+      {
+        "gSize": 3,
+        "lgSize": 3,
+        "maxFrac": 2,
+        "minFrac": 2,
+        "minInt": 1,
+        "negPre": "-\u00a4",
+        "negSuf": "",
+        "posPre": "\u00a4",
+        "posSuf": ""
+      }
+    ]
+  },
+  "id": "en-us",
+  "localeID": "en_US",
+  "pluralCat": function(n, opt_precision) {  var i = n | 0;  var vf = getVF(n, opt_precision);  if (i == 1 && vf.v == 0) {    return PLURAL_CATEGORY.ONE;  }  return PLURAL_CATEGORY.OTHER;}
+});
+}]);
+
+  jqLite(function() {
+    angularInit(window.document, bootstrap);
+  });
+
+})(window);
+
+!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend(window.angular.element('<style>').text('@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}'));
\ No newline at end of file
Index: .idea/libraries/Maven__org_assertj_assertj_core_3_22_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_assertj_assertj_core_3_22_0.xml b/.idea/libraries/Maven__org_assertj_assertj_core_3_22_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_assertj_assertj_core_3_22_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.assertj:assertj-core:3.22.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.22.0/assertj-core-3.22.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml b/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_hibernate_core_5_6_9_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_hibernate_core_5_6_9_Final.xml b/.idea/libraries/Maven__org_hibernate_hibernate_core_5_6_9_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_hibernate_core_5_6_9_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate-core:5.6.9.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.6.9.Final/hibernate-core-5.6.9.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: node_modules/angular/angular.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/angular/angular.min.js b/node_modules/angular/angular.min.js
new file mode 100644
--- /dev/null	
+++ b/node_modules/angular/angular.min.js	
@@ -0,0 +1,352 @@
+/*
+ AngularJS v1.8.3
+ (c) 2010-2020 Google LLC. http://angularjs.org
+ License: MIT
+*/
+(function(z){'use strict';function ve(a){if(D(a))w(a.objectMaxDepth)&&(Xb.objectMaxDepth=Yb(a.objectMaxDepth)?a.objectMaxDepth:NaN),w(a.urlErrorParamsEnabled)&&Ga(a.urlErrorParamsEnabled)&&(Xb.urlErrorParamsEnabled=a.urlErrorParamsEnabled);else return Xb}function Yb(a){return X(a)&&0<a}function F(a,b){b=b||Error;return function(){var d=arguments[0],c;c="["+(a?a+":":"")+d+"] http://errors.angularjs.org/1.8.3/"+(a?a+"/":"")+d;for(d=1;d<arguments.length;d++){c=c+(1==d?"?":"&")+"p"+(d-1)+"=";var e=encodeURIComponent,
+f;f=arguments[d];f="function"==typeof f?f.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof f?"undefined":"string"!=typeof f?JSON.stringify(f):f;c+=e(f)}return new b(c)}}function za(a){if(null==a||$a(a))return!1;if(H(a)||C(a)||x&&a instanceof x)return!0;var b="length"in Object(a)&&a.length;return X(b)&&(0<=b&&b-1 in a||"function"===typeof a.item)}function r(a,b,d){var c,e;if(a)if(B(a))for(c in a)"prototype"!==c&&"length"!==c&&"name"!==c&&a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else if(H(a)||
+za(a)){var f="object"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,a[c],c,a)}else if(a.forEach&&a.forEach!==r)a.forEach(b,d,a);else if(Pc(a))for(c in a)b.call(d,a[c],c,a);else if("function"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&b.call(d,a[c],c,a);else for(c in a)ta.call(a,c)&&b.call(d,a[c],c,a);return a}function Qc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function Zb(a){return function(b,d){a(d,b)}}function we(){return++qb}
+function $b(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];if(D(g)||B(g))for(var k=Object.keys(g),h=0,l=k.length;h<l;h++){var m=k[h],p=g[m];d&&D(p)?ha(p)?a[m]=new Date(p.valueOf()):ab(p)?a[m]=new RegExp(p):p.nodeName?a[m]=p.cloneNode(!0):ac(p)?a[m]=p.clone():"__proto__"!==m&&(D(a[m])||(a[m]=H(p)?[]:{}),$b(a[m],[p],!0)):a[m]=p}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function S(a){return $b(a,Ha.call(arguments,1),!1)}function xe(a){return $b(a,Ha.call(arguments,1),!0)}function fa(a){return parseInt(a,
+10)}function bc(a,b){return S(Object.create(a),b)}function E(){}function Ta(a){return a}function ia(a){return function(){return a}}function cc(a){return B(a.toString)&&a.toString!==la}function A(a){return"undefined"===typeof a}function w(a){return"undefined"!==typeof a}function D(a){return null!==a&&"object"===typeof a}function Pc(a){return null!==a&&"object"===typeof a&&!Rc(a)}function C(a){return"string"===typeof a}function X(a){return"number"===typeof a}function ha(a){return"[object Date]"===la.call(a)}
+function H(a){return Array.isArray(a)||a instanceof Array}function dc(a){switch(la.call(a)){case "[object Error]":return!0;case "[object Exception]":return!0;case "[object DOMException]":return!0;default:return a instanceof Error}}function B(a){return"function"===typeof a}function ab(a){return"[object RegExp]"===la.call(a)}function $a(a){return a&&a.window===a}function bb(a){return a&&a.$evalAsync&&a.$watch}function Ga(a){return"boolean"===typeof a}function ye(a){return a&&X(a.length)&&ze.test(la.call(a))}
+function ac(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function Ae(a){var b={};a=a.split(",");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function ua(a){return K(a.nodeName||a[0]&&a[0].nodeName)}function cb(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function Ia(a,b,d){function c(a,b,c){c--;if(0>c)return"...";var d=b.$$hashKey,f;if(H(a)){f=0;for(var g=a.length;f<g;f++)b.push(e(a[f],c))}else if(Pc(a))for(f in a)b[f]=e(a[f],c);else if(a&&"function"===typeof a.hasOwnProperty)for(f in a)a.hasOwnProperty(f)&&
+(b[f]=e(a[f],c));else for(f in a)ta.call(a,f)&&(b[f]=e(a[f],c));d?b.$$hashKey=d:delete b.$$hashKey;return b}function e(a,b){if(!D(a))return a;var d=g.indexOf(a);if(-1!==d)return k[d];if($a(a)||bb(a))throw oa("cpws");var d=!1,e=f(a);void 0===e&&(e=H(a)?[]:Object.create(Rc(a)),d=!0);g.push(a);k.push(e);return d?c(a,e,b):e}function f(a){switch(la.call(a)){case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":return new a.constructor(e(a.buffer),
+a.byteOffset,a.length);case "[object ArrayBuffer]":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^/]*$/)[0]),b.lastIndex=a.lastIndex,b;case "[object Blob]":return new a.constructor([a],{type:a.type})}if(B(a.cloneNode))return a.cloneNode(!0)}
+var g=[],k=[];d=Yb(d)?d:NaN;if(b){if(ye(b)||"[object ArrayBuffer]"===la.call(b))throw oa("cpta");if(a===b)throw oa("cpi");H(b)?b.length=0:r(b,function(a,c){"$$hashKey"!==c&&delete b[c]});g.push(a);k.push(b);return c(a,b,d)}return e(a,d)}function ec(a,b){return a===b||a!==a&&b!==b}function va(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d===typeof b&&"object"===d)if(H(a)){if(!H(b))return!1;if((d=a.length)===b.length){for(c=0;c<d;c++)if(!va(a[c],
+b[c]))return!1;return!0}}else{if(ha(a))return ha(b)?ec(a.getTime(),b.getTime()):!1;if(ab(a))return ab(b)?a.toString()===b.toString():!1;if(bb(a)||bb(b)||$a(a)||$a(b)||H(b)||ha(b)||ab(b))return!1;d=T();for(c in a)if("$"!==c.charAt(0)&&!B(a[c])){if(!va(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&"$"!==c.charAt(0)&&w(b[c])&&!B(b[c]))return!1;return!0}return!1}function db(a,b,d){return a.concat(Ha.call(b,d))}function Va(a,b){var d=2<arguments.length?Ha.call(arguments,2):[];return!B(b)||b instanceof
+RegExp?b:d.length?function(){return arguments.length?b.apply(a,db(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function Sc(a,b){var d=b;"string"===typeof a&&"$"===a.charAt(0)&&"$"===a.charAt(1)?d=void 0:$a(b)?d="$WINDOW":b&&z.document===b?d="$DOCUMENT":bb(b)&&(d="$SCOPE");return d}function eb(a,b){if(!A(a))return X(b)||(b=b?2:null),JSON.stringify(a,Sc,b)}function Tc(a){return C(a)?JSON.parse(a):a}function fc(a,b){a=a.replace(Be,"");var d=Date.parse("Jan 01, 1970 00:00:00 "+
+a)/6E4;return Y(d)?b:d}function Uc(a,b){a=new Date(a.getTime());a.setMinutes(a.getMinutes()+b);return a}function gc(a,b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=fc(b,c);return Uc(a,d*(b-c))}function Aa(a){a=x(a).clone().empty();var b=x("<div></div>").append(a).html();try{return a[0].nodeType===Pa?K(b):b.match(/^(<[^>]+>)/)[1].replace(/^<([\w-]+)/,function(a,b){return"<"+K(b)})}catch(d){return K(b)}}function Vc(a){try{return decodeURIComponent(a)}catch(b){}}function hc(a){var b={};r((a||"").split("&"),
+function(a){var c,e,f;a&&(e=a=a.replace(/\+/g,"%20"),c=a.indexOf("="),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=Vc(e),w(e)&&(f=w(f)?Vc(f):!0,ta.call(b,e)?H(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Ce(a){var b=[];r(a,function(a,c){H(a)?r(a,function(a){b.push(ba(c,!0)+(!0===a?"":"="+ba(a,!0)))}):b.push(ba(c,!0)+(!0===a?"":"="+ba(a,!0)))});return b.length?b.join("&"):""}function ic(a){return ba(a,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function ba(a,
+b){return encodeURIComponent(a).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,b?"%20":"+")}function De(a,b){var d,c,e=Qa.length;for(c=0;c<e;++c)if(d=Qa[c]+b,C(d=a.getAttribute(d)))return d;return null}function Ee(a,b){var d,c,e={};r(Qa,function(b){b+="app";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});r(Qa,function(b){b+="app";var e;!d&&(e=a.querySelector("["+b.replace(":","\\:")+"]"))&&(d=e,c=e.getAttribute(b))});
+d&&(Fe?(e.strictDi=null!==De(d,"strict-di"),b(d,c?[c]:[],e)):z.console.error("AngularJS: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match."))}function Wc(a,b,d){D(d)||(d={});d=S({strictDi:!1},d);var c=function(){a=x(a);if(a.injector()){var c=a[0]===z.document?"document":Aa(a);throw oa("btstrpd",c.replace(/</,"&lt;").replace(/>/,"&gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&&b.push(["$compileProvider",
+function(a){a.debugInfoEnabled(!0)}]);b.unshift("ng");c=fb(b,d.strictDi);c.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;z&&e.test(z.name)&&(d.debugInfoEnabled=!0,z.name=z.name.replace(e,""));if(z&&!f.test(z.name))return c();z.name=z.name.replace(f,"");ca.resumeBootstrap=function(a){r(a,function(a){b.push(a)});return c()};B(ca.resumeDeferredBootstrap)&&
+ca.resumeDeferredBootstrap()}function Ge(){z.name="NG_ENABLE_DEBUG_INFO!"+z.name;z.location.reload()}function He(a){a=ca.element(a).injector();if(!a)throw oa("test");return a.get("$$testability")}function Xc(a,b){b=b||"_";return a.replace(Ie,function(a,c){return(c?b:"")+a.toLowerCase()})}function Je(){var a;if(!Yc){var b=rb();(sb=A(b)?z.jQuery:b?z[b]:void 0)&&sb.fn.on?(x=sb,S(sb.fn,{scope:Wa.scope,isolateScope:Wa.isolateScope,controller:Wa.controller,injector:Wa.injector,inheritedData:Wa.inheritedData})):
+x=U;a=x.cleanData;x.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=(x._data(f)||{}).events)&&c.$destroy&&x(f).triggerHandler("$destroy");a(b)};ca.element=x;Yc=!0}}function Ke(){U.legacyXHTMLReplacement=!0}function gb(a,b,d){if(!a)throw oa("areq",b||"?",d||"required");return a}function tb(a,b,d){d&&H(a)&&(a=a[a.length-1]);gb(B(a),b,"not a function, got "+(a&&"object"===typeof a?a.constructor.name||"Object":typeof a));return a}function Ja(a,b){if("hasOwnProperty"===a)throw oa("badname",
+b);}function Le(a,b,d){if(!b)return a;b=b.split(".");for(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&B(a)?Va(e,a):a}function ub(a){for(var b=a[0],d=a[a.length-1],c,e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==b)c||(c=x(Ha.call(a,0,e))),c.push(b);return c||a}function T(){return Object.create(null)}function jc(a){if(null==a)return"";switch(typeof a){case "string":break;case "number":a=""+a;break;default:a=!cc(a)||H(a)||ha(a)?eb(a):a.toString()}return a}function Me(a){function b(a,
+b,c){return a[b]||(a[b]=c())}var d=F("$injector"),c=F("ng");a=b(a,"angular",Object);a.$$minErr=a.$$minErr||F;return b(a,"module",function(){var a={};return function(f,g,k){var h={};if("hasOwnProperty"===f)throw c("badname","module");g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,c,d,f){f||(f=e);return function(){f[d||"push"]([b,c,arguments]);return t}}function b(a,c,d){d||(d=e);return function(b,e){e&&B(e)&&(e.$$moduleName=f);d.push([a,c,arguments]);return t}}if(!g)throw d("nomod",
+f);var e=[],n=[],s=[],G=a("$injector","invoke","push",n),t={_invokeQueue:e,_configBlocks:n,_runBlocks:s,info:function(a){if(w(a)){if(!D(a))throw c("aobj","value");h=a;return this}return h},requires:g,name:f,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide","constant","unshift"),decorator:b("$provide","decorator",n),animation:b("$animateProvider","register"),filter:b("$filterProvider","register"),controller:b("$controllerProvider",
+"register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:G,run:function(a){s.push(a);return this}};k&&G(k);return t})}})}function ja(a,b){if(H(a)){b=b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(D(a))for(d in b=b||{},a)if("$"!==d.charAt(0)||"$"!==d.charAt(1))b[d]=a[d];return b||a}function Ne(a,b){var d=[];Yb(b)&&(a=ca.copy(a,null,b));return JSON.stringify(a,function(a,b){b=Sc(a,b);if(D(b)){if(0<=d.indexOf(b))return"...";d.push(b)}return b})}
+function Oe(a){S(a,{errorHandlingConfig:ve,bootstrap:Wc,copy:Ia,extend:S,merge:xe,equals:va,element:x,forEach:r,injector:fb,noop:E,bind:Va,toJson:eb,fromJson:Tc,identity:Ta,isUndefined:A,isDefined:w,isString:C,isFunction:B,isObject:D,isNumber:X,isElement:ac,isArray:H,version:Pe,isDate:ha,callbacks:{$$counter:0},getTestability:He,reloadWithDebugInfo:Ge,UNSAFE_restoreLegacyJqLiteXHTMLReplacement:Ke,$$minErr:F,$$csp:Ba,$$encodeUriSegment:ic,$$encodeUriQuery:ba,$$lowercase:K,$$stringify:jc,$$uppercase:vb});
+lc=Me(z);lc("ng",["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:Qe});a.provider("$compile",Zc).directive({a:Re,input:$c,textarea:$c,form:Se,script:Te,select:Ue,option:Ve,ngBind:We,ngBindHtml:Xe,ngBindTemplate:Ye,ngClass:Ze,ngClassEven:$e,ngClassOdd:af,ngCloak:bf,ngController:cf,ngForm:df,ngHide:ef,ngIf:ff,ngInclude:gf,ngInit:hf,ngNonBindable:jf,ngPluralize:kf,ngRef:lf,ngRepeat:mf,ngShow:nf,ngStyle:of,ngSwitch:pf,ngSwitchWhen:qf,ngSwitchDefault:rf,ngOptions:sf,ngTransclude:tf,ngModel:uf,
+ngList:vf,ngChange:wf,pattern:ad,ngPattern:ad,required:bd,ngRequired:bd,minlength:cd,ngMinlength:cd,maxlength:dd,ngMaxlength:dd,ngValue:xf,ngModelOptions:yf}).directive({ngInclude:zf,input:Af}).directive(wb).directive(ed);a.provider({$anchorScroll:Bf,$animate:Cf,$animateCss:Df,$$animateJs:Ef,$$animateQueue:Ff,$$AnimateRunner:Gf,$$animateAsyncRun:Hf,$browser:If,$cacheFactory:Jf,$controller:Kf,$document:Lf,$$isDocumentHidden:Mf,$exceptionHandler:Nf,$filter:fd,$$forceReflow:Of,$interpolate:Pf,$interval:Qf,
+$$intervalFactory:Rf,$http:Sf,$httpParamSerializer:Tf,$httpParamSerializerJQLike:Uf,$httpBackend:Vf,$xhrFactory:Wf,$jsonpCallbacks:Xf,$location:Yf,$log:Zf,$parse:$f,$rootScope:ag,$q:bg,$$q:cg,$sce:dg,$sceDelegate:eg,$sniffer:fg,$$taskTrackerFactory:gg,$templateCache:hg,$templateRequest:ig,$$testability:jg,$timeout:kg,$window:lg,$$rAF:mg,$$jqLite:ng,$$Map:og,$$cookieReader:pg})}]).info({angularVersion:"1.8.3"})}function xb(a,b){return b.toUpperCase()}function yb(a){return a.replace(qg,xb)}function mc(a){a=
+a.nodeType;return 1===a||!a||9===a}function gd(a,b){var d,c,e,f=b.createDocumentFragment(),g=[],k;if(nc.test(a)){d=f.appendChild(b.createElement("div"));c=(rg.exec(a)||["",""])[1].toLowerCase();e=U.legacyXHTMLReplacement?a.replace(sg,"<$1></$2>"):a;if(10>wa)for(c=hb[c]||hb._default,d.innerHTML=c[1]+e+c[2],k=c[0];k--;)d=d.firstChild;else{c=qa[c]||[];for(k=c.length;-1<--k;)d.appendChild(z.document.createElement(c[k])),d=d.firstChild;d.innerHTML=e}g=db(g,d.childNodes);d=f.firstChild;d.textContent=""}else g.push(b.createTextNode(a));
+f.textContent="";f.innerHTML="";r(g,function(a){f.appendChild(a)});return f}function U(a){if(a instanceof U)return a;var b;C(a)&&(a=V(a),b=!0);if(!(this instanceof U)){if(b&&"<"!==a.charAt(0))throw oc("nosel");return new U(a)}if(b){b=z.document;var d;a=(d=tg.exec(a))?[b.createElement(d[1])]:(d=gd(a,b))?d.childNodes:[];pc(this,a)}else B(a)?hd(a):pc(this,a)}function qc(a){return a.cloneNode(!0)}function zb(a,b){!b&&mc(a)&&x.cleanData([a]);a.querySelectorAll&&x.cleanData(a.querySelectorAll("*"))}function id(a){for(var b in a)return!1;
+return!0}function jd(a){var b=a.ng339,d=b&&Ka[b],c=d&&d.events,d=d&&d.data;d&&!id(d)||c&&!id(c)||(delete Ka[b],a.ng339=void 0)}function kd(a,b,d,c){if(w(c))throw oc("offargs");var e=(c=Ab(a))&&c.events,f=c&&c.handle;if(f){if(b){var g=function(b){var c=e[b];w(d)&&cb(c||[],d);w(d)&&c&&0<c.length||(a.removeEventListener(b,f),delete e[b])};r(b.split(" "),function(a){g(a);Bb[a]&&g(Bb[a])})}else for(b in e)"$destroy"!==b&&a.removeEventListener(b,f),delete e[b];jd(a)}}function rc(a,b){var d=a.ng339;if(d=
+d&&Ka[d])b?delete d.data[b]:d.data={},jd(a)}function Ab(a,b){var d=a.ng339,d=d&&Ka[d];b&&!d&&(a.ng339=d=++ug,d=Ka[d]={events:{},data:{},handle:void 0});return d}function sc(a,b,d){if(mc(a)){var c,e=w(d),f=!e&&b&&!D(b),g=!b;a=(a=Ab(a,!f))&&a.data;if(e)a[yb(b)]=d;else{if(g)return a;if(f)return a&&a[yb(b)];for(c in b)a[yb(c)]=b[c]}}}function Cb(a,b){return a.getAttribute?-1<(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+b+" "):!1}function Db(a,b){if(b&&a.setAttribute){var d=
+(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," "),c=d;r(b.split(" "),function(a){a=V(a);c=c.replace(" "+a+" "," ")});c!==d&&a.setAttribute("class",V(c))}}function Eb(a,b){if(b&&a.setAttribute){var d=(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," "),c=d;r(b.split(" "),function(a){a=V(a);-1===c.indexOf(" "+a+" ")&&(c+=a+" ")});c!==d&&a.setAttribute("class",V(c))}}function pc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if("number"===typeof d&&b.window!==b){if(d)for(var c=
+0;c<d;c++)a[a.length++]=b[c]}else a[a.length++]=b}}function ld(a,b){return Fb(a,"$"+(b||"ngController")+"Controller")}function Fb(a,b,d){9===a.nodeType&&(a=a.documentElement);for(b=H(b)?b:[b];a;){for(var c=0,e=b.length;c<e;c++)if(w(d=x.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function md(a){for(zb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function Gb(a,b){b||zb(a);var d=a.parentNode;d&&d.removeChild(a)}function vg(a,b){b=b||z;if("complete"===b.document.readyState)b.setTimeout(a);
+else x(b).on("load",a)}function hd(a){function b(){z.document.removeEventListener("DOMContentLoaded",b);z.removeEventListener("load",b);a()}"complete"===z.document.readyState?z.setTimeout(a):(z.document.addEventListener("DOMContentLoaded",b),z.addEventListener("load",b))}function nd(a,b){var d=Hb[b.toLowerCase()];return d&&od[ua(a)]&&d}function wg(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};var f=b[d||c.type],g=f?f.length:0;if(g){if(A(c.immediatePropagationStopped)){var k=
+c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();k&&k.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var h=f.specialHandlerWrapper||xg;1<g&&(f=ja(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||h(a,c,f[l])}};d.elem=a;return d}function xg(a,b,d){d.call(a,b)}function yg(a,b,d){var c=b.relatedTarget;c&&(c===a||zg.call(a,c))||d.call(a,b)}function ng(){this.$get=
+function(){return S(U,{hasClass:function(a,b){a.attr&&(a=a[0]);return Cb(a,b)},addClass:function(a,b){a.attr&&(a=a[0]);return Eb(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Db(a,b)}})}}function La(a,b){var d=a&&a.$$hashKey;if(d)return"function"===typeof d&&(d=a.$$hashKey()),d;d=typeof a;return d="function"===d||"object"===d&&null!==a?a.$$hashKey=d+":"+(b||we)():d+":"+a}function pd(){this._keys=[];this._values=[];this._lastKey=NaN;this._lastIndex=-1}function qd(a){a=Function.prototype.toString.call(a).replace(Ag,
+"");return a.match(Bg)||a.match(Cg)}function Dg(a){return(a=qd(a))?"function("+(a[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function fb(a,b){function d(a){return function(b,c){if(D(b))r(b,Zb(a));else return a(b,c)}}function c(a,b){Ja(a,"service");if(B(b)||H(b))b=n.instantiate(b);if(!b.$get)throw Ca("pget",a);return p[a+"Provider"]=b}function e(a,b){return function(){var c=t.invoke(b,this);if(A(c))throw Ca("undef",a);return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){gb(A(a)||
+H(a),"modulesToLoad","not an array");var b=[],c;r(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=n.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.set(a,!0);try{C(a)?(c=lc(a),t.modules[a]=c,b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):B(a)?b.push(n.invoke(a)):H(a)?b.push(n.invoke(a)):tb(a,"module")}catch(e){throw H(a)&&(a=a[a.length-1]),e.message&&e.stack&&-1===e.stack.indexOf(e.message)&&(e=e.message+"\n"+e.stack),Ca("modulerr",
+a,e.stack||e.message||e);}}});return b}function k(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===h)throw Ca("cdep",b+" <- "+l.join(" <- "));return a[b]}try{return l.unshift(b),a[b]=h,a[b]=c(b,e),a[b]}catch(f){throw a[b]===h&&delete a[b],f;}finally{l.shift()}}function e(a,c,f){var g=[];a=fb.$$annotate(a,b,f);for(var h=0,k=a.length;h<k;h++){var l=a[h];if("string"!==typeof l)throw Ca("itkn",l);g.push(c&&c.hasOwnProperty(l)?c[l]:d(l,f))}return g}return{invoke:function(a,b,c,d){"string"===typeof c&&
+(d=c,c=null);c=e(a,c,d);H(a)&&(a=a[a.length-1]);d=a;if(wa||"function"!==typeof d)d=!1;else{var f=d.$$ngIsClass;Ga(f)||(f=d.$$ngIsClass=/^class\b/.test(Function.prototype.toString.call(d)));d=f}return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=H(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:fb.$$annotate,has:function(b){return p.hasOwnProperty(b+"Provider")||a.hasOwnProperty(b)}}}
+b=!0===b;var h={},l=[],m=new Ib,p={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,ia(b),!1)}),constant:d(function(a,b){Ja(a,"constant");p[a]=b;s[a]=b}),decorator:function(a,b){var c=n.get(a+"Provider"),d=c.$get;c.$get=function(){var a=t.invoke(d,c);return t.invoke(b,null,{$delegate:a})}}}},n=p.$injector=k(p,function(a,b){ca.isString(b)&&l.push(b);throw Ca("unpr",l.join(" <- "));}),s={},
+G=k(s,function(a,b){var c=n.get(a+"Provider",b);return t.invoke(c.$get,c,void 0,a)}),t=G;p.$injectorProvider={$get:ia(G)};t.modules=n.modules=T();var N=g(a),t=G.get("$injector");t.strictDi=b;r(N,function(a){a&&t.invoke(a)});t.loadNewModules=function(a){r(g(a),function(a){a&&t.invoke(a)})};return t}function Bf(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=["$window","$location","$rootScope",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if("a"===
+ua(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();var c;c=g.yOffset;B(c)?c=c():ac(c)?(c=c[0],c="fixed"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):X(c)||(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=C(a)?a:X(a)?a.toString():d.hash();var b;a?(b=k.getElementById(a))?f(b):(b=e(k.getElementsByName(a)))?f(b):"top"===a&&f(null):f(null)}var k=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===
+b&&""===a||vg(function(){c.$evalAsync(g)})});return g}]}function ib(a,b){if(!a&&!b)return"";if(!a)return b;if(!b)return a;H(a)&&(a=a.join(" "));H(b)&&(b=b.join(" "));return a+" "+b}function Eg(a){C(a)&&(a=a.split(" "));var b=T();r(a,function(a){a.length&&(b[a]=!0)});return b}function ra(a){return D(a)?a:{}}function Fg(a,b,d,c,e){function f(){pa=null;k()}function g(){t=y();t=A(t)?null:t;va(t,P)&&(t=P);N=P=t}function k(){var a=N;g();if(v!==h.url()||a!==t)v=h.url(),N=t,r(J,function(a){a(h.url(),t)})}
+var h=this,l=a.location,m=a.history,p=a.setTimeout,n=a.clearTimeout,s={},G=e(d);h.isMock=!1;h.$$completeOutstandingRequest=G.completeTask;h.$$incOutstandingRequestCount=G.incTaskCount;h.notifyWhenNoOutstandingRequests=G.notifyWhenNoPendingTasks;var t,N,v=l.href,kc=b.find("base"),pa=null,y=c.history?function(){try{return m.state}catch(a){}}:E;g();h.url=function(b,d,e){A(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=N===e;b=ga(b).href;if(v===b&&(!c.history||f))return h;
+var k=v&&Da(v)===Da(b);v=b;N=e;!c.history||k&&f?(k||(pa=b),d?l.replace(b):k?(d=l,e=b,f=e.indexOf("#"),e=-1===f?"":e.substr(f),d.hash=e):l.href=b,l.href!==b&&(pa=b)):(m[d?"replaceState":"pushState"](e,"",b),g());pa&&(pa=b);return h}return(pa||l.href).replace(/#$/,"")};h.state=function(){return t};var J=[],I=!1,P=null;h.onUrlChange=function(b){if(!I){if(c.history)x(a).on("popstate",f);x(a).on("hashchange",f);I=!0}J.push(b);return b};h.$$applicationDestroyed=function(){x(a).off("hashchange popstate",
+f)};h.$$checkUrlChange=k;h.baseHref=function(){var a=kc.attr("href");return a?a.replace(/^(https?:)?\/\/[^/]*/,""):""};h.defer=function(a,b,c){var d;b=b||0;c=c||G.DEFAULT_TASK_TYPE;G.incTaskCount(c);d=p(function(){delete s[d];G.completeTask(a,c)},b);s[d]=c;return d};h.defer.cancel=function(a){if(s.hasOwnProperty(a)){var b=s[a];delete s[a];n(a);G.completeTask(E,b);return!0}return!1}}function If(){this.$get=["$window","$log","$sniffer","$document","$$taskTrackerFactory",function(a,b,d,c,e){return new Fg(a,
+c,b,d,e)}]}function Jf(){this.$get=function(){function a(a,c){function e(a){a!==p&&(n?n===a&&(n=a.n):n=a,f(a.n,a.p),f(a,p),p=a,p.n=null)}function f(a,b){a!==b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw F("$cacheFactory")("iid",a);var g=0,k=S({},c,{id:a}),h=T(),l=c&&c.capacity||Number.MAX_VALUE,m=T(),p=null,n=null;return b[a]={put:function(a,b){if(!A(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in h||g++;h[a]=b;g>l&&this.remove(n.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=
+m[a];if(!b)return;e(b)}return h[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b===p&&(p=b.p);b===n&&(n=b.n);f(b.n,b.p);delete m[a]}a in h&&(delete h[a],g--)},removeAll:function(){h=T();g=0;m=T();p=n=null},destroy:function(){m=k=h=null;delete b[a]},info:function(){return S({},k,{size:g})}}}var b={};a.info=function(){var a={};r(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function hg(){this.$get=["$cacheFactory",function(a){return a("templates")}]}
+function Zc(a,b){function d(a,b,c){var d=/^([@&]|[=<](\*?))(\??)\s*([\w$]*)$/,e=T();r(a,function(a,f){a=a.trim();if(a in p)e[f]=p[a];else{var g=a.match(d);if(!g)throw $("iscp",b,f,a,c?"controller bindings definition":"isolate scope definition");e[f]={mode:g[1][0],collection:"*"===g[2],optional:"?"===g[3],attrName:g[4]||f};g[4]&&(p[a]=e[f])}});return e}function c(a){var b=a.charAt(0);if(!b||b!==K(b))throw $("baddir",a);if(a!==a.trim())throw $("baddir",a);}function e(a){var b=a.require||a.controller&&
+a.name;!H(b)&&D(b)&&r(b,function(a,c){var d=a.match(l);a.substring(d[0].length)||(b[c]=d[0]+c)});return b}var f={},g=/^\s*directive:\s*([\w-]+)\s+(.*)$/,k=/(([\w-]+)(?::([^;]+))?;?)/,h=Ae("ngSrc,ngSrcset,src,srcset"),l=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,m=/^(on[a-z]+|formaction)$/,p=T();this.directive=function pa(b,d){gb(b,"name");Ja(b,"directive");C(b)?(c(b),gb(d,"directiveFactory"),f.hasOwnProperty(b)||(f[b]=[],a.factory(b+"Directive",["$injector","$exceptionHandler",function(a,c){var d=[];r(f[b],function(f,
+g){try{var h=a.invoke(f);B(h)?h={compile:ia(h)}:!h.compile&&h.link&&(h.compile=ia(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=e(h);var k=h,l=h.restrict;if(l&&(!C(l)||!/[EACM]/.test(l)))throw $("badrestrict",l,b);k.restrict=l||"EA";h.$$moduleName=f.$$moduleName;d.push(h)}catch(m){c(m)}});return d}])),f[b].push(d)):r(b,Zb(pa));return this};this.component=function y(a,b){function c(a){function e(b){return B(b)||H(b)?function(c,d){return a.invoke(b,this,{$element:c,$attrs:d})}:
+b}var f=b.template||b.templateUrl?b.template:"",g={controller:d,controllerAs:Gg(b.controller)||b.controllerAs||"$ctrl",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:"E",require:b.require};r(b,function(a,b){"$"===b.charAt(0)&&(g[b]=a)});return g}if(!C(a))return r(a,Zb(Va(this,y))),this;var d=b.controller||function(){};r(b,function(a,b){"$"===b.charAt(0)&&(c[b]=a,B(d)&&(d[b]=a))});c.$inject=["$injector"];return this.directive(a,
+c)};this.aHrefSanitizationTrustedUrlList=function(a){return w(a)?(b.aHrefSanitizationTrustedUrlList(a),this):b.aHrefSanitizationTrustedUrlList()};Object.defineProperty(this,"aHrefSanitizationWhitelist",{get:function(){return this.aHrefSanitizationTrustedUrlList},set:function(a){this.aHrefSanitizationTrustedUrlList=a}});this.imgSrcSanitizationTrustedUrlList=function(a){return w(a)?(b.imgSrcSanitizationTrustedUrlList(a),this):b.imgSrcSanitizationTrustedUrlList()};Object.defineProperty(this,"imgSrcSanitizationWhitelist",
+{get:function(){return this.imgSrcSanitizationTrustedUrlList},set:function(a){this.imgSrcSanitizationTrustedUrlList=a}});var n=!0;this.debugInfoEnabled=function(a){return w(a)?(n=a,this):n};var s=!1;this.strictComponentBindingsEnabled=function(a){return w(a)?(s=a,this):s};var G=10;this.onChangesTtl=function(a){return arguments.length?(G=a,this):G};var t=!0;this.commentDirectivesEnabled=function(a){return arguments.length?(t=a,this):t};var N=!0;this.cssClassDirectivesEnabled=function(a){return arguments.length?
+(N=a,this):N};var v=T();this.addPropertySecurityContext=function(a,b,c){var d=a.toLowerCase()+"|"+b.toLowerCase();if(d in v&&v[d]!==c)throw $("ctxoverride",a,b,v[d],c);v[d]=c;return this};(function(){function a(b,c){r(c,function(a){v[a.toLowerCase()]=b})}a(W.HTML,["iframe|srcdoc","*|innerHTML","*|outerHTML"]);a(W.CSS,["*|style"]);a(W.URL,"area|href area|ping a|href a|ping blockquote|cite body|background del|cite input|src ins|cite q|cite".split(" "));a(W.MEDIA_URL,"audio|src img|src img|srcset source|src source|srcset track|src video|src video|poster".split(" "));
+a(W.RESOURCE_URL,"*|formAction applet|code applet|codebase base|href embed|src frame|src form|action head|profile html|manifest iframe|src link|href media|src object|codebase object|data script|src".split(" "))})();this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate",function(a,b,c,e,p,M,L,u,R){function q(){try{if(!--Ja)throw Ua=void 0,$("infchng",G);L.$apply(function(){for(var a=0,b=Ua.length;a<b;++a)try{Ua[a]()}catch(d){c(d)}Ua=
+void 0})}finally{Ja++}}function ma(a,b){if(!a)return a;if(!C(a))throw $("srcset",b,a.toString());for(var c="",d=V(a),e=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,e=/\s/.test(d)?e:/(,)/,d=d.split(e),e=Math.floor(d.length/2),f=0;f<e;f++)var g=2*f,c=c+u.getTrustedMediaUrl(V(d[g])),c=c+(" "+V(d[g+1]));d=V(d[2*f]).split(/\s/);c+=u.getTrustedMediaUrl(V(d[0]));2===d.length&&(c+=" "+V(d[1]));return c}function w(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr=
+{};this.$$element=a}function O(a,b,c){Fa.innerHTML="<span "+b+">";b=Fa.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function sa(a,b){try{a.addClass(b)}catch(c){}}function da(a,b,c,d,e){a instanceof x||(a=x(a));var f=Xa(a,b,a,c,d,e);da.$$addScopeClass(a);var g=null;return function(b,c,d){if(!a)throw $("multilink");gb(b,"scope");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var h=d.parentBoundTranscludeFn,k=d.transcludeControllers;d=d.futureParentElement;
+h&&h.$$boundTransclude&&(h=h.$$boundTransclude);g||(g=(d=d&&d[0])?"foreignobject"!==ua(d)&&la.call(d).match(/SVG/)?"svg":"html":"html");d="html"!==g?x(ja(g,x("<div></div>").append(a).html())):c?Wa.clone.call(a):a;if(k)for(var l in k)d.data("$"+l+"Controller",k[l].instance);da.$$addScopeInfo(d,b);c&&c(d,b);f&&f(b,d,d,h);c||(a=f=null);return d}}function Xa(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,p,I,t;if(n)for(t=Array(c.length),m=0;m<h.length;m+=3)f=h[m],t[f]=c[f];else t=c;m=0;for(p=h.length;m<
+p;)k=t[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=a.$new(),da.$$addScopeInfo(x(k),l)):l=a,I=c.transcludeOnThisElement?ka(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?ka(a,b):null,c(f,l,k,d,I)):f&&f(a,k.childNodes,void 0,e)}for(var h=[],k=H(a)||a instanceof x,l,m,p,I,n,t=0;t<a.length;t++){l=new w;11===wa&&jb(a,t,k);m=tc(a[t],[],l,0===t?d:void 0,e);(f=m.length?aa(m,a[t],l,b,c,null,[],[],f):null)&&f.scope&&da.$$addScopeClass(l.$$element);l=f&&f.terminal||!(p=a[t].childNodes)||!p.length?null:Xa(p,
+f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||l)h.push(t,f,l),I=!0,n=n||f;f=null}return I?g:null}function jb(a,b,c){var d=a[b],e=d.parentNode,f;if(d.nodeType===Pa)for(;;){f=e?d.nextSibling:a[b+1];if(!f||f.nodeType!==Pa)break;d.nodeValue+=f.nodeValue;f.parentNode&&f.parentNode.removeChild(f);c&&f===a[b+1]&&a.splice(b+1,1)}}function ka(a,b,c){function d(e,f,g,h,k){e||(e=a.$new(!1,k),e.$$transcluded=!0);return b(e,f,{parentBoundTranscludeFn:c,transcludeControllers:g,
+futureParentElement:h})}var e=d.$$slots=T(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?ka(a,b.$$slots[f],c):null;return d}function tc(a,b,d,e,f){var g=d.$attr,h;switch(a.nodeType){case 1:h=ua(a);Y(b,xa(h),"E",e,f);for(var l,m,n,t,J,s=a.attributes,v=0,G=s&&s.length;v<G;v++){var P=!1,N=!1,r=!1,y=!1,u=!1,M;l=s[v];m=l.name;t=l.value;n=xa(m.toLowerCase());(J=n.match(Ra))?(r="Attr"===J[1],y="Prop"===J[1],u="On"===J[1],m=m.replace(rd,"").toLowerCase().substr(4+J[1].length).replace(/_(.)/g,function(a,b){return b.toUpperCase()})):
+(M=n.match(Sa))&&ca(M[1])&&(P=m,N=m.substr(0,m.length-5)+"end",m=m.substr(0,m.length-6));if(y||u)d[n]=t,g[n]=l.name,y?Ea(a,b,n,m):b.push(sd(p,L,c,n,m,!1));else{n=xa(m.toLowerCase());g[n]=m;if(r||!d.hasOwnProperty(n))d[n]=t,nd(a,n)&&(d[n]=!0);Ia(a,b,t,n,r);Y(b,n,"A",e,f,P,N)}}"input"===h&&"hidden"===a.getAttribute("type")&&a.setAttribute("autocomplete","off");if(!Qa)break;g=a.className;D(g)&&(g=g.animVal);if(C(g)&&""!==g)for(;a=k.exec(g);)n=xa(a[2]),Y(b,n,"C",e,f)&&(d[n]=V(a[3])),g=g.substr(a.index+
+a[0].length);break;case Pa:na(b,a.nodeValue);break;case 8:if(!Oa)break;F(a,b,d,e,f)}b.sort(ia);return b}function F(a,b,c,d,e){try{var f=g.exec(a.nodeValue);if(f){var h=xa(f[1]);Y(b,h,"M",d,e)&&(c[h]=V(f[2]))}}catch(k){}}function U(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw $("uterdir",b,c);1===a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return x(d)}function W(a,b,c){return function(d,e,f,g,h){e=U(e[0],
+b,c);return a(d,e,f,g,h)}}function Z(a,b,c,d,e,f){var g;return a?da(b,c,d,e,f):function(){g||(g=da(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function aa(a,b,d,e,f,g,h,k,l){function m(a,b,c,d){if(a){c&&(a=W(a,c,d));a.require=u.require;a.directiveName=Q;if(s===u||u.$$isolateScope)a=Ba(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=W(b,c,d));b.require=u.require;b.directiveName=Q;if(s===u||u.$$isolateScope)b=Ba(b,{isolateScope:!0});k.push(b)}}function p(a,e,f,g,l){function m(a,b,c,d){var e;bb(a)||
+(d=c,c=b,b=a,a=void 0);N&&(e=P);c||(c=N?Q.parent():Q);if(d){var f=l.$$slots[d];if(f)return f(a,b,e,c,R);if(A(f))throw $("noslot",d,Aa(Q));}else return l(a,b,e,c,R)}var n,u,L,y,G,P,M,Q;b===f?(g=d,Q=d.$$element):(Q=x(f),g=new w(Q,d));G=e;s?y=e.$new(!0):t&&(G=e.$parent);l&&(M=m,M.$$boundTransclude=l,M.isSlotFilled=function(a){return!!l.$$slots[a]});J&&(P=ea(Q,g,M,J,y,e,s));s&&(da.$$addScopeInfo(Q,y,!0,!(v&&(v===s||v===s.$$originalDirective))),da.$$addScopeClass(Q,!0),y.$$isolateBindings=s.$$isolateBindings,
+u=Da(e,g,y,y.$$isolateBindings,s),u.removeWatches&&y.$on("$destroy",u.removeWatches));for(n in P){u=J[n];L=P[n];var Hg=u.$$bindings.bindToController;L.instance=L();Q.data("$"+u.name+"Controller",L.instance);L.bindingInfo=Da(G,g,L.instance,Hg,u)}r(J,function(a,b){var c=a.require;a.bindToController&&!H(c)&&D(c)&&S(P[b].instance,X(b,c,Q,P))});r(P,function(a){var b=a.instance;if(B(b.$onChanges))try{b.$onChanges(a.bindingInfo.initialChanges)}catch(d){c(d)}if(B(b.$onInit))try{b.$onInit()}catch(e){c(e)}B(b.$doCheck)&&
+(G.$watch(function(){b.$doCheck()}),b.$doCheck());B(b.$onDestroy)&&G.$on("$destroy",function(){b.$onDestroy()})});n=0;for(u=h.length;n<u;n++)L=h[n],Ca(L,L.isolateScope?y:e,Q,g,L.require&&X(L.directiveName,L.require,Q,P),M);var R=e;s&&(s.template||null===s.templateUrl)&&(R=y);a&&a(R,f.childNodes,void 0,l);for(n=k.length-1;0<=n;n--)L=k[n],Ca(L,L.isolateScope?y:e,Q,g,L.require&&X(L.directiveName,L.require,Q,P),M);r(P,function(a){a=a.instance;B(a.$postLink)&&a.$postLink()})}l=l||{};for(var n=-Number.MAX_VALUE,
+t=l.newScopeDirective,J=l.controllerDirectives,s=l.newIsolateScopeDirective,v=l.templateDirective,L=l.nonTlbTranscludeDirective,G=!1,P=!1,N=l.hasElementTranscludeDirective,y=d.$$element=x(b),u,Q,M,R=e,q,ma=!1,Jb=!1,O,sa=0,C=a.length;sa<C;sa++){u=a[sa];var E=u.$$start,jb=u.$$end;E&&(y=U(b,E,jb));M=void 0;if(n>u.priority)break;if(O=u.scope)u.templateUrl||(D(O)?(ba("new/isolated scope",s||t,u,y),s=u):ba("new/isolated scope",s,u,y)),t=t||u;Q=u.name;if(!ma&&(u.replace&&(u.templateUrl||u.template)||u.transclude&&
+!u.$$tlb)){for(O=sa+1;ma=a[O++];)if(ma.transclude&&!ma.$$tlb||ma.replace&&(ma.templateUrl||ma.template)){Jb=!0;break}ma=!0}!u.templateUrl&&u.controller&&(J=J||T(),ba("'"+Q+"' controller",J[Q],u,y),J[Q]=u);if(O=u.transclude)if(G=!0,u.$$tlb||(ba("transclusion",L,u,y),L=u),"element"===O)N=!0,n=u.priority,M=y,y=d.$$element=x(da.$$createComment(Q,d[Q])),b=y[0],oa(f,Ha.call(M,0),b),R=Z(Jb,M,e,n,g&&g.name,{nonTlbTranscludeDirective:L});else{var ka=T();if(D(O)){M=z.document.createDocumentFragment();var Xa=
+T(),F=T();r(O,function(a,b){var c="?"===a.charAt(0);a=c?a.substring(1):a;Xa[a]=b;ka[b]=null;F[b]=c});r(y.contents(),function(a){var b=Xa[xa(ua(a))];b?(F[b]=!0,ka[b]=ka[b]||z.document.createDocumentFragment(),ka[b].appendChild(a)):M.appendChild(a)});r(F,function(a,b){if(!a)throw $("reqslot",b);});for(var K in ka)ka[K]&&(R=x(ka[K].childNodes),ka[K]=Z(Jb,R,e));M=x(M.childNodes)}else M=x(qc(b)).contents();y.empty();R=Z(Jb,M,e,void 0,void 0,{needsNewScope:u.$$isolateScope||u.$$newScope});R.$$slots=ka}if(u.template)if(P=
+!0,ba("template",v,u,y),v=u,O=B(u.template)?u.template(y,d):u.template,O=Na(O),u.replace){g=u;M=nc.test(O)?td(ja(u.templateNamespace,V(O))):[];b=M[0];if(1!==M.length||1!==b.nodeType)throw $("tplrt",Q,"");oa(f,y,b);C={$attr:{}};O=tc(b,[],C);var Ig=a.splice(sa+1,a.length-(sa+1));(s||t)&&fa(O,s,t);a=a.concat(O).concat(Ig);ga(d,C);C=a.length}else y.html(O);if(u.templateUrl)P=!0,ba("template",v,u,y),v=u,u.replace&&(g=u),p=ha(a.splice(sa,a.length-sa),y,d,f,G&&R,h,k,{controllerDirectives:J,newScopeDirective:t!==
+u&&t,newIsolateScopeDirective:s,templateDirective:v,nonTlbTranscludeDirective:L}),C=a.length;else if(u.compile)try{q=u.compile(y,d,R);var Y=u.$$originalDirective||u;B(q)?m(null,Va(Y,q),E,jb):q&&m(Va(Y,q.pre),Va(Y,q.post),E,jb)}catch(ca){c(ca,Aa(y))}u.terminal&&(p.terminal=!0,n=Math.max(n,u.priority))}p.scope=t&&!0===t.scope;p.transcludeOnThisElement=G;p.templateOnThisElement=P;p.transclude=R;l.hasElementTranscludeDirective=N;return p}function X(a,b,c,d){var e;if(C(b)){var f=b.match(l);b=b.substring(f[0].length);
+var g=f[1]||f[3],f="?"===f[2];"^^"===g?c=c.parent():e=(e=d&&d[b])&&e.instance;if(!e){var h="$"+b+"Controller";e="^^"===g&&c[0]&&9===c[0].nodeType?null:g?c.inheritedData(h):c.data(h)}if(!e&&!f)throw $("ctreq",b,a);}else if(H(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=X(a,b[g],c,d);else D(b)&&(e={},r(b,function(b,f){e[f]=X(a,b,c,d)}));return e||null}function ea(a,b,c,d,e,f,g){var h=T(),k;for(k in d){var l=d[k],m={$scope:l===g||l.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},p=l.controller;"@"===
+p&&(p=b[l.name]);m=M(p,m,!0,l.controllerAs);h[l.name]=m;a.data("$"+l.name+"Controller",m.instance)}return h}function fa(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=bc(a[d],{$$isolateScope:b,$$newScope:c})}function Y(b,c,e,g,h,k,l){if(c===h)return null;var m=null;if(f.hasOwnProperty(c)){h=a.get(c+"Directive");for(var p=0,n=h.length;p<n;p++)if(c=h[p],(A(g)||g>c.priority)&&-1!==c.restrict.indexOf(e)){k&&(c=bc(c,{$$start:k,$$end:l}));if(!c.$$bindings){var I=m=c,t=c.name,u={isolateScope:null,bindToController:null};
+D(I.scope)&&(!0===I.bindToController?(u.bindToController=d(I.scope,t,!0),u.isolateScope={}):u.isolateScope=d(I.scope,t,!1));D(I.bindToController)&&(u.bindToController=d(I.bindToController,t,!0));if(u.bindToController&&!I.controller)throw $("noctrl",t);m=m.$$bindings=u;D(m.isolateScope)&&(c.$$isolateBindings=m.isolateScope)}b.push(c);m=c}}return m}function ca(b){if(f.hasOwnProperty(b))for(var c=a.get(b+"Directive"),d=0,e=c.length;d<e;d++)if(b=c[d],b.multiElement)return!0;return!1}function ga(a,b){var c=
+b.$attr,d=a.$attr;r(a,function(d,e){"$"!==e.charAt(0)&&(b[e]&&b[e]!==d&&(d=d.length?d+(("style"===e?";":" ")+b[e]):b[e]),a.$set(e,d,!0,c[e]))});r(b,function(b,e){a.hasOwnProperty(e)||"$"===e.charAt(0)||(a[e]=b,"class"!==e&&"style"!==e&&(d[e]=c[e]))})}function ha(a,b,d,f,g,h,k,l){var m=[],p,n,t=b[0],u=a.shift(),J=bc(u,{templateUrl:null,transclude:null,replace:null,$$originalDirective:u}),s=B(u.templateUrl)?u.templateUrl(b,d):u.templateUrl,L=u.templateNamespace;b.empty();e(s).then(function(c){var e,
+I;c=Na(c);if(u.replace){c=nc.test(c)?td(ja(L,V(c))):[];e=c[0];if(1!==c.length||1!==e.nodeType)throw $("tplrt",u.name,s);c={$attr:{}};oa(f,b,e);var v=tc(e,[],c);D(u.scope)&&fa(v,!0);a=v.concat(a);ga(d,c)}else e=t,b.html(c);a.unshift(J);p=aa(a,e,d,g,b,u,h,k,l);r(f,function(a,c){a===e&&(f[c]=b[0])});for(n=Xa(b[0].childNodes,g);m.length;){c=m.shift();I=m.shift();var y=m.shift(),P=m.shift(),v=b[0];if(!c.$$destroyed){if(I!==t){var G=I.className;l.hasElementTranscludeDirective&&u.replace||(v=qc(e));oa(y,
+x(I),v);sa(x(v),G)}I=p.transcludeOnThisElement?ka(c,p.transclude,P):P;p(n,c,v,f,I)}}m=null}).catch(function(a){dc(a)&&c(a)});return function(a,b,c,d,e){a=e;b.$$destroyed||(m?m.push(b,c,d,a):(p.transcludeOnThisElement&&(a=ka(b,p.transclude,e)),p(n,b,c,d,a)))}}function ia(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function ba(a,b,c,d){function e(a){return a?" (module: "+a+")":""}if(b)throw $("multidir",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),
+a,Aa(d));}function na(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&da.$$addBindingClass(a);return function(a,c){var e=c.parent();b||da.$$addBindingClass(e);da.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function ja(a,b){a=K(a||"html");switch(a){case "svg":case "math":var c=z.document.createElement("div");c.innerHTML="<"+a+">"+b+"</"+a+">";return c.childNodes[0].childNodes;default:return b}}function qa(a,b){if("srcdoc"===
+b)return u.HTML;if("src"===b||"ngSrc"===b)return-1===["img","video","audio","source","track"].indexOf(a)?u.RESOURCE_URL:u.MEDIA_URL;if("xlinkHref"===b)return"image"===a?u.MEDIA_URL:"a"===a?u.URL:u.RESOURCE_URL;if("form"===a&&"action"===b||"base"===a&&"href"===b||"link"===a&&"href"===b)return u.RESOURCE_URL;if("a"===a&&("href"===b||"ngHref"===b))return u.URL}function ya(a,b){var c=b.toLowerCase();return v[a+"|"+c]||v["*|"+c]}function za(a){return ma(u.valueOf(a),"ng-prop-srcset")}function Ea(a,b,c,
+d){if(m.test(d))throw $("nodomevents");a=ua(a);var e=ya(a,d),f=Ta;"srcset"!==d||"img"!==a&&"source"!==a?e&&(f=u.getTrusted.bind(u,e)):f=za;b.push({priority:100,compile:function(a,b){var e=p(b[c]),g=p(b[c],function(a){return u.valueOf(a)});return{pre:function(a,b){function c(){var g=e(a);b[0][d]=f(g)}c();a.$watch(g,c)}}}})}function Ia(a,c,d,e,f){var g=ua(a),k=qa(g,e),l=h[e]||f,p=b(d,!f,k,l);if(p){if("multiple"===e&&"select"===g)throw $("selmulti",Aa(a));if(m.test(e))throw $("nodomevents");c.push({priority:100,
+compile:function(){return{pre:function(a,c,f){c=f.$$observers||(f.$$observers=T());var g=f[e];g!==d&&(p=g&&b(g,!0,k,l),d=g);p&&(f[e]=p(a),(c[e]||(c[e]=[])).$$inter=!0,(f.$$observers&&f.$$observers[e].$$scope||a).$watch(p,function(a,b){"class"===e&&a!==b?f.$updateClass(a,b):f.$set(e,a)}))}}}})}}function oa(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]===d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&
+(a.context=c);break}f&&f.replaceChild(c,d);a=z.document.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);x.hasData(d)&&(x.data(c,x.data(d)),x(d).off("$destroy"));x.cleanData(a.querySelectorAll("*"));for(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function Ba(a,b){return S(function(){return a.apply(null,arguments)},a,b)}function Ca(a,b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,Aa(d))}}function ra(a,b){if(s)throw $("missingattr",a,b);}function Da(a,c,d,e,f){function g(b,c,e){B(d.$onChanges)&&
+!ec(c,e)&&(Ua||(a.$$postDigest(q),Ua=[]),m||(m={},Ua.push(h)),m[b]&&(e=m[b].previousValue),m[b]=new Kb(e,c))}function h(){d.$onChanges(m);m=void 0}var k=[],l={},m;r(e,function(e,h){var m=e.attrName,n=e.optional,I,t,u,s;switch(e.mode){case "@":n||ta.call(c,m)||(ra(m,f.name),d[h]=c[m]=void 0);n=c.$observe(m,function(a){if(C(a)||Ga(a))g(h,a,d[h]),d[h]=a});c.$$observers[m].$$scope=a;I=c[m];C(I)?d[h]=b(I)(a):Ga(I)&&(d[h]=I);l[h]=new Kb(uc,d[h]);k.push(n);break;case "=":if(!ta.call(c,m)){if(n)break;ra(m,
+f.name);c[m]=void 0}if(n&&!c[m])break;t=p(c[m]);s=t.literal?va:ec;u=t.assign||function(){I=d[h]=t(a);throw $("nonassign",c[m],m,f.name);};I=d[h]=t(a);n=function(b){s(b,d[h])||(s(b,I)?u(a,b=d[h]):d[h]=b);return I=b};n.$stateful=!0;n=e.collection?a.$watchCollection(c[m],n):a.$watch(p(c[m],n),null,t.literal);k.push(n);break;case "<":if(!ta.call(c,m)){if(n)break;ra(m,f.name);c[m]=void 0}if(n&&!c[m])break;t=p(c[m]);var v=t.literal,L=d[h]=t(a);l[h]=new Kb(uc,d[h]);n=a[e.collection?"$watchCollection":"$watch"](t,
+function(a,b){if(b===a){if(b===L||v&&va(b,L))return;b=L}g(h,a,b);d[h]=a});k.push(n);break;case "&":n||ta.call(c,m)||ra(m,f.name);t=c.hasOwnProperty(m)?p(c[m]):E;if(t===E&&n)break;d[h]=function(b){return t(a,b)}}});return{initialChanges:l,removeWatches:k.length&&function(){for(var a=0,b=k.length;a<b;++a)k[a]()}}}var Ma=/^\w/,Fa=z.document.createElement("div"),Oa=t,Qa=N,Ja=G,Ua;w.prototype={$normalize:xa,$addClass:function(a){a&&0<a.length&&R.addClass(this.$$element,a)},$removeClass:function(a){a&&
+0<a.length&&R.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=ud(a,b);c&&c.length&&R.addClass(this.$$element,c);(c=ud(b,a))&&c.length&&R.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=nd(this.$$element[0],a),g=vd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Xc(a,"-"));"img"===ua(this.$$element)&&"srcset"===a&&(this[a]=b=ma(b,"$set('srcset', value)"));!1!==d&&(null===b||A(b)?this.$$element.removeAttr(e):
+Ma.test(e)?f&&!1===b?this.$$element.removeAttr(e):this.$$element.attr(e,b):O(this.$$element[0],e,b));(a=this.$$observers)&&r(a[h],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=T()),e=d[a]||(d[a]=[]);e.push(b);L.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||A(c[a])||b(c[a])});return function(){cb(e,b)}}};var Ka=b.startSymbol(),La=b.endSymbol(),Na="{{"===Ka&&"}}"===La?Ta:function(a){return a.replace(/\{\{/g,Ka).replace(/}}/g,La)},Ra=
+/^ng(Attr|Prop|On)([A-Z].*)$/,Sa=/^(.+)Start$/;da.$$addBindingInfo=n?function(a,b){var c=a.data("$binding")||[];H(b)?c=c.concat(b):c.push(b);a.data("$binding",c)}:E;da.$$addBindingClass=n?function(a){sa(a,"ng-binding")}:E;da.$$addScopeInfo=n?function(a,b,c,d){a.data(c?d?"$isolateScopeNoTemplate":"$isolateScope":"$scope",b)}:E;da.$$addScopeClass=n?function(a,b){sa(a,b?"ng-isolate-scope":"ng-scope")}:E;da.$$createComment=function(a,b){var c="";n&&(c=" "+(a||"")+": ",b&&(c+=b+" "));return z.document.createComment(c)};
+return da}]}function Kb(a,b){this.previousValue=a;this.currentValue=b}function xa(a){return a.replace(rd,"").replace(Jg,function(a,d,c){return c?d.toUpperCase():d})}function ud(a,b){var d="",c=a.split(/\s+/),e=b.split(/\s+/),f=0;a:for(;f<c.length;f++){for(var g=c[f],k=0;k<e.length;k++)if(g===e[k])continue a;d+=(0<d.length?" ":"")+g}return d}function td(a){a=x(a);var b=a.length;if(1>=b)return a;for(;b--;){var d=a[b];(8===d.nodeType||d.nodeType===Pa&&""===d.nodeValue.trim())&&Kg.call(a,b,1)}return a}
+function Gg(a,b){if(b&&C(b))return b;if(C(a)){var d=wd.exec(a);if(d)return d[3]}}function Kf(){var a={};this.has=function(b){return a.hasOwnProperty(b)};this.register=function(b,d){Ja(b,"controller");D(b)?S(a,b):a[b]=d};this.$get=["$injector",function(b){function d(a,b,d,g){if(!a||!D(a.$scope))throw F("$controller")("noscp",g,b);a.$scope[b]=d}return function(c,e,f,g){var k,h,l;f=!0===f;g&&C(g)&&(l=g);if(C(c)){g=c.match(wd);if(!g)throw xd("ctrlfmt",c);h=g[1];l=l||g[3];c=a.hasOwnProperty(h)?a[h]:Le(e.$scope,
+h,!0);if(!c)throw xd("ctrlreg",h);tb(c,h,!0)}if(f)return f=(H(c)?c[c.length-1]:c).prototype,k=Object.create(f||null),l&&d(e,l,k,h||c.name),S(function(){var a=b.invoke(c,k,e,h);a!==k&&(D(a)||B(a))&&(k=a,l&&d(e,l,k,h||c.name));return k},{instance:k,identifier:l});k=b.instantiate(c,e,h);l&&d(e,l,k,h||c.name);return k}}]}function Lf(){this.$get=["$window",function(a){return x(a.document)}]}function Mf(){this.$get=["$document","$rootScope",function(a,b){function d(){e=c.hidden}var c=a[0],e=c&&c.hidden;
+a.on("visibilitychange",d);b.$on("$destroy",function(){a.off("visibilitychange",d)});return function(){return e}}]}function Nf(){this.$get=["$log",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function vc(a){return D(a)?ha(a)?a.toISOString():eb(a):a}function Tf(){this.$get=function(){return function(a){if(!a)return"";var b=[];Qc(a,function(a,c){null===a||A(a)||B(a)||(H(a)?r(a,function(a){b.push(ba(c)+"="+ba(vc(a)))}):b.push(ba(c)+"="+ba(vc(a))))});return b.join("&")}}}function Uf(){this.$get=
+function(){return function(a){function b(a,e,f){H(a)?r(a,function(a,c){b(a,e+"["+(D(a)?c:"")+"]")}):D(a)&&!ha(a)?Qc(a,function(a,c){b(a,e+(f?"":"[")+c+(f?"":"]"))}):(B(a)&&(a=a()),d.push(ba(e)+"="+(null==a?"":ba(vc(a)))))}if(!a)return"";var d=[];b(a,"",!0);return d.join("&")}}}function wc(a,b){if(C(a)){var d=a.replace(Lg,"").trim();if(d){var c=b("Content-Type"),c=c&&0===c.indexOf(yd),e;(e=c)||(e=(e=d.match(Mg))&&Ng[e[0]].test(d));if(e)try{a=Tc(d)}catch(f){if(!c)return a;throw Lb("baddata",a,f);}}}return a}
+function zd(a){var b=T(),d;C(a)?r(a.split("\n"),function(a){d=a.indexOf(":");var e=K(V(a.substr(0,d)));a=V(a.substr(d+1));e&&(b[e]=b[e]?b[e]+", "+a:a)}):D(a)&&r(a,function(a,d){var f=K(d),g=V(a);f&&(b[f]=b[f]?b[f]+", "+g:g)});return b}function Ad(a){var b;return function(d){b||(b=zd(a));return d?(d=b[K(d)],void 0===d&&(d=null),d):b}}function Bd(a,b,d,c){if(B(c))return c(a,b,d);r(c,function(c){a=c(a,b,d)});return a}function Sf(){var a=this.defaults={transformResponse:[wc],transformRequest:[function(a){return D(a)&&
+"[object File]"!==la.call(a)&&"[object Blob]"!==la.call(a)&&"[object FormData]"!==la.call(a)?eb(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:ja(xc),put:ja(xc),patch:ja(xc)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer",jsonpCallbackParam:"callback"},b=!1;this.useApplyAsync=function(a){return w(a)?(b=!!a,this):b};var d=this.interceptors=[],c=this.xsrfTrustedOrigins=[];Object.defineProperty(this,"xsrfWhitelistedOrigins",
+{get:function(){return this.xsrfTrustedOrigins},set:function(a){this.xsrfTrustedOrigins=a}});this.$get=["$browser","$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector","$sce",function(e,f,g,k,h,l,m,p){function n(b){function c(a,b){for(var d=0,e=b.length;d<e;){var f=b[d++],g=b[d++];a=a.then(f,g)}b.length=0;return a}function d(a,b){var c,e={};r(a,function(a,d){B(a)?(c=a(b),null!=c&&(e[d]=c)):e[d]=a});return e}function f(a){var b=S({},a);b.data=Bd(a.data,a.headers,a.status,g.transformResponse);
+a=a.status;return 200<=a&&300>a?b:l.reject(b)}if(!D(b))throw F("$http")("badreq",b);if(!C(p.valueOf(b.url)))throw F("$http")("badreq",b.url);var g=S({method:"get",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer,jsonpCallbackParam:a.jsonpCallbackParam},b);g.headers=function(b){var c=a.headers,e=S({},b.headers),f,g,h,c=S({},c.common,c[K(b.method)]);a:for(f in c){g=K(f);for(h in e)if(K(h)===g)continue a;e[f]=c[f]}return d(e,ja(b))}(b);g.method=
+vb(g.method);g.paramSerializer=C(g.paramSerializer)?m.get(g.paramSerializer):g.paramSerializer;e.$$incOutstandingRequestCount("$http");var h=[],k=[];b=l.resolve(g);r(v,function(a){(a.request||a.requestError)&&h.unshift(a.request,a.requestError);(a.response||a.responseError)&&k.push(a.response,a.responseError)});b=c(b,h);b=b.then(function(b){var c=b.headers,d=Bd(b.data,Ad(c),void 0,b.transformRequest);A(d)&&r(c,function(a,b){"content-type"===K(b)&&delete c[b]});A(b.withCredentials)&&!A(a.withCredentials)&&
+(b.withCredentials=a.withCredentials);return s(b,d).then(f,f)});b=c(b,k);return b=b.finally(function(){e.$$completeOutstandingRequest(E,"$http")})}function s(c,d){function e(a){if(a){var c={};r(a,function(a,d){c[d]=function(c){function d(){a(c)}b?h.$applyAsync(d):h.$$phase?d():h.$apply(d)}});return c}}function k(a,c,d,e,f){function g(){m(c,a,d,e,f)}R&&(200<=a&&300>a?R.put(O,[a,c,zd(d),e,f]):R.remove(O));b?h.$applyAsync(g):(g(),h.$$phase||h.$apply())}function m(a,b,d,e,f){b=-1<=b?b:0;(200<=b&&300>
+b?L.resolve:L.reject)({data:a,status:b,headers:Ad(d),config:c,statusText:e,xhrStatus:f})}function s(a){m(a.data,a.status,ja(a.headers()),a.statusText,a.xhrStatus)}function v(){var a=n.pendingRequests.indexOf(c);-1!==a&&n.pendingRequests.splice(a,1)}var L=l.defer(),u=L.promise,R,q,ma=c.headers,x="jsonp"===K(c.method),O=c.url;x?O=p.getTrustedResourceUrl(O):C(O)||(O=p.valueOf(O));O=G(O,c.paramSerializer(c.params));x&&(O=t(O,c.jsonpCallbackParam));n.pendingRequests.push(c);u.then(v,v);!c.cache&&!a.cache||
+!1===c.cache||"GET"!==c.method&&"JSONP"!==c.method||(R=D(c.cache)?c.cache:D(a.cache)?a.cache:N);R&&(q=R.get(O),w(q)?q&&B(q.then)?q.then(s,s):H(q)?m(q[1],q[0],ja(q[2]),q[3],q[4]):m(q,200,{},"OK","complete"):R.put(O,u));A(q)&&((q=kc(c.url)?g()[c.xsrfCookieName||a.xsrfCookieName]:void 0)&&(ma[c.xsrfHeaderName||a.xsrfHeaderName]=q),f(c.method,O,d,k,ma,c.timeout,c.withCredentials,c.responseType,e(c.eventHandlers),e(c.uploadEventHandlers)));return u}function G(a,b){0<b.length&&(a+=(-1===a.indexOf("?")?
+"?":"&")+b);return a}function t(a,b){var c=a.split("?");if(2<c.length)throw Lb("badjsonp",a);c=hc(c[1]);r(c,function(c,d){if("JSON_CALLBACK"===c)throw Lb("badjsonp",a);if(d===b)throw Lb("badjsonp",b,a);});return a+=(-1===a.indexOf("?")?"?":"&")+b+"=JSON_CALLBACK"}var N=k("$http");a.paramSerializer=C(a.paramSerializer)?m.get(a.paramSerializer):a.paramSerializer;var v=[];r(d,function(a){v.unshift(C(a)?m.get(a):m.invoke(a))});var kc=Og(c);n.pendingRequests=[];(function(a){r(arguments,function(a){n[a]=
+function(b,c){return n(S({},c||{},{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){r(arguments,function(a){n[a]=function(b,c,d){return n(S({},d||{},{method:a,url:b,data:c}))}})})("post","put","patch");n.defaults=a;return n}]}function Wf(){this.$get=function(){return function(){return new z.XMLHttpRequest}}}function Vf(){this.$get=["$browser","$jsonpCallbacks","$document","$xhrFactory",function(a,b,d,c){return Pg(a,c,a.defer,b,d[0])}]}function Pg(a,b,d,c,e){function f(a,b,d){a=a.replace("JSON_CALLBACK",
+b);var f=e.createElement("script"),m=null;f.type="text/javascript";f.src=a;f.async=!0;m=function(a){f.removeEventListener("load",m);f.removeEventListener("error",m);e.body.removeChild(f);f=null;var g=-1,s="unknown";a&&("load"!==a.type||c.wasCalled(b)||(a={type:"error"}),s=a.type,g="error"===a.type?404:200);d&&d(g,s)};f.addEventListener("load",m);f.addEventListener("error",m);e.body.appendChild(f);return m}return function(e,k,h,l,m,p,n,s,G,t){function N(a){J="timeout"===a;pa&&pa();y&&y.abort()}function v(a,
+b,c,e,f,g){w(P)&&d.cancel(P);pa=y=null;a(b,c,e,f,g)}k=k||a.url();if("jsonp"===K(e))var q=c.createCallback(k),pa=f(k,q,function(a,b){var d=200===a&&c.getResponse(q);v(l,a,d,"",b,"complete");c.removeCallback(q)});else{var y=b(e,k),J=!1;y.open(e,k,!0);r(m,function(a,b){w(a)&&y.setRequestHeader(b,a)});y.onload=function(){var a=y.statusText||"",b="response"in y?y.response:y.responseText,c=1223===y.status?204:y.status;0===c&&(c=b?200:"file"===ga(k).protocol?404:0);v(l,c,b,y.getAllResponseHeaders(),a,"complete")};
+y.onerror=function(){v(l,-1,null,null,"","error")};y.ontimeout=function(){v(l,-1,null,null,"","timeout")};y.onabort=function(){v(l,-1,null,null,"",J?"timeout":"abort")};r(G,function(a,b){y.addEventListener(b,a)});r(t,function(a,b){y.upload.addEventListener(b,a)});n&&(y.withCredentials=!0);if(s)try{y.responseType=s}catch(I){if("json"!==s)throw I;}y.send(A(h)?null:h)}if(0<p)var P=d(function(){N("timeout")},p);else p&&B(p.then)&&p.then(function(){N(w(p.$$timeoutId)?"timeout":"abort")})}}function Pf(){var a=
+"{{",b="}}";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=["$parse","$exceptionHandler","$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(p,a).replace(n,b)}function k(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function h(f,h,n,p){function v(a){try{return a=n&&!r?e.getTrusted(n,a):e.valueOf(a),p&&!w(a)?a:jc(a)}catch(b){c(Ma.interr(f,b))}}var r=n===e.URL||n===e.MEDIA_URL;if(!f.length||
+-1===f.indexOf(a)){if(h)return;h=g(f);r&&(h=e.getTrusted(n,h));h=ia(h);h.exp=f;h.expressions=[];h.$$watchDelegate=k;return h}p=!!p;for(var q,y,J=0,I=[],P,Q=f.length,M=[],L=[],u;J<Q;)if(-1!==(q=f.indexOf(a,J))&&-1!==(y=f.indexOf(b,q+l)))J!==q&&M.push(g(f.substring(J,q))),J=f.substring(q+l,y),I.push(J),J=y+m,L.push(M.length),M.push("");else{J!==Q&&M.push(g(f.substring(J)));break}u=1===M.length&&1===L.length;var R=r&&u?void 0:v;P=I.map(function(a){return d(a,R)});if(!h||I.length){var x=function(a){for(var b=
+0,c=I.length;b<c;b++){if(p&&A(a[b]))return;M[L[b]]=a[b]}if(r)return e.getTrusted(n,u?M[0]:M.join(""));n&&1<M.length&&Ma.throwNoconcat(f);return M.join("")};return S(function(a){var b=0,d=I.length,e=Array(d);try{for(;b<d;b++)e[b]=P[b](a);return x(e)}catch(g){c(Ma.interr(f,g))}},{exp:f,expressions:I,$$watchDelegate:function(a,b){var c;return a.$watchGroup(P,function(d,e){var f=x(d);b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,p=new RegExp(a.replace(/./g,f),"g"),n=new RegExp(b.replace(/./g,
+f),"g");h.startSymbol=function(){return a};h.endSymbol=function(){return b};return h}]}function Qf(){this.$get=["$$intervalFactory","$window",function(a,b){var d={},c=function(a){b.clearInterval(a);delete d[a]},e=a(function(a,c,e){a=b.setInterval(a,c);d[a]=e;return a},c);e.cancel=function(a){if(!a)return!1;if(!a.hasOwnProperty("$$intervalId"))throw Qg("badprom");if(!d.hasOwnProperty(a.$$intervalId))return!1;a=a.$$intervalId;var b=d[a],e=b.promise;e.$$state&&(e.$$state.pur=!0);b.reject("canceled");
+c(a);return!0};return e}]}function Rf(){this.$get=["$browser","$q","$$q","$rootScope",function(a,b,d,c){return function(e,f){return function(g,k,h,l){function m(){p?g.apply(null,n):g(s)}var p=4<arguments.length,n=p?Ha.call(arguments,4):[],s=0,G=w(l)&&!l,t=(G?d:b).defer(),r=t.promise;h=w(h)?h:0;r.$$intervalId=e(function(){G?a.defer(m):c.$evalAsync(m);t.notify(s++);0<h&&s>=h&&(t.resolve(s),f(r.$$intervalId));G||c.$apply()},k,t,G);return r}}}]}function Cd(a,b){var d=ga(a);b.$$protocol=d.protocol;b.$$host=
+d.hostname;b.$$port=fa(d.port)||Rg[d.protocol]||null}function Dd(a,b,d){if(Sg.test(a))throw kb("badpath",a);var c="/"!==a.charAt(0);c&&(a="/"+a);a=ga(a);for(var c=(c&&"/"===a.pathname.charAt(0)?a.pathname.substring(1):a.pathname).split("/"),e=c.length;e--;)c[e]=decodeURIComponent(c[e]),d&&(c[e]=c[e].replace(/\//g,"%2F"));d=c.join("/");b.$$path=d;b.$$search=hc(a.search);b.$$hash=decodeURIComponent(a.hash);b.$$path&&"/"!==b.$$path.charAt(0)&&(b.$$path="/"+b.$$path)}function yc(a,b){return a.slice(0,
+b.length)===b}function ya(a,b){if(yc(b,a))return b.substr(a.length)}function Da(a){var b=a.indexOf("#");return-1===b?a:a.substr(0,b)}function zc(a,b,d){this.$$html5=!0;d=d||"";Cd(a,this);this.$$parse=function(a){var d=ya(b,a);if(!C(d))throw kb("ipthprfx",a,b);Dd(d,this,!0);this.$$path||(this.$$path="/");this.$$compose()};this.$$normalizeUrl=function(a){return b+a.substr(1)};this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;w(f=ya(a,c))?(g=f,g=d&&w(f=ya(d,f))?
+b+(ya("/",f)||f):a+g):w(f=ya(b,c))?g=b+f:b===c+"/"&&(g=b);g&&this.$$parse(g);return!!g}}function Ac(a,b,d){Cd(a,this);this.$$parse=function(c){var e=ya(a,c)||ya(b,c),f;A(e)||"#"!==e.charAt(0)?this.$$html5?f=e:(f="",A(e)&&(a=c,this.replace())):(f=ya(d,e),A(f)&&(f=e));Dd(f,this,!1);c=this.$$path;var e=a,g=/^\/[A-Z]:(\/.*)/;yc(f,e)&&(f=f.replace(e,""));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$normalizeUrl=function(b){return a+(b?d+b:"")};this.$$parseLinkUrl=function(b,
+d){return Da(a)===Da(b)?(this.$$parse(b),!0):!1}}function Ed(a,b,d){this.$$html5=!0;Ac.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;a===Da(c)?f=c:(g=ya(b,c))?f=a+d+g:b===c+"/"&&(f=b);f&&this.$$parse(f);return!!f};this.$$normalizeUrl=function(b){return a+d+b}}function Mb(a){return function(){return this[a]}}function Fd(a,b){return function(d){if(A(d))return this[a];this[a]=b(d);this.$$compose();return this}}function Yf(){var a="!",
+b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return w(b)?(a=b,this):a};this.html5Mode=function(a){if(Ga(a))return b.enabled=a,this;if(D(a)){Ga(a.enabled)&&(b.enabled=a.enabled);Ga(a.requireBase)&&(b.requireBase=a.requireBase);if(Ga(a.rewriteLinks)||C(a.rewriteLinks))b.rewriteLinks=a.rewriteLinks;return this}return b};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(d,c,e,f,g){function k(a,b){return a===b||ga(a).href===ga(b).href}function h(a,
+b,d){var e=m.url(),f=m.$$state;try{c.url(a,b,d),m.$$state=c.state()}catch(g){throw m.url(e),m.$$state=f,g;}}function l(a,b){d.$broadcast("$locationChangeSuccess",m.absUrl(),a,m.$$state,b)}var m,p;p=c.baseHref();var n=c.url(),s;if(b.enabled){if(!p&&b.requireBase)throw kb("nobase");s=n.substring(0,n.indexOf("/",n.indexOf("//")+2))+(p||"/");p=e.history?zc:Ed}else s=Da(n),p=Ac;var r=s.substr(0,Da(s).lastIndexOf("/")+1);m=new p(s,r,"#"+a);m.$$parseLinkUrl(n,n);m.$$state=c.state();var t=/^\s*(javascript|mailto):/i;
+f.on("click",function(a){var e=b.rewriteLinks;if(e&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&2!==a.which&&2!==a.button){for(var g=x(a.target);"a"!==ua(g[0]);)if(g[0]===f[0]||!(g=g.parent())[0])return;if(!C(e)||!A(g.attr(e))){var e=g.prop("href"),h=g.attr("href")||g.attr("xlink:href");D(e)&&"[object SVGAnimatedString]"===e.toString()&&(e=ga(e.animVal).href);t.test(e)||!e||g.attr("target")||a.isDefaultPrevented()||!m.$$parseLinkUrl(e,h)||(a.preventDefault(),m.absUrl()!==c.url()&&d.$apply())}}});m.absUrl()!==
+n&&c.url(m.absUrl(),!0);var N=!0;c.onUrlChange(function(a,b){yc(a,r)?(d.$evalAsync(function(){var c=m.absUrl(),e=m.$$state,f;m.$$parse(a);m.$$state=b;f=d.$broadcast("$locationChangeStart",a,c,b,e).defaultPrevented;m.absUrl()===a&&(f?(m.$$parse(c),m.$$state=e,h(c,!1,e)):(N=!1,l(c,e)))}),d.$$phase||d.$digest()):g.location.href=a});d.$watch(function(){if(N||m.$$urlUpdatedByLocation){m.$$urlUpdatedByLocation=!1;var a=c.url(),b=m.absUrl(),f=c.state(),g=m.$$replace,n=!k(a,b)||m.$$html5&&e.history&&f!==
+m.$$state;if(N||n)N=!1,d.$evalAsync(function(){var b=m.absUrl(),c=d.$broadcast("$locationChangeStart",b,a,m.$$state,f).defaultPrevented;m.absUrl()===b&&(c?(m.$$parse(a),m.$$state=f):(n&&h(b,g,f===m.$$state?null:m.$$state),l(a,f)))})}m.$$replace=!1});return m}]}function Zf(){var a=!0,b=this;this.debugEnabled=function(b){return w(b)?(a=b,this):a};this.$get=["$window",function(d){function c(a){dc(a)&&(a.stack&&f?a=a.message&&-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&&
+(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||E;return function(){var a=[];r(arguments,function(b){a.push(c(b))});return Function.prototype.apply.call(e,b,a)}}var f=wa||/\bEdge\//.test(d.navigator&&d.navigator.userAgent);return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),debug:function(){var c=e("debug");return function(){a&&c.apply(b,arguments)}}()}}]}function Tg(a){return a+""}function Ug(a,b){return"undefined"!==typeof a?a:
+b}function Gd(a,b){return"undefined"===typeof a?b:"undefined"===typeof b?a:a+b}function Vg(a,b){switch(a.type){case q.MemberExpression:if(a.computed)return!1;break;case q.UnaryExpression:return 1;case q.BinaryExpression:return"+"!==a.operator?1:!1;case q.CallExpression:return!1}return void 0===b?Hd:b}function Z(a,b,d){var c,e,f=a.isPure=Vg(a,d);switch(a.type){case q.Program:c=!0;r(a.body,function(a){Z(a.expression,b,f);c=c&&a.expression.constant});a.constant=c;break;case q.Literal:a.constant=!0;a.toWatch=
+[];break;case q.UnaryExpression:Z(a.argument,b,f);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;break;case q.BinaryExpression:Z(a.left,b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case q.LogicalExpression:Z(a.left,b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case q.ConditionalExpression:Z(a.test,b,f);Z(a.alternate,b,f);Z(a.consequent,b,f);a.constant=a.test.constant&&
+a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case q.Identifier:a.constant=!1;a.toWatch=[a];break;case q.MemberExpression:Z(a.object,b,f);a.computed&&Z(a.property,b,f);a.constant=a.object.constant&&(!a.computed||a.property.constant);a.toWatch=a.constant?[]:[a];break;case q.CallExpression:c=d=a.filter?!b(a.callee.name).$stateful:!1;e=[];r(a.arguments,function(a){Z(a,b,f);c=c&&a.constant;e.push.apply(e,a.toWatch)});a.constant=c;a.toWatch=d?e:[a];break;case q.AssignmentExpression:Z(a.left,
+b,f);Z(a.right,b,f);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];break;case q.ArrayExpression:c=!0;e=[];r(a.elements,function(a){Z(a,b,f);c=c&&a.constant;e.push.apply(e,a.toWatch)});a.constant=c;a.toWatch=e;break;case q.ObjectExpression:c=!0;e=[];r(a.properties,function(a){Z(a.value,b,f);c=c&&a.value.constant;e.push.apply(e,a.value.toWatch);a.computed&&(Z(a.key,b,!1),c=c&&a.key.constant,e.push.apply(e,a.key.toWatch))});a.constant=c;a.toWatch=e;break;case q.ThisExpression:a.constant=
+!1;a.toWatch=[];break;case q.LocalsExpression:a.constant=!1,a.toWatch=[]}}function Id(a){if(1===a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function Jd(a){return a.type===q.Identifier||a.type===q.MemberExpression}function Kd(a){if(1===a.body.length&&Jd(a.body[0].expression))return{type:q.AssignmentExpression,left:a.body[0].expression,right:{type:q.NGValueParameter},operator:"="}}function Ld(a){this.$filter=a}function Md(a){this.$filter=a}function Nb(a,b,d){this.ast=
+new q(a,d);this.astCompiler=d.csp?new Md(b):new Ld(b)}function Bc(a){return B(a.valueOf)?a.valueOf():Wg.call(a)}function $f(){var a=T(),b={"true":!0,"false":!1,"null":null,undefined:void 0},d,c;this.addLiteral=function(a,c){b[a]=c};this.setIdentifierFns=function(a,b){d=a;c=b;return this};this.$get=["$filter",function(e){function f(b,c){var d,f;switch(typeof b){case "string":return f=b=b.trim(),d=a[f],d||(d=new Ob(G),d=(new Nb(d,e,G)).parse(b),a[f]=p(d)),s(d,c);case "function":return s(b,c);default:return s(E,
+c)}}function g(a,b,c){return null==a||null==b?a===b:"object"!==typeof a||(a=Bc(a),"object"!==typeof a||c)?a===b||a!==a&&b!==b:!1}function k(a,b,c,d,e){var f=d.inputs,h;if(1===f.length){var k=g,f=f[0];return a.$watch(function(a){var b=f(a);g(b,k,f.isPure)||(h=d(a,void 0,void 0,[b]),k=b&&Bc(b));return h},b,c,e)}for(var l=[],m=[],n=0,p=f.length;n<p;n++)l[n]=g,m[n]=null;return a.$watch(function(a){for(var b=!1,c=0,e=f.length;c<e;c++){var k=f[c](a);if(b||(b=!g(k,l[c],f[c].isPure)))m[c]=k,l[c]=k&&Bc(k)}b&&
+(h=d(a,void 0,void 0,m));return h},b,c,e)}function h(a,b,c,d,e){function f(){h(m)&&k()}function g(a,b,c,d){m=u&&d?d[0]:n(a,b,c,d);h(m)&&a.$$postDigest(f);return s(m)}var h=d.literal?l:w,k,m,n=d.$$intercepted||d,s=d.$$interceptor||Ta,u=d.inputs&&!n.inputs;g.literal=d.literal;g.constant=d.constant;g.inputs=d.inputs;p(g);return k=a.$watch(g,b,c,e)}function l(a){var b=!0;r(a,function(a){w(a)||(b=!1)});return b}function m(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function p(a){a.constant?
+a.$$watchDelegate=m:a.oneTime?a.$$watchDelegate=h:a.inputs&&(a.$$watchDelegate=k);return a}function n(a,b){function c(d){return b(a(d))}c.$stateful=a.$stateful||b.$stateful;c.$$pure=a.$$pure&&b.$$pure;return c}function s(a,b){if(!b)return a;a.$$interceptor&&(b=n(a.$$interceptor,b),a=a.$$intercepted);var c=!1,d=function(d,e,f,g){d=c&&g?g[0]:a(d,e,f,g);return b(d)};d.$$intercepted=a;d.$$interceptor=b;d.literal=a.literal;d.oneTime=a.oneTime;d.constant=a.constant;b.$stateful||(c=!a.inputs,d.inputs=a.inputs?
+a.inputs:[a],b.$$pure||(d.inputs=d.inputs.map(function(a){return a.isPure===Hd?function(b){return a(b)}:a})));return p(d)}var G={csp:Ba().noUnsafeEval,literals:Ia(b),isIdentifierStart:B(d)&&d,isIdentifierContinue:B(c)&&c};f.$$getAst=function(a){var b=new Ob(G);return(new Nb(b,e,G)).getAst(a).ast};return f}]}function bg(){var a=!0;this.$get=["$rootScope","$exceptionHandler",function(b,d){return Nd(function(a){b.$evalAsync(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return w(b)?(a=b,this):
+a}}function cg(){var a=!0;this.$get=["$browser","$exceptionHandler",function(b,d){return Nd(function(a){b.defer(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return w(b)?(a=b,this):a}}function Nd(a,b,d){function c(){return new e}function e(){var a=this.promise=new f;this.resolve=function(b){h(a,b)};this.reject=function(b){m(a,b)};this.notify=function(b){n(a,b)}}function f(){this.$$state={status:0}}function g(){for(;!w&&x.length;){var a=x.shift();if(!a.pur){a.pur=!0;var c=a.value,c="Possibly unhandled rejection: "+
+("function"===typeof c?c.toString().replace(/ \{[\s\S]*$/,""):A(c)?"undefined":"string"!==typeof c?Ne(c,void 0):c);dc(a.value)?b(a.value,c):b(c)}}}function k(c){!d||c.pending||2!==c.status||c.pur||(0===w&&0===x.length&&a(g),x.push(c));!c.processScheduled&&c.pending&&(c.processScheduled=!0,++w,a(function(){var e,f,k;k=c.pending;c.processScheduled=!1;c.pending=void 0;try{for(var l=0,n=k.length;l<n;++l){c.pur=!0;f=k[l][0];e=k[l][c.status];try{B(e)?h(f,e(c.value)):1===c.status?h(f,c.value):m(f,c.value)}catch(p){m(f,
+p),p&&!0===p.$$passToExceptionHandler&&b(p)}}}finally{--w,d&&0===w&&a(g)}}))}function h(a,b){a.$$state.status||(b===a?p(a,v("qcycle",b)):l(a,b))}function l(a,b){function c(b){g||(g=!0,l(a,b))}function d(b){g||(g=!0,p(a,b))}function e(b){n(a,b)}var f,g=!1;try{if(D(b)||B(b))f=b.then;B(f)?(a.$$state.status=-1,f.call(b,c,d,e)):(a.$$state.value=b,a.$$state.status=1,k(a.$$state))}catch(h){d(h)}}function m(a,b){a.$$state.status||p(a,b)}function p(a,b){a.$$state.value=b;a.$$state.status=2;k(a.$$state)}function n(c,
+d){var e=c.$$state.pending;0>=c.$$state.status&&e&&e.length&&a(function(){for(var a,c,f=0,g=e.length;f<g;f++){c=e[f][0];a=e[f][3];try{n(c,B(a)?a(d):d)}catch(h){b(h)}}})}function s(a){var b=new f;m(b,a);return b}function G(a,b,c){var d=null;try{B(c)&&(d=c())}catch(e){return s(e)}return d&&B(d.then)?d.then(function(){return b(a)},s):b(a)}function t(a,b,c,d){var e=new f;h(e,a);return e.then(b,c,d)}function q(a){if(!B(a))throw v("norslvr",a);var b=new f;a(function(a){h(b,a)},function(a){m(b,a)});return b}
+var v=F("$q",TypeError),w=0,x=[];S(f.prototype,{then:function(a,b,c){if(A(a)&&A(b)&&A(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&k(this.$$state);return d},"catch":function(a){return this.then(null,a)},"finally":function(a,b){return this.then(function(b){return G(b,y,a)},function(b){return G(b,s,a)},b)}});var y=t;q.prototype=f.prototype;q.defer=c;q.reject=s;q.when=t;q.resolve=y;q.all=function(a){var b=new f,c=
+0,d=H(a)?[]:{};r(a,function(a,e){c++;t(a).then(function(a){d[e]=a;--c||h(b,d)},function(a){m(b,a)})});0===c&&h(b,d);return b};q.race=function(a){var b=c();r(a,function(a){t(a).then(b.resolve,b.reject)});return b.promise};return q}function mg(){this.$get=["$window","$timeout",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:
+function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function ag(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++qb;this.$$ChildScope=null;this.$$suspended=!1}b.prototype=a;return b}var b=10,d=F("$rootScope"),c=null,e=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=["$exceptionHandler","$parse","$browser",
+function(f,g,k){function h(a){a.currentScope.$$destroyed=!0}function l(a){9===wa&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++qb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$suspended=this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=
+0;this.$$isolateBindings=null}function p(a){if(v.$$phase)throw d("inprog",v.$$phase);v.$$phase=a}function n(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function s(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function G(){}function t(){for(;y.length;)try{y.shift()()}catch(a){f(a)}e=null}function q(){null===e&&(e=k.defer(function(){v.$apply(t)},null,"$applyAsync"))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?(d=new m,
+d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!==this)&&d.$on("$destroy",h);return d},$watch:function(a,b,d,e){var f=g(a);b=B(b)?b:E;if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:G,get:f,exp:e||a,eq:!!d};c=null;k||(k=h.$$watchers=[],k.$$digestWatchIndex=-1);k.unshift(l);
+k.$$digestWatchIndex++;n(this,1);return function(){var a=cb(k,l);0<=a&&(n(h,-1),a<k.$$digestWatchIndex&&k.$$digestWatchIndex--);c=null}},$watchGroup:function(a,b){function c(){h=!1;try{k?(k=!1,b(e,e,g)):b(e,d,g)}finally{for(var f=0;f<a.length;f++)d[f]=e[f]}}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});r(a,function(a,
+b){var d=g.$watch(a,function(a){e[b]=a;h||(h=!0,g.$evalAsync(c))});f.push(d)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!A(e)){if(D(e))if(za(e))for(f!==n&&(f=n,t=f.length=0,l++),a=e.length,t!==a&&(l++,f.length=t=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==p&&(f=p={},t=0,l++);a=0;for(b in e)ta.call(e,b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(t++,f[b]=g,l++));if(t>a)for(b in l++,
+f)ta.call(e,b)||(t--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$$pure=g(a).literal;c.$stateful=!c.$$pure;var d=this,e,f,h,k=1<b.length,l=0,m=g(a,c),n=[],p={},s=!0,t=0;return this.$watch(m,function(){s?(s=!1,b(e,e,d)):b(e,h,d);if(k)if(D(e))if(za(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)ta.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,g,h,l,m,n,s,r=b,q,y=w.length?v:this,N=[],A,z;p("$digest");k.$$checkUrlChange();this===v&&null!==e&&(k.defer.cancel(e),
+t());c=null;do{s=!1;q=y;for(n=0;n<w.length;n++){try{z=w[n],l=z.fn,l(z.scope,z.locals)}catch(C){f(C)}c=null}w.length=0;a:do{if(n=!q.$$suspended&&q.$$watchers)for(n.$$digestWatchIndex=n.length;n.$$digestWatchIndex--;)try{if(a=n[n.$$digestWatchIndex])if(m=a.get,(g=m(q))!==(h=a.last)&&!(a.eq?va(g,h):Y(g)&&Y(h)))s=!0,c=a,a.last=a.eq?Ia(g,null):g,l=a.fn,l(g,h===G?g:h,q),5>r&&(A=4-r,N[A]||(N[A]=[]),N[A].push({msg:B(a.exp)?"fn: "+(a.exp.name||a.exp.toString()):a.exp,newVal:g,oldVal:h}));else if(a===c){s=
+!1;break a}}catch(E){f(E)}if(!(n=!q.$$suspended&&q.$$watchersCount&&q.$$childHead||q!==y&&q.$$nextSibling))for(;q!==y&&!(n=q.$$nextSibling);)q=q.$parent}while(q=n);if((s||w.length)&&!r--)throw v.$$phase=null,d("infdig",b,N);}while(s||w.length);for(v.$$phase=null;J<x.length;)try{x[J++]()}catch(D){f(D)}x.length=J=0;k.$$checkUrlChange()},$suspend:function(){this.$$suspended=!0},$isSuspended:function(){return this.$$suspended},$resume:function(){this.$$suspended=!1},$destroy:function(){if(!this.$$destroyed){var a=
+this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this===v&&k.$$applicationDestroyed();n(this,-this.$$watchersCount);for(var b in this.$$listenerCount)s(this,this.$$listenerCount[b],b);a&&a.$$childHead===this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail===this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=
+this.$evalAsync=this.$applyAsync=E;this.$on=this.$watch=this.$watchGroup=function(){return E};this.$$listeners={};this.$$nextSibling=null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){v.$$phase||w.length||k.defer(function(){w.length&&v.$digest()},null,"$evalAsync");w.push({scope:this,fn:g(a),locals:b})},$$postDigest:function(a){x.push(a)},$apply:function(a){try{p("$apply");try{return this.$eval(a)}finally{v.$$phase=null}}catch(b){f(b)}finally{try{v.$digest()}catch(c){throw f(c),
+c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&y.push(b);a=g(a);q()},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(delete c[d],s(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=
+!0},defaultPrevented:!1},k=db([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,k)}catch(n){f(n)}else d.splice(l,1),l--,m--;if(g)break;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=db([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||
+[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var v=new m,w=v.$$asyncQueue=[],x=v.$$postDigestQueue=[],y=v.$$applyAsyncQueue=[],J=0;return v}]}function Qe(){var a=/^\s*(https?|s?ftp|mailto|tel|file):/,b=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationTrustedUrlList=function(b){return w(b)?
+(a=b,this):a};this.imgSrcSanitizationTrustedUrlList=function(a){return w(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=c?b:a,f=ga(d&&d.trim()).href;return""===f||f.match(e)?d:"unsafe:"+f}}}function Xg(a){if("self"===a)return a;if(C(a)){if(-1<a.indexOf("***"))throw Ea("iwcard",a);a=Od(a).replace(/\\\*\\\*/g,".*").replace(/\\\*/g,"[^:/.?&;]*");return new RegExp("^"+a+"$")}if(ab(a))return new RegExp("^"+a.source+"$");throw Ea("imatcher");}function Pd(a){var b=[];w(a)&&r(a,function(a){b.push(Xg(a))});
+return b}function eg(){this.SCE_CONTEXTS=W;var a=["self"],b=[];this.trustedResourceUrlList=function(b){arguments.length&&(a=Pd(b));return a};Object.defineProperty(this,"resourceUrlWhitelist",{get:function(){return this.trustedResourceUrlList},set:function(a){this.trustedResourceUrlList=a}});this.bannedResourceUrlList=function(a){arguments.length&&(b=Pd(a));return b};Object.defineProperty(this,"resourceUrlBlacklist",{get:function(){return this.bannedResourceUrlList},set:function(a){this.bannedResourceUrlList=
+a}});this.$get=["$injector","$$sanitizeUri",function(d,c){function e(a,b){var c;"self"===a?(c=Cc(b,Qd))||(z.document.baseURI?c=z.document.baseURI:(Na||(Na=z.document.createElement("a"),Na.href=".",Na=Na.cloneNode(!1)),c=Na.href),c=Cc(b,c)):c=!!a.exec(b.href);return c}function f(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};
+return b}var g=function(a){throw Ea("unsafe");};d.has("$sanitize")&&(g=d.get("$sanitize"));var k=f(),h={};h[W.HTML]=f(k);h[W.CSS]=f(k);h[W.MEDIA_URL]=f(k);h[W.URL]=f(h[W.MEDIA_URL]);h[W.JS]=f(k);h[W.RESOURCE_URL]=f(h[W.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw Ea("icontext",a,b);if(null===b||A(b)||""===b)return b;if("string"!==typeof b)throw Ea("itype",a);return new c(b)},getTrusted:function(d,f){if(null===f||A(f)||""===f)return f;var k=h.hasOwnProperty(d)?
+h[d]:null;if(k&&f instanceof k)return f.$$unwrapTrustedValue();B(f.$$unwrapTrustedValue)&&(f=f.$$unwrapTrustedValue());if(d===W.MEDIA_URL||d===W.URL)return c(f.toString(),d===W.MEDIA_URL);if(d===W.RESOURCE_URL){var k=ga(f.toString()),n,s,r=!1;n=0;for(s=a.length;n<s;n++)if(e(a[n],k)){r=!0;break}if(r)for(n=0,s=b.length;n<s;n++)if(e(b[n],k)){r=!1;break}if(r)return f;throw Ea("insecurl",f.toString());}if(d===W.HTML)return g(f);throw Ea("unsafe");},valueOf:function(a){return a instanceof k?a.$$unwrapTrustedValue():
+a}}}]}function dg(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&&8>wa)throw Ea("iequirks");var c=ja(W);c.isEnabled=function(){return a};c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Ta);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,f=c.getTrusted,g=c.trustAs;r(W,
+function(a,b){var d=K(b);c[("parse_as_"+d).replace(Dc,xb)]=function(b){return e(a,b)};c[("get_trusted_"+d).replace(Dc,xb)]=function(b){return f(a,b)};c[("trust_as_"+d).replace(Dc,xb)]=function(b){return g(a,b)}});return c}]}function fg(){this.$get=["$window","$document",function(a,b){var d={},c=!((!a.nw||!a.nw.process)&&a.chrome&&(a.chrome.app&&a.chrome.app.runtime||!a.chrome.app&&a.chrome.runtime&&a.chrome.runtime.id))&&a.history&&a.history.pushState,e=fa((/android (\d+)/.exec(K((a.navigator||{}).userAgent))||
+[])[1]),f=/Boxee/i.test((a.navigator||{}).userAgent),g=b[0]||{},k=g.body&&g.body.style,h=!1,l=!1;k&&(h=!!("transition"in k||"webkitTransition"in k),l=!!("animation"in k||"webkitAnimation"in k));return{history:!(!c||4>e||f),hasEvent:function(a){if("input"===a&&wa)return!1;if(A(d[a])){var b=g.createElement("div");d[a]="on"+a in b}return d[a]},csp:Ba(),transitions:h,animations:l,android:e}}]}function gg(){this.$get=ia(function(a){return new Yg(a)})}function Yg(a){function b(){var a=e.pop();return a&&
+a.cb}function d(a){for(var b=e.length-1;0<=b;--b){var c=e[b];if(c.type===a)return e.splice(b,1),c.cb}}var c={},e=[],f=this.ALL_TASKS_TYPE="$$all$$",g=this.DEFAULT_TASK_TYPE="$$default$$";this.completeTask=function(e,h){h=h||g;try{e()}finally{var l;l=h||g;c[l]&&(c[l]--,c[f]--);l=c[h];var m=c[f];if(!m||!l)for(l=m?d:b;m=l(h);)try{m()}catch(p){a.error(p)}}};this.incTaskCount=function(a){a=a||g;c[a]=(c[a]||0)+1;c[f]=(c[f]||0)+1};this.notifyWhenNoPendingTasks=function(a,b){b=b||f;c[b]?e.push({type:b,cb:a}):
+a()}}function ig(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=["$exceptionHandler","$templateCache","$http","$q","$sce",function(b,d,c,e,f){function g(k,h){g.totalPendingRequests++;if(!C(k)||A(d.get(k)))k=f.getTrustedResourceUrl(k);var l=c.defaults&&c.defaults.transformResponse;H(l)?l=l.filter(function(a){return a!==wc}):l===wc&&(l=null);return c.get(k,S({cache:d,transformResponse:l},a)).finally(function(){g.totalPendingRequests--}).then(function(a){return d.put(k,a.data)},
+function(a){h||(a=Zg("tpload",k,a.status,a.statusText),b(a));return e.reject(a)})}g.totalPendingRequests=0;return g}]}function jg(){this.$get=["$rootScope","$browser","$location",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName("ng-binding");var g=[];r(a,function(a){var c=ca.element(a).data("$binding");c&&r(c,function(c){d?(new RegExp("(^|\\s)"+Od(b)+"(\\s|\\||$)")).test(c)&&g.push(a):-1!==c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=["ng-",
+"data-ng-","ng\\:"],k=0;k<g.length;++k){var h=a.querySelectorAll("["+g[k]+"model"+(d?"=":"*=")+'"'+b+'"]');if(h.length)return h}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}function kg(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(a,b,d,c,e){function f(f,h,l){B(f)||(l=h,h=f,f=E);var m=Ha.call(arguments,3),p=w(l)&&!l,n=(p?c:d).defer(),s=n.promise,r;
+r=b.defer(function(){try{n.resolve(f.apply(null,m))}catch(b){n.reject(b),e(b)}finally{delete g[s.$$timeoutId]}p||a.$apply()},h,"$timeout");s.$$timeoutId=r;g[r]=n;return s}var g={};f.cancel=function(a){if(!a)return!1;if(!a.hasOwnProperty("$$timeoutId"))throw $g("badprom");if(!g.hasOwnProperty(a.$$timeoutId))return!1;a=a.$$timeoutId;var c=g[a],d=c.promise;d.$$state&&(d.$$state.pur=!0);c.reject("canceled");delete g[a];return b.defer.cancel(a)};return f}]}function ga(a){if(!C(a))return a;wa&&(aa.setAttribute("href",
+a),a=aa.href);aa.setAttribute("href",a);a=aa.hostname;!ah&&-1<a.indexOf(":")&&(a="["+a+"]");return{href:aa.href,protocol:aa.protocol?aa.protocol.replace(/:$/,""):"",host:aa.host,search:aa.search?aa.search.replace(/^\?/,""):"",hash:aa.hash?aa.hash.replace(/^#/,""):"",hostname:a,port:aa.port,pathname:"/"===aa.pathname.charAt(0)?aa.pathname:"/"+aa.pathname}}function Og(a){var b=[Qd].concat(a.map(ga));return function(a){a=ga(a);return b.some(Cc.bind(null,a))}}function Cc(a,b){a=ga(a);b=ga(b);return a.protocol===
+b.protocol&&a.host===b.host}function lg(){this.$get=ia(z)}function Rd(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}var d=a[0]||{},c={},e="";return function(){var a,g,k,h,l;try{a=d.cookie||""}catch(m){a=""}if(a!==e)for(e=a,a=e.split("; "),c={},k=0;k<a.length;k++)g=a[k],h=g.indexOf("="),0<h&&(l=b(g.substring(0,h)),A(c[l])&&(c[l]=b(g.substring(h+1))));return c}}function pg(){this.$get=Rd}function fd(a){function b(d,c){if(D(d)){var e={};r(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+
+"Filter",c)}this.register=b;this.$get=["$injector",function(a){return function(b){return a.get(b+"Filter")}}];b("currency",Sd);b("date",Td);b("filter",bh);b("json",ch);b("limitTo",dh);b("lowercase",eh);b("number",Ud);b("orderBy",Vd);b("uppercase",fh)}function bh(){return function(a,b,d,c){if(!za(a)){if(null==a)return a;throw F("filter")("notarray",a);}c=c||"$";var e;switch(Ec(b)){case "function":break;case "boolean":case "null":case "number":case "string":e=!0;case "object":b=gh(b,d,c,e);break;default:return a}return Array.prototype.filter.call(a,
+b)}}function gh(a,b,d,c){var e=D(a)&&d in a;!0===b?b=va:B(b)||(b=function(a,b){if(A(a))return!1;if(null===a||null===b)return a===b;if(D(b)||D(a)&&!cc(a))return!1;a=K(""+a);b=K(""+b);return-1!==a.indexOf(b)});return function(f){return e&&!D(f)?Fa(f,a[d],b,d,!1):Fa(f,a,b,d,c)}}function Fa(a,b,d,c,e,f){var g=Ec(a),k=Ec(b);if("string"===k&&"!"===b.charAt(0))return!Fa(a,b.substring(1),d,c,e);if(H(a))return a.some(function(a){return Fa(a,b,d,c,e)});switch(g){case "object":var h;if(e){for(h in a)if(h.charAt&&
+"$"!==h.charAt(0)&&Fa(a[h],b,d,c,!0))return!0;return f?!1:Fa(a,b,d,c,!1)}if("object"===k){for(h in b)if(f=b[h],!B(f)&&!A(f)&&(g=h===c,!Fa(g?a:a[h],f,d,c,g,g)))return!1;return!0}return d(a,b);case "function":return!1;default:return d(a,b)}}function Ec(a){return null===a?"null":typeof a}function Sd(a){var b=a.NUMBER_FORMATS;return function(a,c,e){A(c)&&(c=b.CURRENCY_SYM);A(e)&&(e=b.PATTERNS[1].maxFrac);var f=c?/\u00A4/g:/\s*\u00A4\s*/g;return null==a?a:Wd(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(f,
+c)}}function Ud(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Wd(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function hh(a){var b=0,d,c,e,f,g;-1<(c=a.indexOf(Xd))&&(a=a.replace(Xd,""));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)===Fc;e++);if(e===(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)===Fc;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Yd&&(d=d.splice(0,Yd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function ih(a,
+b,d,c){var e=a.d,f=e.length-a.i;b=A(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d){e.splice(Math.max(a.i,d));for(var g=d;g<e.length;g++)e[g]=0}else for(f=Math.max(0,f),a.i=1,e.length=Math.max(1,d=b+1),e[0]=0,g=1;g<d;g++)e[g]=0;if(5<=c)if(0>d-1){for(c=0;c>d;c--)e.unshift(0),a.i++;e.unshift(1);a.i++}else e[d-1]++;for(;f<Math.max(0,b);f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Wd(a,b,d,c,e){if(!C(a)&&!X(a)||isNaN(a))return"";
+var f=!isFinite(a),g=!1,k=Math.abs(a)+"",h="";if(f)h="\u221e";else{g=hh(k);ih(g,e,b.minFrac,b.maxFrac);h=g.d;k=g.i;e=g.e;f=[];for(g=h.reduce(function(a,b){return a&&!b},!0);0>k;)h.unshift(0),k++;0<k?f=h.splice(k,h.length):(f=h,h=[0]);k=[];for(h.length>=b.lgSize&&k.unshift(h.splice(-b.lgSize,h.length).join(""));h.length>b.gSize;)k.unshift(h.splice(-b.gSize,h.length).join(""));h.length&&k.unshift(h.join(""));h=k.join(d);f.length&&(h+=c+f.join(""));e&&(h+="e+"+e)}return 0>a&&!g?b.negPre+h+b.negSuf:b.posPre+
+h+b.posSuf}function Pb(a,b,d,c){var e="";if(0>a||c&&0>=a)c?a=-a+1:(a=-a,e="-");for(a=""+a;a.length<b;)a=Fc+a;d&&(a=a.substr(a.length-b));return e+a}function ea(a,b,d,c,e){d=d||0;return function(f){f=f["get"+a]();if(0<d||f>-d)f+=d;0===f&&-12===d&&(f=12);return Pb(f,b,c,e)}}function lb(a,b,d){return function(c,e){var f=c["get"+a](),g=vb((d?"STANDALONE":"")+(b?"SHORT":"")+a);return e[g][f]}}function Zd(a){var b=(new Date(a,0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function $d(a){return function(b){var d=
+Zd(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Pb(b,a)}}function Gc(a,b){return 0>=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Td(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,k=b[8]?a.setUTCFullYear:a.setFullYear,h=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=fa(b[9]+b[10]),g=fa(b[9]+b[11]));k.call(a,fa(b[1]),fa(b[2])-1,fa(b[3]));f=fa(b[4]||0)-f;g=fa(b[5]||0)-g;k=fa(b[6]||0);b=Math.round(1E3*parseFloat("0."+
+(b[7]||0)));h.call(a,f,g,k,b)}return a}var d=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(c,d,f){var g="",k=[],h,l;d=d||"mediumDate";d=a.DATETIME_FORMATS[d]||d;C(c)&&(c=jh.test(c)?fa(c):b(c));X(c)&&(c=new Date(c));if(!ha(c)||!isFinite(c.getTime()))return c;for(;d;)(l=kh.exec(d))?(k=db(k,l,1),d=k.pop()):(k.push(d),d=null);var m=c.getTimezoneOffset();f&&(m=fc(f,m),c=gc(c,f,!0));r(k,function(b){h=lh[b];g+=h?h(c,a.DATETIME_FORMATS,
+m):"''"===b?"'":b.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return g}}function ch(){return function(a,b){A(b)&&(b=2);return eb(a,b)}}function dh(){return function(a,b,d){b=Infinity===Math.abs(Number(b))?Number(b):fa(b);if(Y(b))return a;X(a)&&(a=a.toString());if(!za(a))return a;d=!d||isNaN(d)?0:fa(d);d=0>d?Math.max(0,a.length+d):d;return 0<=b?Hc(a,d,d+b):0===d?Hc(a,b,a.length):Hc(a,Math.max(0,d+b),d)}}function Hc(a,b,d){return C(a)?a.slice(b,d):Ha.call(a,b,d)}function Vd(a){function b(b){return b.map(function(b){var c=
+1,d=Ta;if(B(b))d=b;else if(C(b)){if("+"===b.charAt(0)||"-"===b.charAt(0))c="-"===b.charAt(0)?-1:1,b=b.substring(1);if(""!==b&&(d=a(b),d.constant))var e=d(),d=function(a){return a[e]}}return{get:d,descending:c}})}function d(a){switch(typeof a){case "number":case "boolean":case "string":return!0;default:return!1}}function c(a,b){var c=0,d=a.type,h=b.type;if(d===h){var h=a.value,l=b.value;"string"===d?(h=h.toLowerCase(),l=l.toLowerCase()):"object"===d&&(D(h)&&(h=a.index),D(l)&&(l=b.index));h!==l&&(c=
+h<l?-1:1)}else c="undefined"===d?1:"undefined"===h?-1:"null"===d?1:"null"===h?-1:d<h?-1:1;return c}return function(a,f,g,k){if(null==a)return a;if(!za(a))throw F("orderBy")("notarray",a);H(f)||(f=[f]);0===f.length&&(f=["+"]);var h=b(f),l=g?-1:1,m=B(k)?k:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:"number",index:b},predicateValues:h.map(function(c){var e=c.get(a);c=typeof e;if(null===e)c="null";else if("object"===c)a:{if(B(e.valueOf)&&(e=e.valueOf(),d(e)))break a;
+cc(e)&&(e=e.toString(),d(e))}return{value:e,type:c,index:b}})}});a.sort(function(a,b){for(var d=0,e=h.length;d<e;d++){var f=m(a.predicateValues[d],b.predicateValues[d]);if(f)return f*h[d].descending*l}return(m(a.tieBreaker,b.tieBreaker)||c(a.tieBreaker,b.tieBreaker))*l});return a=a.map(function(a){return a.value})}}function Ra(a){B(a)&&(a={link:a});a.restrict=a.restrict||"AC";return ia(a)}function Qb(a,b,d,c,e){this.$$controls=[];this.$error={};this.$$success={};this.$pending=void 0;this.$name=e(b.name||
+b.ngForm||"")(d);this.$dirty=!1;this.$valid=this.$pristine=!0;this.$submitted=this.$invalid=!1;this.$$parentForm=mb;this.$$element=a;this.$$animate=c;ae(this)}function ae(a){a.$$classCache={};a.$$classCache[be]=!(a.$$classCache[nb]=a.$$element.hasClass(nb))}function ce(a){function b(a,b,c){c&&!a.$$classCache[b]?(a.$$animate.addClass(a.$$element,b),a.$$classCache[b]=!0):!c&&a.$$classCache[b]&&(a.$$animate.removeClass(a.$$element,b),a.$$classCache[b]=!1)}function d(a,c,d){c=c?"-"+Xc(c,"-"):"";b(a,nb+
+c,!0===d);b(a,be+c,!1===d)}var c=a.set,e=a.unset;a.clazz.prototype.$setValidity=function(a,g,k){A(g)?(this.$pending||(this.$pending={}),c(this.$pending,a,k)):(this.$pending&&e(this.$pending,a,k),de(this.$pending)&&(this.$pending=void 0));Ga(g)?g?(e(this.$error,a,k),c(this.$$success,a,k)):(c(this.$error,a,k),e(this.$$success,a,k)):(e(this.$error,a,k),e(this.$$success,a,k));this.$pending?(b(this,"ng-pending",!0),this.$valid=this.$invalid=void 0,d(this,"",null)):(b(this,"ng-pending",!1),this.$valid=
+de(this.$error),this.$invalid=!this.$valid,d(this,"",this.$valid));g=this.$pending&&this.$pending[a]?void 0:this.$error[a]?!1:this.$$success[a]?!0:null;d(this,a,g);this.$$parentForm.$setValidity(a,g,this)}}function de(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}function Ic(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function Sa(a,b,d,c,e,f){var g=K(b[0].type);if(!e.android){var k=!1;b.on("compositionstart",function(){k=!0});b.on("compositionupdate",
+function(a){if(A(a.data)||""===a.data)k=!1});b.on("compositionend",function(){k=!1;l()})}var h,l=function(a){h&&(f.defer.cancel(h),h=null);if(!k){var e=b.val();a=a&&a.type;"password"===g||d.ngTrim&&"false"===d.ngTrim||(e=V(e));(c.$viewValue!==e||""===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",l);else{var m=function(a,b,c){h||(h=f.defer(function(){h=null;b&&b.value===c||l(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||
+m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut drop",m)}b.on("change",l);if(ee[g]&&c.$$hasNativeValidators&&g===d.type)b.on("keydown wheel mousedown",function(a){if(!h){var b=this.validity,c=b.badInput,d=b.typeMismatch;h=f.defer(function(){h=null;b.badInput===c&&b.typeMismatch===d||l(a)})}});c.$render=function(){var a=c.$isEmpty(c.$viewValue)?"":c.$viewValue;b.val()!==a&&b.val(a)}}function Rb(a,b){return function(d,c){var e,f;if(ha(d))return d;if(C(d)){'"'===d.charAt(0)&&'"'===d.charAt(d.length-
+1)&&(d=d.substring(1,d.length-1));if(mh.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},r(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),e=new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0),100>f.yyyy&&e.setFullYear(f.yyyy),e}return NaN}}function ob(a,b,d,c){return function(e,f,g,k,h,l,m,
+p){function n(a){return a&&!(a.getTime&&a.getTime()!==a.getTime())}function s(a){return w(a)&&!ha(a)?r(a)||void 0:a}function r(a,b){var c=k.$options.getOption("timezone");v&&v!==c&&(b=Uc(b,fc(v)));var e=d(a,b);!isNaN(e)&&c&&(e=gc(e,c));return e}Jc(e,f,g,k,a);Sa(e,f,g,k,h,l);var t="time"===a||"datetimelocal"===a,q,v;k.$parsers.push(function(c){if(k.$isEmpty(c))return null;if(b.test(c))return r(c,q);k.$$parserName=a});k.$formatters.push(function(a){if(a&&!ha(a))throw pb("datefmt",a);if(n(a)){q=a;var b=
+k.$options.getOption("timezone");b&&(v=b,q=gc(q,b,!0));var d=c;t&&C(k.$options.getOption("timeSecondsFormat"))&&(d=c.replace("ss.sss",k.$options.getOption("timeSecondsFormat")).replace(/:$/,""));a=m("date")(a,d,b);t&&k.$options.getOption("timeStripZeroSeconds")&&(a=a.replace(/(?::00)?(?:\.000)?$/,""));return a}v=q=null;return""});if(w(g.min)||g.ngMin){var x=g.min||p(g.ngMin)(e),z=s(x);k.$validators.min=function(a){return!n(a)||A(z)||d(a)>=z};g.$observe("min",function(a){a!==x&&(z=s(a),x=a,k.$validate())})}if(w(g.max)||
+g.ngMax){var y=g.max||p(g.ngMax)(e),J=s(y);k.$validators.max=function(a){return!n(a)||A(J)||d(a)<=J};g.$observe("max",function(a){a!==y&&(J=s(a),y=a,k.$validate())})}}}function Jc(a,b,d,c,e){(c.$$hasNativeValidators=D(b[0].validity))&&c.$parsers.push(function(a){var d=b.prop("validity")||{};if(d.badInput||d.typeMismatch)c.$$parserName=e;else return a})}function fe(a){a.$parsers.push(function(b){if(a.$isEmpty(b))return null;if(nh.test(b))return parseFloat(b);a.$$parserName="number"});a.$formatters.push(function(b){if(!a.$isEmpty(b)){if(!X(b))throw pb("numfmt",
+b);b=b.toString()}return b})}function na(a){w(a)&&!X(a)&&(a=parseFloat(a));return Y(a)?void 0:a}function Kc(a){var b=a.toString(),d=b.indexOf(".");return-1===d?-1<a&&1>a&&(a=/e-(\d+)$/.exec(b))?Number(a[1]):0:b.length-d-1}function ge(a,b,d){a=Number(a);var c=(a|0)!==a,e=(b|0)!==b,f=(d|0)!==d;if(c||e||f){var g=c?Kc(a):0,k=e?Kc(b):0,h=f?Kc(d):0,g=Math.max(g,k,h),g=Math.pow(10,g);a*=g;b*=g;d*=g;c&&(a=Math.round(a));e&&(b=Math.round(b));f&&(d=Math.round(d))}return 0===(a-b)%d}function he(a,b,d,c,e){if(w(c)){a=
+a(c);if(!a.constant)throw pb("constexpr",d,c);return a(b)}return e}function Lc(a,b){function d(a,b){if(!a||!a.length)return[];if(!b||!b.length)return a;var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e===b[m])continue a;c.push(e)}return c}function c(a){if(!a)return a;var b=a;H(a)?b=a.map(c).join(" "):D(a)?b=Object.keys(a).filter(function(b){return a[b]}).join(" "):C(a)||(b=a+"");return b}a="ngClass"+a;var e;return["$parse",function(f){return{restrict:"AC",link:function(g,
+k,h){function l(a,b){var c=[];r(a,function(a){if(0<b||p[a])p[a]=(p[a]||0)+b,p[a]===+(0<b)&&c.push(a)});return c.join(" ")}function m(a){if(a===b){var c=s,c=l(c&&c.split(" "),1);h.$addClass(c)}else c=s,c=l(c&&c.split(" "),-1),h.$removeClass(c);n=a}var p=k.data("$classCounts"),n=!0,s;p||(p=T(),k.data("$classCounts",p));"ngClass"!==a&&(e||(e=f("$index",function(a){return a&1})),g.$watch(e,m));g.$watch(f(h[a],c),function(a){if(n===b){var c=s&&s.split(" "),e=a&&a.split(" "),f=d(c,e),c=d(e,c),f=l(f,-1),
+c=l(c,1);h.$addClass(c);h.$removeClass(f)}s=a})}}}]}function sd(a,b,d,c,e,f){return{restrict:"A",compile:function(g,k){var h=a(k[c]);return function(a,c){c.on(e,function(c){var e=function(){h(a,{$event:c})};if(b.$$phase)if(f)a.$evalAsync(e);else try{e()}catch(g){d(g)}else a.$apply(e)})}}}}function Sb(a,b,d,c,e,f,g,k,h){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=void 0;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=
+[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=void 0;this.$name=h(d.name||"",!1)(a);this.$$parentForm=mb;this.$options=Tb;this.$$updateEvents="";this.$$updateEventHandler=this.$$updateEventHandler.bind(this);this.$$parsedNgModel=e(d.ngModel);this.$$parsedNgModelAssign=this.$$parsedNgModel.assign;this.$$ngModelGet=this.$$parsedNgModel;this.$$ngModelSet=this.$$parsedNgModelAssign;this.$$pendingDebounce=
+null;this.$$parserValid=void 0;this.$$parserName="parse";this.$$currentValidationRunId=0;this.$$scope=a;this.$$rootScope=a.$root;this.$$attr=d;this.$$element=c;this.$$animate=f;this.$$timeout=g;this.$$parse=e;this.$$q=k;this.$$exceptionHandler=b;ae(this);oh(this)}function oh(a){a.$$scope.$watch(function(b){b=a.$$ngModelGet(b);b===a.$modelValue||a.$modelValue!==a.$modelValue&&b!==b||a.$$setModelValue(b);return b})}function Mc(a){this.$$options=a}function ie(a,b){r(b,function(b,c){w(a[c])||(a[c]=b)})}
+function Oa(a,b){a.prop("selected",b);a.attr("selected",b)}function je(a,b,d){if(a){C(a)&&(a=new RegExp("^"+a+"$"));if(!a.test)throw F("ngPattern")("noregexp",b,a,Aa(d));return a}}function Ub(a){a=fa(a);return Y(a)?-1:a}var Xb={objectMaxDepth:5,urlErrorParamsEnabled:!0},ke=/^\/(.+)\/([a-z]*)$/,ta=Object.prototype.hasOwnProperty,K=function(a){return C(a)?a.toLowerCase():a},vb=function(a){return C(a)?a.toUpperCase():a},wa,x,sb,Ha=[].slice,Kg=[].splice,ph=[].push,la=Object.prototype.toString,Rc=Object.getPrototypeOf,
+oa=F("ng"),ca=z.angular||(z.angular={}),lc,qb=0;wa=z.document.documentMode;var Y=Number.isNaN||function(a){return a!==a};E.$inject=[];Ta.$inject=[];var ze=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,V=function(a){return C(a)?a.trim():a},Od=function(a){return a.replace(/([-()[\]{}+?*.$^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},Ba=function(){if(!w(Ba.rules)){var a=z.document.querySelector("[ng-csp]")||z.document.querySelector("[data-ng-csp]");if(a){var b=
+a.getAttribute("ng-csp")||a.getAttribute("data-ng-csp");Ba.rules={noUnsafeEval:!b||-1!==b.indexOf("no-unsafe-eval"),noInlineStyle:!b||-1!==b.indexOf("no-inline-style")}}else{a=Ba;try{new Function(""),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Ba.rules},rb=function(){if(w(rb.name_))return rb.name_;var a,b,d=Qa.length,c,e;for(b=0;b<d;++b)if(c=Qa[b],a=z.document.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+"jq");break}return rb.name_=e},Be=/:/g,Qa=["ng-",
+"data-ng-","ng:","x-ng-"],Fe=function(a){var b=a.currentScript;if(!b)return!0;if(!(b instanceof z.HTMLScriptElement||b instanceof z.SVGScriptElement))return!1;b=b.attributes;return[b.getNamedItem("src"),b.getNamedItem("href"),b.getNamedItem("xlink:href")].every(function(b){if(!b)return!0;if(!b.value)return!1;var c=a.createElement("a");c.href=b.value;if(a.location.origin===c.origin)return!0;switch(c.protocol){case "http:":case "https:":case "ftp:":case "blob:":case "file:":case "data:":return!0;default:return!1}})}(z.document),
+Ie=/[A-Z]/g,Yc=!1,Pa=3,Pe={full:"1.8.3",major:1,minor:8,dot:3,codeName:"ultimate-farewell"};U.expando="ng339";var Ka=U.cache={},ug=1;U._data=function(a){return this.cache[a[this.expando]]||{}};var qg=/-([a-z])/g,qh=/^-ms-/,Bb={mouseleave:"mouseout",mouseenter:"mouseover"},oc=F("jqLite"),tg=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,nc=/<|&#?\w+;/,rg=/<([\w:-]+)/,sg=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,qa={thead:["table"],col:["colgroup","table"],tr:["tbody","table"],td:["tr",
+"tbody","table"]};qa.tbody=qa.tfoot=qa.colgroup=qa.caption=qa.thead;qa.th=qa.td;var hb={option:[1,'<select multiple="multiple">',"</select>"],_default:[0,"",""]},Nc;for(Nc in qa){var le=qa[Nc],me=le.slice().reverse();hb[Nc]=[me.length,"<"+me.join("><")+">","</"+le.join("></")+">"]}hb.optgroup=hb.option;var zg=z.Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Wa=U.prototype={ready:hd,toString:function(){var a=[];r(this,function(b){a.push(""+b)});return"["+a.join(", ")+
+"]"},eq:function(a){return 0<=a?x(this[a]):x(this[this.length+a])},length:0,push:ph,sort:[].sort,splice:[].splice},Hb={};r("multiple selected checked disabled readOnly required open".split(" "),function(a){Hb[K(a)]=a});var od={};r("input select option textarea button form details".split(" "),function(a){od[a]=!0});var vd={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern",ngStep:"step"};r({data:sc,removeData:rc,hasData:function(a){for(var b in Ka[a.ng339])return!0;
+return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)rc(a[b]),kd(a[b])}},function(a,b){U[b]=a});r({data:sc,inheritedData:Fb,scope:function(a){return x.data(a,"$scope")||Fb(a.parentNode||a,["$isolateScope","$scope"])},isolateScope:function(a){return x.data(a,"$isolateScope")||x.data(a,"$isolateScopeNoTemplate")},controller:ld,injector:function(a){return Fb(a,"$injector")},removeAttr:function(a,b){a.removeAttribute(b)},hasClass:Cb,css:function(a,b,d){b=yb(b.replace(qh,"ms-"));if(w(d))a.style[b]=
+d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Pa&&2!==c&&8!==c&&a.getAttribute){var c=K(b),e=Hb[c];if(w(d))null===d||!1===d&&e?a.removeAttribute(b):a.setAttribute(b,e?c:d);else return a=a.getAttribute(b),e&&null!==a&&(a=c),null===a?void 0:a}},prop:function(a,b,d){if(w(d))a[b]=d;else return a[b]},text:function(){function a(a,d){if(A(d)){var c=a.nodeType;return 1===c||c===Pa?a.textContent:""}a.textContent=d}a.$dv="";return a}(),val:function(a,b){if(A(b)){if(a.multiple&&"select"===
+ua(a)){var d=[];r(a.options,function(a){a.selected&&d.push(a.value||a.text)});return d}return a.value}a.value=b},html:function(a,b){if(A(b))return a.innerHTML;zb(a,!0);a.innerHTML=b},empty:md},function(a,b){U.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==md&&A(2===a.length&&a!==Cb&&a!==ld?b:c)){if(D(b)){for(e=0;e<g;e++)if(a===sc)a(this[e],b);else for(f in b)a(this[e],f,b[f]);return this}e=a.$dv;g=A(e)?Math.min(g,1):g;for(f=0;f<g;f++){var k=a(this[f],b,c);e=e?e+k:k}return e}for(e=0;e<g;e++)a(this[e],
+b,c);return this}});r({removeData:rc,on:function(a,b,d,c){if(w(c))throw oc("onargs");if(mc(a)){c=Ab(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=wg(a,e));c=0<=b.indexOf(" ")?b.split(" "):[b];for(var g=c.length,k=function(b,c,g){var k=e[b];k||(k=e[b]=[],k.specialHandlerWrapper=c,"$destroy"===b||g||a.addEventListener(b,f));k.push(d)};g--;)b=c[g],Bb[b]?(k(Bb[b],yg),k(b,void 0,!0)):k(b)}},off:kd,one:function(a,b,d){a=x(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,
+b){var d,c=a.parentNode;zb(a);r(new U(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];r(a.childNodes,function(a){1===a.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,b){var d=a.nodeType;if(1===d||11===d){b=new U(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;r(new U(b),function(b){a.insertBefore(b,d)})}},
+wrap:function(a,b){var d=x(b).eq(0).clone()[0],c=a.parentNode;c&&c.replaceChild(d,a);d.appendChild(a)},remove:Gb,detach:function(a){Gb(a,!0)},after:function(a,b){var d=a,c=a.parentNode;if(c){b=new U(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}}},addClass:Eb,removeClass:Db,toggleClass:function(a,b,d){b&&r(b.split(" "),function(b){var e=d;A(e)&&(e=!Cb(a,b));(e?Eb:Db)(a,b)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},
+find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:qc,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=Ab(a);if(g=(g=g&&g.events)&&g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:E,type:f,target:a},b.type&&(c=S(c,
+b)),b=ja(g),e=d?[c].concat(d):[c],r(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){U.prototype[b]=function(b,c,e){for(var f,g=0,k=this.length;g<k;g++)A(f)?(f=a(this[g],b,c,e),w(f)&&(f=x(f))):pc(f,a(this[g],b,c,e));return w(f)?f:this}});U.prototype.bind=U.prototype.on;U.prototype.unbind=U.prototype.off;var rh=Object.create(null);pd.prototype={_idx:function(a){a!==this._lastKey&&(this._lastKey=a,this._lastIndex=this._keys.indexOf(a));return this._lastIndex},_transformKey:function(a){return Y(a)?
+rh:a},get:function(a){a=this._transformKey(a);a=this._idx(a);if(-1!==a)return this._values[a]},has:function(a){a=this._transformKey(a);return-1!==this._idx(a)},set:function(a,b){a=this._transformKey(a);var d=this._idx(a);-1===d&&(d=this._lastIndex=this._keys.length);this._keys[d]=a;this._values[d]=b},delete:function(a){a=this._transformKey(a);a=this._idx(a);if(-1===a)return!1;this._keys.splice(a,1);this._values.splice(a,1);this._lastKey=NaN;this._lastIndex=-1;return!0}};var Ib=pd,og=[function(){this.$get=
+[function(){return Ib}]}],Bg=/^([^(]+?)=>/,Cg=/^[^(]*\(\s*([^)]*)\)/m,sh=/,/,th=/^\s*(_?)(\S+?)\1\s*$/,Ag=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ca=F("$injector");fb.$$annotate=function(a,b,d){var c;if("function"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw C(d)&&d||(d=a.name||Dg(a)),Ca("strictdi",d);b=qd(a);r(b[1].split(sh),function(a){a.replace(th,function(a,b,d){c.push(d)})})}a.$inject=c}}else H(a)?(b=a.length-1,tb(a[b],"fn"),c=a.slice(0,b)):tb(a,"fn",!0);return c};var ne=F("$animate"),
+Ef=function(){this.$get=E},Ff=function(){var a=new Ib,b=[];this.$get=["$$AnimateRunner","$rootScope",function(d,c){function e(a,b,c){var d=!1;b&&(b=C(b)?b.split(" "):H(b)?b:[],r(b,function(b){b&&(d=!0,a[b]=c)}));return d}function f(){r(b,function(b){var c=a.get(b);if(c){var d=Eg(b.attr("class")),e="",f="";r(c,function(a,b){a!==!!d[b]&&(a?e+=(e.length?" ":"")+b:f+=(f.length?" ":"")+b)});r(b,function(a){e&&Eb(a,e);f&&Db(a,f)});a.delete(b)}});b.length=0}return{enabled:E,on:E,off:E,pin:E,push:function(g,
+k,h,l){l&&l();h=h||{};h.from&&g.css(h.from);h.to&&g.css(h.to);if(h.addClass||h.removeClass)if(k=h.addClass,l=h.removeClass,h=a.get(g)||{},k=e(h,k,!0),l=e(h,l,!1),k||l)a.set(g,h),b.push(g),1===b.length&&c.$$postDigest(f);g=new d;g.complete();return g}}}]},Cf=["$provide",function(a){var b=this,d=null,c=null;this.$$registeredAnimations=Object.create(null);this.register=function(c,d){if(c&&"."!==c.charAt(0))throw ne("notcsel",c);var g=c+"-animation";b.$$registeredAnimations[c.substr(1)]=g;a.factory(g,
+d)};this.customFilter=function(a){1===arguments.length&&(c=B(a)?a:null);return c};this.classNameFilter=function(a){if(1===arguments.length&&(d=a instanceof RegExp?a:null)&&/[(\s|\/)]ng-animate[(\s|\/)]/.test(d.toString()))throw d=null,ne("nongcls","ng-animate");return d};this.$get=["$$animateQueue",function(a){function b(a,c,d){if(d){var e;a:{for(e=0;e<d.length;e++){var f=d[e];if(1===f.nodeType){e=f;break a}}e=void 0}!e||e.parentNode||e.previousElementSibling||(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,
+off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.cancel&&a.cancel()},enter:function(c,d,h,l){d=d&&x(d);h=h&&x(h);d=d||h.parent();b(c,d,h);return a.push(c,"enter",ra(l))},move:function(c,d,h,l){d=d&&x(d);h=h&&x(h);d=d||h.parent();b(c,d,h);return a.push(c,"move",ra(l))},leave:function(b,c){return a.push(b,"leave",ra(c),function(){b.remove()})},addClass:function(b,c,d){d=ra(d);d.addClass=ib(d.addclass,c);return a.push(b,"addClass",d)},removeClass:function(b,c,d){d=ra(d);d.removeClass=ib(d.removeClass,
+c);return a.push(b,"removeClass",d)},setClass:function(b,c,d,f){f=ra(f);f.addClass=ib(f.addClass,c);f.removeClass=ib(f.removeClass,d);return a.push(b,"setClass",f)},animate:function(b,c,d,f,m){m=ra(m);m.from=m.from?S(m.from,c):c;m.to=m.to?S(m.to,d):d;m.tempClasses=ib(m.tempClasses,f||"ng-inline-animate");return a.push(b,"animate",m)}}}]}],Hf=function(){this.$get=["$$rAF",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();d=[]})}var d=[];return function(){var a=
+!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},Gf=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$$isDocumentHidden","$timeout",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){c()?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===a.length&&b(e)}var d=0,e=!0;r(a,function(a){a.done(c)})};
+f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:E,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},"catch":function(a){return this.getPromise()["catch"](a)},"finally":function(a){return this.getPromise()["finally"](a)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&
+this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(r(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=0,this._state=2)}};return f}]},Df=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&
+(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);k||h.complete();k=!0});return h}var g=e||{};g.$$prepared||(g=Ia(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var k,h=new d;return{start:f,end:f}}}]},$=F("$compile"),uc=new function(){};Zc.$inject=["$provide","$$sanitizeUriProvider"];Kb.prototype.isFirstChange=function(){return this.previousValue===uc};var rd=/^((?:x|data)[:\-_])/i,Jg=
+/[:\-_]+(.)/g,xd=F("$controller"),wd=/^(\S+)(\s+as\s+([\w$]+))?$/,Of=function(){this.$get=["$document",function(a){return function(b){b?!b.nodeType&&b instanceof x&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},yd="application/json",xc={"Content-Type":yd+";charset=utf-8"},Mg=/^\[|^\{(?!\{)/,Ng={"[":/]$/,"{":/}$/},Lg=/^\)]\}',?\n/,Lb=F("$http"),Ma=ca.$interpolateMinErr=F("$interpolate");Ma.throwNoconcat=function(a){throw Ma("noconcat",a);};Ma.interr=function(a,b){return Ma("interr",a,b.toString())};
+var Qg=F("$interval"),Xf=function(){this.$get=function(){function a(a){var b=function(a){b.data=a;b.called=!0};b.id=a;return b}var b=ca.callbacks,d={};return{createCallback:function(c){c="_"+(b.$$counter++).toString(36);var e="angular.callbacks."+c,f=a(c);d[e]=b[c]=f;return e},wasCalled:function(a){return d[a].called},getResponse:function(a){return d[a].data},removeCallback:function(a){delete b[d[a].id];delete d[a]}}}},uh=/^([^?#]*)(\?([^#]*))?(#(.*))?$/,Rg={http:80,https:443,ftp:21},kb=F("$location"),
+Sg=/^\s*[\\/]{2,}/,vh={$$absUrl:"",$$html5:!1,$$replace:!1,$$compose:function(){for(var a=this.$$path,b=this.$$hash,d=Ce(this.$$search),b=b?"#"+ic(b):"",a=a.split("/"),c=a.length;c--;)a[c]=ic(a[c].replace(/%2F/g,"/"));this.$$url=a.join("/")+(d?"?"+d:"")+b;this.$$absUrl=this.$$normalizeUrl(this.$$url);this.$$urlUpdatedByLocation=!0},absUrl:Mb("$$absUrl"),url:function(a){if(A(a))return this.$$url;var b=uh.exec(a);(b[1]||""===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||""===a)&&this.search(b[3]||
+"");this.hash(b[5]||"");return this},protocol:Mb("$$protocol"),host:Mb("$$host"),port:Mb("$$port"),path:Fd("$$path",function(a){a=null!==a?a.toString():"";return"/"===a.charAt(0)?a:"/"+a}),search:function(a,b){switch(arguments.length){case 0:return this.$$search;case 1:if(C(a)||X(a))a=a.toString(),this.$$search=hc(a);else if(D(a))a=Ia(a,{}),r(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw kb("isrcharg");break;default:A(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();
+return this},hash:Fd("$$hash",function(a){return null!==a?a.toString():""}),replace:function(){this.$$replace=!0;return this}};r([Ed,Ac,zc],function(a){a.prototype=Object.create(vh);a.prototype.state=function(b){if(!arguments.length)return this.$$state;if(a!==zc||!this.$$html5)throw kb("nostate");this.$$state=A(b)?null:b;this.$$urlUpdatedByLocation=!0;return this}});var Ya=F("$parse"),Wg={}.constructor.prototype.valueOf,Vb=T();r("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(a){Vb[a]=
+!0});var wh={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},Ob=function(a){this.options=a};Ob.prototype={constructor:Ob,lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(a,"(){}[].,;:?"))this.tokens.push({index:this.index,
+text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Vb[b],e=Vb[d];Vb[a]||c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=a.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"<=a&&"9">=a&&"string"===
+typeof a},isWhitespace:function(a){return" "===a||"\r"===a||"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdentifierStart:function(a){return this.options.isIdentifierStart?this.options.isIdentifierStart(a,this.codePointAt(a)):this.isValidIdentifierStart(a)},isValidIdentifierStart:function(a){return"a"<=a&&"z">=a||"A"<=a&&"Z">=a||"_"===a||"$"===a},isIdentifierContinue:function(a){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(a,this.codePointAt(a)):this.isValidIdentifierContinue(a)},
+isValidIdentifierContinue:function(a,b){return this.isValidIdentifierStart(a,b)||this.isNumber(a)},codePointAt:function(a){return 1===a.length?a.charCodeAt(0):(a.charCodeAt(0)<<10)+a.charCodeAt(1)-56613888},peekMultichar:function(){var a=this.text.charAt(this.index),b=this.peek();if(!b)return a;var d=a.charCodeAt(0),c=b.charCodeAt(0);return 55296<=d&&56319>=d&&56320<=c&&57343>=c?a+b:a},isExpOperator:function(a){return"-"===a||"+"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=
+w(b)?"s "+b+"-"+this.index+" ["+this.text.substring(b,d)+"]":" "+d;throw Ya("lexerr",a,b,this.text);},readNumber:function(){for(var a="",b=this.index;this.index<this.text.length;){var d=K(this.text.charAt(this.index));if("."===d||this.isNumber(d))a+=d;else{var c=this.peek();if("e"===d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&"e"===a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||c&&this.isNumber(c)||"e"!==a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,
+text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d="",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+
+1,this.index+5),e.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,16))):d+=wh[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var q=function(a,b){this.lexer=a;this.options=b};q.Program="Program";q.ExpressionStatement="ExpressionStatement";q.AssignmentExpression="AssignmentExpression";q.ConditionalExpression=
+"ConditionalExpression";q.LogicalExpression="LogicalExpression";q.BinaryExpression="BinaryExpression";q.UnaryExpression="UnaryExpression";q.CallExpression="CallExpression";q.MemberExpression="MemberExpression";q.Identifier="Identifier";q.Literal="Literal";q.ArrayExpression="ArrayExpression";q.Property="Property";q.ObjectExpression="ObjectExpression";q.ThisExpression="ThisExpression";q.LocalsExpression="LocalsExpression";q.NGValueParameter="NGValueParameter";q.prototype={ast:function(a){this.text=
+a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]);return a},program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&a.push(this.expressionStatement()),!this.expect(";"))return{type:q.Program,body:a}},expressionStatement:function(){return{type:q.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=this.expression();this.expect("|");)a=this.filter(a);return a},
+expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();if(this.expect("=")){if(!Jd(a))throw Ya("lval");a={type:q.AssignmentExpression,left:a,right:this.assignment(),operator:"="}}return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect("?")&&(b=this.expression(),this.consume(":"))?(d=this.expression(),{type:q.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect("||");)a={type:q.LogicalExpression,
+operator:"||",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect("&&");)a={type:q.LogicalExpression,operator:"&&",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect("==","!=","===","!==");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect("<",">","<=",">=");)a={type:q.BinaryExpression,operator:b.text,
+left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect("+","-");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect("*","/","%");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect("+","-","!"))?{type:q.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},
+primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?a=Ia(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:q.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError("not a primary expression",
+this.peek());for(var b;b=this.expect("(","[",".");)"("===b.text?(a={type:q.CallExpression,callee:a,arguments:this.parseArguments()},this.consume(")")):"["===b.text?(a={type:q.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume("]")):"."===b.text?a={type:q.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return a},filter:function(a){a=[a];for(var b={type:q.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());
+return b},parseArguments:function(){var a=[];if(")"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(","))}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:q.Identifier,name:a.text}},constant:function(){return{type:q.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");
+return{type:q.ArrayExpression,elements:a}},object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;b={type:q.Property,kind:"init"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(":"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(":")?(this.consume(":"),b.value=this.expression()):b.value=b.key):this.peek("[")?(this.consume("["),b.key=this.expression(),this.consume("]"),b.computed=!0,this.consume(":"),
+b.value=this.expression()):this.throwError("invalid key",this.peek());a.push(b)}while(this.expect(","))}this.consume("}");return{type:q.ObjectExpression,properties:a}},throwError:function(a,b){throw Ya("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw Ya("ueoe",this.text);var b=this.expect(a);b||this.throwError("is unexpected, expecting ["+a+"]",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw Ya("ueoe",
+this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,e){if(this.tokens.length>a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},selfReferential:{"this":{type:q.ThisExpression},$locals:{type:q.LocalsExpression}}};var Hd=2;Ld.prototype={compile:function(a){var b=this;this.state={nextId:0,filters:{},fn:{vars:[],
+body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};Z(a,b.$filter);var d="",c;this.stage="assign";if(c=Kd(a))this.state.computing="assign",d=this.nextId(),this.recurse(c,d),this.return_(d),d="fn.assign="+this.generateFunction("assign","s,v,l");c=Id(a.body);b.stage="inputs";r(c,function(a,c){var d="fn"+c;b.state[d]={vars:[],body:[],own:{}};b.state.computing=d;var k=b.nextId();b.recurse(a,k);b.return_(k);b.state.inputs.push({name:d,isPure:a.isPure});a.watchId=c});this.state.computing="fn";this.stage=
+"main";this.recurse(a);a='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+d+this.watchFns()+"return fn;";a=(new Function("$filter","getStringValue","ifDefined","plus",a))(this.$filter,Tg,Ug,Gd);this.state=this.stage=void 0;return a},USE:"use",STRICT:"strict",watchFns:function(){var a=[],b=this.state.inputs,d=this;r(b,function(b){a.push("var "+b.name+"="+d.generateFunction(b.name,"s"));b.isPure&&a.push(b.name,".isPure="+JSON.stringify(b.isPure)+
+";")});b.length&&a.push("fn.inputs=["+b.map(function(a){return a.name}).join(",")+"];");return a.join("")},generateFunction:function(a,b){return"function("+b+"){"+this.varsPrefix(a)+this.body(a)+"};"},filterPrefix:function(){var a=[],b=this;r(this.state.filters,function(d,c){a.push(d+"=$filter("+b.escape(c)+")")});return a.length?"var "+a.join(",")+";":""},varsPrefix:function(a){return this.state[a].vars.length?"var "+this.state[a].vars.join(",")+";":""},body:function(a){return this.state[a].body.join("")},
+recurse:function(a,b,d,c,e,f){var g,k,h=this,l,m,p;c=c||E;if(!f&&w(a.watchId))b=b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case q.Program:r(a.body,function(b,c){h.recurse(b.expression,void 0,void 0,function(a){k=a});c!==a.body.length-1?h.current().body.push(k,";"):h.return_(k)});break;case q.Literal:m=this.escape(a.value);this.assign(b,m);c(b||m);break;case q.UnaryExpression:this.recurse(a.argument,void 0,
+void 0,function(a){k=a});m=a.operator+"("+this.ifDefined(k,0)+")";this.assign(b,m);c(m);break;case q.BinaryExpression:this.recurse(a.left,void 0,void 0,function(a){g=a});this.recurse(a.right,void 0,void 0,function(a){k=a});m="+"===a.operator?this.plus(g,k):"-"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(k,0):"("+g+")"+a.operator+"("+k+")";this.assign(b,m);c(m);break;case q.LogicalExpression:b=b||this.nextId();h.recurse(a.left,b);h.if_("&&"===a.operator?b:h.not(b),h.lazyRecurse(a.right,
+b));c(b);break;case q.ConditionalExpression:b=b||this.nextId();h.recurse(a.test,b);h.if_(b,h.lazyRecurse(a.alternate,b),h.lazyRecurse(a.consequent,b));c(b);break;case q.Identifier:b=b||this.nextId();d&&(d.context="inputs"===h.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",a.name)+"?l:s"),d.computed=!1,d.name=a.name);h.if_("inputs"===h.stage||h.not(h.getHasOwnProperty("l",a.name)),function(){h.if_("inputs"===h.stage||"s",function(){e&&1!==e&&h.if_(h.isNull(h.nonComputedMember("s",a.name)),
+h.lazyAssign(h.nonComputedMember("s",a.name),"{}"));h.assign(b,h.nonComputedMember("s",a.name))})},b&&h.lazyAssign(b,h.nonComputedMember("l",a.name)));c(b);break;case q.MemberExpression:g=d&&(d.context=this.nextId())||this.nextId();b=b||this.nextId();h.recurse(a.object,g,void 0,function(){h.if_(h.notNull(g),function(){a.computed?(k=h.nextId(),h.recurse(a.property,k),h.getStringValue(k),e&&1!==e&&h.if_(h.not(h.computedMember(g,k)),h.lazyAssign(h.computedMember(g,k),"{}")),m=h.computedMember(g,k),h.assign(b,
+m),d&&(d.computed=!0,d.name=k)):(e&&1!==e&&h.if_(h.isNull(h.nonComputedMember(g,a.property.name)),h.lazyAssign(h.nonComputedMember(g,a.property.name),"{}")),m=h.nonComputedMember(g,a.property.name),h.assign(b,m),d&&(d.computed=!1,d.name=a.property.name))},function(){h.assign(b,"undefined")});c(b)},!!e);break;case q.CallExpression:b=b||this.nextId();a.filter?(k=h.filter(a.callee.name),l=[],r(a.arguments,function(a){var b=h.nextId();h.recurse(a,b);l.push(b)}),m=k+"("+l.join(",")+")",h.assign(b,m),c(b)):
+(k=h.nextId(),g={},l=[],h.recurse(a.callee,k,g,function(){h.if_(h.notNull(k),function(){r(a.arguments,function(b){h.recurse(b,a.constant?void 0:h.nextId(),void 0,function(a){l.push(a)})});m=g.name?h.member(g.context,g.name,g.computed)+"("+l.join(",")+")":k+"("+l.join(",")+")";h.assign(b,m)},function(){h.assign(b,"undefined")});c(b)}));break;case q.AssignmentExpression:k=this.nextId();g={};this.recurse(a.left,void 0,g,function(){h.if_(h.notNull(g.context),function(){h.recurse(a.right,k);m=h.member(g.context,
+g.name,g.computed)+a.operator+k;h.assign(b,m);c(b||m)})},1);break;case q.ArrayExpression:l=[];r(a.elements,function(b){h.recurse(b,a.constant?void 0:h.nextId(),void 0,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(b||m);break;case q.ObjectExpression:l=[];p=!1;r(a.properties,function(a){a.computed&&(p=!0)});p?(b=b||this.nextId(),this.assign(b,"{}"),r(a.properties,function(a){a.computed?(g=h.nextId(),h.recurse(a.key,g)):g=a.key.type===q.Identifier?a.key.name:""+a.key.value;k=h.nextId();
+h.recurse(a.value,k);h.assign(h.member(b,g,a.computed),k)})):(r(a.properties,function(b){h.recurse(b.value,a.constant?void 0:h.nextId(),void 0,function(a){l.push(h.escape(b.key.type===q.Identifier?b.key.name:""+b.key.value)+":"+a)})}),m="{"+l.join(",")+"}",this.assign(b,m));c(b||m);break;case q.ThisExpression:this.assign(b,"s");c(b||"s");break;case q.LocalsExpression:this.assign(b,"l");c(b||"l");break;case q.NGValueParameter:this.assign(b,"v"),c(b||"v")}},getHasOwnProperty:function(a,b){var d=a+"."+
+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+"&&("+this.escape(b)+" in "+a+")"));return c[d]},assign:function(a,b){if(a)return this.current().body.push(a,"=",b,";"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return"ifDefined("+a+","+this.escape(b)+")"},plus:function(a,b){return"plus("+a+","+b+")"},return_:function(a){this.current().body.push("return ",a,";")},if_:function(a,
+b,d){if(!0===a)b();else{var c=this.current().body;c.push("if(",a,"){");b();c.push("}");d&&(c.push("else{"),d(),c.push("}"))}},not:function(a){return"!("+a+")"},isNull:function(a){return a+"==null"},notNull:function(a){return a+"!=null"},nonComputedMember:function(a,b){var d=/[^$_a-zA-Z0-9]/g;return/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(b)?a+"."+b:a+'["'+b.replace(d,this.stringEscapeFn)+'"]'},computedMember:function(a,b){return a+"["+b+"]"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,
+b)},getStringValue:function(a){this.assign(a,"getStringValue("+a+")")},lazyRecurse:function(a,b,d,c,e,f){var g=this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(C(a))return"'"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(X(a))return a.toString();if(!0===a)return"true";if(!1===
+a)return"false";if(null===a)return"null";if("undefined"===typeof a)return"undefined";throw Ya("esc");},nextId:function(a,b){var d="v"+this.state.nextId++;a||this.current().vars.push(d+(b?"="+b:""));return d},current:function(){return this.state[this.state.computing]}};Md.prototype={compile:function(a){var b=this;Z(a,b.$filter);var d,c;if(d=Kd(a))c=this.recurse(d);d=Id(a.body);var e;d&&(e=[],r(d,function(a,c){var d=b.recurse(a);d.isPure=a.isPure;a.input=d;e.push(d);a.watchId=c}));var f=[];r(a.body,
+function(a){f.push(b.recurse(a.expression))});a=0===a.body.length?E:1===a.body.length?f[0]:function(a,b){var c;r(f,function(d){c=d(a,b)});return c};c&&(a.assign=function(a,b,d){return c(a,d,b)});e&&(a.inputs=e);return a},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case q.Literal:return this.value(a.value,b);case q.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case q.BinaryExpression:return c=this.recurse(a.left),
+e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case q.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case q.ConditionalExpression:return this["ternary?:"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case q.Identifier:return f.identifier(a.name,b,d);case q.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,
+e,b,d):this.nonComputedMember(c,e,b,d);case q.CallExpression:return g=[],r(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var p=[],n=0;n<g.length;++n)p.push(g[n](a,c,d,f));a=e.apply(void 0,p,f);return b?{context:void 0,name:void 0,value:a}:a}:function(a,c,d,f){var p=e(a,c,d,f),n;if(null!=p.value){n=[];for(var s=0;s<g.length;++s)n.push(g[s](a,c,d,f));n=p.value.apply(p.context,n)}return b?
+{value:n}:n};case q.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,f,g){var p=c(a,d,f,g);a=e(a,d,f,g);p.context[p.name]=a;return b?{value:a}:a};case q.ArrayExpression:return g=[],r(a.elements,function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],n=0;n<g.length;++n)f.push(g[n](a,c,d,e));return b?{value:f}:f};case q.ObjectExpression:return g=[],r(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):
+g.push({key:a.key.type===q.Identifier?a.key.name:""+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},n=0;n<g.length;++n)g[n].computed?f[g[n].key(a,c,d,e)]=g[n].value(a,c,d,e):f[g[n].key]=g[n].value(a,c,d,e);return b?{value:f}:f};case q.ThisExpression:return function(a){return b?{value:a}:a};case q.LocalsExpression:return function(a,c){return b?{value:c}:c};case q.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,
+c,e,f){d=a(d,c,e,f);d=w(d)?+d:0;return b?{value:d}:d}},"unary-":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=w(d)?-d:-0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:d}},"binary+":function(a,b,d){return function(c,e,f,g){var k=a(c,e,f,g);c=b(c,e,f,g);k=Gd(k,c);return d?{value:k}:k}},"binary-":function(a,b,d){return function(c,e,f,g){var k=a(c,e,f,g);c=b(c,e,f,g);k=(w(k)?k:0)-(w(c)?c:0);return d?{value:k}:k}},"binary*":function(a,b,
+d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,
+e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},"binary!=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary<":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<b(c,e,f,g);return d?{value:c}:c}},"binary>":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},"binary<=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},"binary>=":function(a,b,d){return function(c,e,f,g){c=
+a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},"binary&&":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,k){e=a(e,f,g,k)?b(e,f,g,k):d(e,f,g,k);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d){return function(c,e,f,g){c=
+e&&a in e?e:c;d&&1!==d&&c&&null==c[a]&&(c[a]={});e=c?c[a]:void 0;return b?{context:c,name:a,value:e}:e}},computedMember:function(a,b,d,c){return function(e,f,g,k){var h=a(e,f,g,k),l,m;null!=h&&(l=b(e,f,g,k),l+="",c&&1!==c&&h&&!h[l]&&(h[l]={}),m=h[l]);return d?{context:h,name:l,value:m}:m}},nonComputedMember:function(a,b,d,c){return function(e,f,g,k){e=a(e,f,g,k);c&&1!==c&&e&&null==e[b]&&(e[b]={});f=null!=e?e[b]:void 0;return d?{context:e,name:b,value:f}:f}},inputs:function(a,b){return function(d,
+c,e,f){return f?f[b]:a(d,c,e)}}};Nb.prototype={constructor:Nb,parse:function(a){a=this.getAst(a);var b=this.astCompiler.compile(a.ast),d=a.ast;b.literal=0===d.body.length||1===d.body.length&&(d.body[0].expression.type===q.Literal||d.body[0].expression.type===q.ArrayExpression||d.body[0].expression.type===q.ObjectExpression);b.constant=a.ast.constant;b.oneTime=a.oneTime;return b},getAst:function(a){var b=!1;a=a.trim();":"===a.charAt(0)&&":"===a.charAt(1)&&(b=!0,a=a.substring(2));return{ast:this.ast.ast(a),
+oneTime:b}}};var Ea=F("$sce"),W={HTML:"html",CSS:"css",MEDIA_URL:"mediaUrl",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Dc=/_([a-z])/g,Zg=F("$templateRequest"),$g=F("$timeout"),aa=z.document.createElement("a"),Qd=ga(z.location.href),Na;aa.href="http://[::1]";var ah="[::1]"===aa.hostname;Rd.$inject=["$document"];fd.$inject=["$provide"];var Yd=22,Xd=".",Fc="0";Sd.$inject=["$locale"];Ud.$inject=["$locale"];var lh={yyyy:ea("FullYear",4,0,!1,!0),yy:ea("FullYear",2,0,!0,!0),y:ea("FullYear",1,0,!1,!0),
+MMMM:lb("Month"),MMM:lb("Month",!0),MM:ea("Month",2,1),M:ea("Month",1,1),LLLL:lb("Month",!1,!0),dd:ea("Date",2),d:ea("Date",1),HH:ea("Hours",2),H:ea("Hours",1),hh:ea("Hours",2,-12),h:ea("Hours",1,-12),mm:ea("Minutes",2),m:ea("Minutes",1),ss:ea("Seconds",2),s:ea("Seconds",1),sss:ea("Milliseconds",3),EEEE:lb("Day"),EEE:lb("Day",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?"+":"")+(Pb(Math[0<a?"floor":"ceil"](a/60),2)+Pb(Math.abs(a%60),2))},
+ww:$d(2),w:$d(1),G:Gc,GG:Gc,GGG:Gc,GGGG:function(a,b){return 0>=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},kh=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\s\S]*)/,jh=/^-?\d+$/;Td.$inject=["$locale"];var eh=ia(K),fh=ia(vb);Vd.$inject=["$parse"];var Re=ia({restrict:"E",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if("a"===b[0].nodeName.toLowerCase()){var e="[object SVGAnimatedString]"===la.call(b.prop("href"))?"xlink:href":"href";
+b.on("click",function(a){b.attr(e)||a.preventDefault()})}}}}),wb={};r(Hb,function(a,b){function d(a,d,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if("multiple"!==a){var c=xa("ng-"+b),e=d;"checked"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,e)});wb[c]=function(){return{restrict:"A",priority:100,link:e}}}});r(vd,function(a,b){wb[b]=function(){return{priority:100,link:function(a,c,e){if("ngPattern"===b&&"/"===e.ngPattern.charAt(0)&&(c=e.ngPattern.match(ke))){e.$set("ngPattern",new RegExp(c[1],
+c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});r(["src","srcset","href"],function(a){var b=xa("ng-"+a);wb[b]=["$sce",function(d){return{priority:99,link:function(c,e,f){var g=a,k=a;"href"===a&&"[object SVGAnimatedString]"===la.call(e.prop("href"))&&(k="xlinkHref",f.$attr[k]="xlink:href",g=null);f.$set(b,d.getTrustedMediaUrl(f[b]));f.$observe(b,function(b){b?(f.$set(k,b),wa&&g&&e.prop(g,f[k])):"href"===a&&f.$set(k,null)})}}}]});var mb={$addControl:E,$getControls:ia([]),$$renameControl:function(a,
+b){a.$name=b},$removeControl:E,$setValidity:E,$setDirty:E,$setPristine:E,$setSubmitted:E,$$setSubmitted:E};Qb.$inject=["$element","$attrs","$scope","$animate","$interpolate"];Qb.prototype={$rollbackViewValue:function(){r(this.$$controls,function(a){a.$rollbackViewValue()})},$commitViewValue:function(){r(this.$$controls,function(a){a.$commitViewValue()})},$addControl:function(a){Ja(a.$name,"input");this.$$controls.push(a);a.$name&&(this[a.$name]=a);a.$$parentForm=this},$getControls:function(){return ja(this.$$controls)},
+$$renameControl:function(a,b){var d=a.$name;this[d]===a&&delete this[d];this[b]=a;a.$name=b},$removeControl:function(a){a.$name&&this[a.$name]===a&&delete this[a.$name];r(this.$pending,function(b,d){this.$setValidity(d,null,a)},this);r(this.$error,function(b,d){this.$setValidity(d,null,a)},this);r(this.$$success,function(b,d){this.$setValidity(d,null,a)},this);cb(this.$$controls,a);a.$$parentForm=mb},$setDirty:function(){this.$$animate.removeClass(this.$$element,Za);this.$$animate.addClass(this.$$element,
+Wb);this.$dirty=!0;this.$pristine=!1;this.$$parentForm.$setDirty()},$setPristine:function(){this.$$animate.setClass(this.$$element,Za,Wb+" ng-submitted");this.$dirty=!1;this.$pristine=!0;this.$submitted=!1;r(this.$$controls,function(a){a.$setPristine()})},$setUntouched:function(){r(this.$$controls,function(a){a.$setUntouched()})},$setSubmitted:function(){for(var a=this;a.$$parentForm&&a.$$parentForm!==mb;)a=a.$$parentForm;a.$$setSubmitted()},$$setSubmitted:function(){this.$$animate.addClass(this.$$element,
+"ng-submitted");this.$submitted=!0;r(this.$$controls,function(a){a.$$setSubmitted&&a.$$setSubmitted()})}};ce({clazz:Qb,set:function(a,b,d){var c=a[b];c?-1===c.indexOf(d)&&c.push(d):a[b]=[d]},unset:function(a,b,d){var c=a[b];c&&(cb(c,d),0===c.length&&delete a[b])}});var oe=function(a){return["$timeout","$parse",function(b,d){function c(a){return""===a?d('this[""]').assign:d(a).assign||E}return{name:"form",restrict:a?"EAC":"E",require:["form","^^?form"],controller:Qb,compile:function(d,f){d.addClass(Za).addClass(nb);
+var g=f.name?"name":a&&f.ngForm?"ngForm":!1;return{pre:function(a,d,e,f){var p=f[0];if(!("action"in e)){var n=function(b){a.$apply(function(){p.$commitViewValue();p.$setSubmitted()});b.preventDefault()};d[0].addEventListener("submit",n);d.on("$destroy",function(){b(function(){d[0].removeEventListener("submit",n)},0,!1)})}(f[1]||p.$$parentForm).$addControl(p);var s=g?c(p.$name):E;g&&(s(a,p),e.$observe(g,function(b){p.$name!==b&&(s(a,void 0),p.$$parentForm.$$renameControl(p,b),s=c(p.$name),s(a,p))}));
+d.on("$destroy",function(){p.$$parentForm.$removeControl(p);s(a,void 0);S(p,mb)})}}}}}]},Se=oe(),df=oe(!0),mh=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,xh=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,yh=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,
+nh=/^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,pe=/^(\d{4,})-(\d{2})-(\d{2})$/,qe=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Oc=/^(\d{4,})-W(\d\d)$/,re=/^(\d{4,})-(\d\d)$/,se=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,ee=T();r(["date","datetime-local","month","time","week"],function(a){ee[a]=!0});var te={text:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Ic(c)},date:ob("date",pe,Rb(pe,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":ob("datetimelocal",qe,Rb(qe,"yyyy MM dd HH mm ss sss".split(" ")),
+"yyyy-MM-ddTHH:mm:ss.sss"),time:ob("time",se,Rb(se,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:ob("week",Oc,function(a,b){if(ha(a))return a;if(C(a)){Oc.lastIndex=0;var d=Oc.exec(a);if(d){var c=+d[1],e=+d[2],f=d=0,g=0,k=0,h=Zd(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),k=b.getMilliseconds());return new Date(c,0,h.getDate()+e,d,f,g,k)}}return NaN},"yyyy-Www"),month:ob("month",re,Rb(re,["yyyy","MM"]),"yyyy-MM"),number:function(a,b,d,c,e,f,g,k){Jc(a,b,d,c,"number");fe(c);Sa(a,
+b,d,c,e,f);var h;if(w(d.min)||d.ngMin){var l=d.min||k(d.ngMin)(a);h=na(l);c.$validators.min=function(a,b){return c.$isEmpty(b)||A(h)||b>=h};d.$observe("min",function(a){a!==l&&(h=na(a),l=a,c.$validate())})}if(w(d.max)||d.ngMax){var m=d.max||k(d.ngMax)(a),p=na(m);c.$validators.max=function(a,b){return c.$isEmpty(b)||A(p)||b<=p};d.$observe("max",function(a){a!==m&&(p=na(a),m=a,c.$validate())})}if(w(d.step)||d.ngStep){var n=d.step||k(d.ngStep)(a),s=na(n);c.$validators.step=function(a,b){return c.$isEmpty(b)||
+A(s)||ge(b,h||0,s)};d.$observe("step",function(a){a!==n&&(s=na(a),n=a,c.$validate())})}},url:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Ic(c);c.$validators.url=function(a,b){var d=a||b;return c.$isEmpty(d)||xh.test(d)}},email:function(a,b,d,c,e,f){Sa(a,b,d,c,e,f);Ic(c);c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||yh.test(d)}},radio:function(a,b,d,c){var e=!d.ngTrim||"false"!==V(d.ngTrim);A(d.name)&&b.attr("name",++qb);b.on("change",function(a){var g;b[0].checked&&(g=d.value,e&&(g=
+V(g)),c.$setViewValue(g,a&&a.type))});c.$render=function(){var a=d.value;e&&(a=V(a));b[0].checked=a===c.$viewValue};d.$observe("value",c.$render)},range:function(a,b,d,c,e,f){function g(a,c){b.attr(a,d[a]);var e=d[a];d.$observe(a,function(a){a!==e&&(e=a,c(a))})}function k(a){p=na(a);Y(c.$modelValue)||(m?(a=b.val(),p>a&&(a=p,b.val(a)),c.$setViewValue(a)):c.$validate())}function h(a){n=na(a);Y(c.$modelValue)||(m?(a=b.val(),n<a&&(b.val(n),a=n<p?p:n),c.$setViewValue(a)):c.$validate())}function l(a){s=
+na(a);Y(c.$modelValue)||(m?c.$viewValue!==b.val()&&c.$setViewValue(b.val()):c.$validate())}Jc(a,b,d,c,"range");fe(c);Sa(a,b,d,c,e,f);var m=c.$$hasNativeValidators&&"range"===b[0].type,p=m?0:void 0,n=m?100:void 0,s=m?1:void 0,r=b[0].validity;a=w(d.min);e=w(d.max);f=w(d.step);var q=c.$render;c.$render=m&&w(r.rangeUnderflow)&&w(r.rangeOverflow)?function(){q();c.$setViewValue(b.val())}:q;a&&(p=na(d.min),c.$validators.min=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||A(p)||b>=p},g("min",k));
+e&&(n=na(d.max),c.$validators.max=m?function(){return!0}:function(a,b){return c.$isEmpty(b)||A(n)||b<=n},g("max",h));f&&(s=na(d.step),c.$validators.step=m?function(){return!r.stepMismatch}:function(a,b){return c.$isEmpty(b)||A(s)||ge(b,p||0,s)},g("step",l))},checkbox:function(a,b,d,c,e,f,g,k){var h=he(k,a,"ngTrueValue",d.ngTrueValue,!0),l=he(k,a,"ngFalseValue",d.ngFalseValue,!1);b.on("change",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=
+function(a){return!1===a};c.$formatters.push(function(a){return va(a,h)});c.$parsers.push(function(a){return a?h:l})},hidden:E,button:E,submit:E,reset:E,file:E},$c=["$browser","$sniffer","$filter","$parse",function(a,b,d,c){return{restrict:"E",require:["?ngModel"],link:{pre:function(e,f,g,k){k[0]&&(te[K(g.type)]||te.text)(e,f,g,k[0],b,a,d,c)}}}}],Af=function(){var a={configurable:!0,enumerable:!1,get:function(){return this.getAttribute("value")||""},set:function(a){this.setAttribute("value",a)}};
+return{restrict:"E",priority:200,compile:function(b,d){if("hidden"===K(d.type))return{pre:function(b,d,f,g){b=d[0];b.parentNode&&b.parentNode.insertBefore(b,b.nextSibling);Object.defineProperty&&Object.defineProperty(b,"value",a)}}}}},zh=/^(true|false|\d+)$/,xf=function(){function a(a,d,c){var e=w(c)?c:9===wa?"":null;a.prop("value",e);d.$set("value",c)}return{restrict:"A",priority:100,compile:function(b,d){return zh.test(d.ngValue)?function(b,d,f){b=b.$eval(f.ngValue);a(d,f,b)}:function(b,d,f){b.$watch(f.ngValue,
+function(b){a(d,f,b)})}}}},We=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=jc(a)})}}}}],Ye=["$interpolate","$compile",function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=A(a)?"":a})}}}}],
+Xe=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){var d=f(b);c.html(a.getTrustedHtml(d)||"")})}}}}],wf=ia({restrict:"A",require:"ngModel",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),Ze=Lc("",!0),af=Lc("Odd",0),$e=Lc("Even",1),bf=Ra({compile:function(a,
+b){b.$set("ngCloak",void 0);a.removeClass("ng-cloak")}}),cf=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],ed={},Ah={blur:!0,focus:!0};r("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(a){var b=xa("ng-"+a);ed[b]=["$parse","$rootScope","$exceptionHandler",function(d,c,e){return sd(d,c,e,b,a,Ah[a])}]});var ff=["$animate","$compile",function(a,b){return{multiElement:!0,
+transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(d,c,e,f,g){var k,h,l;d.$watch(e.ngIf,function(d){d?h||g(function(d,f){h=f;d[d.length++]=b.$$createComment("end ngIf",e.ngIf);k={clone:d};a.enter(d,c.parent(),c)}):(l&&(l.remove(),l=null),h&&(h.$destroy(),h=null),k&&(l=ub(k.clone),a.leave(l).done(function(a){!1!==a&&(l=null)}),k=null))})}}}],gf=["$templateRequest","$anchorScroll","$animate",function(a,b,d){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",
+controller:ca.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||"",k=e.autoscroll;return function(c,e,m,p,n){var r=0,q,t,x,v=function(){t&&(t.remove(),t=null);q&&(q.$destroy(),q=null);x&&(d.leave(x).done(function(a){!1!==a&&(t=null)}),t=x,x=null)};c.$watch(f,function(f){var m=function(a){!1===a||!w(k)||k&&!c.$eval(k)||b()},t=++r;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&t===r){var b=c.$new();p.template=a;a=n(b,function(a){v();d.enter(a,null,e).done(m)});q=b;x=a;q.$emit("$includeContentLoaded",
+f);c.$eval(g)}},function(){c.$$destroyed||t!==r||(v(),c.$emit("$includeContentError",f))}),c.$emit("$includeContentRequested",f)):(v(),p.template=null)})}}}}],zf=["$compile",function(a){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(b,d,c,e){la.call(d[0]).match(/SVG/)?(d.empty(),a(gd(e.template,z.document).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],hf=Ra({priority:450,compile:function(){return{pre:function(a,
+b,d){a.$eval(d.ngInit)}}}}),vf=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(a,b,d,c){var e=d.ngList||", ",f="false"!==d.ngTrim,g=f?V(e):e;c.$parsers.push(function(a){if(!A(a)){var b=[];a&&r(a.split(g),function(a){a&&b.push(f?V(a):a)});return b}});c.$formatters.push(function(a){if(H(a))return a.join(e)});c.$isEmpty=function(a){return!a||!a.length}}}},nb="ng-valid",be="ng-invalid",Za="ng-pristine",Wb="ng-dirty",pb=F("ngModel");Sb.$inject="$scope $exceptionHandler $attrs $element $parse $animate $timeout $q $interpolate".split(" ");
+Sb.prototype={$$initGetterSetters:function(){if(this.$options.getOption("getterSetter")){var a=this.$$parse(this.$$attr.ngModel+"()"),b=this.$$parse(this.$$attr.ngModel+"($$$p)");this.$$ngModelGet=function(b){var c=this.$$parsedNgModel(b);B(c)&&(c=a(b));return c};this.$$ngModelSet=function(a,c){B(this.$$parsedNgModel(a))?b(a,{$$$p:c}):this.$$parsedNgModelAssign(a,c)}}else if(!this.$$parsedNgModel.assign)throw pb("nonassign",this.$$attr.ngModel,Aa(this.$$element));},$render:E,$isEmpty:function(a){return A(a)||
+""===a||null===a||a!==a},$$updateEmptyClasses:function(a){this.$isEmpty(a)?(this.$$animate.removeClass(this.$$element,"ng-not-empty"),this.$$animate.addClass(this.$$element,"ng-empty")):(this.$$animate.removeClass(this.$$element,"ng-empty"),this.$$animate.addClass(this.$$element,"ng-not-empty"))},$setPristine:function(){this.$dirty=!1;this.$pristine=!0;this.$$animate.removeClass(this.$$element,Wb);this.$$animate.addClass(this.$$element,Za)},$setDirty:function(){this.$dirty=!0;this.$pristine=!1;this.$$animate.removeClass(this.$$element,
+Za);this.$$animate.addClass(this.$$element,Wb);this.$$parentForm.$setDirty()},$setUntouched:function(){this.$touched=!1;this.$untouched=!0;this.$$animate.setClass(this.$$element,"ng-untouched","ng-touched")},$setTouched:function(){this.$touched=!0;this.$untouched=!1;this.$$animate.setClass(this.$$element,"ng-touched","ng-untouched")},$rollbackViewValue:function(){this.$$timeout.cancel(this.$$pendingDebounce);this.$viewValue=this.$$lastCommittedViewValue;this.$render()},$validate:function(){if(!Y(this.$modelValue)){var a=
+this.$$lastCommittedViewValue,b=this.$$rawModelValue,d=this.$valid,c=this.$modelValue,e=this.$options.getOption("allowInvalid"),f=this;this.$$runValidators(b,a,function(a){e||d===a||(f.$modelValue=a?b:void 0,f.$modelValue!==c&&f.$$writeModelToScope())})}},$$runValidators:function(a,b,d){function c(){var c=!0;r(h.$validators,function(d,e){var g=Boolean(d(a,b));c=c&&g;f(e,g)});return c?!0:(r(h.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;r(h.$asyncValidators,function(e,
+g){var h=e(a,b);if(!h||!B(h.then))throw pb("nopromise",h);f(g,void 0);c.push(h.then(function(){f(g,!0)},function(){d=!1;f(g,!1)}))});c.length?h.$$q.all(c).then(function(){g(d)},E):g(!0)}function f(a,b){k===h.$$currentValidationRunId&&h.$setValidity(a,b)}function g(a){k===h.$$currentValidationRunId&&d(a)}this.$$currentValidationRunId++;var k=this.$$currentValidationRunId,h=this;(function(){var a=h.$$parserName;if(A(h.$$parserValid))f(a,null);else return h.$$parserValid||(r(h.$validators,function(a,
+b){f(b,null)}),r(h.$asyncValidators,function(a,b){f(b,null)})),f(a,h.$$parserValid),h.$$parserValid;return!0})()?c()?e():g(!1):g(!1)},$commitViewValue:function(){var a=this.$viewValue;this.$$timeout.cancel(this.$$pendingDebounce);if(this.$$lastCommittedViewValue!==a||""===a&&this.$$hasNativeValidators)this.$$updateEmptyClasses(a),this.$$lastCommittedViewValue=a,this.$pristine&&this.$setDirty(),this.$$parseAndValidate()},$$parseAndValidate:function(){var a=this.$$lastCommittedViewValue,b=this;this.$$parserValid=
+A(a)?void 0:!0;this.$setValidity(this.$$parserName,null);this.$$parserName="parse";if(this.$$parserValid)for(var d=0;d<this.$parsers.length;d++)if(a=this.$parsers[d](a),A(a)){this.$$parserValid=!1;break}Y(this.$modelValue)&&(this.$modelValue=this.$$ngModelGet(this.$$scope));var c=this.$modelValue,e=this.$options.getOption("allowInvalid");this.$$rawModelValue=a;e&&(this.$modelValue=a,b.$modelValue!==c&&b.$$writeModelToScope());this.$$runValidators(a,this.$$lastCommittedViewValue,function(d){e||(b.$modelValue=
+d?a:void 0,b.$modelValue!==c&&b.$$writeModelToScope())})},$$writeModelToScope:function(){this.$$ngModelSet(this.$$scope,this.$modelValue);r(this.$viewChangeListeners,function(a){try{a()}catch(b){this.$$exceptionHandler(b)}},this)},$setViewValue:function(a,b){this.$viewValue=a;this.$options.getOption("updateOnDefault")&&this.$$debounceViewValueCommit(b)},$$debounceViewValueCommit:function(a){var b=this.$options.getOption("debounce");X(b[a])?b=b[a]:X(b["default"])&&-1===this.$options.getOption("updateOn").indexOf(a)?
+b=b["default"]:X(b["*"])&&(b=b["*"]);this.$$timeout.cancel(this.$$pendingDebounce);var d=this;0<b?this.$$pendingDebounce=this.$$timeout(function(){d.$commitViewValue()},b):this.$$rootScope.$$phase?this.$commitViewValue():this.$$scope.$apply(function(){d.$commitViewValue()})},$overrideModelOptions:function(a){this.$options=this.$options.createChild(a);this.$$setUpdateOnEvents()},$processModelValue:function(){var a=this.$$format();this.$viewValue!==a&&(this.$$updateEmptyClasses(a),this.$viewValue=this.$$lastCommittedViewValue=
+a,this.$render(),this.$$runValidators(this.$modelValue,this.$viewValue,E))},$$format:function(){for(var a=this.$formatters,b=a.length,d=this.$modelValue;b--;)d=a[b](d);return d},$$setModelValue:function(a){this.$modelValue=this.$$rawModelValue=a;this.$$parserValid=void 0;this.$processModelValue()},$$setUpdateOnEvents:function(){this.$$updateEvents&&this.$$element.off(this.$$updateEvents,this.$$updateEventHandler);if(this.$$updateEvents=this.$options.getOption("updateOn"))this.$$element.on(this.$$updateEvents,
+this.$$updateEventHandler)},$$updateEventHandler:function(a){this.$$debounceViewValueCommit(a&&a.type)}};ce({clazz:Sb,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]}});var uf=["$rootScope",function(a){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Sb,priority:1,compile:function(b){b.addClass(Za).addClass("ng-untouched").addClass(nb);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;if(f=f[2])g.$options=f.$options;g.$$initGetterSetters();b.$addControl(g);
+e.$observe("name",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on("$destroy",function(){g.$$parentForm.$removeControl(g)})},post:function(b,c,e,f){function g(){k.$setTouched()}var k=f[0];k.$$setUpdateOnEvents();c.on("blur",function(){k.$touched||(a.$$phase?b.$evalAsync(g):b.$apply(g))})}}}}}],Tb,Bh=/(\s+|^)default(\s+|$)/;Mc.prototype={getOption:function(a){return this.$$options[a]},createChild:function(a){var b=!1;a=S({},a);r(a,function(d,c){"$inherit"===d?"*"===c?b=!0:(a[c]=
+this.$$options[c],"updateOn"===c&&(a.updateOnDefault=this.$$options.updateOnDefault)):"updateOn"===c&&(a.updateOnDefault=!1,a[c]=V(d.replace(Bh,function(){a.updateOnDefault=!0;return" "})))},this);b&&(delete a["*"],ie(a,this.$$options));ie(a,Tb.$$options);return new Mc(a)}};Tb=new Mc({updateOn:"",updateOnDefault:!0,debounce:0,getterSetter:!1,allowInvalid:!1,timezone:null});var yf=function(){function a(a,d){this.$$attrs=a;this.$$scope=d}a.$inject=["$attrs","$scope"];a.prototype={$onInit:function(){var a=
+this.parentCtrl?this.parentCtrl.$options:Tb,d=this.$$scope.$eval(this.$$attrs.ngModelOptions);this.$options=a.createChild(d)}};return{restrict:"A",priority:10,require:{parentCtrl:"?^^ngModelOptions"},bindToController:!0,controller:a}},jf=Ra({terminal:!0,priority:1E3}),Ch=F("ngOptions"),Dh=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
+sf=["$compile","$document","$parse",function(a,b,d){function c(a,b,c){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=b;this.label=c;this.group=d;this.disabled=f}function f(a){var b;if(!r&&za(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&"$"!==c.charAt(0)&&b.push(c)}return b}var p=a.match(Dh);if(!p)throw Ch("iexp",a,Aa(b));var n=p[5]||p[7],r=p[6];a=/ as /.test(p[0])&&p[1];var q=p[9];b=d(p[2]?p[1]:n);var t=a&&d(a)||b,w=q&&d(q),v=q?function(a,b){return w(c,b)}:function(a){return La(a)},
+x=function(a,b){return v(a,B(a,b))},A=d(p[2]||p[1]),y=d(p[3]||""),J=d(p[4]||""),I=d(p[8]),z={},B=r?function(a,b){z[r]=b;z[n]=a;return z}:function(a){z[n]=a;return z};return{trackBy:q,getTrackByValue:x,getWatchables:d(I,function(a){var b=[];a=a||[];for(var d=f(a),e=d.length,g=0;g<e;g++){var k=a===d?g:d[g],l=a[k],k=B(l,k),l=v(l,k);b.push(l);if(p[2]||p[1])l=A(c,k),b.push(l);p[4]&&(k=J(c,k),b.push(k))}return b}),getOptions:function(){for(var a=[],b={},d=I(c)||[],g=f(d),k=g.length,n=0;n<k;n++){var p=d===
+g?n:g[n],r=B(d[p],p),s=t(c,r),p=v(s,r),w=A(c,r),z=y(c,r),r=J(c,r),s=new e(p,s,w,z,r);a.push(s);b[p]=s}return{items:a,selectValueMap:b,getOptionFromViewValue:function(a){return b[x(a)]},getViewValueFromOption:function(a){return q?Ia(a.viewValue):a.viewValue}}}}}var e=z.document.createElement("option"),f=z.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(a,b,c,d){d[0].registerOption=E},post:function(d,k,h,l){function m(a){var b=(a=v.getOptionFromViewValue(a))&&
+a.element;b&&!b.selected&&(b.selected=!0);return a}function p(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);b.value=a.selectValue}var n=l[0],q=l[1],A=h.multiple;l=0;for(var t=k.children(),z=t.length;l<z;l++)if(""===t[l].value){n.hasEmptyOption=!0;n.emptyOption=t.eq(l);break}k.empty();l=!!n.emptyOption;x(e.cloneNode(!1)).val("?");var v,B=c(h.ngOptions,k,d),C=b[0].createDocumentFragment();n.generateUnknownOptionValue=function(a){return"?"};A?(n.writeValue=
+function(a){if(v){var b=a&&a.map(m)||[];v.items.forEach(function(a){a.element.selected&&-1===Array.prototype.indexOf.call(b,a)&&(a.element.selected=!1)})}},n.readValue=function(){var a=k.val()||[],b=[];r(a,function(a){(a=v.selectValueMap[a])&&!a.disabled&&b.push(v.getViewValueFromOption(a))});return b},B.trackBy&&d.$watchCollection(function(){if(H(q.$viewValue))return q.$viewValue.map(function(a){return B.getTrackByValue(a)})},function(){q.$render()})):(n.writeValue=function(a){if(v){var b=k[0].options[k[0].selectedIndex],
+c=v.getOptionFromViewValue(a);b&&b.removeAttribute("selected");c?(k[0].value!==c.selectValue&&(n.removeUnknownOption(),k[0].value=c.selectValue,c.element.selected=!0),c.element.setAttribute("selected","selected")):n.selectUnknownOrEmptyOption(a)}},n.readValue=function(){var a=v.selectValueMap[k.val()];return a&&!a.disabled?(n.unselectEmptyOption(),n.removeUnknownOption(),v.getViewValueFromOption(a)):null},B.trackBy&&d.$watch(function(){return B.getTrackByValue(q.$viewValue)},function(){q.$render()}));
+l&&(a(n.emptyOption)(d),k.prepend(n.emptyOption),8===n.emptyOption[0].nodeType?(n.hasEmptyOption=!1,n.registerOption=function(a,b){""===b.val()&&(n.hasEmptyOption=!0,n.emptyOption=b,n.emptyOption.removeClass("ng-scope"),q.$render(),b.on("$destroy",function(){var a=n.$isEmptyOptionSelected();n.hasEmptyOption=!1;n.emptyOption=void 0;a&&q.$render()}))}):n.emptyOption.removeClass("ng-scope"));d.$watchCollection(B.getWatchables,function(){var a=v&&n.readValue();if(v)for(var b=v.items.length-1;0<=b;b--){var c=
+v.items[b];w(c.group)?Gb(c.element.parentNode):Gb(c.element)}v=B.getOptions();var d={};v.items.forEach(function(a){var b;if(w(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),C.appendChild(b),b.label=null===a.group?"null":a.group,d[a.group]=b);var c=e.cloneNode(!1);b.appendChild(c);p(a,c)}else b=e.cloneNode(!1),C.appendChild(b),p(a,b)});k[0].appendChild(C);q.$render();q.$isEmpty(a)||(b=n.readValue(),(B.trackBy||A?va(a,b):a===b)||(q.$setViewValue(b),q.$render()))})}}}}],kf=["$locale","$interpolate","$log",
+function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,k){function h(a){g.text(a||"")}var l=k.count,m=k.$attr.when&&g.attr(k.$attr.when),p=k.offset||0,n=f.$eval(m)||{},q={},w=b.startSymbol(),t=b.endSymbol(),x=w+l+"-"+p+t,v=ca.noop,z;r(k,function(a,b){var c=e.exec(b);c&&(c=(c[1]?"-":"")+K(c[2]),n[c]=g.attr(k.$attr[b]))});r(n,function(a,d){q[d]=b(a.replace(c,x))});f.$watch(l,function(b){var c=parseFloat(b),e=Y(c);e||c in n||(c=a.pluralCat(c-p));c===z||e&&Y(z)||(v(),e=q[c],A(e)?
+(null!=b&&d.debug("ngPluralize: no rule defined for '"+c+"' in "+m),v=E,h()):v=f.$watch(e,h),z=c)})}}}],ue=F("ngRef"),lf=["$parse",function(a){return{priority:-1,restrict:"A",compile:function(b,d){var c=xa(ua(b)),e=a(d.ngRef),f=e.assign||function(){throw ue("nonassign",d.ngRef);};return function(a,b,h){var l;if(h.hasOwnProperty("ngRefRead"))if("$element"===h.ngRefRead)l=b;else{if(l=b.data("$"+h.ngRefRead+"Controller"),!l)throw ue("noctrl",h.ngRefRead,d.ngRef);}else l=b.data("$"+c+"Controller");l=
+l||b;f(a,l);b.on("$destroy",function(){e(a)===l&&f(a,null)})}}}}],mf=["$parse","$animate","$compile",function(a,b,d){var c=F("ngRepeat"),e=function(a,b,c,d,e,f,g){a[c]=d;e&&(a[e]=f);a.$index=b;a.$first=0===b;a.$last=b===g-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&1))},f=function(a,b,c){return La(c)},g=function(a,b){return b};return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,compile:function(k,h){var l=h.ngRepeat,m=d.$$createComment("end ngRepeat",
+l),p=l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!p)throw c("iexp",l);var n=p[1],q=p[2],w=p[3],t=p[4],p=n.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);if(!p)throw c("iidexp",n);var x=p[3]||p[1],v=p[2];if(w&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(w)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(w)))throw c("badident",w);var A;if(t){var z={$id:La},y=a(t);A=function(a,b,c,d){v&&
+(z[v]=b);z[x]=c;z.$index=d;return y(a,z)}}return function(a,d,h,k,n){var p=T();a.$watchCollection(q,function(h){var k,q,t=d[0],s,y=T(),B,C,E,D,H,F,K;w&&(a[w]=h);if(za(h))H=h,q=A||f;else for(K in q=A||g,H=[],h)ta.call(h,K)&&"$"!==K.charAt(0)&&H.push(K);B=H.length;K=Array(B);for(k=0;k<B;k++)if(C=h===H?k:H[k],E=h[C],D=q(a,C,E,k),p[D])F=p[D],delete p[D],y[D]=F,K[k]=F;else{if(y[D])throw r(K,function(a){a&&a.scope&&(p[a.id]=a)}),c("dupes",l,D,E);K[k]={id:D,scope:void 0,clone:void 0};y[D]=!0}z&&(z[x]=void 0);
+for(s in p){F=p[s];D=ub(F.clone);b.leave(D);if(D[0].parentNode)for(k=0,q=D.length;k<q;k++)D[k].$$NG_REMOVED=!0;F.scope.$destroy()}for(k=0;k<B;k++)if(C=h===H?k:H[k],E=h[C],F=K[k],F.scope){s=t;do s=s.nextSibling;while(s&&s.$$NG_REMOVED);F.clone[0]!==s&&b.move(ub(F.clone),null,t);t=F.clone[F.clone.length-1];e(F.scope,k,x,E,v,C,B)}else n(function(a,c){F.scope=c;var d=m.cloneNode(!1);a[a.length++]=d;b.enter(a,null,t);t=d;F.clone=a;y[F.id]=F;e(F.scope,k,x,E,v,C,B)});p=y})}}}}],nf=["$animate",function(a){return{restrict:"A",
+multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?"removeClass":"addClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],ef=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?"addClass":"removeClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],of=Ra(function(a,b,d){a.$watchCollection(d.ngStyle,function(a,d){d&&a!==d&&r(d,function(a,c){b.css(c,"")});a&&b.css(a)})}),pf=["$animate","$compile",function(a,
+b){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(d,c,e,f){var g=[],k=[],h=[],l=[],m=function(a,b){return function(c){!1!==c&&a.splice(b,1)}};d.$watch(e.ngSwitch||e.on,function(c){for(var d,e;h.length;)a.cancel(h.pop());d=0;for(e=l.length;d<e;++d){var q=ub(k[d].clone);l[d].$destroy();(h[d]=a.leave(q)).done(m(h,d))}k.length=0;l.length=0;(g=f.cases["!"+c]||f.cases["?"])&&r(g,function(c){c.transclude(function(d,e){l.push(e);var f=c.element;d[d.length++]=b.$$createComment("end ngSwitchWhen");
+k.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],qf=Ra({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){a=d.ngSwitchWhen.split(d.ngSwitchWhenSeparator).sort().filter(function(a,b,c){return c[b-1]!==a});r(a,function(a){c.cases["!"+a]=c.cases["!"+a]||[];c.cases["!"+a].push({transclude:e,element:b})})}}),rf=Ra({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["?"]=c.cases["?"]||[];c.cases["?"].push({transclude:e,
+element:b})}}),Eh=F("ngTransclude"),tf=["$compile",function(a){return{restrict:"EAC",compile:function(b){var d=a(b.contents());b.empty();return function(a,b,f,g,k){function h(){d(a,function(a){b.append(a)})}if(!k)throw Eh("orphan",Aa(b));f.ngTransclude===f.$attr.ngTransclude&&(f.ngTransclude="");f=f.ngTransclude||f.ngTranscludeSlot;k(function(a,c){var d;if(d=a.length)a:{d=0;for(var f=a.length;d<f;d++){var g=a[d];if(g.nodeType!==Pa||g.nodeValue.trim()){d=!0;break a}}d=void 0}d?b.append(a):(h(),c.$destroy())},
+null,f);f&&!k.isSlotFilled(f)&&h()}}}}],Te=["$templateCache",function(a){return{restrict:"E",terminal:!0,compile:function(b,d){"text/ng-template"===d.type&&a.put(d.id,b[0].text)}}}],Fh={$setViewValue:E,$render:E},Gh=["$element","$scope",function(a,b){function d(){g||(g=!0,b.$$postDigest(function(){g=!1;e.ngModelCtrl.$render()}))}function c(a){k||(k=!0,b.$$postDigest(function(){b.$$destroyed||(k=!1,e.ngModelCtrl.$setViewValue(e.readValue()),a&&e.ngModelCtrl.$render())}))}var e=this,f=new Ib;e.selectValueMap=
+{};e.ngModelCtrl=Fh;e.multiple=!1;e.unknownOption=x(z.document.createElement("option"));e.hasEmptyOption=!1;e.emptyOption=void 0;e.renderUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);a.prepend(e.unknownOption);Oa(e.unknownOption,!0);a.val(b)};e.updateUnknownOption=function(b){b=e.generateUnknownOptionValue(b);e.unknownOption.val(b);Oa(e.unknownOption,!0);a.val(b)};e.generateUnknownOptionValue=function(a){return"? "+La(a)+" ?"};e.removeUnknownOption=function(){e.unknownOption.parent()&&
+e.unknownOption.remove()};e.selectEmptyOption=function(){e.emptyOption&&(a.val(""),Oa(e.emptyOption,!0))};e.unselectEmptyOption=function(){e.hasEmptyOption&&Oa(e.emptyOption,!1)};b.$on("$destroy",function(){e.renderUnknownOption=E});e.readValue=function(){var b=a.val(),b=b in e.selectValueMap?e.selectValueMap[b]:b;return e.hasOption(b)?b:null};e.writeValue=function(b){var c=a[0].options[a[0].selectedIndex];c&&Oa(x(c),!1);e.hasOption(b)?(e.removeUnknownOption(),c=La(b),a.val(c in e.selectValueMap?
+c:b),Oa(x(a[0].options[a[0].selectedIndex]),!0)):e.selectUnknownOrEmptyOption(b)};e.addOption=function(a,b){if(8!==b[0].nodeType){Ja(a,'"option value"');""===a&&(e.hasEmptyOption=!0,e.emptyOption=b);var c=f.get(a)||0;f.set(a,c+1);d()}};e.removeOption=function(a){var b=f.get(a);b&&(1===b?(f.delete(a),""===a&&(e.hasEmptyOption=!1,e.emptyOption=void 0)):f.set(a,b-1))};e.hasOption=function(a){return!!f.get(a)};e.$hasEmptyOption=function(){return e.hasEmptyOption};e.$isUnknownOptionSelected=function(){return a[0].options[0]===
+e.unknownOption[0]};e.$isEmptyOptionSelected=function(){return e.hasEmptyOption&&a[0].options[a[0].selectedIndex]===e.emptyOption[0]};e.selectUnknownOrEmptyOption=function(a){null==a&&e.emptyOption?(e.removeUnknownOption(),e.selectEmptyOption()):e.unknownOption.parent().length?e.updateUnknownOption(a):e.renderUnknownOption(a)};var g=!1,k=!1;e.registerOption=function(a,b,f,g,k){if(f.$attr.ngValue){var q,r;f.$observe("value",function(a){var d,f=b.prop("selected");w(r)&&(e.removeOption(q),delete e.selectValueMap[r],
+d=!0);r=La(a);q=a;e.selectValueMap[r]=a;e.addOption(a,b);b.attr("value",r);d&&f&&c()})}else g?f.$observe("value",function(a){e.readValue();var d,f=b.prop("selected");w(q)&&(e.removeOption(q),d=!0);q=a;e.addOption(a,b);d&&f&&c()}):k?a.$watch(k,function(a,d){f.$set("value",a);var g=b.prop("selected");d!==a&&e.removeOption(d);e.addOption(a,b);d&&g&&c()}):e.addOption(f.value,b);f.$observe("disabled",function(a){if("true"===a||a&&b.prop("selected"))e.multiple?c(!0):(e.ngModelCtrl.$setViewValue(null),e.ngModelCtrl.$render())});
+b.on("$destroy",function(){var a=e.readValue(),b=f.value;e.removeOption(b);d();(e.multiple&&a&&-1!==a.indexOf(b)||a===b)&&c(!0)})}}],Ue=function(){return{restrict:"E",require:["select","?ngModel"],controller:Gh,priority:1,link:{pre:function(a,b,d,c){var e=c[0],f=c[1];if(f){if(e.ngModelCtrl=f,b.on("change",function(){e.removeUnknownOption();a.$apply(function(){f.$setViewValue(e.readValue())})}),d.multiple){e.multiple=!0;e.readValue=function(){var a=[];r(b.find("option"),function(b){b.selected&&!b.disabled&&
+(b=b.value,a.push(b in e.selectValueMap?e.selectValueMap[b]:b))});return a};e.writeValue=function(a){r(b.find("option"),function(b){var c=!!a&&(-1!==Array.prototype.indexOf.call(a,b.value)||-1!==Array.prototype.indexOf.call(a,e.selectValueMap[b.value]));c!==b.selected&&Oa(x(b),c)})};var g,k=NaN;a.$watch(function(){k!==f.$viewValue||va(g,f.$viewValue)||(g=ja(f.$viewValue),f.$render());k=f.$viewValue});f.$isEmpty=function(a){return!a||0===a.length}}}else e.registerOption=E},post:function(a,b,d,c){var e=
+c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},Ve=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){var c,e;w(d.ngValue)||(w(d.value)?c=a(d.value,!0):(e=a(b.text(),!0))||d.$set("value",b.text()));return function(a,b,d){var h=b.parent();(h=h.data("$selectController")||h.parent().data("$selectController"))&&h.registerOption(a,b,d,c,e)}}}}],bd=["$parse",function(a){return{restrict:"A",require:"?ngModel",link:function(b,d,c,e){if(e){var f=
+c.hasOwnProperty("required")||a(c.ngRequired)(b);c.ngRequired||(c.required=!0);e.$validators.required=function(a,b){return!f||!e.$isEmpty(b)};c.$observe("required",function(a){f!==a&&(f=a,e.$validate())})}}}}],ad=["$parse",function(a){return{restrict:"A",require:"?ngModel",compile:function(b,d){var c,e;d.ngPattern&&(c=d.ngPattern,e="/"===d.ngPattern.charAt(0)&&ke.test(d.ngPattern)?function(){return d.ngPattern}:a(d.ngPattern));return function(a,b,d,h){if(h){var l=d.pattern;d.ngPattern?l=e(a):c=d.pattern;
+var m=je(l,c,b);d.$observe("pattern",function(a){var d=m;m=je(a,c,b);(d&&d.toString())!==(m&&m.toString())&&h.$validate()});h.$validators.pattern=function(a,b){return h.$isEmpty(b)||A(m)||m.test(b)}}}}}}],dd=["$parse",function(a){return{restrict:"A",require:"?ngModel",link:function(b,d,c,e){if(e){var f=c.maxlength||a(c.ngMaxlength)(b),g=Ub(f);c.$observe("maxlength",function(a){f!==a&&(g=Ub(a),f=a,e.$validate())});e.$validators.maxlength=function(a,b){return 0>g||e.$isEmpty(b)||b.length<=g}}}}}],cd=
+["$parse",function(a){return{restrict:"A",require:"?ngModel",link:function(b,d,c,e){if(e){var f=c.minlength||a(c.ngMinlength)(b),g=Ub(f)||-1;c.$observe("minlength",function(a){f!==a&&(g=Ub(a)||-1,f=a,e.$validate())});e.$validators.minlength=function(a,b){return e.$isEmpty(b)||b.length>=g}}}}}];z.angular.bootstrap?z.console&&console.log("WARNING: Tried to load AngularJS more than once."):(Je(),Oe(ca),ca.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==
+b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),
+WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-\u00a4",negSuf:"",posPre:"\u00a4",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(a,
+c){var e=a|0,f=c;void 0===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?"one":"other"}})}]),x(function(){Ee(z.document,Wc)}))})(window);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend(window.angular.element("<style>").text('@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}'));
+//# sourceMappingURL=angular.min.js.map
Index: .idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_6.xml b/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish.jaxb:txw2:2.3.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.6/txw2-2.3.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: aba/src/main/java/com/aba/service/AlunoServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.aba.service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.apache.coyote.Response;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.aba.dto.AlunoDTO;\r\nimport com.aba.dto.AlunosDTO;\r\nimport com.aba.interfaces.AlunoService;\r\nimport com.aba.model.Aluno;\r\nimport com.aba.model.Usuario;\r\nimport com.aba.repository.AlunoRepository;\r\nimport com.aba.repository.UsuarioRepository;\r\n\r\n@Service\r\npublic class AlunoServiceImpl implements AlunoService {\r\n    \r\n    @Autowired\r\n    AlunoRepository alunoRepository;\r\n\r\n    @Autowired\r\n    UsuarioRepository usuarioRepository;\r\n\r\n    public ResponseEntity<?> cadastrarAluno(AlunoDTO alunoDTO) {\r\n        Usuario aluno;\r\n        aluno = new Aluno(alunoDTO);\r\n\r\n        alunoRepository.save((Aluno) aluno);\r\n        usuarioRepository.save(aluno);\r\n\r\n        return ResponseEntity.status(HttpStatus.CREATED).body(alunoDTO);\r\n    }\r\n\r\n    public ResponseEntity<?> editarAluno(Long id, AlunoDTO alunoDTO) {\r\n        Aluno aluno;\r\n        aluno = this.getAlunoById(id);\r\n        aluno.editar(alunoDTO);\r\n        this.alunoRepository.save(aluno);\r\n        \r\n        return ResponseEntity.status(HttpStatus.OK).body(aluno.getDto());\r\n    }\r\n\r\n    public ResponseEntity<?> removerAluno(Long id) {\r\n        this.usuarioRepository.deleteById(id);\r\n\r\n        return ResponseEntity.status(HttpStatus.OK).body(\"Aluno(a) removido(a)!\");\r\n    }\r\n\r\n    public ResponseEntity<?> listarAlunos() {\r\n        List<Aluno> alunos = this.alunoRepository.findAll();\r\n        AlunosDTO listaDeAlunos = new AlunosDTO(alunos);\r\n        \r\n        return ResponseEntity.status(HttpStatus.OK).body(listaDeAlunos.getDadosAlunos());\r\n    }\r\n\r\n    public ResponseEntity<?> consultarAluno(Long id) {\r\n        Aluno aluno;\r\n        aluno = this.getAlunoById(id);\r\n        return ResponseEntity.status(HttpStatus.OK).body(aluno.getDto());\r\n    }\r\n\r\n    public Aluno getAlunoById(Long id) {\r\n        Optional<Aluno> alunoOptional = this.alunoRepository.findById(id);\r\n\r\n        if (!alunoOptional.isPresent()) {\r\n            return null;\r\n        } //criar excecao futuramente\r\n\r\n        return alunoOptional.get();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aba/src/main/java/com/aba/service/AlunoServiceImpl.java b/aba/src/main/java/com/aba/service/AlunoServiceImpl.java
--- a/aba/src/main/java/com/aba/service/AlunoServiceImpl.java	
+++ b/aba/src/main/java/com/aba/service/AlunoServiceImpl.java	
@@ -3,7 +3,6 @@
 import java.util.List;
 import java.util.Optional;
 
-import org.apache.coyote.Response;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
@@ -19,7 +18,7 @@
 
 @Service
 public class AlunoServiceImpl implements AlunoService {
-    
+
     @Autowired
     AlunoRepository alunoRepository;
 
@@ -41,7 +40,7 @@
         aluno = this.getAlunoById(id);
         aluno.editar(alunoDTO);
         this.alunoRepository.save(aluno);
-        
+
         return ResponseEntity.status(HttpStatus.OK).body(aluno.getDto());
     }
 
@@ -54,7 +53,7 @@
     public ResponseEntity<?> listarAlunos() {
         List<Aluno> alunos = this.alunoRepository.findAll();
         AlunosDTO listaDeAlunos = new AlunosDTO(alunos);
-        
+
         return ResponseEntity.status(HttpStatus.OK).body(listaDeAlunos.getDadosAlunos());
     }
 
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter:5.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.2/junit-jupiter-5.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.2/junit-jupiter-api-5.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_jandex_2_4_2_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_jandex_2_4_2_Final.xml b/.idea/libraries/Maven__org_jboss_jandex_2_4_2_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_jandex_2_4_2_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss:jandex:2.4.2.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_3_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_3_Final.xml b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_3_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_3_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss.logging:jboss-logging:3.4.3.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.2/junit-platform-commons-1.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_2.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.2/junit-platform-engine-1.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.2/junit-jupiter-engine-5.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_8_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.8.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.2/junit-jupiter-params-5.8.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_junit_jupiter_4_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_4_5_1.xml b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_4_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_4_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-junit-jupiter:4.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/4.5.1/mockito-junit-jupiter-4.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_objenesis_objenesis_3_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_objenesis_objenesis_3_2.xml b/.idea/libraries/Maven__org_objenesis_objenesis_3_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_objenesis_objenesis_3_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.objenesis:objenesis:3.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.2/objenesis-3.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.2/objenesis-3.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.2/objenesis-3.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mapstruct_mapstruct_1_3_1_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mapstruct_mapstruct_1_3_1_Final.xml b/.idea/libraries/Maven__org_mapstruct_mapstruct_1_3_1_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mapstruct_mapstruct_1_3_1_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mapstruct:mapstruct:1.3.1.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.3.1.Final/mapstruct-1.3.1.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.3.1.Final/mapstruct-1.3.1.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.3.1.Final/mapstruct-1.3.1.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_core_4_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_core_4_5_1.xml b/.idea/libraries/Maven__org_mockito_mockito_core_4_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_core_4_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-core:4.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/4.5.1/mockito-core-4.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_postgresql_postgresql_42_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_postgresql_postgresql_42_3_5.xml b/.idea/libraries/Maven__org_postgresql_postgresql_42_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_postgresql_postgresql_42_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.postgresql:postgresql:42.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.3.5/postgresql-42.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.3.5/postgresql-42.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/postgresql/postgresql/42.3.5/postgresql-42.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_projectlombok_lombok_1_18_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_projectlombok_lombok_1_18_24.xml b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_24.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_24.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.24">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.24/lombok-1.18.24-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.24/lombok-1.18.24-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_ow2_asm_asm_9_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_ow2_asm_asm_9_1.xml b/.idea/libraries/Maven__org_ow2_asm_asm_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_ow2_asm_asm_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.ow2.asm:asm:9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/9.1/asm-9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/9.1/asm-9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/9.1/asm-9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_36.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_36.xml b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_36.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_36.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.7.36">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.7.0/spring-boot-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.7.0/spring-boot-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.7.0/spring-boot-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.skyscreamer:jsonassert:1.5.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_36.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_36.xml b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_36.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_36.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:jul-to-slf4j:1.7.36">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.7.0/spring-boot-starter-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.7.0/spring-boot-starter-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.7.0/spring-boot-starter-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-aop:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.7.0/spring-boot-starter-aop-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.7.0/spring-boot-starter-aop-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.7.0/spring-boot-starter-aop-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.7.0/spring-boot-autoconfigure-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.7.0/spring-boot-autoconfigure-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.7.0/spring-boot-autoconfigure-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-devtools:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.7.0/spring-boot-devtools-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.7.0/spring-boot-devtools-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.7.0/spring-boot-devtools-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-json:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.7.0/spring-boot-starter-json-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.7.0/spring-boot-starter-json-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.7.0/spring-boot-starter-json-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-logging:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.7.0/spring-boot-starter-logging-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.7.0/spring-boot-starter-logging-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.7.0/spring-boot-starter-logging-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.7.0/spring-boot-starter-data-jpa-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.7.0/spring-boot-starter-data-jpa-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.7.0/spring-boot-starter-data-jpa-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.7.0/spring-boot-starter-jdbc-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.7.0/spring-boot-starter-jdbc-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.7.0/spring-boot-starter-jdbc-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-web:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.7.0/spring-boot-starter-web-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.7.0/spring-boot-starter-web-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.7.0/spring-boot-starter-web-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.7.0/spring-boot-test-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.7.0/spring-boot-test-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.7.0/spring-boot-test-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-test:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.7.0/spring-boot-starter-test-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.7.0/spring-boot-starter-test-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.7.0/spring-boot-starter-test-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.7.0/spring-boot-starter-tomcat-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.7.0/spring-boot-starter-tomcat-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.7.0/spring-boot-starter-tomcat-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_7_0.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-jpa:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.7.0/spring-data-jpa-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.7.0/spring-data-jpa-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.7.0/spring-data-jpa-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_2_0_0_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_2_0_0_RELEASE.xml b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_2_0_0_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_2_0_0_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/2.0.0.RELEASE/spring-plugin-core-2.0.0.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/2.0.0.RELEASE/spring-plugin-core-2.0.0.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/2.0.0.RELEASE/spring-plugin-core-2.0.0.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_7_0.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.7.0/spring-boot-test-autoconfigure-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.7.0/spring-boot-test-autoconfigure-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.7.0/spring-boot-test-autoconfigure-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_commons_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_7_0.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-commons:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.7.0/spring-data-commons-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.7.0/spring-data-commons-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.7.0/spring-data-commons-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aspects_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aspects:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.20/spring-aspects-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.20/spring-aspects-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.20/spring-aspects-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_beans_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_beans_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_beans_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_beans_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-beans:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.20/spring-beans-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.20/spring-beans-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.20/spring-beans-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_2_0_0_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_2_0_0_RELEASE.xml b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_2_0_0_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_2_0_0_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.plugin:spring-plugin-metadata:2.0.0.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/2.0.0.RELEASE/spring-plugin-metadata-2.0.0.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/2.0.0.RELEASE/spring-plugin-metadata-2.0.0.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/2.0.0.RELEASE/spring-plugin-metadata-2.0.0.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aop_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aop_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_aop_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aop_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aop:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.20/spring-aop-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.20/spring-aop-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.20/spring-aop-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_expression_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_expression_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_expression_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_expression_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-expression:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.20/spring-expression-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.20/spring-expression-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.20/spring-expression-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jcl_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jcl:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.20/spring-jcl-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.20/spring-jcl-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.20/spring-jcl-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_context_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_context_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_context_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.20/spring-context-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.20/spring-context-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.20/spring-context-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_core_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_core_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_core_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_core_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-core:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.20/spring-core-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.20/spring-core-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.20/spring-core-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_test_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_test_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_test_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_test_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-test:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.20/spring-test-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.20/spring-test-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.20/spring-test-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_tx_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_tx_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_tx_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_tx_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-tx:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.20/spring-tx-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.20/spring-tx-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.20/spring-tx-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jdbc_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jdbc:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.20/spring-jdbc-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.20/spring-jdbc-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.20/spring-jdbc-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_orm_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_orm_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_orm_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_orm_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-orm:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.20/spring-orm-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.20/spring-orm-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.20/spring-orm-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_xmlunit_xmlunit_core_2_9_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_9_0.xml b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_9_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_9_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.xmlunit:xmlunit-core:2.9.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.9.0/xmlunit-core-2.9.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_yaml_snakeyaml_1_30.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_yaml_snakeyaml_1_30.xml b/.idea/libraries/Maven__org_yaml_snakeyaml_1_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_yaml_snakeyaml_1_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.yaml:snakeyaml:1.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.30/snakeyaml-1.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.30/snakeyaml-1.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_web_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_web_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_web_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_web_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-web:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.20/spring-web-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.20/spring-web-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.20/spring-web-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_webmvc_5_3_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_20.xml b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-webmvc:5.3.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.20/spring-webmvc-5.3.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.20/spring-webmvc-5.3.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.20/spring-webmvc-5.3.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="aba" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="aba" target="11" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="aba" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/aba/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/aba/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/aba/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK" />
+  <component name="ProjectType">
+    <option name="id" value="jpab" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jpa-buddy.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jpa-buddy.xml b/.idea/jpa-buddy.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jpa-buddy.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JpaBuddyIdeaProjectConfig">
+    <option name="defaultUnitInitialized" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: aba/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#spring.jpa.database=POSTGRESQL\n#spring.datasource.url=jdbc:postgresql://localhost:5433/aba\n#spring.datasource.username=postgres\n#spring.datasource.password=secretdb\n\n#spring.jpa.show-sql=true\n#spring.jpa.generate-ddl=true\n#spring.jpa.hibernate.ddl-auto=update\n#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true*/\n\n\n\n# DATASOURCE\nspring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=password\n\n# H2 Console\nspring.h2.console.enabled=true\nspring.h2.console.path=/h2-console\n\n# JPA\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\nspring.jpa.hibernate.ddl-auto=update\nspring.jpa.show-sql=true\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/aba/src/main/resources/application.properties b/aba/src/main/resources/application.properties
--- a/aba/src/main/resources/application.properties	
+++ b/aba/src/main/resources/application.properties	
@@ -9,7 +9,6 @@
 #spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true*/
 
 
-
 # DATASOURCE
 spring.datasource.url=jdbc:h2:mem:testdb
 spring.datasource.driverClassName=org.h2.Driver
Index: client/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"name\": \"client\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"watch\": \"ng build --watch --configuration development\",\n    \"test\": \"ng test\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^14.0.1\",\n    \"@angular/cdk\": \"^14.0.1\",\n    \"@angular/common\": \"^14.0.0\",\n    \"@angular/compiler\": \"^14.0.0\",\n    \"@angular/core\": \"^14.0.0\",\n    \"@angular/forms\": \"^14.0.0\",\n    \"@angular/material\": \"^14.0.1\",\n    \"@angular/platform-browser\": \"^14.0.0\",\n    \"@angular/platform-browser-dynamic\": \"^14.0.0\",\n    \"@angular/router\": \"^14.0.0\",\n    \"rxjs\": \"~7.5.0\",\n    \"tslib\": \"^2.3.0\",\n    \"zone.js\": \"~0.11.4\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^14.0.1\",\n    \"@angular/cli\": \"~14.0.1\",\n    \"@angular/compiler-cli\": \"^14.0.0\",\n    \"@types/jasmine\": \"~4.0.0\",\n    \"jasmine-core\": \"~4.1.0\",\n    \"karma\": \"~6.3.0\",\n    \"karma-chrome-launcher\": \"~3.1.0\",\n    \"karma-coverage\": \"~2.2.0\",\n    \"karma-jasmine\": \"~5.0.0\",\n    \"karma-jasmine-html-reporter\": \"~1.7.0\",\n    \"typescript\": \"~4.7.2\"\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/package.json b/client/package.json
--- a/client/package.json	
+++ b/client/package.json	
@@ -36,5 +36,9 @@
     "karma-jasmine": "~5.0.0",
     "karma-jasmine-html-reporter": "~1.7.0",
     "typescript": "~4.7.2"
-  }
-}
\ No newline at end of file
+  },
+  "description": "This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 14.0.1.",
+  "main": "karma.conf.js",
+  "author": "",
+  "license": "ISC"
+}
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/Project.xml b/.idea/codeStyles/Project.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/codeStyles/Project.xml	
@@ -0,0 +1,7 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <ScalaCodeStyleSettings>
+      <option name="MULTILINE_STRING_CLOSING_QUOTES_ON_NEW_LINE" value="true" />
+    </ScalaCodeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
Index: .idea/ABA.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/ABA.iml b/.idea/ABA.iml
new file mode 100644
--- /dev/null	
+++ b/.idea/ABA.iml	
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ABA.iml" filepath="$PROJECT_DIR$/.idea/ABA.iml" />
+      <module fileurl="file://$PROJECT_DIR$/aba/aba.iml" filepath="$PROJECT_DIR$/aba/aba.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/codeStyles/codeStyleConfig.xml	
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
